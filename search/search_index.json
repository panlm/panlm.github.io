{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to panlm docs","text":""},{"location":"#1-start-from","title":"1 start from","text":"<ul> <li>CodeServer \u2013 Using code-server on EC2 instead of Cloud9 due to it has been deprecated</li> <li>Quick Setup Cloud9 \u2013 \u7b80\u5316\u521b\u5efa Cloud9 \u811a\u672c\uff0c\u4f18\u5148\u9009\u62e9\u4f7f\u7528 Terraform \u81ea\u52a8\u521d\u59cb\u5316\uff1b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u811a\u672c\u4ece CloudShell \u4e2d\u5b8c\u6210\u521d\u59cb\u5316</li> </ul>"},{"location":"#2-highlights","title":"2 highlights","text":"<p><pre><code>([\"status\":\"myblog\"] OR [\"status\":\"awsblog\"])\n\n- ($frontmatter:last_modified) [$frontmatter:title]($filename) -- $frontmatter:description\n</code></pre> - (2025-05-01) \u7a81\u7834VPC\u5730\u5740\u9650\u5236\uff1aEKS\u6df7\u5408\u8282\u70b9\u67b6\u6784\u5b9e\u6218\u6307\u5357 \u2013 \u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u4f7f\u7528EKS\u6df7\u5408\u8282\u70b9\u529f\u80fd\u4f18\u96c5\u5730\u89e3\u51b3VPC\u5730\u5740\u7a7a\u95f4\u4e0d\u8db3\u7684\u771f\u5b9e\u6848\u4f8b - (2025-04-21) MCP Server on EC2 \u2013 \u5c06 MCP Server \u79fb\u52a8\u5230\u8fdc\u7aef\uff0c\u51cf\u5c11\u672c\u5730\u8d44\u6e90\u5360\u7528 - (2025-02-20) deepseek-poc \u2013 Deepseek POC - (2025-04-16) Configure SearxNG MCP Server in Cline \u2013 \u5728 Cline \u4e2d\u914d\u7f6e SearxNG MCP Server \u5b9e\u73b0\u641c\u7d22\u529f\u80fd - (2024-01-08) Stream EKS Control Panel Logs to S3 \u2013 \u76ee\u524d EKS \u63a7\u5236\u5e73\u9762\u65e5\u5fd7\u53ea\u652f\u6301\u53d1\u9001\u5230 cloudwatch\uff0c\u4e14\u5728\u540c\u4e00\u4e2a log group \u4e2d\u67095\u79cd\u7c7b\u578b6\u79cd\u524d\u7f00\u7684 log stream \u7684\u65e5\u5fd7\uff0c\u4e0d\u5229\u4e8e\u7edf\u4e00\u67e5\u8be2\u3002\u4e14\u53ea\u6709 audit \u65e5\u5fd7\u662f json \u683c\u5f0f\u5176\u4ed6\u5747\u662f\u5355\u884c\u65e5\u5fd7\uff0c\u4e14\u5b57\u6bb5\u5404\u4e0d\u76f8\u540c\u3002\u672c\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u601d\u8def\u7edf\u4e00\u4fdd\u5b58\u65e5\u5fd7\u4f9b\u540e\u7eed\u5206\u6790\u5904\u7406 - (2024-01-01) Obsidian Tips \u2013 obsidian \u4f7f\u7528\u70b9\u6ef4 - (2024-09-19) CodeServer \u2013 Using code-server on EC2 instead of Cloud9 due to it has been deprecated - (2024-06-28) Enable Quicksight with Identity Center \u2013 \u4e2d\u56fd\u533a\u57df\u542f\u7528 Quicksight \u5e76\u4e14\u96c6\u6210 Microsoft Entra - (2025-01-02) AWS Opensearch / Elasticsearch Migration \u2013 \u4f7f\u7528 snapshot \u8fc1\u79fb elasticsearch - (2024-07-18) Using Grafana Loki for Logging \u2013 \u4f7f\u7528 Loki \u6536\u96c6\u65e5\u5fd7 - (2024-02-12) assume \u2013 assume \u5de5\u5177\uff0c\u53ef\u4ee5\u4ee5\u53e6\u4e00\u4e2a\u8d26\u53f7\u89d2\u8272\uff0c\u5feb\u901f\u6253\u5f00 web console\uff0c\u6216\u8005\u6267\u884c\u547d\u4ee4 - (2024-08-19) openswan-s2svpn-tgw-lab \u2013 connect to global aws using site-2-site vpn service, for example access global bedrock service - (2024-02-04) Cross Region Reverse Proxy with NLB and Cloudfront \u2013 \u8de8\u533a\u57df\u7684 Layer 4 \u53cd\u5411\u4ee3\u7406\uff0c\u5e76\u4f7f\u7528 nlb + cloudfront\uff0c\u8003\u5bdf\u8bc1\u4e66\u4f7f\u7528\u9700\u6c42 - (2024-07-09) Quick Deploy BRConnector using Cloudformation \u2013 \u4f7f\u7528 Cloudformation \u5feb\u901f\u90e8\u7f72 BRConnector - (2024-08-05) Datahub \u2013 \u90e8\u7f72 Datahub\uff0c\u4ece Redshift \u548c Glue job \u4e2d\u83b7\u53d6\u6570\u636e\u8840\u7f18 - (2023-11-22) Mutating Webhook for Kubernetes in China \u2013 \u4e2d\u56fd\u533a\u57df k8s \u96c6\u7fa4 webhook \uff0c\u81ea\u52a8\u4fee\u6539\u6d77\u5916\u955c\u50cf\u5230\u56fd\u5185\u5730\u5740 - (2024-05-11) Security Lake Support Collecting Audit Logging from EKS \u2013 \u4f7f\u7528 Security Lake \u6536\u96c6 EKS Audit \u65e5\u5fd7 - (2023-12-31) Enable scan on push in ECR and send notification to SNS \u2013 \u542f\u7528 ECR \u7684 Scan on push \u4e4b\u540e\uff0c\u81ea\u52a8\u5c06\u626b\u63cf\u7ed3\u679c\u4e2d CRITICAL \u7684\u4fe1\u606f\u53d1\u9001\u5230\u76ee\u6807 SNS \u544a\u8b66 - (2024-04-02) Quick Setup Cloud9 \u2013 \u7b80\u5316\u521b\u5efa Cloud9 \u811a\u672c\uff0c\u4f18\u5148\u9009\u62e9\u4f7f\u7528 Terraform \u81ea\u52a8\u521d\u59cb\u5316\uff1b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u811a\u672c\u4ece CloudShell \u4e2d\u5b8c\u6210\u521d\u59cb\u5316 - (2024-03-27) Create Standard VPC for Lab in China Region or Global Region \u2013 \u521b\u5efa\u5b9e\u9a8c\u73af\u5883\u6240\u9700\u8981\u7684 VPC \uff0c\u5e76\u4e14\u652f\u6301\u76f4\u63a5 attach \u5230 TGW \u65b9\u4fbf\u7f51\u7edc\u8bbf\u95ee - (2024-04-04) Migrating Filezilla to AWS Transfer Family \u2013 \u8fc1\u79fb Filezilla \u5230 Transfer Family - (2024-02-11) Setup Cloud9 for EKS \u2013 \u4f7f\u7528\u811a\u672c\u5b8c\u6210\u5b9e\u9a8c\u73af\u5883\u521d\u59cb\u5316 - (2024-02-25) EKS Security Group Deepdive \u2013 \u6df1\u5165 EKS \u5b89\u5168\u7ec4 - (2024-01-21) Using Global SSO to Login China AWS Accounts \u2013 \u4f7f\u7528 global sso \u767b\u5f55\u4e2d\u56fd\u533a\u57df aws \u8d26\u53f7 - (2024-02-18) IRSA \u4e2d\u7684 Token \u5256\u6790 \u2013 \u672c\u6587\u6863\u603b\u7ed3\u4e86\u5c06 AWS IAM \u89d2\u8272\u6388\u4e88 AWS EKS \u96c6\u7fa4\u7684\u670d\u52a1\u8d26\u6237\u7684\u8fc7\u7a0b - (2023-12-31) Export Cloudwatch Log Group to S3 \u2013 \u5bfc\u51fa cloudwatch \u65e5\u5fd7\u5230 s3 &lt;\u2013&gt;</p>"},{"location":"#3-my-aws-blogs","title":"3 my aws blogs","text":"<ul> <li>https://github.com/panlm/blog-private-api-gateway-dataflow</li> <li>https://aws.amazon.com/cn/blogs/china/extending-the-prometheus-high-availability-monitoring-architecture-using-thanos/</li> </ul>"},{"location":"#4-deprecated-docs","title":"4 deprecated docs","text":"<p><pre><code>([\"status\":\"deprecated\"])\n\n- [$frontmatter:title]($filename) -- $frontmatter:description\n</code></pre> - script-api-resource-method \u2013 \u6bcf\u4e2a api \u7684\u6bcf\u4e2a resource \u7684\u6bcf\u4e2a method \u90fd\u9700\u8981\u5355\u72ec\u901a\u8fc7\u547d\u4ee4\u884c\u542f\u7528\u201ctlsConfig/insecureSkipVerification\u201d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u811a\u672c\u7b80\u5316\u5de5\u4f5c - Building Prometheus HA Architect with Thanos \u2013 \u7528 Thanos \u89e3\u51b3 Prometheus \u5728\u591a\u96c6\u7fa4\u5927\u89c4\u6a21\u73af\u5883\u4e0b\u7684\u9ad8\u53ef\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u9650\u5236 - Prometheus With Thanos Manually \u2013 POC-prometheus-with-thanos-manually - appmesh-workshop-eks \u2013 appmesh workshop &lt;\u2013&gt;</p>"},{"location":"#5-rendered","title":"5 rendered","text":"<p>{{ pagetree }}</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:aws-containers-summit-2022q4","title":"aws-containers-summit-2022q4","text":"<ul> <li>            kubernetes events exporter          </li> </ul>"},{"location":"tags/#tag:awsnotincn","title":"aws/NotInCN","text":"<ul> <li>            aws-signer          </li> </ul>"},{"location":"tags/#tag:awsaimlllm","title":"aws/aiml/llm","text":"<ul> <li>            llm-llama3          </li> </ul>"},{"location":"tags/#tag:awsaimlsagemaker","title":"aws/aiml/sagemaker","text":"<ul> <li>            llm-llama3          </li> </ul>"},{"location":"tags/#tag:awsaimltranscribe","title":"aws/aiml/transcribe","text":"<ul> <li>            script-convert-mp3-to-text          </li> </ul>"},{"location":"tags/#tag:awsanalytics","title":"aws/analytics","text":"<ul> <li>            Datahub          </li> <li>            Using MWAA in Private Network          </li> </ul>"},{"location":"tags/#tag:awsanalyticsgluedatabrew","title":"aws/analytics/glue/databrew","text":"<ul> <li>            Stream EKS Control Panel Logs to S3          </li> </ul>"},{"location":"tags/#tag:awsanalyticskinesisfirehose","title":"aws/analytics/kinesis/firehose","text":"<ul> <li>            Stream EKS Control Panel Logs to S3          </li> <li>            cloudwatch-to-firehose-python          </li> </ul>"},{"location":"tags/#tag:awsanalyticslake-formation","title":"aws/analytics/lake-formation","text":"<ul> <li>            Securely share your data across AWS accounts using AWS Lake Formation          </li> </ul>"},{"location":"tags/#tag:awsanalyticsopensearch","title":"aws/analytics/opensearch","text":"<ul> <li>            AWS Opensearch / Elasticsearch Migration          </li> </ul>"},{"location":"tags/#tag:awsanalyticsquicksight","title":"aws/analytics/quicksight","text":"<ul> <li>            Enable Quicksight with Identity Center          </li> </ul>"},{"location":"tags/#tag:awschina","title":"aws/china","text":"<ul> <li>            Building a Solution for China Cross-Border VPC Connection          </li> <li>            Create Public Access EKS Cluster in China Region          </li> <li>            Cross Region Reverse Proxy with NLB and Cloudfront          </li> <li>            None          </li> </ul>"},{"location":"tags/#tag:awscloud9","title":"aws/cloud9","text":"<ul> <li>            Quick Setup Cloud9          </li> <li>            Setup Cloud9 for EKS          </li> <li>            cloud9          </li> </ul>"},{"location":"tags/#tag:awscmd","title":"aws/cmd","text":"<ul> <li>            acm          </li> <li>            api-gateway          </li> <li>            auto-scaling-group          </li> <li>            aws-nuke          </li> <li>            cloud9          </li> <li>            cloudformation          </li> <li>            copilot          </li> <li>            directory service          </li> <li>            ebs          </li> <li>            ec2          </li> <li>            ecr          </li> <li>            ecs          </li> <li>            efs          </li> <li>            eksdemo          </li> <li>            elasticache-redis          </li> <li>            elb          </li> <li>            iam          </li> <li>            ip-ranges          </li> <li>            lambda          </li> <li>            lightsail          </li> <li>            rds          </li> <li>            s3          </li> <li>            sam          </li> <li>            script-convert-mp3-to-text          </li> <li>            ssm          </li> <li>            sts          </li> <li>            vpc          </li> </ul>"},{"location":"tags/#tag:awscomputeautoscaling","title":"aws/compute/autoscaling","text":"<ul> <li>            auto-scaling-group          </li> </ul>"},{"location":"tags/#tag:awscomputeec2","title":"aws/compute/ec2","text":"<ul> <li>            Quick Deploy BRConnector using Cloudformation          </li> <li>            Rescue EC2 Instance          </li> <li>            ec2          </li> </ul>"},{"location":"tags/#tag:awscomputelightsail","title":"aws/compute/lightsail","text":"<ul> <li>            lightsail          </li> </ul>"},{"location":"tags/#tag:awscontainer","title":"aws/container","text":"<ul> <li>            aws-signer          </li> </ul>"},{"location":"tags/#tag:awscontainerappmesh","title":"aws/container/appmesh","text":"<ul> <li>            appmesh-workshop-eks          </li> <li>            automated-canary-deployment-using-flagger          </li> </ul>"},{"location":"tags/#tag:awscontainercopilot","title":"aws/container/copilot","text":"<ul> <li>            copilot          </li> </ul>"},{"location":"tags/#tag:awscontainerecr","title":"aws/container/ecr","text":"<ul> <li>            Enable scan on push in ECR and send notification to SNS          </li> <li>            ecr          </li> </ul>"},{"location":"tags/#tag:awscontainerecs","title":"aws/container/ecs","text":"<ul> <li>            Migrating .NET Classic Applications to Amazon ECS Using Windows Containers          </li> <li>            Windows Authentication with gMSA for .NET Linux Containers in Amazon ECS          </li> <li>            ecs          </li> <li>            ecs-windows-gmsa          </li> <li>            poc-container-on-domainless-windows-in-ecs          </li> </ul>"},{"location":"tags/#tag:awscontainereks","title":"aws/container/eks","text":"<ul> <li>            Create EKS Cluster with Terraform          </li> <li>            Create Private Only EKS Cluster          </li> <li>            Create Public Access EKS Cluster          </li> <li>            Create Public Access EKS Cluster in China Region          </li> <li>            EFS CSI on EKS          </li> <li>            EKS Access API          </li> <li>            EKS Addons          </li> <li>            EKS Auto Mode          </li> <li>            EKS Container Insights          </li> <li>            EKS Security Group Deepdive          </li> <li>            EKS Upgrade Procedure          </li> <li>            Fargate on EKS          </li> <li>            IRSA \u4e2d\u7684 Token \u5256\u6790          </li> <li>            Metrics Server          </li> <li>            Quick Setup Cloud9          </li> <li>            Security Lake Support Collecting Audit Logging from EKS          </li> <li>            Setup Cloud9 for EKS          </li> <li>            Stream EKS Control Panel Logs to S3          </li> <li>            appmesh-workshop-eks          </li> <li>            automated-canary-deployment-using-flagger          </li> <li>            aws-for-fluent-bit          </li> <li>            aws-load-balancer-controller          </li> <li>            cert-manager          </li> <li>            cluster-autoscaler          </li> <li>            cni-metrics-helper          </li> <li>            ebs-for-eks          </li> <li>            eks          </li> <li>            eks-addons-coredns          </li> <li>            eks-addons-kube-proxy          </li> <li>            eks-addons-vpc-cni          </li> <li>            eks-aws-auth          </li> <li>            eks-custom-network          </li> <li>            eks-external-snat          </li> <li>            eks-loggroup-description          </li> <li>            eks-prefix-assignment          </li> <li>            eksctl          </li> <li>            eksdemo          </li> <li>            eksup          </li> <li>            enable-prometheus-in-cloudwatch          </li> <li>            enable-sg-on-pod          </li> <li>            flux          </li> <li>            install-prometheus-grafana-on-eks          </li> <li>            karpenter          </li> <li>            kubernetes events exporter          </li> <li>            nginx-ingress-controller-community-ver          </li> <li>            nginx-ingress-controller-nginx-ver          </li> <li>            self-signed-certificates          </li> <li>            \u7a81\u7834VPC\u5730\u5740\u9650\u5236\uff1aEKS\u6df7\u5408\u8282\u70b9\u67b6\u6784\u5b9e\u6218\u6307\u5357          </li> </ul>"},{"location":"tags/#tag:awscontainerfargate","title":"aws/container/fargate","text":"<ul> <li>            Fargate on EKS          </li> </ul>"},{"location":"tags/#tag:awscontainerkarpenter","title":"aws/container/karpenter","text":"<ul> <li>            karpenter          </li> </ul>"},{"location":"tags/#tag:awsdatabaseelasticacheredis","title":"aws/database/elasticache/redis","text":"<ul> <li>            elasticache-redis          </li> </ul>"},{"location":"tags/#tag:awsdatabaserds","title":"aws/database/rds","text":"<ul> <li>            rds          </li> <li>            rds-mysql-replica-cross-region-cross-account          </li> </ul>"},{"location":"tags/#tag:awsdatabaseredshift","title":"aws/database/redshift","text":"<ul> <li>            redshift          </li> <li>            redshift-data-api-lab          </li> </ul>"},{"location":"tags/#tag:awsintegrationsns","title":"aws/integration/sns","text":"<ul> <li>            Enable scan on push in ECR and send notification to SNS          </li> <li>            sns          </li> </ul>"},{"location":"tags/#tag:awsintegrationsqs","title":"aws/integration/sqs","text":"<ul> <li>            sqs          </li> </ul>"},{"location":"tags/#tag:awsmgmtcdk","title":"aws/mgmt/cdk","text":"<ul> <li>            apigw-private-api-alb-cdk          </li> </ul>"},{"location":"tags/#tag:awsmgmtcloudformation","title":"aws/mgmt/cloudformation","text":"<ul> <li>            Create Standard VPC for Lab in China Region or Global Region          </li> <li>            Quick Deploy BRConnector using Cloudformation          </li> <li>            cloudformation          </li> </ul>"},{"location":"tags/#tag:awsmgmtcloudwatch","title":"aws/mgmt/cloudwatch","text":"<ul> <li>            EKS Container Insights          </li> <li>            Export Cloudwatch Log Group to S3          </li> <li>            cloudwatch          </li> <li>            cloudwatch-to-firehose-python          </li> <li>            create-dashboard-for-instance-cpu-matrics          </li> <li>            eks-loggroup-description          </li> <li>            enable-prometheus-in-cloudwatch          </li> </ul>"},{"location":"tags/#tag:awsmgmtdirectory-service","title":"aws/mgmt/directory-service","text":"<ul> <li>            Migrating Filezilla to AWS Transfer Family          </li> <li>            directory service          </li> </ul>"},{"location":"tags/#tag:awsmgmtsystems-manager","title":"aws/mgmt/systems-manager","text":"<ul> <li>            ssm          </li> </ul>"},{"location":"tags/#tag:awsnetwork","title":"aws/network","text":"<ul> <li>            ip-ranges          </li> </ul>"},{"location":"tags/#tag:awsnetworkcloudfront","title":"aws/network/cloudfront","text":"<ul> <li>            Cross Region Reverse Proxy with NLB and Cloudfront          </li> <li>            Quick Deploy BRConnector using Cloudformation          </li> </ul>"},{"location":"tags/#tag:awsnetworkdirect-connect","title":"aws/network/direct-connect","text":"<ul> <li>            Building a Solution for China Cross-Border VPC Connection          </li> <li>            None          </li> </ul>"},{"location":"tags/#tag:awsnetworkelb","title":"aws/network/elb","text":"<ul> <li>            Design your firewall deployment for Internet ingress traffic flows          </li> <li>            elb          </li> </ul>"},{"location":"tags/#tag:awsnetworkgwlb","title":"aws/network/gwlb","text":"<ul> <li>            Design your firewall deployment for Internet ingress traffic flows          </li> </ul>"},{"location":"tags/#tag:awsnetworknfw","title":"aws/network/nfw","text":"<ul> <li>            Design your firewall deployment for Internet ingress traffic flows          </li> <li>            aws-nfw-network-firewall          </li> </ul>"},{"location":"tags/#tag:awsnetworknlb","title":"aws/network/nlb","text":"<ul> <li>            Cross Region Reverse Proxy with NLB and Cloudfront          </li> </ul>"},{"location":"tags/#tag:awsnetworkroute53","title":"aws/network/route53","text":"<ul> <li>            externaldns-for-route53          </li> <li>            route53          </li> </ul>"},{"location":"tags/#tag:awsnetworksecurity-group","title":"aws/network/security-group","text":"<ul> <li>            EKS Security Group Deepdive          </li> <li>            enable-sg-on-pod          </li> </ul>"},{"location":"tags/#tag:awsnetworktgw","title":"aws/network/tgw","text":"<ul> <li>            openswan-s2svpn-tgw-lab          </li> </ul>"},{"location":"tags/#tag:awsnetworkvpc","title":"aws/network/vpc","text":"<ul> <li>            Create Standard VPC for Lab in China Region or Global Region          </li> <li>            vpc          </li> </ul>"},{"location":"tags/#tag:awsnetworkvpn","title":"aws/network/vpn","text":"<ul> <li>            openswan-s2svpn-tgw-lab          </li> </ul>"},{"location":"tags/#tag:awssecurityacm","title":"aws/security/acm","text":"<ul> <li>            acm          </li> <li>            self-signed-certificates          </li> </ul>"},{"location":"tags/#tag:awssecurityiam","title":"aws/security/iam","text":"<ul> <li>            EKS Access API          </li> <li>            assume          </li> <li>            iam          </li> </ul>"},{"location":"tags/#tag:awssecurityidentity-center","title":"aws/security/identity-center","text":"<ul> <li>            Enable Quicksight with Identity Center          </li> <li>            Using Global SSO to Login China AWS Accounts          </li> </ul>"},{"location":"tags/#tag:awssecuritysecurity-lake","title":"aws/security/security-lake","text":"<ul> <li>            Security Lake Support Collecting Audit Logging from EKS          </li> </ul>"},{"location":"tags/#tag:awssecuritysigner","title":"aws/security/signer","text":"<ul> <li>            aws-signer          </li> </ul>"},{"location":"tags/#tag:awssecuritywaf","title":"aws/security/waf","text":"<ul> <li>            Design your firewall deployment for Internet ingress traffic flows          </li> </ul>"},{"location":"tags/#tag:awsserverless","title":"aws/serverless","text":"<ul> <li>            sam          </li> </ul>"},{"location":"tags/#tag:awsserverlessapi-gateway","title":"aws/serverless/api-gateway","text":"<ul> <li>            Custom Domain Name in API Gateway          </li> <li>            Get Source IP in API Gateway          </li> <li>            apigw-cross-account-private-endpoint          </li> <li>            apigw-private-api-alb-cdk          </li> <li>            apigw-regional-api-access-from-vpc          </li> <li>            script-api-resource-method          </li> </ul>"},{"location":"tags/#tag:awsserverlesslambda","title":"aws/serverless/lambda","text":"<ul> <li>            cloudwatch-to-firehose-python          </li> <li>            lambda          </li> </ul>"},{"location":"tags/#tag:awsstorageebs","title":"aws/storage/ebs","text":"<ul> <li>            ebs          </li> <li>            ebs-for-eks          </li> </ul>"},{"location":"tags/#tag:awsstorageefs","title":"aws/storage/efs","text":"<ul> <li>            EFS CSI on EKS          </li> <li>            efs          </li> </ul>"},{"location":"tags/#tag:awsstorages3","title":"aws/storage/s3","text":"<ul> <li>            Export Cloudwatch Log Group to S3          </li> <li>            Stream EKS Control Panel Logs to S3          </li> <li>            s3          </li> </ul>"},{"location":"tags/#tag:awsstoragestorage-gateway","title":"aws/storage/storage-gateway","text":"<ul> <li>            Storage File Gateway          </li> </ul>"},{"location":"tags/#tag:awsstoragetransfer-family","title":"aws/storage/transfer-family","text":"<ul> <li>            Migrating Filezilla to AWS Transfer Family          </li> </ul>"},{"location":"tags/#tag:awswell-architected","title":"aws/well-architected","text":"<ul> <li>            WA-\u5353\u8d8a\u8fd0\u8425-Operational-Excellence-202310-Summary          </li> <li>            WA-\u53ef\u6301\u7eed\u6027-Sustainability-202310-Summary          </li> <li>            WA-\u53ef\u9760\u6027-Reliability-202310-Summary          </li> <li>            WA-\u5b89\u5168-Security-202310-Summary          </li> <li>            WA-\u6027\u80fd\u6548\u7387-Performance-Efficiency-202310-Summary          </li> <li>            WA-\u6210\u672c\u4f18\u5316-Cost-Optimization-202310-Summary          </li> </ul>"},{"location":"tags/#tag:azure","title":"azure","text":"<ul> <li>            Enable Quicksight with Identity Center          </li> </ul>"},{"location":"tags/#tag:cmd","title":"cmd","text":"<ul> <li>            api-gateway          </li> <li>            assume          </li> <li>            docker          </li> <li>            iptables          </li> <li>            kubernetes-cmd          </li> <li>            linux-cmd          </li> <li>            regctl          </li> <li>            vim-cmd          </li> <li>            web-press-testing-tool          </li> </ul>"},{"location":"tags/#tag:cmdffmpeg","title":"cmd/ffmpeg","text":"<ul> <li>            ffmpeg          </li> </ul>"},{"location":"tags/#tag:cmdjq","title":"cmd/jq","text":"<ul> <li>            jq          </li> </ul>"},{"location":"tags/#tag:datahub","title":"datahub","text":"<ul> <li>            Datahub          </li> </ul>"},{"location":"tags/#tag:docker","title":"docker","text":"<ul> <li>            docker          </li> <li>            docker-on-windows          </li> </ul>"},{"location":"tags/#tag:draft","title":"draft","text":"<ul> <li>            CodeServer          </li> <li>            EKS Auto Mode          </li> <li>            MCP Server on EC2          </li> <li>            aws-signer          </li> <li>            caddy          </li> <li>            go-cmd          </li> </ul>"},{"location":"tags/#tag:flagger","title":"flagger","text":"<ul> <li>            automated-canary-deployment-using-flagger          </li> </ul>"},{"location":"tags/#tag:github","title":"github","text":"<ul> <li>            github-page-howto          </li> </ul>"},{"location":"tags/#tag:gitopsargo","title":"gitops/argo","text":"<ul> <li>            argocd          </li> </ul>"},{"location":"tags/#tag:gitopsweaveworksflux","title":"gitops/weaveworks/flux","text":"<ul> <li>            flux          </li> </ul>"},{"location":"tags/#tag:grafana","title":"grafana","text":"<ul> <li>            Install Grafana on Beanstalk          </li> <li>            install-prometheus-grafana-on-eks          </li> </ul>"},{"location":"tags/#tag:grafanaloki","title":"grafana/loki","text":"<ul> <li>            Using Grafana Loki for Logging          </li> </ul>"},{"location":"tags/#tag:kubernetes","title":"kubernetes","text":"<ul> <li>            EKS Addons          </li> <li>            Kubernetes Best Practices - Resource Requests and Limits          </li> <li>            Kyverno          </li> <li>            Metrics Server          </li> <li>            Mutating Webhook for Kubernetes in China          </li> <li>            aws-for-fluent-bit          </li> <li>            cert-manager          </li> <li>            cluster-autoscaler          </li> <li>            eksup          </li> <li>            externaldns-for-route53          </li> <li>            helm-cmd          </li> <li>            horizontal pod autoscaler          </li> <li>            k8s-liveness-readiness-startup-probes          </li> <li>            kube-no-trouble          </li> <li>            kube-state-metrics          </li> <li>            kubectx          </li> <li>            kubernetes events exporter          </li> <li>            nginx sample          </li> <li>            pluto          </li> <li>            prometheus-adapter          </li> <li>            topology spread constraints          </li> </ul>"},{"location":"tags/#tag:kubernetescni","title":"kubernetes/cni","text":"<ul> <li>            eks-custom-network          </li> </ul>"},{"location":"tags/#tag:kubernetesingress","title":"kubernetes/ingress","text":"<ul> <li>            aws-load-balancer-controller          </li> <li>            nginx-ingress-controller          </li> <li>            nginx-ingress-controller-community-ver          </li> <li>            nginx-ingress-controller-nginx-ver          </li> </ul>"},{"location":"tags/#tag:linux","title":"linux","text":"<ul> <li>            docker          </li> <li>            go-cmd          </li> <li>            iptables          </li> <li>            linux-cmd          </li> <li>            regctl          </li> <li>            web-press-testing-tool          </li> </ul>"},{"location":"tags/#tag:llm","title":"llm","text":"<ul> <li>            dify.ai          </li> </ul>"},{"location":"tags/#tag:llmdeepseek","title":"llm/deepseek","text":"<ul> <li>            deepseek-poc          </li> </ul>"},{"location":"tags/#tag:llmmcp","title":"llm/mcp","text":"<ul> <li>            Configure SearxNG MCP Server in Cline          </li> <li>            MCP Server for Grafana          </li> <li>            MCP Server on EC2          </li> </ul>"},{"location":"tags/#tag:microsoftdotnet","title":"microsoft/dotnet","text":"<ul> <li>            Migrating .NET Classic Applications to Amazon ECS Using Windows Containers          </li> </ul>"},{"location":"tags/#tag:microsoftgmsa","title":"microsoft/gmsa","text":"<ul> <li>            Windows Authentication with gMSA for .NET Linux Containers in Amazon ECS          </li> </ul>"},{"location":"tags/#tag:microsoftpowershell","title":"microsoft/powershell","text":"<ul> <li>            powershell          </li> </ul>"},{"location":"tags/#tag:microsoftwindows","title":"microsoft/windows","text":"<ul> <li>            docker-on-windows          </li> <li>            ecs-windows-gmsa          </li> <li>            poc-container-on-domainless-windows-in-ecs          </li> <li>            powershell          </li> </ul>"},{"location":"tags/#tag:nginx","title":"nginx","text":"<ul> <li>            nginx sample          </li> <li>            nginx-ingress-controller-community-ver          </li> <li>            nginx-ingress-controller-nginx-ver          </li> </ul>"},{"location":"tags/#tag:nodejs","title":"nodejs","text":"<ul> <li>            nodejs-cmd          </li> </ul>"},{"location":"tags/#tag:obsidian","title":"obsidian","text":"<ul> <li>            Obsidian Tips          </li> </ul>"},{"location":"tags/#tag:openswan","title":"openswan","text":"<ul> <li>            openswan-s2svpn-tgw-lab          </li> </ul>"},{"location":"tags/#tag:postgresql","title":"postgresql","text":"<ul> <li>            postgres-cmd          </li> </ul>"},{"location":"tags/#tag:prometheus","title":"prometheus","text":"<ul> <li>            Prometheus With Thanos Manually          </li> <li>            enable-prometheus-in-cloudwatch          </li> <li>            install-prometheus-grafana-on-eks          </li> </ul>"},{"location":"tags/#tag:python","title":"python","text":"<ul> <li>            cloudwatch-to-firehose-python          </li> <li>            jq          </li> <li>            python-cmd          </li> </ul>"},{"location":"tags/#tag:terraform","title":"terraform","text":"<ul> <li>            Create EKS Cluster with Terraform          </li> <li>            terraform          </li> </ul>"},{"location":"tags/#tag:todo","title":"todo","text":"<ul> <li>            vpc          </li> </ul>"},{"location":"tags/#tag:ubuntu","title":"ubuntu","text":"<ul> <li>            ubuntu          </li> </ul>"},{"location":"CLI/awscli/acm-cmd/","title":"acm-cmd","text":"","tags":["aws/cmd","aws/security/acm"]},{"location":"CLI/awscli/acm-cmd/#create-certificate-with-eksdemo-","title":"create-certificate-with-eksdemo-","text":"<ul> <li>https://github.com/awslabs/eksdemo/blob/main/docs/create-acm-cert.md <pre><code>echo ${DOMAIN_NAME}\necho ${AWS_DEFAULT_REGION}\n\neksdemo create acm-certificate \"*.${DOMAIN_NAME}\" \n# eksdemo get hosted-zone\n# eksdemo get dns-records -z poc1009.aws.panlm.xyz\n\neksdemo get acm-certificate # get certificate arn \n</code></pre> ^kresvp</li> </ul>","tags":["aws/cmd","aws/security/acm"]},{"location":"CLI/awscli/acm-cmd/#create-certificate-","title":"create-certificate-","text":"<ul> <li> <p>\u521b\u5efa\u5e76\u901a\u8fc7\u6dfb\u52a0 dns \u8bb0\u5f55\u9a8c\u8bc1\u8bc1\u4e66 (create certificate with DNS verification) <pre><code>echo ${DOMAIN_NAME}\n# DOMAIN_NAME=api0413.aws.panlm.xyz\n\nCERTIFICATE_ARN=$(aws acm request-certificate \\\n--domain-name \"*.${DOMAIN_NAME}\" \\\n--validation-method DNS \\\n--query 'CertificateArn' --output text)\n\nsleep 10\naws acm describe-certificate --certificate-arn ${CERTIFICATE_ARN} |tee /tmp/acm.$$.1\nCERT_CNAME_NAME=$(cat /tmp/acm.$$.1 |jq -r '.Certificate.DomainValidationOptions[0].ResourceRecord.Name')\nCERT_CNAME_VALUE=$(cat /tmp/acm.$$.1 |jq -r '.Certificate.DomainValidationOptions[0].ResourceRecord.Value')\n\nenvsubst &gt;certificate-route53-record.json &lt;&lt;-EOF\n{\n  \"Comment\": \"UPSERT a record for certificate xxx \",\n  \"Changes\": [\n    {\n      \"Action\": \"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"${CERT_CNAME_NAME}\",\n        \"Type\": \"CNAME\",\n        \"TTL\": 300,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"${CERT_CNAME_VALUE}\"\n          }\n        ]\n      }\n    }\n  ]\n}\nEOF\n\nZONE_ID=$(aws route53 list-hosted-zones-by-name \\\n--dns-name \"${DOMAIN_NAME}.\" \\\n--query HostedZones[0].Id --output text) \naws route53 change-resource-record-sets \\\n--hosted-zone-id ${ZONE_ID} \\\n--change-batch file://certificate-route53-record.json \naws route53 list-resource-record-sets \\\n--hosted-zone-id ${ZONE_ID} \\\n--query \"ResourceRecordSets[?Name == '${CERT_CNAME_NAME}']\"\n</code></pre></p> </li> <li> <p>\u7b49\u5f85\u72b6\u6001\u8f6c\u53d8\u6210 SUCCESS (wait ValidationStatus to SUCCESS) <pre><code># wait ValidationStatus to SUCCESS\naws acm describe-certificate \\\n--certificate-arn ${CERTIFICATE_ARN} \\\n--query 'Certificate.DomainValidationOptions[0]' \n</code></pre></p> </li> </ul>","tags":["aws/cmd","aws/security/acm"]},{"location":"CLI/awscli/acm-cmd/#create-certificate-with-pca-cross-account","title":"create certificate with pca  cross account","text":"<pre><code>PCA_ARN=arn:aws:acm-pca:us-east-2:xxxxxx:certificate-authority/xxxxxx\naws acm request-certificate \\\n--domain-name '*.api0320.aws.panlm.xyz' \\\n--validation-method DNS \\\n--certificate-authority-arn ${PCA_ARN}\n</code></pre>","tags":["aws/cmd","aws/security/acm"]},{"location":"CLI/awscli/acm-cmd/#list-certificate-by-domain-name","title":"list certificate by domain name","text":"<pre><code>echo $DOMAIN_NAME\nCERTIFICATE_ARN=$(aws acm list-certificates --query 'CertificateSummaryList[?DomainName==`*.'\"${DOMAIN_NAME}\"'`].CertificateArn' --output text)\n</code></pre>","tags":["aws/cmd","aws/security/acm"]},{"location":"CLI/awscli/apigw-cmd/","title":"apigw-cmd","text":"","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#delete-stage","title":"delete stage","text":"<pre><code>API_ID=3vnuyp4rtl\naws apigateway delete-stage \\\n--rest-api-id ${API_ID} \\\n--stage-name ip3\n</code></pre>","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#create-apigw-role-","title":"create-apigw-role-","text":"<pre><code>ROLE_NAME=apigatewayrole-`date +%Y%m%d-%H%M`\necho '{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": [\n                    \"apigateway.amazonaws.com\"\n                ]\n            },\n            \"Action\": [\n                \"sts:AssumeRole\"\n            ]\n        }\n    ]\n}' |tee role-trust-policy.json\naws iam create-role --role-name ${ROLE_NAME} \\\n  --assume-role-policy-document file://role-trust-policy.json\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n  --policy-arn \"arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"\naws iam list-attached-role-policies --role-name ${ROLE_NAME}\n\nrole_arn=$(aws iam get-role --role-name ${ROLE_NAME} |jq -r '.Role.Arn')\n\necho ${role_arn}\n</code></pre> <p>^0drt2e</p>","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#attach-policy-to-api","title":"attach policy to api","text":"<p>https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies-create-attach.html#apigateway-resource-policies-create-attach-console</p> <pre><code>envsubst &gt;resource-policy.json &lt;&lt;-EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": \"execute-api:/*/*/*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:sourceVpce\": [\"vpce-0941xxx828f\"]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": \"execute-api:/*/*/*\"\n    }\n  ]\n}\nEOF\nstr=$(cat resource-policy.json |sed 's/\"/\\\\\"/g' |xargs |sed 's/\"/\\\\\"/g')\naws apigateway update-rest-api --rest-api-id ${API_ID} --patch-operations op=replace,path=/policy,value='\"'\"$str\"'\"'\n\naws apigateway create-deployment \\\n--rest-api-id ${API_ID} --stage-name v1 \n</code></pre>","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#create-api","title":"create api","text":"","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#using-cli","title":"using cli","text":"<pre><code># create a simple api \n# will be replaced by poc api with vpc link\nAPI_ID=$(aws apigateway create-rest-api \\\n--name 'MyAPI-POC' \\\n--endpoint-configuration types=PRIVATE \\\n--query 'id' --output text)\n\nROOT_RESOURCE_ID=$(aws apigateway get-resources \\\n--rest-api-id ${API_ID} \\\n--query \"items[?path=='/'].id\" --output text)\n\nRESOURCE_ID_1=$(aws apigateway create-resource \\\n--rest-api-id ${API_ID} \\\n--parent-id ${ROOT_RESOURCE_ID} \\\n--path-part \"echo\" \\\n--query 'id' --output text)\n\naws apigateway put-method \\\n--rest-api-id ${API_ID} \\\n--resource-id ${RESOURCE_ID_1} \\\n--http-method GET \\\n--authorization-type NONE\n\naws apigateway put-integration \\\n--rest-api-id ${API_ID} \\\n--resource-id ${RESOURCE_ID_1} \\\n--http-method GET \\\n--type HTTP_PROXY \\\n--integration-http-method GET \\\n--uri 'https://httpbin.org' \n\n# --connection-type VPC_LINK \\\n# --connection-id ${VPCLINK_ID} \\\n# --tls-config insecureSkipVerification=true \\\n</code></pre>","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#using-api-definition","title":"using api definition","text":"<ul> <li>refer: git/blog-private-api-gateway-dataflow/TC-private-apigw-dataflow</li> <li>refer: ../../../../gitlab/handover/C-MK/apigw/POC-apigw-dataflow</li> </ul>","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/apigw-cmd/#update-access-log-for-rest-api-","title":"update-access-log-for-rest-api-","text":"<ul> <li>https://forum.serverless.com/t/how-to-setup-custom-access-logging-for-api-gateway-using-serverless/3288/5</li> </ul> <pre><code>echo ${API_ID}\necho $LOGGROUP_ARN\n\necho '{ \n    \"requestId\": \"$context.requestId\", \n    \"caller\": \"$context.identity.caller\", \n    \"user\": \"$context.identity.user\",\n    \"requestTime\": \"$context.requestTime\", \n    \"httpMethod\": \"$context.httpMethod\",\n    \"resourcePath\": \"$context.resourcePath\", \n    \"status\": \"$context.status\",\n    \"protocol\": \"$context.protocol\", \n    \"responseLength\": \"$context.responseLength\",\n    \"ip\": \"$context.identity.sourceIp\", \n    \"xff\": \"$context.requestOverride.header.xff\"\n}' |tee access-log-format.json\n\nformat_str=$(cat access-log-format.json |sed 's/\"/\\\\\"/g' |xargs |sed 's/\"/\\\\\"/g')\n\necho '{\"patchOperations\": []}' |\\\njq '.patchOperations[0] = {\"op\": \"replace\", \"path\": \"/accessLogSettings/format\", \"value\": \"'\"${format_str}\"'\"}' |\\\njq '.patchOperations[1] = {\"op\": \"replace\", \"path\": \"/accessLogSettings/destinationArn\", \"value\": \"'\"${LOGGROUP_ARN}\"'\"}' |tee access-log-settings.json\n\naws apigateway update-stage \\\n--rest-api-id $API_ID \\\n--stage-name v1 \\\n--cli-input-json file://access-log-settings.json\n</code></pre> <p>refer: git/blog-private-api-gateway-dataflow/TC-private-apigw-dataflow</p>","tags":["cmd","aws/cmd"]},{"location":"CLI/awscli/auto-scaling-cmd/","title":"auto-scaling-group-cmd","text":"","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#func-create-launch-template-","title":"func-create-launch-template-","text":"<ul> <li>to create launch template, you need: security group id (git/git-mkdocs/CLI/awscli/ec2-cmd) and ami id (git/git-mkdocs/CLI/awscli/ec2-cmd) func-create-launch-template<pre><code># depends on: SG_ID, AMI_ID\n# output variable: LAUNCH_TEMPLATE_ID\n# quick link: https://panlm.github.io/CLI/functions/func-create-launch-template.sh\n\nfunction create-launch-template () {\n    OPTIND=1\n    OPTSTRING=\"h?s:a:\"\n    local SG_ID=\"\"\n    local AMI_ID=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            s) SG_ID=${OPTARG} ;;\n            a) AMI_ID=${OPTARG} ;;\n            h|\\?) \n                echo \"format: create-launch-template -s SG_ID -a AMI_ID\"\n                echo\n                return 0\n            ;;\n        esac\n    done\n    : ${SG_ID:?Missing -s}\n    : ${AMI_ID:?Missing -a}\n\n    LAUNCH_TEMPLATE_NAME=launchtemplate-$(TZ=CST-8 date +%Y%m%d-%H%M)\n    local TMP=$(mktemp --suffix .${LAUNCH_TEMPLATE_NAME})\n    envsubst &gt;${TMP} &lt;&lt;-EOF\n{\n    \"InstanceType\": \"m5.large\",\n    \"ImageId\": \"${AMI_ID}\",\n    \"SecurityGroupIds\": [\n        \"${SG_ID}\"\n    ],\n    \"TagSpecifications\": [{\n        \"ResourceType\": \"instance\",\n        \"Tags\": [{\n            \"Key\": \"Name\",\n            \"Value\": \"${LAUNCH_TEMPLATE_NAME}\"\n        }]\n    },\n    {\n        \"ResourceType\": \"volume\",\n        \"Tags\": [{\n            \"Key\": \"Name\",\n            \"Value\": \"${LAUNCH_TEMPLATE_NAME}\"\n        }]\n    }]\n}\nEOF\n\n    aws ec2 create-launch-template \\\n        --launch-template-name ${LAUNCH_TEMPLATE_NAME} \\\n        --launch-template-data file://${TMP} |tee ${TMP}.out\n    LAUNCH_TEMPLATE_ID=$(cat ${TMP}.out |jq -r '.LaunchTemplate.LaunchTemplateId')\n    echo \"LAUNCH_TEMPLATE_ID=\"${LAUNCH_TEMPLATE_ID}\n} # funcend\n</code></pre> refer: func-create-launch-template</li> </ul>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#func-create-auto-scaling-group-","title":"func-create-auto-scaling-group-","text":"<ul> <li>to create auto scaling group, you need: launch template id func-create-auto-scaling-group<pre><code># depends on: LAUNCH_TEMPLATE_ID\n# output variable: ASG_ARN\n# quick link: https://panlm.github.io/CLI/functions/func-create-auto-scaling-group.sh\n\nfunction create-auto-scaling-group () {\n    OPTIND=1\n    OPTSTRING=\"h?l:\"\n    local LAUNCH_TEMPLATE_ID=\"\"\n    local NUM=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            l) LAUNCH_TEMPLATE_ID=${OPTARG} \n            ;;\n            n) NUM=${OPTARG} \n            ;;\n            h|\\?) \n                echo \"format: create-auto-scaling-group -l LAUNCH_TEMPLATE_ID [-n NUM]\"\n                echo -e \"\\tsample: create-auto-scaling-group \"\n                echo -e \"\\tsample: create-auto-scaling-group -l lt-xxx -n 2\"\n                echo\n                return 0\n            ;;\n        esac\n    done\n    : ${LAUNCH_TEMPLATE_ID:?Missing -l}\n    : ${NUM:=0}\n\n    local TMP=$(mktemp --suffix .asg)\n    # get sg id\n    aws ec2 describe-launch-template-versions --launch-template-id ${LAUNCH_TEMPLATE_ID} --versions '$Latest' |tee ${TMP}.lt\n    local VERSION_NUM=$(cat ${TMP}.lt |jq -r '.LaunchTemplateVersions[0].VersionNumber')\n    local SG_IDS=($(cat ${TMP}.lt |jq -r '.LaunchTemplateVersions[0].LaunchTemplateData.SecurityGroupIds[]'))\n    local VPC_IDS=($(aws ec2 describe-security-groups --group-ids ${SG_IDS[@]} |jq -r '.SecurityGroups[].VpcId'))\n    if [[ ${#VPC_IDS[@]} -ne 1 ]]; then\n        echo 'SG belongs to different VPC'\n        return 9\n    fi\n\n    # get private subnets or public subnets\n    local VPC_ID=${VPC_IDS[@]}\n    local SUBNET_IDS=$(aws ec2 describe-subnets \\\n        --filter \"Name=vpc-id,Values=${VPC_ID}\" \\\n        --query 'Subnets[?MapPublicIpOnLaunch==`false`].SubnetId' \\\n        --output text)\n\n    if [[ -z ${SUBNET_IDS} ]]; then\n        local SUBNET_IDS=$(aws ec2 describe-subnets \\\n            --filter \"Name=vpc-id,Values=${VPC_ID}\" \\\n            --query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n            --output text)\n    fi\n\n    local SUBNET_STR=$(echo ${SUBNET_IDS} |xargs |tr ' ' ',')\n\n    local ASG_NAME=autoscaling-$(TZ=CST-8 date +%Y%m%d-%H%M)\n    envsubst &gt;${TMP}.asg &lt;&lt;-EOF\n{\n  \"AutoScalingGroupName\": \"${ASG_NAME}\",\n  \"MinSize\": 0,\n  \"MaxSize\": 10,\n  \"VPCZoneIdentifier\": \"${SUBNET_STR}\",\n  \"NewInstancesProtectedFromScaleIn\": true,\n  \"MixedInstancesPolicy\":{\n    \"LaunchTemplate\":{\n      \"LaunchTemplateSpecification\":{\n        \"LaunchTemplateId\": \"${LAUNCH_TEMPLATE_ID}\",\n        \"Version\": \"${VERSION_NUM}\"\n      },\n      \"Overrides\":[{}]\n    }\n  }\n}\nEOF\n\n    aws autoscaling create-auto-scaling-group \\\n        --cli-input-json file://${TMP}.asg \n    aws autoscaling describe-auto-scaling-groups \\\n        --auto-scaling-group-names ${ASG_NAME} |tee ${TMP}.asg.out\n    ASG_ARN=$(cat ${TMP}.asg.out |jq -r '.AutoScalingGroups[0].AutoScalingGroupARN')\n    echo \"ASG_ARN=\"${ASG_ARN}\n} # funcend\n</code></pre> refer: func-create-auto-scaling-group</li> </ul>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#warmpool","title":"warmpool","text":"<ul> <li> <p>create warmpool with scale in policy <pre><code>ASG_NAME=\"Example Auto Scaling Group\"\naws autoscaling put-warm-pool \\\n    --auto-scaling-group-name ${ASG_NAME} \\\n    --pool-state Stopped \\\n    --instance-reuse-policy '{\"ReuseOnScaleIn\": true}'\n</code></pre></p> </li> <li> <p>create warmpool with min size 4 <pre><code>aws autoscaling put-warm-pool \\\n    --auto-scaling-group-name my-asg \\\n    --pool-state Stopped --min-size 4\n</code></pre></p> </li> </ul> <p>refer: https://docs.aws.amazon.com/autoscaling/ec2/userguide/examples-warm-pools-aws-cli.html</p>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#lifecycle-hook-","title":"lifecycle-hook-","text":"<ul> <li> <p>need an autoscaling role to create hook <pre><code>UNIQ=$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\nASG_NAME=${ASG_ARN##*/}\n\nROLE_NAME=autoscaling-notification-role-${UNIQ}\ncat &gt;trust.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"autoscaling.amazonaws.com\"\n            },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\nEOF\n\naws iam create-role --role-name ${ROLE_NAME} \\\n    --assume-role-policy-document file://./trust.json |tee ${ROLE_NAME}.out\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n    --policy-arn \"arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole\"\nROLE_ARN=$(cat ${ROLE_NAME}.out |jq -r '.Role.Arn')\n</code></pre></p> </li> <li> <p>create sns or sqs as target <pre><code># for sns\n#TARGET_ARN=$(aws sns create-topic --name asg-sns-${UNIQ} --query 'TopicArn' --output text)\n\n# for sqs\nQUEUE_URL=$(aws sqs create-queue --queue-name asg-sqs-${UNIQ} --query 'QueueUrl' --output text)\nACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)\nTARGET_ARN=arn:aws:sqs:${AWS_DEFAULT_REGION}:${ACCOUNT_ID}:${QUEUE_URL##*/}\n</code></pre></p> </li> <li> <p>create hook <pre><code>aws autoscaling put-lifecycle-hook \\\n    --lifecycle-hook-name hook-${UNIQ} \\\n    --auto-scaling-group-name ${ASG_NAME} \\\n    --lifecycle-transition autoscaling:EC2_INSTANCE_LAUNCHING \\\n    --role-arn ${ROLE_ARN} \\\n    --notification-target-arn ${TARGET_ARN}\n</code></pre></p> </li> </ul>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#refer","title":"refer","text":"right-click &amp; open-in-new-tab:  <p>refer update-launch-template-</p> right-click &amp; open-in-new-tab:  <p></p> <p>refer update-asg-</p>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#launch-template-and-auto-scaling-group-","title":"launch-template-and-auto-scaling-group-","text":"<pre><code>SECGRP_ID=sg-xxx\nAMI_ID=ami-xxx\n\nINSTANCE_NAME=instance-$(date +%Y%m%d%H%M)\nKEY_NAME=awskey\n\nLAUNCH_TEMPLATE_NAME=launchtemplate-$(date +%Y%m%d%H%M)\nTMP=$(mktemp --suffix ${LAUNCH_TEMPLATE_NAME})\nenvsubst &gt;${TMP} &lt;&lt;-EOF\n{\n  \"InstanceType\": \"m5.large\",\n  \"ImageId\": \"${AMI_ID}\",\n  \"KeyName\": \"${KEY_NAME}\",\n  \"BlockDeviceMappings\": [\n    {\n      \"DeviceName\": \"/dev/xvda\",\n      \"Ebs\": {\n        \"Iops\": 3000,\n        \"VolumeSize\": 80,\n        \"VolumeType\": \"gp3\",\n        \"Throughput\": 125\n      }\n    }\n  ],\n  \"TagSpecifications\": [\n    {\n      \"ResourceType\": \"instance\",\n      \"Tags\": [\n        {\n          \"Key\": \"Name\",\n          \"Value\": \"${INSTANCE_NAME}\"\n        }\n      ]\n    },\n    {\n      \"ResourceType\": \"volume\",\n      \"Tags\": [\n        {\n          \"Key\": \"Name\",\n          \"Value\": \"${INSTANCE_NAME}\"\n        }\n      ]\n    },\n    {\n      \"ResourceType\": \"network-interface\",\n      \"Tags\": [\n        {\n          \"Key\": \"Name\",\n          \"Value\": \"${INSTANCE_NAME}\"\n        }\n      ]\n    }\n  ],\n  \"SecurityGroupIds\": [\n    \"${SECGRP_ID}\"\n  ],\n  \"MetadataOptions\": {\n    \"HttpTokens\": \"optional\",\n    \"HttpPutResponseHopLimit\": 2\n  }\n}\nEOF\n\naws ec2 create-launch-template \\\n  --launch-template-name ${LAUNCH_TEMPLATE_NAME} \\\n  --launch-template-data file://${TMP}\n\nASG_NAME=autoscaling-$(date +%Y%m%d%H%M)\nSUBNET_ID=subnet-03c26cc2c8b2eda6e\nenvsubst &gt; ${ASG_NAME}.json &lt;&lt;-EOF\n{\n  \"AutoScalingGroupName\": \"${ASG_NAME}\",\n  \"MinSize\": 1,\n  \"MaxSize\": 1,\n  \"VPCZoneIdentifier\": \"${SUBNET_ID}\",\n  \"MixedInstancesPolicy\":{\n    \"LaunchTemplate\":{\n      \"LaunchTemplateSpecification\":{\n        \"LaunchTemplateName\": \"${LAUNCH_TEMPLATE_NAME}\"\n      },\n      \"Overrides\":[\n        {\n          \"InstanceType\":\"m5.xlarge\"\n        }\n      ]\n    }\n  }\n}\nEOF\n\naws autoscaling create-auto-scaling-group \\\n--cli-input-json file://${ASG_NAME}.json\n\nexport AWS_PAGER=\"\"\nASG_ARN=$(aws autoscaling describe-auto-scaling-groups \\\n--auto-scaling-group-names ${ASG_NAME} \\\n--query 'AutoScalingGroups[0].AutoScalingGroupARN' \\\n--output text)\n</code></pre>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/auto-scaling-cmd/#auto-scaling","title":"auto scaling","text":"<pre><code>aws launchconfig\naws autoscaling delete-auto-scaling-group --auto-scaling-group-name AutoScalingGroup --force-delete\n</code></pre>","tags":["aws/cmd","aws/compute/autoscaling"]},{"location":"CLI/awscli/aws-ip-range/","title":"ip-range","text":"","tags":["aws/network","aws/cmd"]},{"location":"CLI/awscli/aws-ip-range/#blog","title":"blog","text":"<ul> <li>How to Automatically Update Your Security Groups for Amazon CloudFront and AWS WAF by Using AWS Lambda <ul> <li>(link) (github)</li> </ul> </li> </ul>","tags":["aws/network","aws/cmd"]},{"location":"CLI/awscli/aws-ip-range/#download","title":"download","text":"<pre><code>wget https://ip-ranges.amazonaws.com/ip-ranges.json\n</code></pre>","tags":["aws/network","aws/cmd"]},{"location":"CLI/awscli/aws-ip-range/#cli","title":"CLI","text":"<ul> <li> <p>s3 <pre><code>cat ip-ranges.json |jq -r '.prefixes[] | select(.region==\"cn-northwest-1\") | select(.service==\"S3\")'\n</code></pre></p> </li> <li> <p>dynamodb <pre><code>cat ip-ranges.json |jq -r '.prefixes[] | select(.region==\"cn-northwest-1\") | select(.service==\"DYNAMODB\")'\n</code></pre></p> </li> <li> <p>lambda <pre><code>cat ip-ranges.json |jq -r '.prefixes[] | select(.region==\"cn-northwest-1\") | select(.service==\"LAMBDA\")'\n</code></pre></p> </li> <li> <p>ec2 <pre><code>cat ip-ranges.json |jq -r '.prefixes[] | select(.region==\"cn-northwest-1\") | select(.service==\"EC2\")'\n</code></pre></p> </li> <li> <p>eks <pre><code>cat ip-ranges.json |jq -r '.prefixes[] | select(.region==\"cn-northwest-1\") | select(.service==\"EKS\")'\n</code></pre></p> </li> <li> <p>route 53 <pre><code>cat ip-ranges.json |jq -r '.prefixes[]  | select(.service==\"ROUTE53\")'\n\ncat ip-ranges.json |jq -r '.prefixes[]  | select(.region==\"us-east-2\") | select(.service==\"ROUTE53_RESOLVER\")'\n</code></pre></p> </li> <li> <p>api gateway <pre><code>cat ip-ranges.json |jq -r '.prefixes[] | select(.region==\"us-east-2\") | select(.service==\"API_GATEWAY\")'\n</code></pre></p> </li> </ul>","tags":["aws/network","aws/cmd"]},{"location":"CLI/awscli/aws-nuke/","title":"aws-nuke","text":"","tags":["aws/cmd"]},{"location":"CLI/awscli/aws-nuke/#homepage","title":"homepage","text":"<ul> <li>https://github.com/aws-samples/aws-nuke-account-cleanser-example/tree/main</li> <li>https://github.com/rebuy-de/aws-nuke</li> </ul>","tags":["aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/","title":"cloud9-cmd","text":"","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#spin-up-a-cloud9-instance-in-your-region","title":"spin-up-a-cloud9-instance-in-your-region","text":"<ul> <li>refer: ../../cloud9/setup-cloud9-for-eks </li> </ul> <pre><code>aws cloud9 describe-environments\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#disable-aws-credential-management","title":"disable aws credential management","text":"<pre><code>aws cloud9 update-environment  --environment-id $C9_PID --managed-credentials-action DISABLE\nrm -vf ${HOME}/.aws/credentials\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#get-subnet-id-and-vpc-id-from-cloud9-instance","title":"get subnet id and vpc id from cloud9 instance","text":"<pre><code># get cloud9 vpc\nC9_INST_ID=$(curl http://169.254.169.254/1.0/meta-data/instance-id 2&gt;/dev/null)\nC9_VPC_ID=$(aws ec2 describe-instances \\\n--instance-ids ${C9_INST_ID} \\\n--query 'Reservations[0].Instances[0].VpcId' --output text)\n\n# get public subnet for external alb\nC9_SUBNETS_ID=$(aws ec2 describe-subnets \\\n--filter \"Name=vpc-id,Values=${C9_VPC_ID}\" \\\n--query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n--output text)\n\n# get default security group \nC9_DEFAULT_SG_ID=$(aws ec2 describe-security-groups \\\n--filter Name=vpc-id,Values=${C9_VPC_ID} \\\n--query \"SecurityGroups[?GroupName == 'default'].GroupId\" \\\n--output text)\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#share-cloud9-with-other-users-","title":"share-cloud9-with-other-users-","text":"<pre><code>C9_PID=\nAWS_ACCOUNT_ARN=\naws cloud9 create-environment-membership \\\n    --environment-id ${C9_PID} \\\n    --user-arn ${AWS_ACCOUNT_ARN} \\\n    --permissions read-write\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#spin-up-cloud9-in-china-region","title":"spin-up cloud9 in China region","text":"<pre><code>AMI_ID_ZHY=ami-00974946d12b0f21a\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#error-message-when-use-username-in-membership","title":"error message when use username in membership","text":"<pre><code>Value 'arn:aws:sts:::user/panlm' at 'userArn' failed to satisfy constraint: Member must satisfy regular expression pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(iam|sts)::\\d+:(root|(user\\/[\\w+=/:,.@-]{1,64}|federated-user\\/[\\w+=/:,.@-]{2,32}|assumed-role\\/[\\w+=:,.@-]{1,64}\\/[\\w+=,.@-]{1,64}))$\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#get-tags","title":"get tags","text":"<pre><code>C9_INST_ID=$(curl 169.254.169.254/latest/meta-data/instance-id)\naws ec2 describe-instances --instance-ids $C9_INST_ID --query 'Reservations[].Instances[].Tags[?Key==`aws:cloud9:environment`].Value' --output text\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#old","title":"old","text":"<pre><code>OWNER_ARN=$(aws sts get-caller-identity  --query 'Arn'  --output text)\nENV_ID=$(aws cloud9 create-environment-ec2 \\\n--name ${STACK_NAME} \\\n--instance-type t3.small \\\n--subnet-id ${PublicSubnet1ID} \\\n--automatic-stop-time-minutes 10080 \\\n--owner-arn ${OWNER_ARN} \\\n--query 'environmentId' --output text )\n\n(C9_URL=https://${AWS_REGION}.console.aws.amazon.com/cloud9/ide/${ENV_ID}\necho \"open cloud9 url:\"\necho \"${C9_URL}\")\n</code></pre> <pre><code>DEFAULT_VPC=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true --query 'Vpcs[0].VpcId' --output text)\n\nif [[ ! -z ${DEFAULT_VPC} ]]; then\n\n  FIRST_SUBNET=$(aws ec2 describe-subnets \\\n    --filters \"Name=vpc-id,Values=${DEFAULT_VPC}\" \\\n    --query \"Subnets[0].SubnetId\" \\\n    --output text)\n\n  aws cloud9 create-environment-ec2 \\\n    --name cloud9-$RANDOM \\\n    --instance-type t3.small \\\n    --subnet-id ${FIRST_SUBNET} \\\n    --automatic-stop-time-minutes 10080 \\\n    --owner-arn arn:aws:iam::123456789012:role/adminrole \\\n\nfi\n\nAn error occurred (ValidationException) when calling the CreateEnvironmentEC2 operation: 1 validation error detected: Value 'arn:aws:iam::861xxxxxx173:role/adminrole' at 'ownerArn' failed to satisfy constraint: Member must satisfy regular expression pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(iam|sts)::\\d+:(root|(user\\/[\\w+=/:,.@-]{1,64}|federated-user\\/[\\w+=/:,.@-]{2,32}|assumed-role\\/[\\w+=:,.@-]{1,64}\\/[\\w+=,.@-]{1,64}))$\n</code></pre>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#turn-off-aws-managed-temporary-credentials","title":"Turn off AWS managed temporary credentials","text":"<p>LINK</p> <p>If you turn off AWS managed temporary credentials, by default the environment cannot access any AWS services, regardless of the AWS entity who makes the request. If you can\u2019t or don\u2019t want to turn on AWS managed temporary credentials for an environment, but you still need the environment to access AWS services, consider the following alternatives:</p> <ul> <li>Attach an instance profile to the Amazon EC2 instance that connects to the environment. For instructions, see\u00a0Create and Use an Instance Profile to Manage Temporary Credentials.</li> <li>Store your permanent AWS access credentials in the environment, for example, by setting special environment variables or by running the\u00a0<code>aws configure</code>\u00a0command. For instructions, see\u00a0Create and store permanent access credentials in an Environment.</li> </ul>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloud9-cmd/#cloud9-will-be-retire","title":"cloud9 will be retire","text":"<ul> <li>news: link</li> <li>alternative: ../../cloud9/vscode</li> <li></li> </ul>","tags":["aws/cloud9","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/","title":"cloudformation-cli","text":"","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/#validate","title":"validate","text":"<pre><code>aws cloudformation validate-template \\\n    --region us-east-1 \\\n    --template-body file://./test.yaml\n</code></pre>","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/#describe-stacks","title":"describe-stacks","text":"<pre><code>AWS_REGION=us-east-1\nSTACK_NAME=stack1-23948\n\naws cloudformation --region ${AWS_REGION} describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`VPCID`].OutputValue' --output text\n\naws cloudformation --region ${AWS_REGION} describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].StackStatus' --output text\n</code></pre>","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/#create-stack","title":"create-stack","text":"<pre><code>aws cloudformation create-stack --stack-name OELabStack2 \\\n  --parameters ParameterKey=InstanceProfile,ParameterValue=\"\" \\\n               ParameterKey=KeyName,ParameterValue=sample-key \\\n               ParameterKey=WorkloadName,ParameterValue=Test \\\n  --tags Key=env,Value=stack2 \\\n  --template-body file://~/Downloads/OE_Inventory_and_Patch_Mgmt.json\n\n{\n    \"StackId\": \"arn:aws-cn:cloudformation:cn-north-1:24xxxxx11488:stack/OELabStack1/64469510-5339-11ea-8854-022274580dba\"\n}\n</code></pre>","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/#cfn-signal","title":"cfn-signal","text":"<pre><code>/opt/aws/bin/cfn-signal -s true --stack ${AWS::StackId} --resource PrivateWaitCondition --region ${AWS::Region} \n# or \n/opt/aws/bin/cfn-signal -s true '${PrivateWaitHandle}'\n</code></pre>","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/#sample","title":"sample","text":"<ul> <li>some sample for user data format - quick-build-brconnector.yaml</li> <li>some sample - aws-vpc.template.yaml</li> </ul>","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudformation-cmd/#others","title":"others","text":"<ul> <li>ref &amp; getatt cheatsheet<ul> <li>https://theburningmonk.com/cloudformation-ref-and-getatt-cheatsheet/</li> </ul> </li> <li>sample<ul> <li>https://github.com/aws-cloudformation/aws-cloudformation-templates/tree/main</li> </ul> </li> <li>snippts<ul> <li>https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-general.html</li> </ul> </li> </ul>","tags":["aws/mgmt/cloudformation","aws/cmd"]},{"location":"CLI/awscli/cloudwatch-cmd/","title":"cloudwatch-cmd","text":"","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#log-group-and-log-stream","title":"log group and log stream","text":"","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#create-log-group","title":"create log group","text":"<ul> <li> <p>create standard log group <pre><code>LOGGROUP_NAME=apigw-access-log\naws logs create-log-group \\\n--log-group-name ${LOGGROUP_NAME}\nLOGGROUP_ARN=$(aws logs describe-log-groups \\\n--log-group-name-prefix ${LOGGROUP_NAME} \\\n--query 'logGroups[0].arn' --output text)\nLOGGROUP_ARN=${LOGGROUP_ARN%:*}\n</code></pre></p> </li> <li> <p>create IA log group <pre><code>LOGGROUP_NAME=/aws/eks/ekscluster3/cluster\naws logs delete-log-group --log-group-name ${LOGGROUP_NAME} &amp;&amp; \\\naws logs create-log-group \\\n--log-group-name ${LOGGROUP_NAME} \\\n--log-group-class INFREQUENT_ACCESS\n</code></pre></p> </li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#describe-log-stream","title":"describe log stream","text":"<pre><code>aws logs describe-log-streams \\\n  --log-group-name /aws/eks/ekscluster1/cluster \\\n  --log-stream-name-prefix kube-apiserver-audit- \\\n  |jq -r '.logStreams[] | (.creationTime, .logStreamName )' \\\n  |xargs -n 2 |sort -r |sed -n '2,$p' |awk '{print $NF}'\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#delete-log-stream","title":"delete log stream","text":"<pre><code>aws logs delete-log-stream \\\n  --log-group-name /aws/eks/ekscluster1/cluster \\\n  --log-stream-name kube-apiserver-audit-c26edac46f343347e73694744d70ab2a\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#check-log-size","title":"check log size","text":"<p>IncomingBytes refer: Which Log Group is causing a sudden increase in my CloudWatch Logs bill?</p> <pre><code>aws cloudwatch get-metric-statistics \\\n  --metric-name IncomingBytes \\\n  --start-time 2022-08-13T00:00:00Z --end-time 2022-08-18T23:59:59Z \\\n  --period 2592000 \\\n  --namespace AWS/Logs --statistics Sum --region us-east-2\n</code></pre> <pre><code># period = 30 days\naws cloudwatch get-metric-statistics \\\n  --metric-name IncomingBytes \\\n  --start-time 2022-08-13T00:00:00Z --end-time 2022-08-18T23:59:59Z \\\n  --period 2592000 \\\n  --namespace AWS/Logs --statistics Sum --region us-east-2 \\\n  --dimensions Name=LogGroupName,Value=/aws/eks/ekscluster1/cluster\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#export-task","title":"export task","text":"<ul> <li>../../EKS/solutions/logging/export-cloudwatch-log-group-to-s3</li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#subscription-firehose","title":"subscription firehose","text":"<ul> <li>../../EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3</li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#log-insights","title":"log-insights","text":"<ul> <li>cloudwatch-logs-insights</li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#metric","title":"metric","text":"<pre><code>SELECT AVG(WriteIOPS) FROM SCHEMA(\"AWS/ES\", ClientId,DomainName,NodeId) WHERE DomainName = 'myaos-20221210-130610' GROUP BY NodeId, DomainName\n\n{\n    \"metrics\": [\n        [ { \"expression\": \"SEARCH('{AWS/ES,ClientId,DomainName,NodeId} MetricName=ReadIOPS', 'Average', 300)\", \"id\": \"e1\", \"period\": 300 } ],\n        [ { \"expression\": \"SEARCH('{AWS/ES,ClientId,DomainName,NodeId} MetricName=WriteIOPS', 'Average', 300)\", \"id\": \"e2\", \"period\": 300 } ]\n    ],\n    \"view\": \"timeSeries\",\n    \"stacked\": false,\n    \"region\": \"us-east-2\",\n    \"stat\": \"Average\",\n    \"period\": 300\n}\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/cloudwatch-cmd/#add-alarm","title":"add alarm","text":"<pre><code>account_id=2086xxxx7602\nopensearch_name=opensearch-uez6sk9a\n\naws cloudwatch put-metric-alarm \\\n--alarm-name ClusterStatus-red-abcd \\\n--evaluation-periods 5 \\\n--comparison-operator GreaterThanOrEqualToThreshold \\\n--alarm-description \"OS cluster status red greater than 1 minute\" \\\n--metric-name ClusterStatus.red \\\n--namespace AWS/ES \\\n--statistic Average \\\n--period 60 \\\n--threshold 1 \\\n--treat-missing-data missing \\\n--dimensions Name=ClientId,Value=${account_id} Name=DomainName,Value=${opensearch_name}\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"CLI/awscli/copilot-cmd/","title":"copilot-cmd","text":"","tags":["aws/cmd","aws/container/copilot"]},{"location":"CLI/awscli/copilot-cmd/#install-manually","title":"install manually","text":"<pre><code>curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux &amp;&amp; chmod +x copilot &amp;&amp; sudo mv copilot /usr/local/bin/copilot \n</code></pre>","tags":["aws/cmd","aws/container/copilot"]},{"location":"CLI/awscli/copilot-cmd/#init","title":"init","text":"<pre><code>mkdir abc\ncopilot init\n\ncopilot svc deploy\n</code></pre>","tags":["aws/cmd","aws/container/copilot"]},{"location":"CLI/awscli/directory-service-cmd/","title":"directory-service-cmd","text":"","tags":["aws/mgmt/directory-service","aws/cmd"]},{"location":"CLI/awscli/directory-service-cmd/#create-ms-ad","title":"create ms ad","text":"<pre><code>AD=corp1.aws.panlm.xyz\nPASS=passworD.1\nVPC=vpc-0946\nSUBNETS=subnet-056f,subnet-033c\n\naws ds create-microsoft-ad \\\n    --name ${AD} \\\n    --short-name ${AD%%.*} \\\n    --password ${PASS} \\\n    --edition Standard \\\n    --vpc-settings VpcId=${VPC},SubnetIds=${SUBNETS} |tee /tmp/$$.ds.log\n\nMSDS_ID=$(cat /tmp/$$.ds.log |jq -r '.DirectoryId')\naws ds describe-directories \\\n    --directory-ids ${MSDS_ID} \\\n    --query DirectoryDescriptions[0].[Stage,DnsIpAddrs] \\\n    --output text\n</code></pre>","tags":["aws/mgmt/directory-service","aws/cmd"]},{"location":"CLI/awscli/directory-service-cmd/#create-ms-ad-in-default-vpc","title":"create ms ad in default vpc","text":"right-click &amp; open-in-new-tab","tags":["aws/mgmt/directory-service","aws/cmd"]},{"location":"CLI/awscli/directory-service-cmd/#active-directory-windows-2012","title":"active directory - windows 2012","text":"","tags":["aws/mgmt/directory-service","aws/cmd"]},{"location":"CLI/awscli/ebs-cmd/","title":"ebs-cmd","text":"","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#create-ebs-volume","title":"create ebs volume","text":"<pre><code>aws ec2 attach-volume\n--device &lt;value&gt;\n--instance-id &lt;value&gt;\n--volume-id &lt;value&gt;\n\naws ec2 create-volume\n--availability-zone &lt;value&gt;\n--size 200\n</code></pre>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#change-ebs-gp2-to-gp3","title":"change ebs gp2 to gp3","text":"<ul> <li>Script to automatically change all gp2 volumes to gp3 with aws-cli <pre><code>#! /bin/bash\n\nregion='us-east-1'\n\n# Find all gp2 volumes within the given region\nvolume_ids=$(/usr/bin/aws ec2 describe-volumes --region \"${region}\" --filters Name=volume-type,Values=gp2 | jq -r '.Volumes[].VolumeId')\n\n# Iterate all gp2 volumes and change its type to gp3\nfor volume_id in ${volume_ids};do\n    result=$(/usr/bin/aws ec2 modify-volume --region \"${region}\" --volume-type=gp3 --volume-id \"${volume_id}\" | jq '.VolumeModification.ModificationState' | sed 's/\"//g')\n    if [ $? -eq 0 ] &amp;&amp; [ \"${result}\" == \"modifying\" ];then\n        echo \"OK: volume ${volume_id} changed to state 'modifying'\"\n    else\n        echo \"ERROR: couldn't change volume ${volume_id} type to gp3!\"\n    fi\ndone\n</code></pre></li> </ul>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#get-each-snapshot-change-blocks-","title":"get-each-snapshot-change-blocks-","text":"<p>\u4f7f\u7528 ebs \u5feb\u7167\u751f\u547d\u5468\u671f\u7ba1\u7406\u65f6\uff0c\u67e5\u770b\u7279\u5b9a volume \u6bcf\u6b21\u5feb\u7167\u5360\u7528\u7684\u5927\u5c0f\uff0c\u4ee5\u65b9\u4fbf\u8de8\u533a\u57df\u590d\u5236\u65f6\u9884\u4f30\u4f20\u8f93\u91cf\u3002</p> <ul> <li>\u5feb\u7167\u5b8c\u6210\u8de8\u533a\u57df\u590d\u5236\u8017\u65f6\u4e0d\u7b49\uff0c\u4ece 20+ \u5206\u949f\u5230 45 \u5206\u949f\uff0c\u4e0d\u9002\u5408\u4f5c\u4e3a\u5bb9\u707e\u5207\u6362\u4f7f\u7528</li> <li>\u4f46\u53ef\u4ee5\u52a0\u901f\u540e\u7eed\u590d\u5236\u5b8c\u6210\uff0c\u9700\u8981\u6ce8\u610f\u4fdd\u6301\u914d\u7f6e\u4e00\u76f4\u624d\u53ef\u4ee5\u91cd\u7528\u4e4b\u524d\u590d\u5236\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\u4e4b\u524d\u8de8\u533a\u57df\u590d\u5236\u65f6\u4f7f\u7528 kms\uff0c\u90a3\u4e48\u5728\u540e\u7eed\u624b\u5de5\u5feb\u7167 + \u590d\u5236\u8fc7\u7a0b\u4e2d\u4e5f\u8981\u9009\u62e9 kms\uff0c\u53ef\u4ee5\u5feb\u901f\u5b8c\u6210\uff0c\u5426\u5219\u8017\u65f6\u66f4\u591a</li> </ul> <pre><code>VOLUME_ID=vol-06ecbace881bf641a\naws ec2 describe-snapshots  \\\n  |jq -r '(\n  .Snapshots[] \n  | select (.VolumeId==\"'\"${VOLUME_ID}\"'\") \n  | [.SnapshotId, .StartTime])\n  |@tsv' |sort -k2 &gt;/tmp/$$.tsv\n\nLINE_NUM=$(wc -l /tmp/$$.tsv |awk '{print $1}')\nif [[ ${LINE_NUM} -ne 1 ]]; then \n  cat /tmp/$$.tsv |awk '{print $1}' |while read LINE ; do\n    FIRST=${SECOND}\n    SECOND=${LINE}\n    if [[ -z ${FIRST} ]]; then\n      continue\n    fi\n    # echo $FIRST \"-\" $SECOND\n    echo -e \"${FIRST} - ${SECOND}: \\c\"\n    aws ebs list-changed-blocks \\\n      --first-snapshot-id ${FIRST} \\\n      --second-snapshot-id ${SECOND} \\\n      |jq -r '.ChangedBlocks|length'\n  done\nfi\n</code></pre>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#dlm-snapshot","title":"dlm - snapshot","text":"<ul> <li>default role doc (link) <pre><code># AWSDataLifecycleManagerDefaultRole\naws dlm create-default-role --resource-type snapshot\n# AWSDataLifecycleManagerDefaultRoleForAMIManagement\naws dlm create-default-role --resource-type image\n\nROLE_NAME=AWSDataLifecycleManagerDefaultRole\nROLE_ARN=$(aws iam get-role \\\n--role-name ${ROLE_NAME} \\\n--query 'Role.Arn' --output text)\n\ncat &gt; $$-snapshot.json &lt;&lt;-EOF\n{\n  \"PolicyType\": \"EBS_SNAPSHOT_MANAGEMENT\",\n  \"ResourceTypes\": [\n    \"INSTANCE\"\n  ],\n  \"TargetTags\": [\n    {\n      \"Key\": \"Name\",\n      \"Value\": \"test-instance1-zhy\"\n    }\n  ],\n  \"VariableTags\": [\n    {\n      \"Key\": \"instance-id\",\n      \"Value\": \"$(instance-id)\"\n    },\n    {\n      \"Key\": \"timestamp\",\n      \"Value\": \"$(timestamp)\"\n    }\n  ],\n  \"Schedules\": [\n    {\n      \"Name\": \"Schedule 1\",\n      \"CopyTags\": true,\n      \"TagsToAdd\": [\n        {\n          \"Key\": \"Project\",\n          \"Value\": \"DR Prep\"\n        }\n      ],\n      \"CreateRule\": {\n        \"Interval\": 1,\n        \"IntervalUnit\": \"HOURS\",\n        \"Times\": [\n          \"08:00\"\n        ]\n      },\n      \"RetainRule\": {\n        \"Count\": 6\n      },\n      \"CrossRegionCopyRules\": [\n        {\n          \"TargetRegion\": \"cn-north-1\",\n          \"Encrypted\": false,\n          \"CopyTags\": true,\n          \"RetainRule\": {\n            \"Interval\": 1,\n            \"IntervalUnit\": \"DAYS\"\n          }\n        }\n      ]\n    }\n  ]\n}\nEOF\n\naws dlm create-lifecycle-policy \\\n    --description \"My second policy\" \\\n    --state ENABLED \\\n    --execution-role-arn ${ROLE_ARN} \\\n    --policy-details file://$$-snapshot.json\n</code></pre></li> </ul>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#dlm-ami-policy-sample","title":"dlm - ami - policy sample","text":"<pre><code>{\n  \"PolicyType\": \"IMAGE_MANAGEMENT\",\n  \"ResourceTypes\": [\n    \"INSTANCE\"\n  ],\n  \"TargetTags\": [\n    {\n      \"Key\": \"Name\",\n      \"Value\": \"test-instance2-zhy\"\n    }\n  ],\n  \"Schedules\": [\n    {\n      \"Name\": \"Schedule 1\",\n      \"CopyTags\": true,\n      \"VariableTags\": [\n        {\n          \"Key\": \"instance-id\",\n          \"Value\": \"$(instance-id)\"\n        }\n      ],\n      \"CreateRule\": {\n        \"Interval\": 1,\n        \"IntervalUnit\": \"HOURS\",\n        \"Times\": [\n          \"02:00\"\n        ]\n      },\n      \"RetainRule\": {\n        \"Count\": 6\n      },\n      \"CrossRegionCopyRules\": [\n        {\n          \"TargetRegion\": \"cn-north-1\",\n          \"Encrypted\": false,\n          \"CopyTags\": true,\n          \"RetainRule\": {\n            \"Interval\": 1,\n            \"IntervalUnit\": \"DAYS\"\n          },\n          \"DeprecateRule\": {\n            \"Interval\": 1,\n            \"IntervalUnit\": \"DAYS\"\n          }\n        }\n      ]\n    }\n  ]\n}\n</code></pre>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#tools","title":"tools","text":"<ul> <li>list nvme volume script</li> <li>list volume script</li> </ul> <p>download ebsnvme-id.zip </p> <ul> <li>doc</li> </ul> right-click &amp; open-in-new-tab <p></p>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ebs-cmd/#refer","title":"refer","text":"<p>https://github.com/awslabs/amazon-ebs-autoscale</p>","tags":["aws/cmd","aws/storage/ebs"]},{"location":"CLI/awscli/ec2-cmd/","title":"ec2 cmd","text":"","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#others","title":"others","text":"<ul> <li>ebs-cmd</li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#get-image-id","title":"get image id","text":"","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#get-all-ubuntu-image-from-here-click-to-launch","title":"get all ubuntu image from here (click to launch)","text":"<ul> <li>https://cloud-images.ubuntu.com/locator/ec2/</li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#option-1-get-al2-ami-id-","title":"option-1-get-AL2-ami-id-","text":"<ul> <li>https://aws.amazon.com/blogs/compute/query-for-the-latest-amazon-linux-ami-ids-using-aws-systems-manager-parameter-store/</li> </ul> <pre><code>export AWS_DEFAULT_REGION=us-west-2\nAMI_ID=$(aws ssm get-parameters \\\n  --names /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 \\\n  --query 'Parameters[0].Value' --output text)\n</code></pre> <p>2022.6.27 us-east-1: ami-065efef2c739d613b us-east-2: ami-07251f912d2a831a3</p>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#option-2","title":"option 2","text":"<pre><code># ubuntu\nexport region=ap-southeast-1\naws ec2 describe-images --region ${region} --owners 099720109477 \\\n  --filters Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64*  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text |sort -k2 -r |column -t\n\n# windows 2012\nexport region=ap-southeast-1\naws ec2 describe-images --region ${region}  --owners 801119661308 \\\n  --filter \"Name=name,Values=Windows_Server-2012-R2_RTM-English-64Bit-Base*\"  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text |sort -k2 -r |column -t\n\n# windows 2012\nexport AWS_DEFAULT_REGION=us-east-2\naws ec2 describe-images --owners 801119661308 \\\n  --filter \"Name=name,Values=Windows_Server-2019-English-Full-Base*\"  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text |sort -k2 -r |column -t\n\n# amzn2\nexport region=ap-southeast-1\naws ec2 describe-images --region ${region} --owners 137112412989 \\\n  --filters Name=name,Values=amzn2-ami-hvm-*2021*gp2*  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text |sort -k2 -r |column -t\n\n# al2023\nexport region=us-west-2\naws ec2 describe-images --region ${region} --owners 137112412989 \\\n  --filters Name=name,Values=al2023-ami-*2024*gp2*  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text |sort -k2 -r |column -t\n\n# centos\nexport AWS_DEFAULT_REGION=us-east-2\naws ec2 describe-images \\\n  --filters Name=name,Values='CentOS Linux 7 x86_64*'  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text \\\n  |sort -k2 -r |column -t\n# --owners 679593333241\n\n\nexport region=cn-northwest-1\nawscn ec2 describe-images --region ${region} --owners 336777782633 \\\n  --filters Name=name,Values='CentOS-7*'  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text \\\n  |sort -k2 -r |column -t\n\n# centos ami\n# https://wiki.centos.org/Cloud/AWS\n# aws --region us-east-1 ec2 describe-images --owners aws-marketplace --filters Name=product-code,Values=cvugziknvmxgqna9noibqnnsy\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#get-cloud9-newest-image","title":"get cloud9 newest image","text":"<pre><code>export AWS_DEFAULT_REGION=us-east-2\naws ec2 describe-images --region ${AWS_DEFAULT_REGION} --owners amazon \\\n  --filters \"Name=name,Values=Cloud9AmazonLinux2-*\" \\\n  --query 'reverse(sort_by(Images, &amp;CreationDate)[].[Name,ImageId])' \\\n  --output text |column -t \n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#create-instance","title":"create instance","text":"<pre><code># IMAGE_ID=ami-026bd3163cafd87ed #ubuntu\nIMAGE_ID=ami-0f511ead81ccde020 #amzn2 ap-southeast-1\nIMAGE_ID=ami-028584814b5504f5b #amzn2 cn-northwest-1\nIMAGE_ID=ami-01b887d5e264569f5 #amzn2 cn-north-1\nregion=cn-north-1\nKEY_NAME=awskey\naws ec2 run-instances --region ${region} --key-name $KEY_NAME \\\n  --image-id $IMAGE_ID --instance-type c5.large --query Instances[*].InstanceId --output text\n\nSUBNET_ID=\naws ec2 run-instances --region ${region} \\\n  --image-id $IMAGE_ID --instance-type c5.large \\\n  --subnet-id ${SUBNET_ID} --query Instances[*].InstanceId --output text\n</code></pre> <pre><code># centos\nIMAGE_ID=ami-07f65177cb990d65b\nAWS_REGION=ap-southeast-1\nKEY_NAME=aws-key\necho '#!/bin/bash\nsudo yum install -y https://s3.'\"$AWS_REGION\"'.amazonaws.com/amazon-ssm-'\"$region\"'/latest/linux_amd64/amazon-ssm-agent.rpm' |tee /tmp/tmp_$$.txt\naws ec2 run-instances --region ${AWS_REGION} --key-name $KEY_NAME \\\n  --image-id $IMAGE_ID --instance-type t2.micro \\\n  --user-data file:///tmp/tmp_$$.txt\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#windows-instance","title":"windows instance","text":"<ul> <li> <p>get image <pre><code>export AWS_DEFAULT_REGION=us-west-2\nWINDOWS_AMI_ID=$(aws ssm get-parameters \\\n    --names \"/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base\" \\\n    --query 'Parameters[].Value' --output text )\n</code></pre></p> </li> <li> <p>create instance  <pre><code># windows 2016 base\nIMAGE_ID=ami-02c88710773712fea\nAWS_REGION=us-east-2\n# INSTANCE_PROFILE_ARN=arn:aws:iam::123456789012:instance-profile/windows-instance\n\n# windows 2016 base in china region\nIMAGE_ID=ami-0cdfdbad775669b71\nAWS_REGION=cn-northwest-1\nINSTANCE_PROFILE_ARN=arn:aws-cn:iam::123456789012:instance-profile/windows-instance\n\nKEY_NAME=awskey\nSTR=$(date +%H%M)\naws ec2 run-instances \\\n    --region ${AWS_REGION} --key-name ${KEY_NAME} \\\n    --image-id ${IMAGE_ID} --instance-type m5.large \\\n    --iam-instance-profile Arn=${INSTANCE_PROFILE_ARN} \\\n    --private-dns-name-options \"HostnameType=ip-name,EnableResourceNameDnsARecord=true,EnableResourceNameDnsAAAARecord=false\"\n    --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=win-'\"${STR}\"'},{Key=os,Value=windows}]' |tee /tmp/instance-$$.1\nINST_ID=$(cat /tmp/instance-$$.1 |jq -r '.Instances[0].InstanceId')\n# private dns name option is important for join domain\n# false/false will run ssm document failed\n# true/false will run ssm document successful\n</code></pre></p> </li> </ul> <p>another example:</p> <ul> <li>../../others/POC-mig-filezilla-to-transfer-family</li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#list-instance","title":"list instance","text":"<pre><code># using Name to filter\naws ec2 describe-instances |jq -r '.Reservations[].Instances[] | select((.Tags[]|select(.Key==\"Name\")|.Value) | match(\".*\") ) | [.InstanceId, (del((.Tags[]|select(.Key!=\"Name\")))|.Tags[]|.Value|tostring)]|@tsv'\n\n# list all instance, name, ips\naws ec2 describe-instances |jq -r '.Reservations[].Instances[] | \n  [.InstanceId, .State.Name, .PrivateIpAddress, .PublicIpAddress, (del((.Tags[]|select(.Key!=\"Name\")))|.Tags[]|.Value|tostring)]|@tsv'\n\n# add sort in output\naws ec2 describe-instances |jq -r '.Reservations[].Instances[] |=sortby(.LaunchTime) | \n  [.InstanceId, .State.Name, .PrivateIpAddress, .PublicIpAddress, (del((.Tags[]|select(.Key!=\"Name\")))|.Tags[]|.Value|tostring)]|@tsv'\n</code></pre> <pre><code># by ssh key name\naws ec2 describe-instances --filters \"Name=key-name,Values=sshkey-aws\"\n\n# by name\naws ec2 describe-instances --filters \"Name=tag:Name,Values=eks*\"\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#install-ssm","title":"install ssm","text":"<pre><code>sudo yum install -y https://s3.ap-northeast-2.amazonaws.com/amazon-ssm-ap-northeast-2/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl status amazon-ssm-agent\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#region-cmd","title":"region cmd","text":"<pre><code>export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)\nexport AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n#export AWS_REGION=ap-northeast-1\nexport AZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text --region $AWS_REGION))\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#get-instance-ids","title":"get instance ids","text":"","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#from-vpc","title":"from vpc","text":"<pre><code>INSTANCE_IDS=($(aws ec2 describe-instances \\\n  --filters \"Name=${TAG},Values=owned\" \"Name=vpc-id,Values=vpc-xxx\"\\\n  |jq -r '.Reservations[].Instances[].InstanceId' ) )\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#filter-tags","title":"filter tags","text":"<pre><code>tag=\naws ec2 describe-instances \\\n  --filters \"Name=tag:Name,Values=cloud9-130\" \\\n  |jq -r '.Reservations[].Instances[].InstanceId' \n</code></pre> <pre><code>aws ec2 describe-volumes \\\n--filters \"Name=tag:kubernetes.io/cluster/ekscluster1,Values=owned\" \\\n--query 'Volumes[].[Tags[?Key==`Name`].Value,State]' --output=text \\\n|xargs -n 2\n\naws ec2 describe-volumes \\\n--filters \"Name=tag:kubernetes.io/cluster/${CLUSTER_NAME},Values=owned\" \\\n--query 'Volumes[*].[`aws ec2 delete-volume --volume-id`, VolumeId,`#`,State,Tags[?Key==`Name`].Value | [0]]' --output=text \n</code></pre> <ul> <li>https://stackoverflow.com/questions/76115278/aws-cli-query-return-on-one-line</li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#associate-instance-profile-to-ec2","title":"associate instance profile to ec2","text":"<ul> <li>../../cloud9/setup-cloud9-for-eks</li> </ul> <pre><code>aws ec2 describe-iam-instance-profile-associations\naws ec2 disassociate-iam-instance-profile\naws ec2 associate-iam-instance-profile\n\nC9_INST_ID=$(curl 169.254.169.254/latest/meta-data/instance-id)\ninstance_profile_arn=$(aws ec2 describe-iam-instance-profile-associations \\\n  --filter Name=instance-id,Values=$C9_INST_ID \\\n  --query IamInstanceProfileAssociations[0].IamInstanceProfile.Arn \\\n  --output text)\n\naws iam get-instance-profile \\\n  --instance-profile-name ${instance_profile_arn##*/}\n\n## add your needed role to it\naws iam add-role-to-instance-profile \\\n  --instance-profile-name ${instance_profile_arn} \n  --role-name ${ROLE_NAME}\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#security-group","title":"security group","text":"<pre><code># ensure you have security group called 'eks-shared-sg'\naws ec2 describe-security-groups  --region $AWS_REGION --filter Name=vpc-id,Values=$VPC_ID --query 'SecurityGroups[*].[GroupName,GroupId]'\n\n# if you have multi eni, do bond sg to instance manually\nexport SG_ID=$(aws ec2 describe-security-groups  --region $AWS_REGION --filter Name=vpc-id,Values=$VPC_ID --query \"SecurityGroups[?GroupName == 'eks-shared-sg'].GroupId\" --output text)\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#func-create-sg-","title":"func-create-sg-","text":"<ul> <li>to create security group, you need VPC_ID (git/git-mkdocs/CLI/awscli/vpc-cmd) func-create-sg.sh<pre><code># depends on: if no VPC_ID, will use default vpc as VPC_ID\n# output variable: SG_ID\n# quick link: https://panlm.github.io/CLI/functions/func-create-sg.sh\nfunction create-sg () {\n    OPTIND=1\n    OPTSTRING=\"h?v:c:p:\"\n    local VPC_ID=\"\"\n    local VPC_CIDR=\"\"\n    local PORTS=()\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            v) VPC_ID=${OPTARG} ;;\n            c) VPC_CIDR=${OPTARG} ;;\n            p) PORTS+=(\"${OPTARG}\") ;;\n            h|\\?) \n                echo \"format: create-sg [-v VPC_ID] [-c VPC_CIDR] [-p PORT1] [-p PORT2]\"\n                echo -e \"\\tsample: create-sg \"\n                echo -e \"\\tsample: create-sg -v vpc-xxx -c 172.31.0.0/16\"\n                echo -e \"\\tsample: create-sg -v vpc-xxx -c 0.0.0.0/0 -p 80 -p 443\"\n                echo \n                echo \"omit -p parameter will open all ports\"\n                echo\n                return 0\n            ;;\n        esac\n    done\n    : ${VPC_CIDR:=0.0.0.0/0}\n\n    if [[ -z ${VPC_ID} ]]; then\n        VPC_ID=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true \\\n        --query 'Vpcs[0].VpcId' --output text)\n    fi\n\n    if [[ -z ${PORTS} ]]; then\n        local PROTOCOL=(all)\n    else\n        local PROTOCOL=(tcp udp)\n    fi\n\n    # create sg\n    SG_NAME=mysg-$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\n    SG_ID=$(aws ec2 create-security-group \\\n        --description ${SG_NAME} \\\n        --group-name ${SG_NAME} \\\n        --vpc-id ${VPC_ID} \\\n        --query 'GroupId' --output text )\n\n    # all traffic allowed\n    for i in ${PORTS[@]:--1}; do\n        for j in ${PROTOCOL[@]} ; do\n            aws ec2 authorize-security-group-ingress \\\n                --group-id ${SG_ID} \\\n                --protocol ${j} \\\n                --port ${i} \\\n                --cidr ${VPC_CIDR}\n        done\n    done\n\n    # echo SG_ID\n    echo \"VPC_ID=\"${VPC_ID}\n    echo \"SG_ID=\"${SG_ID}\n}\n</code></pre> refer: ../functions/func-create-sg.sh </li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#create-sg-allow-itself","title":"create sg allow itself","text":"<ul> <li>refer: ../../data-analytics/using-mwaa-in-private-network</li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#count-vcpu","title":"count vcpu","text":"<pre><code>aws ec2 describe-instances --region us-east-2 \\\n--query Reservations[].Instances[].CpuOptions.[CoreCount,ThreadsPerCore] \\\n--output text \\\n|awk 'BEGIN {sum=0} {line=$1*$2;sum=sum+line} END {print sum} '\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#troubleshooting","title":"troubleshooting","text":"<p>https://linuxconfig.org/how-to-name-label-a-partition-or-volume-on-linux</p> <ul> <li>refer:  linux-cmd</li> <li>refer: e2label</li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#kb","title":"KB","text":"<ul> <li>How do I move my EC2 instance to another subnet, Availability Zone, or VPC? (LINK)<ul> <li>\u4e0d\u80fd detach primary eni</li> <li>\u53ea\u80fd attach \u540c\u53ef\u7528\u533a\u7684 eni \uff08\u5373\u4fbf\u662f\u53e6\u4e00\u4e2a subnet \uff09</li> </ul> </li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#source-destination-check-","title":"source-destination-check-","text":"<ul> <li>disable <code>Change Source / destination check</code> <pre><code>INST_ID=$(curl 169.254.169.254/latest/meta-data/instance-id)\naws ec2 modify-instance-attribute \\\n    --instance-id=${INST_ID} --source-dest-check\n</code></pre></li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#create-key-","title":"create-key-","text":"<ul> <li>import-aws-key import-aws-key.sh<pre><code># quick link: https://panlm.github.io/CLI/functions/import-aws-key.sh\n\n# import aws-key \nKEY_NAME=aws-key\necho -e '=cYA2KoJhl3/OnF8mIFEKS97ANbnXp2B+5gfpmhy9VE+xgLC3OirUsa1rG0wkDpPkywJiNBfylYl/CnF0UiVOOTL26NzAVT7ESKRvnYUT8+KI8EfKS5+8kJ4lpLcIA64S/HGAAGM3YMPcltivGAwXeqIQTEEBtDXoxrOejh10fiQNnsBShMJZaQFFBi7AfLgk1JRuELhteO7G/zgnw/Sx7eVHiPJjdfZmC2aBH0yyQPtfJ+15B5gu3TvrSkclCNQfT3oLE1jml72jSxhQGP7VKm99bpqelDoZcWEMq+iYjZWRHMUfILx7X1dftPkcNaDAahI58TyyX9tr0Etwclvn1WXs4UCfe5UewWZWr23noWAJGB0g4K1tfohOZ3DKwMl8IwsBPvd3YgTcqE6ulZLGyLkMTpJ/Pzn1ldc0rgwKC1aRXIzspJnGi3GgL+w0R5sjdZpdhrWqg7hFbMQ1Hv0QaxzgaQc/GXRqjCQCbUleGITxhz5Fge0xKhIFLI0MWY7GDQgBAAABAQADAAAAE2cy1CazN3BAAAA asr-hss\\c' |rev |base64 -w 0 &gt;/tmp/my-key-pair.pub\naws ec2 import-key-pair --key-name ${KEY_NAME} --public-key-material file:///tmp/my-key-pair.pub\n</code></pre></li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#create-instance-by-chatgpt","title":"create instance by chatgpt","text":"<pre><code>KEY_NAME=aws-key\nAMI_ID=$(aws ec2 describe-images \\\n    --region us-east-2 \\\n    --filters \"Name=name,Values=Windows_Server-2019-English-Full-Base-*\" \\\n              \"Name=architecture,Values=x86_64\" \\\n              \"Name=root-device-type,Values=ebs\" \\\n              \"Name=virtualization-type,Values=hvm\" \\\n    --query \"reverse(sort_by(Images, &amp;CreationDate))[0].ImageId\" \\\n    --output text)\n\naws ec2 run-instances \\\n--image-id ${AMI_ID} \\\n--instance-type t3.medium \\\n--key-name ${KEY_NAME} \\\n--subnet-id $(aws ec2 describe-subnets --filters \"Name=default-for-az,Values=true\" \"Name=vpc-id,Values=$(aws ec2 describe-vpcs --filters \"Name=isDefault,Values=true\" --query \"Vpcs[0].VpcId\" --output text)\" --query \"Subnets[0].SubnetId\" --output text) \\\n--iam-instance-profile Name=EC2DomainJoin-Instance-Profile \\\n--user-data '&lt;powershell&gt;\nImport-Module \"C:\\Program Files\\Amazon\\Ec2ConfigService\\Scripts\\InitializeInstance.ps1\"\nInitialize-EC2Instance -Schedule -DomainName \"corp1.aws.panlm.xyz\" -DomainUserName \"admin\" -DomainPassword \"password\"\n&lt;/powershell&gt;' \\\n--associate-public-ip-address \\\n--tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyInstance4}]' \\\n--region us-east-2\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#instance-connect-","title":"instance-connect-","text":"","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#ssh-connect","title":"ssh connect","text":"<ul> <li> <p>from public ip  <pre><code>aws ec2-instance-connect ssh \\\n    --instance-id i-xxx\n</code></pre></p> </li> <li> <p>from private ip (need to create instance connect endpoint first) <pre><code>aws ec2-instance-connect ssh \\\n    --instance-id i-xxx \\\n    --instance-ip 172.31.7.81  \\\n    --connection-type eice\n</code></pre></p> </li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#send-ssh-public-key","title":"send ssh public key","text":"<pre><code>aws ec2-instance-connect send-ssh-public-key \\\n--region us-east-2 \\\n--ssh-public-key file://out.pub \\\n--instance-id i-xxx \\\n--instance-os-user ec2-user\n</code></pre>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ec2-cmd/#transfer-ami-between-region","title":"transfer ami between region","text":"<p>https://www.amazonaws.cn/en/new/2021/amazon-ec2-allows-copy-amazon-machine-images-across-amazon-web-services-china-regions-other-regions/ https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html#copy-to-partition</p> <ul> <li> <p>image to s3 <pre><code>BUCKET_NAME=test-image-1234\nAMI_ID=ami-09eexxx443\naws ec2 create-store-image-task \\\n  --image-id ${AMI_ID} \\\n  --bucket ${BUCKET_NAME}\n</code></pre></p> </li> <li> <p>describe progress <pre><code>aws ec2 describe-store-image-tasks\n</code></pre></p> </li> <li> <p>s3 to image <pre><code>BUCKET_FILE=${AMI_ID}.bin\naws ec2 create-restore-image-task \\\n    --object-key ${BUCKET_FILE} \\\n    --bucket ${BUCKET_NAME} \\\n    --name \"image-test-restore\"\n\n# check process from ami web ui\n</code></pre></p> </li> </ul>","tags":["aws/compute/ec2","aws/cmd"]},{"location":"CLI/awscli/ecr-cmd/","title":"ecr-cmd","text":"<ul> <li> kms </li> <li> backup </li> <li> replication</li> </ul>","tags":["aws/container/ecr","aws/cmd"]},{"location":"CLI/awscli/ecr-cmd/#ecr-login-","title":"ecr-login-","text":"<pre><code>export AWS_DEFAULT_REGION=us-east-2\nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\nECR_URL=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\nAWS_CLI_VERSION=$(aws --version 2&gt;&amp;1 | cut -d/ -f2 | cut -d. -f1)\n\necr_login() {\n    if [ $AWS_CLI_VERSION -gt 1 ]; then\n        aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | \\\n            docker login --username AWS --password-stdin ${ECR_URL}\n    else\n        $(aws ecr get-login --no-include-email)\n    fi\n}\necr_login\n</code></pre>","tags":["aws/container/ecr","aws/cmd"]},{"location":"CLI/awscli/ecr-cmd/#create-repo-","title":"create-repo-","text":"<pre><code>REPO_NAME=lambda-promtail\naws ecr create-repository --repository-name ${REPO_NAME}\nREPO_URI=$(aws ecr describe-repositories --repository-names ${REPO_NAME} --query repositories[0].repositoryUri --output text)\n</code></pre> <ul> <li>refer: ../linux/docker-cmd</li> </ul>","tags":["aws/container/ecr","aws/cmd"]},{"location":"CLI/awscli/ecr-cmd/#create-ecr-repo-nginx","title":"create ecr repo nginx","text":"<pre><code>export AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document |jq -r '.region') \nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text) \nECR_URL=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\n\naws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_URL}\n\naws ecr create-repository --repository-name nginx\n\ndocker tag nginx:latest ${ECR_URL}/nginx:latest\n</code></pre>","tags":["aws/container/ecr","aws/cmd"]},{"location":"CLI/awscli/ecr-cmd/#multi-architecture-image-","title":"multi-architecture-image-","text":"<pre><code>export AWS_DEFAULT_REGION=us-west-2\nACCOUNT_ID=123456789012\nREPO_NAME=brconnector\n\naws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\n\nfor i in arm64 amd64 ; do\n    docker pull --platform=linux/${i} cloudbeer/sample-connector-for-bedrock-lambda\n    docker tag cloudbeer/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:${i}\n    docker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:${i}\ndone\n\n\ndocker manifest create \\\n    ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:latest \\\n    --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:arm64 \\\n    --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:amd64\ndocker manifest annotate \\\n    ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:latest \\\n    ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:arm64 \\\n    --os linux --arch arm64\ndocker manifest annotate \\\n    ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:latest \\\n    ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:amd64 \\\n    --os linux --arch amd64\ndocker manifest push \\\n    ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPO_NAME}:latest\n</code></pre>","tags":["aws/container/ecr","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/","title":"ecs-cmd","text":"","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#get-ami-list","title":"get ami list","text":"","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#amazon-linux-2","title":"amazon linux 2","text":"<ul> <li> <p>get full list <pre><code>aws ssm get-parameters-by-path \\\n    --path /aws/service/ecs/optimized-ami/amazon-linux-2 \\\n    --query 'Parameters[?contains(ARN, `arn:aws:ssm:us-east-2::parameter/aws/service/ecs/optimized-ami/amazon-linux-2/ami-`)==`true`]' \\\n    |jq -r 'sort_by(.LastModifiedDate)' \n</code></pre></p> </li> <li> <p>get ecs recommended optimized ami <pre><code>ECS_AMI=$(aws ssm get-parameters --names /aws/service/ecs/optimized-ami/amazon-linux-2/recommended |jq -r '.Parameters[0].Value' |jq -r '.image_id')\n</code></pre></p> </li> <li> <p>get last 2 AMI ID <pre><code>export AWS_DEFAULT_REGION=us-east-1\n\nAMI_IDS=($(\naws ssm get-parameters-by-path \\\n    --path /aws/service/ecs/optimized-ami/amazon-linux-2 \\\n    --query 'sort_by(Parameters,&amp;LastModifiedDate)[?contains(ARN, `arn:aws:ssm:'\"${AWS_DEFAULT_REGION}\"'::parameter/aws/service/ecs/optimized-ami/amazon-linux-2/ami-`)==`true`]' \\\n    |jq -r '.[].Value' |jq -r '.image_id' \\\n    |tail -n 2\n))\n\nOLD_AMI_ID=${AMI_IDS[0]}\nNEW_AMI_ID=${AMI_IDS[1]}\necho ${AMI_IDS[@]}\n</code></pre></p> </li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#amazon-linux-2023","title":"amazon linux 2023","text":"<pre><code>AMI_IDS=($(\naws ssm get-parameters-by-path \\\n    --path /aws/service/ecs/optimized-ami/amazon-linux-2023 \\\n    --query 'sort_by(Parameters,&amp;LastModifiedDate)[?contains(ARN, `arn:aws:ssm:'\"${AWS_DEFAULT_REGION}\"'::parameter/aws/service/ecs/optimized-ami/amazon-linux-2023/ami-`)==`true`]' \\\n    |jq -r '.[].Value' |jq -r '.image_id' \\\n    |tail -n 2\n))\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#windows-2019","title":"windows 2019","text":"<pre><code>export AWS_DEFAULT_REGION=us-east-1\nexport AMI_WIN2019_NAME=\"Windows_Server-2019-English-Full-ECS_Optimized\"\n\nAMI_IDS=($(\naws ec2 describe-images \\\n    --filter \"Name=name,Values=${AMI_WIN2019_NAME}*\" \\\n    --query  'Images[*].[ImageId,CreationDate,Name]' --output text |grep ECS_Optimized |sort -k2 |tail -n 2 |awk '{print $1}'\n))\n\nOLD_AMI_ID=${AMI_IDS[0]}\nNEW_AMI_ID=${AMI_IDS[1]}\necho ${AMI_IDS[@]}\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#create-ecs-cluster-","title":"create-ecs-cluster-","text":"","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#create-launch-template-v1","title":"create launch template v1","text":"<pre><code>ECS_CLUSTER=myecs1\nVPC_ID=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true --query 'Vpcs[0].VpcId' --output text)\nexport AWS_PAGER=\"\"\nexport AWS_DEFAULT_REGION=us-east-1\n</code></pre> <ul> <li> <p>get default security group (func-create-sg.sh) <pre><code>create-sg -v ${VPC_ID} -c 0.0.0.0/0 # call my function\necho ${SG_ID}\n</code></pre></p> </li> <li> <p>execute function to create launch template (auto-scaling-cmd) <pre><code>echo ${SG_ID}\necho ${OLD_AMI_ID}\ncreate-launch-template -s ${SG_ID} -a ${OLD_AMI_ID} # call my function\necho ${LAUNCH_TEMPLATE_ID}\n</code></pre></p> </li> <li> <p>execute function to create ec2 admin role (git/git-mkdocs/CLI/awscli/iam-cmd) <pre><code>ec2-admin-role-create # call my function\necho ${INSTANCE_PROFILE_ARN}\n</code></pre></p> </li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#add-user-data-to-launch-template-and-make-v2-as-default","title":"add user data to launch template and make v2 as default","text":"","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#linux-node","title":"linux node","text":"<pre><code>TMP=$(mktemp --suffix .UserData)\nenvsubst &gt;${TMP} &lt;&lt;-EOF\n#!/bin/bash\necho ECS_CLUSTER=${ECS_CLUSTER} &gt;&gt; /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true &gt;&gt; /etc/ecs/ecs.config\nEOF\nB64STRING=$(cat ${TMP}|base64 -w 0)\naws ec2 create-launch-template-version --launch-template-id ${LAUNCH_TEMPLATE_ID} \\\n    --version-description ${LAUNCH_TEMPLATE_ID}-$(TZ=CST-8 date +%H%M) \\\n    --source-version 1 \\\n    --launch-template-data '{\"UserData\":\"'\"${B64STRING}\"'\",\"IamInstanceProfile\":{\"Arn\":\"'\"${INSTANCE_PROFILE_ARN}\"'\"}}' |tee ${TMP}.out\n\naws ec2 modify-launch-template --launch-template-id ${LAUNCH_TEMPLATE_ID} --default-version \"2\"\n</code></pre> <p>if you use gMSA on linux, add following lines to beginning of user data <pre><code>#!/bin/bash\necho \"ECS_GMSA_SUPPORTED=true\" &gt;&gt; /etc/ecs/ecs.config\necho \"sleeping for 80 secs to avoid RPM lock error...\"\nsleep 80s\ndnf install dotnet realmd oddjob oddjob-mkhomedir sssd adcli krb5-workstation samba-common-tools credentials-fetcher -y\nsystemctl enable credentials-fetcher\nsystemctl start credentials-fetcher\n</code></pre></p>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#windows-node","title":"windows node","text":"<pre><code>TMP=$(mktemp --suffix .UserData)\nenvsubst &gt;${TMP} &lt;&lt;-EOF\nContent-Type: multipart/mixed; boundary=\"67fa5624dc94e98fee4093fbc2d9d1de2825990f57aa9b139aed1acf3b3a\"\nMIME-Version: 1.0\n\n--67fa5624dc94e98fee4093fbc2d9d1de2825990f57aa9b139aed1acf3b3a\nContent-Type: text/text/plain; charset=\"utf-8\"\nMime-Version: 1.0\n\n&lt;powershell&gt;\nImport-Module ECSTools;\n[Environment]::SetEnvironmentVariable(\"ECS_CLUSTER\", \"${ECS_CLUSTER}\", \"Machine\");\n[Environment]::SetEnvironmentVariable(\"ECS_GMSA_SUPPORTED\", \"true\", \"Machine\")\n[Environment]::SetEnvironmentVariable(\"ECS_ENABLE_AWSLOGS_EXECUTIONROLE_OVERRIDE\", \"true\", \"Machine\");\n[Environment]::SetEnvironmentVariable(\"ECS_ENABLE_TASK_ENI\", \"true\", \"Machine\");\n[Environment]::SetEnvironmentVariable(\"ECS_AVAILABLE_LOGGING_DRIVERS\", '[\"json-file\",\"awslogs\"]', \"Machine\");\n[Environment]::SetEnvironmentVariable(\"ECS_ENABLE_TASK_IAM_ROLE\", \"true\", \"Machine\");\nInstall-PackageProvider -Name NuGet -Force;\nInitialize-ECSAgent -Cluster '${ECS_CLUSTER}' -EnableTaskIAMRole -AwsvpcBlockIMDS\n&lt;/powershell&gt;\n\n--67fa5624dc94e98fee4093fbc2d9d1de2825990f57aa9b139aed1acf3b3a\nContent-Type: text/text/x-shellscript; charset=\"utf-8\"\nMime-Version: 1.0\n\n\n#!/bin/bash\necho ECS_CLUSTER=${ECS_CLUSTER} &gt;&gt; /etc/ecs/ecs.config\necho ECS_GMSA_SUPPORTED=true &gt;&gt; /etc/ecs/ecs.config\n\n--67fa5624dc94e98fee4093fbc2d9d1de2825990f57aa9b139aed1acf3b3a--\nEOF\n\nB64STRING=$(cat ${TMP}|base64 -w 0)\naws ec2 create-launch-template-version \\\n    --launch-template-id ${LAUNCH_TEMPLATE_ID} \\\n    --version-description ${LAUNCH_TEMPLATE_ID}-$(TZ=CST-8 date +%H%M) \\\n    --source-version 1 \\\n    --launch-template-data '{\"UserData\":\"'\"${B64STRING}\"'\",\"IamInstanceProfile\":{\"Arn\":\"'\"${INSTANCE_PROFILE_ARN}\"'\"}}' |tee ${TMP}.out\n\naws ec2 modify-launch-template --launch-template-id ${LAUNCH_TEMPLATE_ID} --default-version \"2\"\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#create-auto-scaling-group","title":"create auto scaling group","text":"<ul> <li>execute function to create auto scaling group (auto-scaling-cmd)</li> <li>ASG\u2019s desire number is zero <pre><code>create-auto-scaling-group -l ${LAUNCH_TEMPLATE_ID} # call my function\necho ${ASG_ARN}\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#create-cluster","title":"create cluster","text":"<ul> <li>create ecs cluster (before create asg if desire number is greater than 0) <pre><code>echo ${ECS_CLUSTER}\n\n# this command will failed if you already have service linked role\naws iam create-service-linked-role --aws-service-name ecs.amazonaws.com\n\naws ecs create-cluster --cluster-name ${ECS_CLUSTER}\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#create-capacity-provider","title":"create capacity provider","text":"<ul> <li>capacity provider (if desire number in asg is greater than 0, than no CP needed) <pre><code>ECS_CAP_PROVIDER=mycp1\naws ecs create-capacity-provider \\\n    --name \"${ECS_CAP_PROVIDER}\" \\\n    --auto-scaling-group-provider \"autoScalingGroupArn=${ASG_ARN},managedScaling={status=ENABLED,targetCapacity=100},managedTerminationProtection=ENABLED\"\n\naws ecs put-cluster-capacity-providers \\\n    --cluster ${ECS_CLUSTER} \\\n    --capacity-providers ${ECS_CAP_PROVIDER} \\\n    --default-capacity-provider-strategy capacityProvider=${ECS_CAP_PROVIDER},weight=1\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#change-asg-desire-number-to-non-zero","title":"change asg desire number to non-zero","text":"<ul> <li>if you do not create CP, change ASG desire number to 1, EC2 will be spun up and add to ECS cluster</li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#get-container-instances","title":"get container instances","text":"<pre><code>CONTAINER_INST_ARN=($(aws ecs list-container-instances --cluster ${ECS_CLUSTER} \\\n    --query 'containerInstanceArns[]' --output text |xargs ))\nCONTAINER_INST=($(\n    for i in ${CONTAINER_INST_ARN[@]} ; do\n        echo ${i##*/}\n    done\n))\necho ${CONTAINER_INST[@]}\naws ecs describe-container-instances --cluster ${ECS_CLUSTER} \\\n    --container-instances ${CONTAINER_INST[@]} |tee /tmp/$$-instance\ncat /tmp/$$-instance |jq -r '.containerInstances[] | [.ec2InstanceId, .versionInfo.agentVersion]|@tsv' \n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#sample-for-ami-upgrade-replace","title":"sample for ami upgrade / replace","text":"","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#register-task-definition","title":"register task definition","text":"<pre><code>TASK_NAME=task2-$(TZ=EAT-8 date +%Y%m%d-%H%M)\n\nenvsubst &gt;task-definition.json &lt;&lt;-EOF\n{\n  \"containerDefinitions\": [\n    {\n      \"name\": \"nginx\",\n      \"image\": \"nginx\",\n      \"portMappings\": [\n        {\n          \"containerPort\": 80,\n          \"hostPort\": 80,\n          \"protocol\": \"tcp\",\n          \"name\": \"nginx-80-tcp\",\n          \"appProtocol\": \"http\"\n        }\n      ],\n      \"essential\": true\n    }\n  ],\n  \"family\": \"${TASK_NAME}\",\n  \"networkMode\": \"awsvpc\",\n  \"requiresCompatibilities\": [\n    \"EC2\"\n  ],\n  \"cpu\": \"1024\",\n  \"memory\": \"3072\"\n}\nEOF\n\naws ecs register-task-definition \\\n    --cli-input-json file://./task-definition.json\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#create-service","title":"create service","text":"<ul> <li>create alb and target group first (elb-cmd) <pre><code>create-alb-and-tg\necho ${TG80_ARN}\n</code></pre></li> <li>create service <pre><code>echo ${ECS_CLUSTER}\necho ${TG80_ARN}\necho ${TASK_NAME}\necho ${VPC_ID}\nSERVICE_NAME=${TASK_NAME}-svc\nDEFAULT_SG_ID=$(aws ec2 describe-security-groups \\\n    --filter Name=vpc-id,Values=${VPC_ID} \\\n    --query \"SecurityGroups[?GroupName == 'default'].GroupId\" \\\n    --output text)\nALL_SUBNET_ID=$(aws ec2 describe-subnets \\\n    --filter \"Name=vpc-id,Values=${VPC_ID}\" \\\n    --query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId')\n\nenvsubst &gt;svc-definition.json &lt;&lt;-EOF\n{\n    \"serviceName\": \"${SERVICE_NAME}\",\n    \"taskDefinition\": \"${TASK_NAME}\",\n    \"loadBalancers\": [\n        {\n            \"targetGroupArn\": \"${TG80_ARN}\",\n            \"containerName\": \"nginx\",\n            \"containerPort\": 80\n        }\n    ],\n    \"networkConfiguration\": {\n        \"awsvpcConfiguration\": {\n            \"subnets\": ${ALL_SUBNET_ID},\n            \"securityGroups\": [\n                \"${DEFAULT_SG_ID}\"\n            ],\n            \"assignPublicIp\": \"DISABLED\"\n        }\n    }, \n    \"desiredCount\": 3\n}\nEOF\n\naws ecs create-service \\\n    --cluster ${ECS_CLUSTER} \\\n    --service-name ${SERVICE_NAME} \\\n    --cli-input-json file://svc-definition.json\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#update-launch-template-","title":"update-launch-template-","text":"<ul> <li>update launch template based on default version <pre><code>echo ${NEW_AMI_ID}\n\nLT_DEF_VER=$(aws ec2 describe-launch-templates --launch-template-ids  ${LAUNCH_TEMPLATE_ID} --query 'LaunchTemplates[0].DefaultVersionNumber' --output text)\n\naws ec2 create-launch-template-version --launch-template-id ${LAUNCH_TEMPLATE_ID} \\\n    --version-description ${LAUNCH_TEMPLATE_ID}-$(TZ=CST-8 date +%H%M) \\\n    --source-version ${LT_DEF_VER} \\\n    --launch-template-data '{\"ImageId\":\"'\"${NEW_AMI_ID}\"'\"}' |tee /tmp/$$-new-lt\n\nLT_VER=$(cat /tmp/$$-new-lt |jq -r '.LaunchTemplateVersion.VersionNumber')\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#update-asg-","title":"update-asg-","text":"<ul> <li>update asg using new template version <pre><code>aws autoscaling update-auto-scaling-group \\\n    --auto-scaling-group-name ${ASG_ARN##*/} \\\n    --launch-template LaunchTemplateId=${LAUNCH_TEMPLATE_ID},Version=${LT_VER}\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#get-task-definition","title":"get task definition","text":"<pre><code>ECS_SVC_NAME=${SERVICE_NAME}\nECS_TASK_DEF_ARN=$(aws ecs describe-services --cluster ${ECS_CLUSTER} \\\n--services ${ECS_SVC_NAME} \\\n--query \"services[].deployments[].[\"taskDefinition\"]\" --output text)\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#modify-task-definition-","title":"modify-task-definition-","text":"<ul> <li>update task definition <pre><code># ami-0b7778d86d8789cff / ami-0f896121197c465b6\necho ${NEW_AMI_ID}\naws ecs describe-task-definition --task-definition ${ECS_TASK_DEF_ARN} --query taskDefinition | \\\njq '. + {placementConstraints: [{\"expression\": \"attribute:ecs.ami-id == '\"${NEW_AMI_ID}\"'\", \"type\": \"memberOf\"}]}' | \\\njq 'del(.status)'| jq 'del(.revision)' | jq 'del(.requiresAttributes)' | \\\njq '. + {containerDefinitions:[.containerDefinitions[] + {\"memory\":256, \"memoryReservation\": 128}]}'| \\\njq 'del(.compatibilities)' | jq 'del(.taskDefinitionArn)' | jq 'del(.registeredAt)' | jq 'del(.registeredBy)' &gt; new-task-def.json\n</code></pre></li> <li>register new one <pre><code>aws ecs register-task-definition \\\n    --cli-input-json file://./new-task-def.json |tee /tmp/$$-new-task-def\nTASK_DEF_ARN=$(cat /tmp/$$-new-task-def |jq -r '.taskDefinition.taskDefinitionArn')\n</code></pre></li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#update-service","title":"update service","text":"<pre><code>aws ecs update-service --cluster ${ECS_CLUSTER} --service ${SERVICE_NAME} --task-definition ${TASK_DEF_ARN##*/}\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#func-ecsexec-to-test","title":"func ecsexec to test","text":"<pre><code>ECS_CLUSTER=CapacityProviderDemo\nfunction ecsexec {\naws ecs execute-command \\\n    --cluster ${ECS_CLUSTER} --task $1 \\\n    --command /bin/sh --interactive \\\n    --command \"curl localhost:5000\" \\\n    --region us-east-2 \n}\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#sample-for-domain-less-windows","title":"sample for domain-less windows","text":"<pre><code>envsubst &gt;${TMP}.td.3 &lt;&lt;-'EOF'\n{\n  \"family\": \"windows-gmsa-domainless-task\",\n  \"containerDefinitions\": [\n    {\n      \"name\": \"windows_sample_app\",\n      \"image\": \"111111111111.dkr.ecr.us-east-1.amazonaws.com/amazon-ecs-gmsa-linux/web-site\",\n      \"cpu\": 1024,\n      \"memory\": 1024,\n      \"essential\": true,\n      \"credentialSpecs\": [\n        \"credentialspecdomainless:arn:aws:ssm:us-east-1:111111111111:parameter/amazon-ecs-gmsa-linux/credspec\"\n      ],\n      \"entryPoint\": [\n        \"powershell\",\n        \"-Command\"\n      ],\n      \"command\": [\n        \"New-Item -Path C:\\\\inetpub\\\\wwwroot\\\\index.html -ItemType file -Value '&lt;html&gt; &lt;head&gt; &lt;title&gt;Amazon ECS Sample App&lt;/title&gt; &lt;style&gt;body {margin-top: 40px; background-color: #333;} &lt;/style&gt; &lt;/head&gt;&lt;body&gt; &lt;div style=color:white;text-align:center&gt; &lt;h1&gt;Amazon ECS Sample App&lt;/h1&gt; &lt;h2&gt;Congratulations!&lt;/h2&gt; &lt;p&gt;Your application is now running on a container in Amazon ECS.&lt;/p&gt;' -Force ; C:\\\\ServiceMonitor.exe w3svc\"\n      ],\n      \"portMappings\": [\n        {\n          \"protocol\": \"tcp\",\n          \"containerPort\": 80,\n          \"hostPort\": 8080\n        }\n      ]\n    }\n  ],\n  \"taskRoleArn\": \"arn:aws:iam::111111111111:role/ecs-exec-demo-task-role\",\n  \"executionRoleArn\": \"arn:aws:iam::111111111111:role/ecs-exec-demo-task-execution-role\"\n}\nEOF\n\naws ecs register-task-definition \\\n    --cli-input-json file://${TMP}.td.3\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#others","title":"others","text":"","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#get-windows-ecs-ami-list-","title":"get-windows-ecs-ami-list-","text":"<pre><code>aws ssm get-parameters-by-path \\\n    --path /aws/service/ami-windows-latest \\\n    --query 'Parameters[].Name' |grep 2019 |grep ECS\n\naws ssm get-parameter \\\n    --name \"/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-ECS_Optimized\"\n</code></pre>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#sample","title":"sample","text":"<ul> <li>create asg &amp; launch template first<ul> <li>auto-scaling-cmd <pre><code>ECS_CLUSTER_NAME=MyCluster\naws ecs create-cluster \\\n    --cluster-name ${ECS_CLUSTER_NAME}\n\nECS_CAP_PROVIDER=MyCapacityProvider\naws ecs create-capacity-provider \\\n    --name \"${ECS_CAP_PROVIDER}\" \\\n    --auto-scaling-group-provider \"autoScalingGroupArn=${ASG_ARN},managedScaling={status=ENABLED,targetCapacity=10}\"\n\naws ecs put-cluster-capacity-providers \\\n    --cluster ${ECS_CLUSTER_NAME} \\\n    --capacity-providers ${ECS_CAP_PROVIDER} \\\n    --default-capacity-provider-strategy capacityProvider=${ECS_CAP_PROVIDER},weight=1\n</code></pre></li> </ul> </li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/ecs-cmd/#ecsctl","title":"ecsctl","text":"<ul> <li>ecsctl</li> </ul>","tags":["aws/container/ecs","aws/cmd"]},{"location":"CLI/awscli/efs-cmd/","title":"efs-cmd","text":"","tags":["aws/cmd","aws/storage/efs"]},{"location":"CLI/awscli/efs-cmd/#create-efs-","title":"create-efs-","text":"<ul> <li>\u5728\u9ed8\u8ba4 vpc \u4e2d\u521b\u5efa efs <pre><code>CLUSTER_NAME=${CLUSTER_NAME:-eks0630}\nAWS_REGION=${AWS_REGION:-us-east-2}\n\nVPC_ID=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true --query 'Vpcs[0].VpcId' --output text)\nVPC_CIDR=$(aws ec2 describe-vpcs --vpc-ids ${VPC_ID} \\\n  --query \"Vpcs[].CidrBlock\"  --region ${AWS_REGION} --output text )\n\n# create security group\nSG_ID=$(aws ec2 create-security-group --description ${CLUSTER_NAME}-efs-eks-sg \\\n  --group-name efs-sg-$RANDOM --vpc-id ${VPC_ID} |jq -r '.GroupId' )\n# allow tcp 2049 (nfs v4)\naws ec2 authorize-security-group-ingress --group-id ${SG_ID}  --protocol tcp --port 2049 --cidr ${VPC_CIDR}\n\n# create efs\nFILESYSTEM_ID=$(aws efs create-file-system \\\n  --creation-token ${CLUSTER_NAME} \\\n  --region ${AWS_REGION} |jq -r '.FileSystemId' )\necho ${FILESYSTEM_ID}\n\nwhile true ; do\naws efs describe-file-systems \\\n--file-system-id ${FILESYSTEM_ID} \\\n--query 'FileSystems[].LifeCycleState' \\\n--output text |grep -q available\nif [[ $? -eq 0 ]]; then\n  break\nelse\n  echo \"wait...\"\n  sleep 10\nfi  \ndone\n\n# create mount target\nPUBLIC_SUBNETS=($(aws ec2 describe-subnets \\\n--filter \"Name=vpc-id,Values=$VPC_ID\" \\\n--query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n--output text))\n\nfor i in ${PUBLIC_SUBNETS[@]} ; do\n  echo \"creating mount target in: \" $i\n  aws efs create-mount-target --file-system-id ${FILESYSTEM_ID} \\\n    --subnet-id ${i} --security-group ${SG_ID}\ndone\n</code></pre></li> </ul> <p>another example: ../../EKS/addons/efs-csi </p>","tags":["aws/cmd","aws/storage/efs"]},{"location":"CLI/awscli/efs-cmd/#refer","title":"refer","text":"<ul> <li>https://repost.aws/knowledge-center/efs-mount-automount-unmount-steps</li> </ul>","tags":["aws/cmd","aws/storage/efs"]},{"location":"CLI/awscli/eks-cmd/","title":"eks-cmd","text":"","tags":["aws/container/eks"]},{"location":"CLI/awscli/eks-cmd/#network","title":"network","text":"","tags":["aws/container/eks"]},{"location":"CLI/awscli/eks-cmd/#check-network","title":"check network","text":"<pre><code>aws eks describe-cluster --name ekscluster1 --query cluster.resourcesVpcConfig\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/awscli/eks-cmd/#check-cluster-security-group","title":"check cluster security group","text":"<pre><code>aws eks describe-cluster --name ekscluster1 --query cluster.resourcesVpcConfig.clusterSecurityGroupId\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/awscli/eks-cmd/#addons","title":"addons","text":"","tags":["aws/container/eks"]},{"location":"CLI/awscli/eks-cmd/#check-default-version","title":"check default version","text":"<pre><code>aws eks describe-addon-versions \\\n    --addon-name amazon-cloudwatch-observability \\\n    --kubernetes-version \"1.29\" \\\n    --query 'addons[].addonVersions[?compatibilities[?defaultVersion==`true`]].addonVersion'\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/awscli/eks-cmd/#install-addons","title":"install addons","text":"<ul> <li>eks-container-insights</li> </ul>","tags":["aws/container/eks"]},{"location":"CLI/awscli/elasticache-redis-cmd/","title":"elasticache-redis-cmd","text":"","tags":["aws/database/elasticache/redis","aws/cmd"]},{"location":"CLI/awscli/elasticache-redis-cmd/#create-62-in-default-vpc-cluster-mode-disabled","title":"create 6.2 in default vpc - cluster mode disabled","text":"<pre><code># aws elasticache create-cache-parameter-group \\\n#    --cache-parameter-group-family \"redis6.x\" \\\n#    --cache-parameter-group-name \"myparamgrp6\" \\\n#    --description \"myparamgrp6\"\n\naws elasticache create-cache-cluster \\\n    --cache-cluster-id my-cluster2 \\\n    --cache-node-type cache.r5.large \\\n    --engine redis \\\n    --engine-version 6.2 \\\n    --num-cache-nodes 1 \\\n    --cache-parameter-group default.redis6.x \n</code></pre>","tags":["aws/database/elasticache/redis","aws/cmd"]},{"location":"CLI/awscli/elasticache-redis-cmd/#create-62-cluster-mode-enabled","title":"create 6.2 - cluster mode enabled","text":"<pre><code>aws elasticache create-replication-group \\\n    --replication-group-id \"mygroup\"-$(date +%Y%m%d-%H%M) \\\n    --replication-group-description \"my group\" \\\n    --engine \"redis\" \\\n    --engine-version 6.2 \\\n    --num-node-groups 3 \\\n    --cache-node-type \"cache.m5.large\"\n</code></pre>","tags":["aws/database/elasticache/redis","aws/cmd"]},{"location":"CLI/awscli/elasticache-redis-cmd/#connect","title":"connect","text":"<ul> <li>memorydb-redis-performance-testing</li> </ul>","tags":["aws/database/elasticache/redis","aws/cmd"]},{"location":"CLI/awscli/elasticache-redis-cmd/#install-redis-cli","title":"install redis-cli","text":"<ul> <li>http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/GettingStarted.ConnectToCacheNode.Redis.html <pre><code>sudo yum install gcc # This may return an \"already installed\" message. That's OK.\nsudo yum groupinstall -y 'Development Tools'\n\nwget http://download.redis.io/redis-stable.tar.gz &amp;&amp; tar xvzf redis-stable.tar.gz\ncd redis-stable\nmake BUILD_TLS=yes MALLOC=libc\n</code></pre></li> </ul>","tags":["aws/database/elasticache/redis","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/","title":"elb-cmd","text":"","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#nlb-and-target-group","title":"nlb and target group","text":"<p>\u521b\u5efanlb\u548ctg\uff0c\u7aef\u53e3\u76d1\u542c80</p> <pre><code>uniqstr=$(date +%Y%m%d%H%M)\nport1=80\nexport AWS_DEFAULT_REGION=us-east-2\n#VPC_ID=vpc-000a5xxxx5a67b03b\nVPC_ID=$(aws ec2 describe-vpcs \\\n--filter Name=is-default,Values=true \\\n--query 'Vpcs[0].VpcId' --output text \\\n--region ${AWS_DEFAULT_REGION})\n\nFIRST_SUBNET=$(aws ec2 describe-subnets \\\n--filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n--query \"Subnets[?AvailabilityZone=='\"${AWS_DEFAULT_REGION}a\"'].SubnetId\" \\\n--output text \\\n--region ${AWS_DEFAULT_REGION})\n\naws elbv2 create-load-balancer \\\n--name nlb1-${uniqstr} \\\n--type network \\\n--scheme internet-facing \\\n--subnets ${FIRST_SUBNET} |tee /tmp/$$.1\nnlb1_arn=$(cat /tmp/$$.1 |jq -r '.LoadBalancers[0].LoadBalancerArn')\n\naws elbv2 create-target-group \\\n--name nlb1-tg-${port1}-${uniqstr} \\\n--protocol TCP \\\n--port ${port1} \\\n--vpc-id ${VPC_ID} |tee /tmp/$$.2\ntg1_arn=$(cat /tmp/$$.2 |jq -r '.TargetGroups[0].TargetGroupArn')\n\naws elbv2 create-listener --load-balancer-arn ${nlb1_arn} \\\n--protocol TCP --port ${port1}  \\\n--default-actions Type=forward,TargetGroupArn=${tg1_arn}\n</code></pre>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#func-alb-and-tg-","title":"func-alb-and-tg-","text":"func-elb-and-tg<pre><code># depends on: VPC_ID / CERTIFICATE_ARN\n# output variable: ALB_ARN\n# quick link: https://panlm.github.io/CLI/functions/create-alb-and-tg.sh\n\nfunction create-elb-and-tg () {\n    OPTIND=1\n    OPTSTRING=\"h?v:c:it:\"\n    local VPC_ID=\"\"\n    local CERTIFICATE_ARN=\"\"\n    local LB_SCHEME=\"internet-facing\"\n    local TYPE=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            v) VPC_ID=${OPTARG} ;;\n            c) CERTIFICATE_ARN=${OPTARG} ;;\n            i) LB_SCHEME=\"internal\" ;;\n            t) TYPE=${OPTARG} ;;\n            h|\\?) \n                echo \"format: $0 -v VPC_ID -t [alb|nlb] [ -c CERTIFICATE_ARN ] [ -i ] \"\n                echo -e \"\\tsample: $0 -c vpc-xxxx \"\n                echo \n                return 0\n            ;;\n        esac\n    done\n    : ${AWS_DEFAULT_REGION:?Missing AWS_DEFAULT_REGION}\n\n    if [[ -z ${VPC_ID} ]]; then\n        VPC_ID=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true \\\n        --query 'Vpcs[0].VpcId' --output text)\n    fi\n\n    if [[ ${TYPE} == \"alb\" ]]; then\n        local LB_PROTO=HTTP\n        local LB_TYPE=application\n    elif [[ ${TYPE} == \"nlb\" ]]; then\n        local LB_PROTO=TCP\n        local LB_TYPE=network\n    else\n        echo \"only alb or nlb allowed in -t parameter\"\n        return 1\n    fi\n\n    local UNIQ_STR=$(TZ=EAT-8 date +%m%d-%H%M%S)\n    local PORT80=80\n    local PORT443=443\n\n    # get public subnet for external alb\n    local SUBNETS_IDS=$(aws ec2 describe-subnets \\\n        --filter \"Name=vpc-id,Values=${VPC_ID}\" \\\n        --query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n        --output text)\n\n    # get default security group \n    local DEFAULT_SG_ID=$(aws ec2 describe-security-groups \\\n        --filter Name=vpc-id,Values=${VPC_ID} \\\n        --query \"SecurityGroups[?GroupName == 'default'].GroupId\" \\\n        --output text)\n\n    # allow 80/443 from anywhere\n    for i in 80 443 ; do\n    aws ec2 authorize-security-group-ingress \\\n        --group-id ${DEFAULT_SG_ID} \\\n        --protocol tcp \\\n        --port $i \\\n        --cidr 0.0.0.0/0  \n    done\n\n    # create external alb\n    aws elbv2 create-load-balancer --name ${TYPE}-${UNIQ_STR} \\\n        --type ${LB_TYPE} \\\n        --subnets ${SUBNETS_IDS} \\\n        --scheme ${LB_SCHEME} \\\n        --security-groups ${DEFAULT_SG_ID} |tee /tmp/$$-lb\n    LB_ARN=$(cat /tmp/$$-lb |jq -r '.LoadBalancers[0].LoadBalancerArn')\n    LB_DNSNAME=$(cat /tmp/$$-lb |jq -r '.LoadBalancers[0].DNSName')\n\n    if [[ ${TYPE} == \"alb\" ]]; then\n        MATCHER_OPTION='--matcher HttpCode=\"200-202,400-404\"'\n    else\n        MATCHER_OPTION=\"\"\n    fi\n    aws elbv2 create-target-group \\\n        --name ${TYPE}-tg-${PORT80}-${UNIQ_STR} \\\n        --protocol ${LB_PROTO} \\\n        --port ${PORT80} \\\n        --target-type ip \\\n        --vpc-id ${VPC_ID} ${MATCHER_OPTION} |tee /tmp/$$-tg80\n    TG80_ARN=$(cat /tmp/$$-tg80 |jq -r '.TargetGroups[0].TargetGroupArn')\n\n    if [[ ${TYPE} == \"alb\" ]]; then\n        aws elbv2 create-listener --load-balancer-arn ${LB_ARN} \\\n            --protocol ${LB_PROTO} --port ${PORT80}  \\\n            --default-actions Type=fixed-response,FixedResponseConfig=\"{MessageBody=,StatusCode=404,ContentType=text/plain}\" |tee /tmp/$$-lsnr80\n        local LSNR80_ARN=$(cat /tmp/$$-lsnr80 |jq -r '.Listeners[0].ListenerArn')\n\n        # rules with path pattern in listener \n        envsubst &gt;/tmp/path-pattern.json &lt;&lt;-EOF\n[{\n    \"Field\": \"path-pattern\",\n    \"PathPatternConfig\": {\n        \"Values\": [\"/*\"]\n    }\n}]\nEOF\n\n        aws elbv2 create-rule --listener-arn ${LSNR80_ARN} \\\n            --conditions file:///tmp/path-pattern.json \\\n            --priority 5 \\\n            --actions Type=forward,TargetGroupArn=${TG80_ARN}\n    else \n        aws elbv2 create-listener --load-balancer-arn ${LB_ARN} \\\n            --protocol ${LB_PROTO} --port ${PORT80}  \\\n            --default-actions Type=forward,TargetGroupArn=${TG80_ARN}\n    fi\n\n    if [[ ! -z ${CERTIFICATE_ARN} &amp;&amp; ${TYPE} == \"alb\" ]]; then\n        # aws elbv2 create-target-group \\\n        #     --name ${TYPE}-tg-${PORT443}-${UNIQ_STR} \\\n        #     --protocol HTTPS \\\n        #     --port ${PORT443} \\\n        #     --target-type ip \\\n        #     --vpc-id ${VPC_ID} \\\n        #     --matcher HttpCode=\"200-202\\,400-404\" |tee /tmp/$$-tg443\n        # TG443_ARN=$(cat /tmp/$$-tg443 |jq -r '.TargetGroups[0].TargetGroupArn')\n\n        aws elbv2 create-listener --load-balancer-arn ${LB_ARN} \\\n            --protocol HTTPS --port ${PORT443}  \\\n            --certificates CertificateArn=${CERTIFICATE_ARN} \\\n            --default-actions Type=fixed-response,FixedResponseConfig=\"{MessageBody=,StatusCode=404,ContentType=text/plain}\" |tee /tmp/$$-lsnr443\n        local LSNR443_ARN=$(cat /tmp/$$-lsnr443 |jq -r '.Listeners[0].ListenerArn')\n\n        aws elbv2 create-rule --listener-arn ${LSNR443_ARN} \\\n            --conditions file:///tmp/path-pattern.json \\\n            --priority 5 \\\n            --actions Type=forward,TargetGroupArn=${TG80_ARN}\n    fi\n    echo \"LB_ARN=\"${LB_ARN}\n}\n</code></pre>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#alb-and-target-group-sample","title":"alb and target group (sample)","text":"<p>\u521b\u5efaalb\u548ctg\uff0c\u7aef\u53e3\u76d1\u542c80</p> <pre><code>uniqstr=$(TZ=EAT-8 date +%Y%m%d-%H%M)\nport1=80\nexport AWS_DEFAULT_REGION=us-east-2\n#VPC_ID=vpc-xxx\nVPC_ID=$(aws ec2 describe-vpcs \\\n--filter Name=is-default,Values=true \\\n--query 'Vpcs[0].VpcId' --output text \\\n--region ${AWS_DEFAULT_REGION})\n\nFIRST_SUBNET=$(aws ec2 describe-subnets \\\n--filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n--query \"Subnets[?AvailabilityZone=='\"${AWS_DEFAULT_REGION}a\"'].SubnetId\" \\\n--output text \\\n--region ${AWS_DEFAULT_REGION})\nSECOND_SUBNET=$(aws ec2 describe-subnets \\\n--filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n--query \"Subnets[?AvailabilityZone=='\"${AWS_DEFAULT_REGION}b\"'].SubnetId\" \\\n--output text \\\n--region ${AWS_DEFAULT_REGION})\n\nDEFAULT_SG_ID=$(aws ec2 describe-security-groups \\\n--filter Name=vpc-id,Values=${VPC_ID} \\\n--query \"SecurityGroups[?GroupName == 'default'].GroupId\" \\\n--output text \\\n--region ${AWS_DEFAULT_REGION})\n\naws elbv2 create-load-balancer --name alb1-${uniqstr} \\\n--subnets ${FIRST_SUBNET} ${SECOND_SUBNET} \\\n--security-groups ${DEFAULT_SG_ID} |tee /tmp/$$.1\nalb1_arn=$(cat /tmp/$$.1 |jq -r '.LoadBalancers[0].LoadBalancerArn')\nalb1_dnsname=$(cat /tmp/$$.1 |jq -r '.LoadBalancers[0].DNSName')\n\naws elbv2 create-target-group \\\n--name alb1-tg-${port1}-${uniqstr} \\\n--protocol HTTP \\\n--port ${port1} \\\n--target-type ip \\\n--vpc-id ${VPC_ID} |tee /tmp/$$.2\ntg1_arn=$(cat /tmp/$$.2 |jq -r '.TargetGroups[0].TargetGroupArn')\n\naws elbv2 create-listener --load-balancer-arn ${alb1_arn} \\\n--protocol HTTP --port ${port1}  \\\n--default-actions Type=forward,TargetGroupArn=${tg1_arn}\n</code></pre>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#example","title":"example","text":"<ul> <li>TC-private-apigw-dataflow</li> <li>../../../../gitlab/handover/C-MK/apigw/POC-apigw-dataflow</li> </ul>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#create-tg-and-listener","title":"create tg and listener","text":"<pre><code>NLB_NAME=(nlb1 nlb2)\nfor i in ${NLB_NAME[@]}; do\naws elbv2 create-target-group \\\n--name ${i}-tg-80 \\\n--protocol TCP \\\n--port 80 \\\n--vpc-id ${VPC_ID}\n\naws elbv2 create-target-group \\\n--name ${i}-tg-81 \\\n--protocol TCP \\\n--port 81 \\\n--vpc-id ${VPC_ID}\ndone\n</code></pre> <pre><code>for i in `seq 80 99`; do\naws elbv2 create-target-group \\\n--name tg-tcp-${i} \\\n--protocol TCP \\\n--port ${i} \\\n--vpc-id ${VPC_ID}\ndone\n\nNLB_ARN=arn:aws:elasticloadbalancing:us-east-1:xxx:loadbalancer/net/nlb/xxx\n\nfor i in `seq 80 99`; do\nTG_ARN=$(aws elbv2 describe-target-groups --query 'TargetGroups[?TargetGroupName==`tg-tcp-'\"${i}\"'`].TargetGroupArn' --output text)\n\naws elbv2 create-listener \\\n--load-balancer-arn ${NLB_ARN} \\\n--protocol TCP \\\n--port ${i} \\\n--default-actions Type=forward,TargetGroupArn=${TG_ARN}\ndone\n</code></pre>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#create-alb-type-target-group","title":"create alb-type target group","text":"<ul> <li>TC-private-apigw-dataflow</li> </ul>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/elb-cmd/#refer","title":"refer","text":"<ul> <li>https://cloudaffaire.com/network-load-balancer-target-group-health-checks/</li> <li>icon: simple/awselasticloadbalancing</li> </ul>","tags":["aws/network/elb","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/","title":"iam cmd","text":"","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#get-role-arn-by-name","title":"get role arn by name","text":"<pre><code>aws iam get-role --role-name ${role_name} --query 'Role.Arn' --output text\n</code></pre>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#get-policy-arn","title":"get policy arn","text":"<pre><code>aws iam list-policies --query 'Policies[*].[PolicyName,Arn]' --output text |grep CloudWatchAgentServerPolicy\naws iam get-policy --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\n</code></pre>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#create-user","title":"create user","text":"<pre><code>aws iam create-user --user-name cwagent-onprem\n# attach user policy\naws iam attach-user-policy --user-name cwagent-onprem --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\n# create access key, save the output\naws iam create-access-key --user-name cwagent-onprem\n</code></pre>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#attach-role-policy","title":"attach role policy","text":"<ul> <li>../../others/file-storage-gateway-lab</li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#create-role","title":"create role","text":"","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#func-ec2-admin-role-create-","title":"func-ec2-admin-role-create-","text":"<ul> <li>create admin role for ec2 and ecs func-ec2-admin-role-create<pre><code># no dependency variable\n# output ROLE_ARN / INSTANCE_PROFILE_ARN\nfunction ec2-admin-role-create () {\n    ROLE_NAME=ec2-admin-role-$(TZ=CST-8 date +%Y%m%d-%H%M)\n    local TMP=$(mktemp --suffix .${ROLE_NAME})\n    cat &gt;${TMP} &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": [\"ec2.amazonaws.com\", \"ecs.amazonaws.com\"]\n            },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\nEOF\n    aws iam create-role --role-name ${ROLE_NAME} \\\n        --assume-role-policy-document file://${TMP} |tee ${TMP}.out.role\n    aws iam attach-role-policy --role-name ${ROLE_NAME} \\\n        --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\n    aws iam create-instance-profile --instance-profile-name ${ROLE_NAME} |tee ${TMP}.out.instance-profile\n    aws iam add-role-to-instance-profile --instance-profile-name ${ROLE_NAME} \\\n        --role-name ${ROLE_NAME}\n    ROLE_ARN=$(cat ${TMP}.out.role |jq -r '.Role.Arn')\n    INSTANCE_PROFILE_ARN=$(cat ${TMP}.out.instance-profile |jq -r '.InstanceProfile.Arn')\n    echo \"INSTANCE_PROFILE_ARN=\"${INSTANCE_PROFILE_ARN}\n}\n</code></pre></li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#create-role-for-firehose","title":"create role for firehose","text":"<ul> <li>../../EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3</li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#create-role-for-api-gateway","title":"create role for api gateway","text":"<ul> <li>apigw-cmd</li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#create-role-for-account","title":"create role for account","text":"<ul> <li>../linux/granted-assume</li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#create-service-linked-role","title":"create service-linked role","text":"<pre><code>aws iam create-service-linked-role --aws-service-name SERVICE-NAME.amazonaws.com\n</code></pre>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#assume-another-role-","title":"assume-another-role-","text":"<pre><code>account_id=$(aws sts get-caller-identity \\\n  --query 'Account' --output text)\nrole_arn=arn:aws:iam::${account_id}:role/eksworkshop-admin\ntmp_file=/tmp/$$.1\n\naws sts assume-role --role-arn ${role_arn} \\\n  --duration-seconds 43200 \\\n  --role-session-name Session-$RANDOM |tee ${tmp_file}\n\nexport AWS_ACCESS_KEY_ID=$(cat ${tmp_file} |jq -r '.Credentials.AccessKeyId' )\nexport AWS_SECRET_ACCESS_KEY=$(cat ${tmp_file} |jq -r '.Credentials.SecretAccessKey' )\nexport AWS_SESSION_TOKEN=$(cat ${tmp_file} |jq -r '.Credentials.SessionToken' )\n# compatibility for old version \nexport AWS_SECURITY_TOKEN=$(cat ${tmp_file} |jq -r '.Credentials.SessionToken' )\n\nexport AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n</code></pre>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#assume-in-credentials-file","title":"assume in credentials file","text":"<ul> <li>https://docs.aws.amazon.com/sdkref/latest/guide/feature-assume-role-credentials.html</li> <li> <p>sample 1  <pre><code>[profile A]\nsource_profile = B\nrole_arn =  arn:aws:iam::123456789012:role/RoleA\n\n[profile B]\naws_access_key_id=AKIAIOSFODNN7EXAMPLE\naws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n</code></pre></p> </li> <li> <p>sample 2 - use ec2 instance profile <pre><code>[account2]\ncredential_source = Ec2InstanceMetadata\nrole_arn =  arn:aws:iam::123456789012:role/assume-role-b\nrole_session_name = Account2RoleSession\n</code></pre></p> </li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/iam-cmd/#reference","title":"reference","text":"<ul> <li>\u5982\u4f55\u63d0\u4f9b\u5bf9 Amazon S3 \u5b58\u50a8\u6876\u4e2d\u7684\u5bf9\u8c61\u7684\u8de8\u8d26\u6237\u8bbf\u95ee\u6743\u9650</li> <li>\u7b56\u7565\u8bc4\u4f30\u903b\u8f91</li> <li>https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html</li> </ul>","tags":["aws/security/iam","aws/cmd"]},{"location":"CLI/awscli/lambda-cmd/","title":"lambda-cmd","text":"","tags":["aws/serverless/lambda","aws/cmd"]},{"location":"CLI/awscli/lambda-cmd/#create-execute-role","title":"create execute role","text":"<ul> <li>https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html#permissions-executionrole-console <pre><code>role_name=lambda-ex-$RANDOM\naws iam create-role --role-name ${role_name} --assume-role-policy-document '{\"Version\": \"2012-10-17\",\"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}, \"Action\": \"sts:AssumeRole\"}]}'\naws iam attach-role-policy --role-name ${role_name} --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n</code></pre></li> </ul>","tags":["aws/serverless/lambda","aws/cmd"]},{"location":"CLI/awscli/lambda-cmd/#save-code","title":"save code","text":"<pre><code>wget -O index.js 'https://raw.githubusercontent.com/panlm/aws-eks-example/main/lambda/kinesis-firehose-cloudwatch-logs-processor'\nzip function.zip index.js\n</code></pre>","tags":["aws/serverless/lambda","aws/cmd"]},{"location":"CLI/awscli/lambda-cmd/#create-lambda","title":"create lambda","text":"<pre><code>role_arn=$(aws iam get-role --role-name ${role_name} |jq -r '.Role.Arn')\naws lambda create-function \\\n--function-name cwl-s3-${role_name} \\\n--timeout 60 \\\n--runtime 'nodejs14.x' \\\n--role ${role_arn} \\\n--zip-file fileb://function.zip \\\n--handler index.handler\n</code></pre>","tags":["aws/serverless/lambda","aws/cmd"]},{"location":"CLI/awscli/lambda-cmd/#add-layer-to-lambda-","title":"add-layer-to-lambda-","text":"<ul> <li>upload zip package from mac to lambda, seems works</li> </ul> <pre><code>mkdir -p $$/python/lib/python3.11/site-packages\npip install flatten_json -t $$/python/lib/python3.11/site-packages\ncd $$\nzip -r package.zip ./python\n</code></pre> <ul> <li>push layer version <pre><code>aws lambda publish-layer-version --layer-name layer_flatten_json --description \"flatten_json\" --zip-file fileb://package.zip --compatible-runtimes python3.8\nlayer_arn=$(aws lambda list-layer-versions --layer-name layer_flatten_json \\\n--query 'LayerVersions[0].LayerVersionArn' --output text)\n\naws lambda update-function-configuration --function-name ${lambda_name} \\\n--layers ${layer_arn}\n</code></pre></li> </ul>","tags":["aws/serverless/lambda","aws/cmd"]},{"location":"CLI/awscli/lightsail-cmd/","title":"lightsail-cmd","text":"","tags":["aws/compute/lightsail","aws/cmd"]},{"location":"CLI/awscli/lightsail-cmd/#lightsail","title":"lightsail","text":"<pre><code>aws --profile nutanix lightsail --region=ap-northeast-2 open-instance-public-ports  --instance-name Ubuntu-Seoul --port-info='fromPort=443,toPort=443,protocol=\"TCP\",cidrs=[\"0.0.0.0/0\"],cidrListAliases=[]'\n</code></pre>","tags":["aws/compute/lightsail","aws/cmd"]},{"location":"CLI/awscli/lightsail-cmd/#list","title":"list","text":"<pre><code>export AW\naws lightsail get-instances --region ap-northeast-2\n</code></pre>","tags":["aws/compute/lightsail","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/","title":"rds-cmd","text":"","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#create-postsql-","title":"create-postsql-","text":"<ul> <li>https://www.eksworkshop.com/beginner/115_sg-per-pod/10_secgroup/</li> </ul> <pre><code>export VPC_ID=vpc-xxx\nexport VPC_CIDR=\"172.31.0.0/16\"\nexport RDS_NAME=pgsql\nexport AWS_DEFAULT_REGION=\n\nsudo yum install -y jq \nsudo amazon-linux-extras install -y postgresql12\n\nSG_NAME=${RDS_NAME}-${RANDOM}\naws ec2 create-security-group  \\\n  --description ${SG_NAME}     \\\n  --group-name ${SG_NAME}      \\\n  --vpc-id ${VPC_ID}\n\nexport RDS_SG=$(aws ec2 describe-security-groups      \\\n  --filters Name=group-name,Values=${SG_NAME}         \\\n            Name=vpc-id,Values=${VPC_ID}              \\\n  --query \"SecurityGroups[0].GroupId\" --output text)\n\necho \"RDS security group ID: ${RDS_SG}\"\n\naws ec2 authorize-security-group-ingress  \\\n  --group-id ${RDS_SG}                    \\\n  --protocol tcp                          \\\n  --port 5432                             \\\n  --cidr ${VPC_CIDR}\n\nexport PUBLIC_SUBNETS_ID=$(aws ec2 describe-subnets        \\\n  --filters \"Name=vpc-id,Values=$VPC_ID\"                   \\\n  --query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n  --output json | jq -c .)\n\n# create a db subnet group\naws rds create-db-subnet-group               \\\n  --db-subnet-group-name ${RDS_NAME}         \\\n  --db-subnet-group-description ${RDS_NAME}  \\\n  --subnet-ids ${PUBLIC_SUBNETS_ID}\n\n# generate a password for RDS\nexport RDS_PASSWORD=\"$(date | md5sum  |cut -f1 -d' ')\"\necho ${RDS_PASSWORD}  &gt; ~/rds_password\n\n# create RDS Postgresql instance\naws rds create-db-instance                 \\\n  --db-instance-identifier ${RDS_NAME}     \\\n  --db-name ${RDS_NAME}                    \\\n  --db-instance-class db.t3.micro          \\\n  --engine postgres                        \\\n  --db-subnet-group-name ${RDS_NAME}       \\\n  --vpc-security-group-ids ${RDS_SG}       \\\n  --master-username ${RDS_NAME}            \\\n  --publicly-accessible                    \\\n  --master-user-password ${RDS_PASSWORD}   \\\n  --backup-retention-period 0              \\\n  --allocated-storage 20\n\naws rds describe-db-instances                \\\n  --db-instance-identifier ${RDS_NAME}       \\\n  --query \"DBInstances[].DBInstanceStatus\"   \\\n  --output text\n\n# get RDS endpoint\nexport RDS_ENDPOINT=$(aws rds describe-db-instances \\\n  --db-instance-identifier ${RDS_NAME} \\\n  --query 'DBInstances[0].Endpoint.Address' \\\n  --output text)\n\necho \"RDS endpoint: ${RDS_ENDPOINT}\"\n\n\ncat &gt; /tmp/pgsql.sql &lt;&lt;-EoF\nCREATE TABLE welcome (column1 TEXT);\ninsert into welcome values ('--------------------------');\ninsert into welcome values ('Welcome to the rdsworkshop');\ninsert into welcome values ('Welcome to the rdsworkshop');\ninsert into welcome values ('Welcome to the rdsworkshop');\ninsert into welcome values ('Welcome to the rdsworkshop');\ninsert into welcome values ('Welcome to the rdsworkshop');\ninsert into welcome values ('--------------------------');\nEoF\n\nexport RDS_PASSWORD=$(cat ~/rds_password)\npsql postgresql://${RDS_NAME}:${RDS_PASSWORD}@${RDS_ENDPOINT}:5432/${RDS_NAME} -f /tmp/pgsql.sql\n</code></pre>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#create-mysql","title":"create mysql","text":"<ul> <li>../../data-analytics/rds-mysql-replica-cross-region-cross-account</li> </ul>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#quick-create-rds-mysql-in-default-vpc","title":"quick create rds mysql in default vpc","text":"right-click &amp; open-in-new-tab: function get-default-vpc right-click &amp; open-in-new-tab: function create-sg right-click &amp; open in new tab: function get-subnets  <pre><code>get-default-vpc\nVPC_ID=$DEFAULT_VPC\nVPC_CIDR=$DEFAULT_CIDR\n\ncreate-sg ${VPC_ID} ${VPC_CIDR}\necho ${SG_ID}\n\nget-subnets ${VPC_ID} true\necho ${SUBNET_IDS}\n\n# create a db subnet group\naws rds create-db-subnet-group \\\n  --db-subnet-group-name ${SG_ID} \\\n  --db-subnet-group-description ${SG_ID} \\\n  --subnet-ids ${SUBNET_IDS}\n\nDB_ADMIN=admin\nDB_PASSWORD=admin1234567890\nDB_NAME=llm-$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\naws rds create-db-instance \\\n    --db-instance-identifier ${DB_NAME} \\\n    --engine mysql \\\n    --db-instance-class db.r6g.large \\\n    --master-username ${DB_ADMIN} \\\n    --master-user-password ${DB_PASSWORD} \\\n    --db-subnet-group-name ${SG_ID} \\\n    --vpc-security-group-ids ${SG_ID} \\\n    --allocated-storage 100 \n\naws rds wait db-instance-available --db-instance-identifier ${DB_NAME}\n</code></pre>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#create-read-replica-cross-region","title":"create read replica cross region","text":"<pre><code># in china region\nsource_db_arn=arn:aws-cn:rds:cn-northwest-1:123456789012:db:database-1\naws rds create-db-instance-read-replica \\\n  --db-instance-identifier database-1-rep-from-cnnw1 \\\n  --region cn-north-1 \\\n  --source-region cn-northwest-1 \\\n  --source-db-instance-identifier ${source_db_arn} \\\n  --kms-key-id arn:aws-cn:kms:cn-north-1:123456789012:alias/aws/rds\n</code></pre>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#delete","title":"delete","text":"<pre><code>aws rds delete-db-instance --db-instance-identifier test1 \\\n  --skip-final-snapshot\n</code></pre>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#modify","title":"modify","text":"<pre><code>aws rds modify-db-instance --db-instance-identifier test1 \\\n  --no-multi-az --no-publicly-accessible\n</code></pre>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#describe-instance","title":"describe-instance","text":"<pre><code>aws rds describe-db-instances\n</code></pre>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/rds-cmd/#ssl-connection","title":"ssl connection","text":"<ul> <li>download (link)</li> <li>verify with mysql (link) <pre><code>wget 'https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem'\n# maybe need to change surfix to pem\n\ndbhost=xxxx\nmysql -h $dbhost --ssl-ca=global-bundle.pem --ssl-mode=VERIFY_IDENTITY -P 3306 -u admin -p\n</code></pre></li> </ul>","tags":["aws/database/rds","aws/cmd"]},{"location":"CLI/awscli/redshift-cmd/","title":"redshift-cmd","text":"","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#setup","title":"setup","text":"right-click &amp; open-in-new-tab:","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#create-cluster","title":"create cluster","text":"<pre><code>aws redshift create-cluster \\\n    --cluster-identifier my-redshift-test \\\n    --node-type dc2.large \\\n    --master-username awsuser \\\n    --master-user-password passworD.1 \\\n    --cluster-type single-node \\\n    --number-of-nodes 1 \\\n    --publicly-accessible\n    # --load-sample-data ??\n</code></pre>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#unload","title":"unload","text":"<ul> <li>https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/t_unloading_encrypted_files.html </li> <li>https://hevodata.com/learn/redshift-unload-command-usage-and-examples/#r2</li> </ul> <p>CSE: <pre><code>echo 01234567890123456789012345678901 |base64\n</code></pre></p> <pre><code>MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEK\n</code></pre> <pre><code>unload ('select * from dev.public.customer')\nto 's3://template1-rs3bucket-1bor4w2qr4rti/unload_encrypted/'\niam_role 'arn:aws:iam::012345678901:role/RedshiftImmersionRole'\nmaster_symmetric_key 'MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEK'\nencrypted;\n</code></pre> <p>SSE: <pre><code>\n</code></pre></p>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#create-database","title":"create database","text":"<pre><code>create database lab798\n</code></pre>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#create-table","title":"create table","text":"<pre><code>create table table_utf8(\ncol1 integer not null,\ncol2 varchar(100) not null ,\ncol3 varchar(100) not null\n);\n\ninsert into table_utf8 values\n(  1,'\u4e2d\u65871','\u4e2d\u65872'),\n(  2,'\u4e2d\u65871','\u4e2d\u65872'),\n(  3,'\u4e2d\u65871','\u4e2d\u65872');\n</code></pre>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#list-snapshot","title":"list snapshot","text":"<pre><code>aws redshift describe-cluster-snapshots --cluster-identifier redshift-cluster-2\n</code></pre>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#put-resource-policy-to-snapshot","title":"put resource policy to snapshot","text":"<ul> <li>redshift-provisioned-to-serverless-cross-account </li> </ul>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/redshift-cmd/#others","title":"others","text":"<ul> <li>https://github.com/awslabs/amazon-redshift-utils/tree/master/src/UnloadCopyUtility</li> </ul>","tags":["aws/database/redshift"]},{"location":"CLI/awscli/route53-cmd/","title":"route53-cmd","text":"","tags":["aws/network/route53"]},{"location":"CLI/awscli/route53-cmd/#func-create-hosted-zone-","title":"func-create-hosted-zone-","text":"<ul> <li>\u6267\u884c\u4e0b\u9762\u547d\u4ee4\u521b\u5efa Hosted Zone\uff0c\u7136\u540e\u624b\u5de5\u6dfb\u52a0 NS \u8bb0\u5f55\u5230\u4e0a\u6e38\u7684\u57df\u540d\u670d\u52a1\u5668 domain registrar \u4e2d (create hosted zone, and then add NS records to upstream domain registrar)</li> <li>func-create-hosted-zone func-create-hosted-zone<pre><code># depends on: DOMAIN_NAME\n# output: see output to setup NS record on upstream domain registry\n# quick link: https://panlm.github.io/CLI/functions/func-create-hosted-zone.sh\n\nfunction create-hosted-zone () {\n    OPTIND=1\n    OPTSTRING=\"h?n:\"\n    local DOMAIN_NAME=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            n) DOMAIN_NAME=${OPTARG} ;;\n            h|\\?) \n                echo \"format: create-host-zone -n DOMAIN_NAME \"\n                echo -e \"\\tsample: create-host-zone -n xxx.domain.com \"\n                return 0\n            ;;\n        esac\n    done\n    : ${DOMAIN_NAME:?Missing -n}\n\n    aws route53 create-hosted-zone --name \"${DOMAIN_NAME}.\" \\\n      --caller-reference \"external-dns-test-$(date +%s)\"\n\n    local ZONE_ID=$(aws route53 list-hosted-zones-by-name --output json \\\n      --dns-name \"${DOMAIN_NAME}.\" --query HostedZones[0].Id --out text)\n\n    local NS=$(aws route53 list-resource-record-sets --output text \\\n      --hosted-zone-id $ZONE_ID --query \\\n      \"ResourceRecordSets[?Type == 'NS'].ResourceRecords[*].Value | []\")\n\n    echo '###'\n    echo '# get bash function from here: https://panlm.github.io/CLI/awscli/route53-cmd/#func-create-ns-record-'\n    echo '# copy below output to add NS record on your upstream domain registrar'\n    echo '###'\n    echo 'DOMAIN_NAME='${DOMAIN_NAME}\n    echo 'NS=\"'${NS}'\"'\n    echo 'curl -sL -o /tmp/func-create-ns-record.sh https://panlm.github.io/CLI/functions/func-create-ns-record.sh'\n    echo 'source /tmp/func-create-ns-record.sh'\n    echo 'create-ns-record -n ${DOMAIN_NAME} -s \"${NS}\"'\n    echo ''\n}\n</code></pre></li> </ul>","tags":["aws/network/route53"]},{"location":"CLI/awscli/route53-cmd/#func-create-ns-record-","title":"func-create-ns-record-","text":"<ul> <li>create host zone in your child account and get NS (previous chapter)</li> <li>assume to your parent account to execute this function to add NS record to upstream route53 host zone</li> <li>func-create-ns-record func-create-ns-record<pre><code># depends on: DOMAIN_NAME NS_RECORD\n# output: N/A\n# quick link: https://panlm.github.io/CLI/functions/func-create-ns-record.sh\n\nfunction create-ns-record () {\n    OPTIND=1\n    OPTSTRING=\"h?n:s:\"\n    local DOMAIN_NAME=\"\"\n    local NS=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            n) DOMAIN_NAME=${OPTARG} ;;\n            s) NS=${OPTARG} ;;\n            h|\\?) \n                echo \"format: create-host-zone -n DOMAIN_NAME -s \\\"NS_RECORDS\\\" \"\n                echo -e \"\\tsample: create-host-zone -n xxx.domain.com -s \\\"ns-xx.awsdns-xx.com ns-xx.awsdns-xx.com\\\" \"\n                return 0\n            ;;\n        esac\n    done\n    : ${DOMAIN_NAME:?Missing -n}\n    : ${NS:?Missing -s}\n\n    # check NS number\n    local NS_NUM=$(echo $NS |xargs -n 1 |wc -l)\n    if [[ ${NS_NUM} -eq 1 ]]; then\n        echo \"your NS is: \"${NS}\n        echo 'typical NS record should has more than one record'\n        echo 'use double quotes when you use variable for -s '\n        create-ns-record -h\n        return 9\n    fi\n\n    PARENT_DOMAIN_NAME=${DOMAIN_NAME#*.}\n    ZONE_ID=$(aws route53 list-hosted-zones-by-name \\\n    --dns-name \"${PARENT_DOMAIN_NAME}.\" \\\n    --query HostedZones[0].Id --output text)\n\n    envsubst &gt;/tmp/ns-route53-record.json &lt;&lt;-EOF\n{\n  \"Comment\": \"UPSERT a record for poc.xxx.com \",\n  \"Changes\": [\n    {\n      \"Action\": \"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"${DOMAIN_NAME}\",\n        \"Type\": \"NS\",\n        \"TTL\": 172800,\n        \"ResourceRecords\": [\n        ]\n      }\n    }\n  ]\n}\nEOF\n\n    for i in ${NS}; do\n        cat /tmp/ns-route53-record.json |jq '.Changes[0].ResourceRecordSet.ResourceRecords += [{\"Value\": \"'\"${i}\"'\"}]' \\\n            |tee /tmp/ns-route53-record-tmp.json\n        mv -f /tmp/ns-route53-record-tmp.json /tmp/ns-route53-record.json\n    done\n\n    aws route53 change-resource-record-sets --hosted-zone-id ${ZONE_ID} --change-batch file:///tmp/ns-route53-record.json\n\n    aws route53 list-resource-record-sets --hosted-zone-id ${ZONE_ID} --query \"ResourceRecordSets[?Name == '${DOMAIN_NAME}.']\"\n}\n</code></pre></li> </ul>","tags":["aws/network/route53"]},{"location":"CLI/awscli/route53-cmd/#func-create-outbound-resolver-","title":"func-create-outbound-resolver-","text":"<pre><code>function create-outbound-resolver () {\n    OPTIND=1\n    OPTSTRING=\"h?s:\"\n    local SG_ID=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            s) SG_ID=${OPTARG} ;;\n            h|\\?) \n                echo \"format: create-outbound-resolver -s security_group_id \"\n                echo -e \"\\tsample: create-outbound-resolver -s sg-xxx \"\n                return 0\n            ;;\n        esac\n    done\n    : ${SG_ID:?Missing -s}\n\n    # find 2 subnet id in vpc\n\n\n    # RANDOM\n    REQUEST_ID=$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\n    aws route53resolver create-resolver-endpoint \\\n        --creator-request-id ${REQUEST_ID} \\\n        --name my-outbound-endpoint \\\n        --security-group-ids ${SG_ID} \\\n        --direction OUTBOUND \\\n        --ip-addresses SubnetId=${SUBNET_ID[0]} SubnetId=${SUBNET_ID[1]}  \\\n        --resolver-endpoint-type IPV4 \\\n        --protocols \"Do53\" \"DoH\"\n\n}\n</code></pre>","tags":["aws/network/route53"]},{"location":"CLI/awscli/route53-cmd/#create-cname-record","title":"create cname record","text":"<p>refer: link  sample: acm-cmd</p>","tags":["aws/network/route53"]},{"location":"CLI/awscli/route53-cmd/#insert-txt-record-with-multi-values","title":"insert TXT record with multi values","text":"<pre><code>{\n    \"Comment\": \"Update record to add new TXT record\",\n    \"Changes\": [\n        {\n            \"Action\": \"UPSERT\",\n            \"ResourceRecordSet\": {\n                \"Name\": \"@.panlm.com.\",\n                \"Type\": \"TXT\",\n                \"TTL\": 300,\n                \"ResourceRecords\": [\n                    {\n                        \"Value\": \"\\\"test1=1\\\"\"\n                    },\n                    {\n                        \"Value\": \"\\\"test2=1\\\"\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n</code></pre> <pre><code>aws route53 change-resource-record-sets \\\n  --hosted-zone-id Z07xxxxZD1 \\\n  --change-batch file://a.json\n</code></pre>","tags":["aws/network/route53"]},{"location":"CLI/awscli/route53-cmd/#refer","title":"refer","text":"<ul> <li>https://serverfault.com/questions/815841/multiple-txt-fields-for-same-subdomain?rq=1</li> <li>https://serverfault.com/questions/616407/tried-to-create-2-record-set-type-txt-in-route53</li> <li>https://www.learnaws.org/2022/02/04/aws-cli-route53-guide/</li> </ul>","tags":["aws/network/route53"]},{"location":"CLI/awscli/s3-cmd/","title":"s3-cmd","text":"","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#versioning","title":"versioning","text":"","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#create-s3-with-versioning","title":"create s3 with versioning","text":"<pre><code>bucket_name=p1panlm\naws_region=us-east-2\naws s3api create-bucket --bucket $bucket_name \\\n--create-bucket-configuration LocationConstraint=${aws_region} \n\naws s3api put-bucket-versioning --bucket $bucket_name --versioning-configuration Status=Enabled\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#delete-s3-with-versioning-enabled","title":"delete s3 with versioning enabled","text":"<pre><code>bucket_name=aws-codestar-ap-southeast-1-xxxxxx-proj1-pipe\naws s3api put-bucket-versioning --bucket $bucket_name --versioning-configuration Status=Suspended\naws s3api delete-objects \\\n      --bucket $bucket_name \\\n      --delete \"$(aws s3api list-object-versions \\\n      --bucket $bucket_name | \\\n      jq '{Objects: [.Versions[] | {Key:.Key, VersionId : .VersionId}], Quiet: false}')\"\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#delete-s3-without-versioning","title":"delete s3 without versioning","text":"<pre><code>a=\nfor i in $a ; do \n    aws s3 rm s3://$i --region us-east-1 --recursive\n    aws s3 rb s3://$i --force --region us-east-1\ndone\n\naws s3api delete-objects --bucket panlm-test-object-1234 --delete '{\"Objects\":[{\"Key\":\"def\"}]}'\n\n ```\n\n## download s3 folder\n```sh\naws s3 sync s3://my-exported-logs .\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#create-folder","title":"create folder","text":"<pre><code>aws s3api put-object \\\n--bucket ${bucket_name} \\\n--key ${folder_name}/\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#head-object","title":"head object","text":"<pre><code>aws s3api head-object --bucket lcf-1350 --key stop_sensor_data.sh\n\n# sample output: \n{\n    \"AcceptRanges\": \"bytes\",\n    \"Expiration\": \"expiry-date=\\\"Thu, 02 Nov 2023 00:00:00 GMT\\\", rule-id=\\\"rule1\\\"\",\n    \"LastModified\": \"2023-10-22T09:41:20+00:00\",\n    \"ContentLength\": 162,\n    \"ETag\": \"\\\"65c759947d7b4e98624fa5bec23e0df0\\\"\",\n    \"ContentType\": \"text/x-sh\",\n    \"ServerSideEncryption\": \"AES256\",\n    \"Metadata\": {}\n}\n</code></pre> <ul> <li>ETag, is md5</li> <li>Expiration, when you has rule for this object</li> <li>LastModified, only timestamp</li> </ul>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#get-object","title":"get object","text":"","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#get-object_1","title":"get object","text":"<pre><code>aws s3api get-object \\\n  --key results/15c2c468a4c4.txt \\\n  --bucket athena-bucket-1115 \\\n  --region us-east-2 \\\n  download.txt\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#get-object-from-access-point","title":"get object from access point","text":"<pre><code># using access point alias\naws s3api get-object \\\n  --key results/15c2c468a4c4.txt \\\n  --bucket arn:aws:s3:us-east-2:ACCOUNT_ID:accesspoint/testap-internet \\\n  --region us-east-2 \\\n  download.txt\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#update-access-point-policy","title":"update access point policy","text":"<pre><code>aws s3control get-access-point-policy \\\n  --region us-east-2 \\\n  --account-id ACCOUNT_ID \\\n  --name testap-internet\n</code></pre> <pre><code>aws s3control put-access-point-policy \\\n  --region us-east-2 \\\n  --account-id ACCOUNT_ID \\\n  --name testap-internet \\\n  --policy file://policy.json\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#presigned-url","title":"presigned url","text":"","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#for-download","title":"for download","text":"<pre><code>OBJECT_KEY=\"folder/subfolder/file.txt\"\nEXPIRES=3600 # max 7 days\naws s3 presign s3://my-bucket/${OBJECT_KEY} --expires-in ${EXPIRES} --region xxx # keep region same with bucket\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#for-upload","title":"for upload","text":"","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#public-access-","title":"public-access-","text":"<ul> <li>https://repost.aws/knowledge-center/read-access-objects-s3-bucket</li> <li>https://aws.amazon.com/blogs/networking-and-content-delivery/amazon-s3-amazon-cloudfront-a-match-made-in-the-cloud/</li> </ul>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/s3-cmd/#delete-obj","title":"delete obj","text":"<pre><code>export BUCKET_NAME=perspective-0106-xxx\naws s3api list-object-versions --bucket ${BUCKET_NAME} --output json --query \"Versions[].{Key:Key,VersionId:VersionId}\" | jq -r '.[] | \"aws s3api delete-object --bucket ${BUCKET_NAME} --key \\(.Key) --version-id \\(.VersionId)\"' | sh\n\naws s3api list-object-versions --bucket ${BUCKET_NAME} --output json --query \"DeleteMarkers[].{Key:Key,VersionId:VersionId}\" | jq -r '.[] | \"aws s3api delete-object --bucket ${BUCKET_NAME} --key \\(.Key) --version-id \\(.VersionId)\"' | sh\n\naws s3 rb s3://${BUCKET_NAME}  --force\n</code></pre>","tags":["aws/storage/s3","aws/cmd"]},{"location":"CLI/awscli/sam-cmd/","title":"sam-cli","text":"<pre><code>sudo amazon-linux-extras install -y docker\nsudo service docker start\nsudo usermod -a -G docker ec2-user\n\nwget https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip\nunzip aws-sam-cli-linux-x86_64.zip -d sam-installation\n# wget https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-arm64.zip\n# unzip aws-sam-cli-linux-arm64.zip -d sam-installation\nsudo ./sam-installation/install\nsam --version\n</code></pre> <pre><code>curl 'https://static.us-east-1.prod.workshops.aws/public/5c7d1dc8-9201-4bf3-b2d4-26195a661014/static/bin/bootstrap.sh' | bash\n</code></pre>","tags":["aws/serverless","aws/cmd"]},{"location":"CLI/awscli/sam-cmd/#basic-template-","title":"basic-template-","text":"<pre><code>AWSTemplateFormatVersion: 2010-09-09\nDescription: &gt;-\n  sam-app\n\nTransform:\n\n- AWS::Serverless-2016-10-31\n\nResources:\n  MyApi:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: prod\n      DefinitionBody:\n        swagger: '2.0'\n        info:\n          title: My API\n          version: '1.0'\n        paths:\n          /hello:\n            get:\n              responses:\n                '200':\n                  description: OK\n                  schema:\n                    type: string\n              x-amazon-apigateway-integration:\n                httpMethod: GET\n                type: HTTP_PROXY\n                uri: 'https://jsonplaceholder.typicode.com/todos/1'\n</code></pre> <pre><code>export AWS_DEFAULT_REGION=us-east-2\n\nbucket_name=panlm-230408-$RANDOM\naws s3api create-bucket --bucket ${bucket_name} \\\n--create-bucket-configuration LocationConstraint=${AWS_DEFAULT_REGION}\n\nsam package --template-file template.yaml \\\n    --s3-bucket ${bucket_name} \\\n    --output-template-file packaged.yaml\nsam deploy --template-file packaged.yaml \\\n    --stack-name ${bucket_name} \\\n    --capabilities CAPABILITY_IAM\n</code></pre>","tags":["aws/serverless","aws/cmd"]},{"location":"CLI/awscli/sns-cmd/","title":"sns-cmd","text":"","tags":["aws/integration/sns"]},{"location":"CLI/awscli/sns-cmd/#create-sns","title":"create sns","text":"<pre><code>aws sns create-topic --name sns2 --query 'TopicArn' --output text\n</code></pre>","tags":["aws/integration/sns"]},{"location":"CLI/awscli/sns-cmd/#send-file-as-message","title":"send file as message","text":"<pre><code>TOPIC_ARN=\naws sns publish --topic-arn ${TOPIC_ARN} --message file:///tmp/file1.json\n</code></pre>","tags":["aws/integration/sns"]},{"location":"CLI/awscli/sns-cmd/#subscription-confirmation","title":"subscription confirmation","text":"<pre><code>echo '{\n  \"Type\" : \"SubscriptionConfirmation\",\n  \"MessageId\" : \"xxx\",\n  ...\n  \"SigningCertURL\" : \"https://sns.ap-southeast-1.amazonaws.com/SimpleNotificationService-xxx.pem\"\n}' |tee /tmp/$$.json\n\nmessage_id=$( cat /tmp/$$.json |jq -r '.MessageId' )\narn=$( cat /tmp/$$.json |jq -r '.TopicArn' )\nregion=$(echo $arn |awk -F\":\" '{print $4}')\nurl=$( cat /tmp/$$.json |jq -r '.SubscribeURL' )\ntoken=$( cat /tmp/$$.json |jq -r '.Token')\n\naws sns confirm-subscription --topic-arn $arn --token $token --region $region\n</code></pre> <ul> <li> <p>output <pre><code>{\n    \"SubscriptionArn\": \"arn:aws:sns:ap-southeast-1:123456789012:notificate-to-panlm:xxx\"\n}\n</code></pre></p> </li> <li> <p>or <pre><code>curl -X POST -d @$$.json \\\n  -H 'Connection: Keep-Alive' \\\n  -H 'Content-Type: text/plain; charset=UTF-8' \\\n  -H 'x-amz-sns-message-type: SubscriptionConfirmation' \\\n  -H 'x-amz-sns-message-id: '\"$message_id\" \\\n  -H 'x-amz-sns-topic-arn: '\"$arn\" \\\n  \"$url\"\n</code></pre></p> </li> <li>output <pre><code>&lt;ConfirmSubscriptionResponse xmlns=\"http://sns.amazonaws.com/doc/2010-03-31/\"&gt;\n  &lt;ConfirmSubscriptionResult&gt;\n    &lt;SubscriptionArn&gt;arn:aws:sns:ap-southeast-1:123456789012:notificate-to-panlm:xxx&lt;/SubscriptionArn&gt;\n  &lt;/ConfirmSubscriptionResult&gt;\n  &lt;ResponseMetadata&gt;\n    &lt;RequestId&gt;xxx&lt;/RequestId&gt;\n  &lt;/ResponseMetadata&gt;\n&lt;/ConfirmSubscriptionResponse&gt;\n</code></pre></li> </ul>","tags":["aws/integration/sns"]},{"location":"CLI/awscli/sqs-cmd/","title":"sqs-cmd","text":"","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/sqs-cmd/#create","title":"create","text":"<pre><code>aws sqs create-queue --queue-name sqs2 --query 'QueueUrl' --output text\n</code></pre>","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/sqs-cmd/#send-and-receive-messages","title":"send and receive messages","text":"<p>\u4f7f\u7528 send-message \u53d1\u9001\u6d88\u606f\uff0c\u5c06\u4fdd\u6301 lambda \u5e76\u53d1\u4e3a 1</p>","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/sqs-cmd/#with-curl","title":"with curl","text":"<pre><code># send message to sqs anonymously\nmessage=test\nsqs_url=https://sqs.ap-northeast-2.amazonaws.com/123456789012/public-queue-seoul\ncurl -d \"Action=SendMessage&amp;Version=2011-10-01&amp;MessageBody=${message}\" ${sqs_url}\n\n# ReceiveMessage\ncurl -d \"Action=ReceiveMessage&amp;Version=2011-10-01\" ${sqs_url}\n</code></pre>","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/sqs-cmd/#with-awscli","title":"with awscli","text":"<pre><code># send 100 message to sqs\nfor i in `seq 1 99` ; do \n  aws sqs send-message  \\\n    --queue-url \"https://cn-northwest-1.queue.amazonaws.com.cn/123456789012/sqs-std1\" \\\n    --message-body \"message$i\"\ndone\n\n# retrieve 1 message\naws sqs receive-message \\\n  --queue-url https://cn-northwest-1.queue.amazonaws.com.cn/123456789012/sqs-std1\n\n\n# one message sample\n{\n    \"Messages\": [\n        {\n            \"Body\": \"aaaaa\",\n            \"ReceiptHandle\": \"===ReceiptHandleString===\",\n            \"MD5OfBody\": \"594f803b380a41396ed63dca39503542\",\n            \"MessageId\": \"d64a9969-c287-44e3-bac7-5025f61b5b39\"\n        }\n    ]\n}\n\n# delete message\naws sqs delete-message \\\n  --queue-url https://cn-northwest-1.queue.amazonaws.com.cn/123456789012/sqs-std1 \\\n  --receipt-handle \"===ReceiptHandleString===\"\n</code></pre>","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/sqs-cmd/#send-message-batch","title":"send-message-batch","text":"<p>\u4f7f\u7528 batch \u53d1\u9001\u6d88\u606f\uff0c\u4f1a\u4f7f\u5f97 lambda \u5e76\u53d1\u4e0e message \u6570\u91cf\u4e00\u81f4\uff0c\u5982\u4e0b\u5c06\u5e76\u53d1 2 \u4e2a lambda</p> <ul> <li> <p>messages.json <pre><code>[\n  {\n    \"Id\": \"Message1\",\n    \"MessageBody\": \"This is the first message\",\n    \"DelaySeconds\": 0,\n    \"MessageAttributes\": {\n      \"Attribute1\": {\n        \"DataType\": \"String\",\n        \"StringValue\": \"Value1\"\n      }\n    }\n  },\n  {\n    \"Id\": \"Message2\",\n    \"MessageBody\": \"This is the second message\",\n    \"DelaySeconds\": 0,\n    \"MessageAttributes\": {\n      \"Attribute2\": {\n        \"DataType\": \"String\",\n        \"StringValue\": \"Value2\"\n      }\n    }\n  }\n]\n</code></pre></p> </li> <li> <p>send message batch <pre><code>aws sqs send-message-batch --queue-url $sqs_url --entries file://./messages.json\n</code></pre></p> </li> </ul>","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/sqs-cmd/#scaling-behavior-for-sqs-trigger-in-lambda","title":"scaling behavior for sqs trigger in lambda","text":"<p>https://docs.aws.amazon.com/lambda/latest/dg/services-sqs-scaling.html</p> <ul> <li>batch size </li> <li>batch window</li> <li>maximum concurrency</li> </ul>","tags":["aws/integration/sqs"]},{"location":"CLI/awscli/ssm-cmd/","title":"ssm-cmd","text":"","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#ssm-agent","title":"ssm agent","text":"","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#centos","title":"centos","text":"<pre><code>sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#ubuntu","title":"ubuntu","text":"<p>amazon-ssm-agent has been installed in ubuntu 24</p>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#test-connect-available-or-not","title":"test connect available or not","text":"<pre><code>aws ssm get-connection-status \\\n--target i-xxxx8c8d\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#start-session","title":"start-session","text":"<pre><code>INST_ID=\naws ssm start-session --target  ${INST_ID} --region us-east-1\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#port-forward","title":"port forward","text":"<ul> <li>https://aws.amazon.com/blogs/aws/new-port-forwarding-using-aws-system-manager-sessions-manager/</li> </ul> <pre><code>INST_ID=\naws ssm start-session --target ${INST_ID} \\\n--document-name AWS-StartPortForwardingSession \\\n--parameters '{\"localPortNumber\":[\"9999\"],\"portNumber\":[\"80\"]}' \n\n# target 81 \n# local 9999\n# curl http://localhost:9999\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#port-forward-to-remote-host","title":"port forward to remote host","text":"<pre><code>INST_ID=\nREMOTE_HOST=\naws ssm start-session --target ${INST_ID} \\\n--document-name AWS-StartPortForwardingSessionToRemoteHost \\\n--parameters '{\n\"localPortNumber\":[\"9999\"],\n\"host\":[\"'\"${REMOTE_HOST}\"'\"],\n\"portNumber\":[\"443\"]\n}' \n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#send-command","title":"send-command","text":"<ul> <li>ssm-document-runshell</li> </ul>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#create-document-and-run-it","title":"create document and run it","text":"<ul> <li>https://aws.amazon.com/blogs/mt/amazon-ec2-systems-manager-documents-support-for-cross-platform-documents-and-multiple-steps-of-the-same-type/</li> </ul> <pre><code>aws ssm create-document --name step3demo --content file://a.json --document-type Command\n</code></pre> <pre><code># create automation document\nfor FILE in * ; do\n    aws ssm create-document \\\n    --content file://./${FILE} \\\n    --name ${FILE%%.json} \\\n    --document-type Automation\ndone\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#parameter","title":"parameter","text":"<pre><code>aws ssm put-parameter \\\n    --name  /brconnector/first-user-key  \\\n    --value \"\" \\\n    --type String \\\n    --overwrite \\\n    --region us-west-2\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#filter-inventory-","title":"filter-inventory-","text":"<pre><code>aws ssm get-inventory --filter Key=\"Custom:DiskUtilization.Size(GB)\",Values=100,Type=Equal\naws ssm get-inventory --filter Key=Custom:DiskUtilization.Use%,Values=60,Type=GreaterThan\n</code></pre>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#get-parameter","title":"get parameter","text":"<ul> <li>../../EKS/cluster/eks-public-access-cluster</li> <li>ssm-public-parameters</li> </ul>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#join-domain-sample","title":"join domain sample","text":"right-click &amp; open-in-new-tab:  <ul> <li>example <pre><code>aws ssm send-command --document-name \"AWS-JoinDirectoryServiceDomain\" --document-version \"1\" --targets '[{\"Key\":\"InstanceIds\",\"Values\":[\"i-0e23xxxx8bdc6xxxx\"]}]' --parameters '{\"directoryOU\":[\"\"],\"directoryId\":[\"d-9axxxxe3cf\"],\"directoryName\":[\"xxxx.aws.panlm.xyz\"],\"dnsIpAddresses\":[\"172.31.xx.xx\",\"172.31.xx.xx\"]}' --timeout-seconds 600 --max-concurrency \"50\" --max-errors \"0\" --region us-east-2\n</code></pre></li> </ul>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/ssm-cmd/#create-ssm-vpc-endpoint","title":"create ssm vpc endpoint","text":"<p><pre><code>export AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nexport AWS_PAGER=''\n\n# get cloud9 vpc\nC9_INST_ID=$(curl http://169.254.169.254/1.0/meta-data/instance-id 2&gt;/dev/null)\nC9_VPC_ID=$(aws ec2 describe-instances \\\n--instance-ids ${C9_INST_ID} \\\n--query 'Reservations[0].Instances[0].VpcId' --output text)\n\n# get public subnet \nC9_SUBNETS_ID=$(aws ec2 describe-subnets \\\n--filter \"Name=vpc-id,Values=${C9_VPC_ID}\" \\\n--query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n--output text)\n\n# get default security group \nC9_DEFAULT_SG_ID=$(aws ec2 describe-security-groups \\\n--filter Name=vpc-id,Values=${C9_VPC_ID} \\\n--query \"SecurityGroups[?GroupName == 'default'].GroupId\" \\\n--output text)\n\n# allow 80/443 from anywhere\nfor i in 80 443 ; do\naws ec2 authorize-security-group-ingress \\\n  --group-id ${C9_DEFAULT_SG_ID} \\\n  --protocol tcp \\\n  --port $i \\\n  --cidr 0.0.0.0/0  \ndone\n\n# ssm ssmmessages\nfor i in ssm ssmmessages ; do\naws ec2 create-vpc-endpoint \\\n--vpc-id ${C9_VPC_ID} \\\n--vpc-endpoint-type Interface \\\n--service-name com.amazonaws.${AWS_DEFAULT_REGION}.${i} \\\n--subnet-ids ${C9_SUBNETS_ID} \\\n--security-group-id ${C9_DEFAULT_SG_ID} \ndone\n</code></pre> ^ssm-vpce-0513</p>","tags":["aws/cmd","aws/mgmt/systems-manager"]},{"location":"CLI/awscli/sts-cmd/","title":"sts-cmd","text":"","tags":["aws/cmd"]},{"location":"CLI/awscli/sts-cmd/#get-session-token","title":"get session token","text":"<pre><code>export CRED=$(aws sts get-session-token --duration-seconds 86400)\nexport AWS_ACCESS_KEY_ID=$(echo \"${CRED}\" | jq -r '.Credentials.AccessKeyId')\nexport AWS_SECRET_ACCESS_KEY=$(echo \"${CRED}\" | jq -r '.Credentials.SecretAccessKey')\nexport AWS_SESSION_TOKEN=$(echo \"${CRED}\" | jq -r '.Credentials.SessionToken')\n</code></pre>","tags":["aws/cmd"]},{"location":"CLI/awscli/sts-cmd/#environment-in-powershell","title":"environment in powershell","text":"<pre><code>$Env:AWS_ACCESS_KEY_ID=\"\"\n$Env:AWS_SECRET_ACCESS_KEY=\"\"\n$Env:AWS_SESSION_TOKEN=\"\"\n</code></pre>","tags":["aws/cmd"]},{"location":"CLI/awscli/vpc-cmd/","title":"vpc-cmd","text":"","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#vpc-creation","title":"vpc creation","text":"<ul> <li> dns hostname \u2013&gt; true</li> </ul> <pre><code># 10-128-vpc\nCIDR=10.128\nVPC_NAME=vpc-$(echo ${CIDR} |tr '.' '-')\nexport AWS_DEFAULT_REGION=cn-north-1\n\n# first 2 AZs\nAZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text |xargs -n 1 |sed -n '1,2p' |xargs))\n\n# create vpc\nVPC_ID=$(aws ec2 create-vpc --cidr-block ${CIDR}.0.0/16 --tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value='\"${VPC_NAME}\"'}]' --query Vpc.VpcId --output text)\naws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id ${VPC_ID} \n\n# create subnet 2x pub, 2x priv, 2x tgw\nnum=0\nfor j in pub priv tgw ; do\n    for i in ${AZS[@]}; do\n        output=$j.$(date +%H%M%S)\n        aws ec2 create-subnet --vpc-id ${VPC_ID} \\\n        --cidr-block ${CIDR}.${num}.0/22 \\\n        --availability-zone ${i} \\\n        --tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value='\"${VPC_NAME}\"'-'\"${j}\"'-'\"${i##*-}\"'}]' |tee -a ${output}\n        num=$((num+4))\n    done\ndone\n\n# create igw\nIGW_ID=$( aws ec2 create-internet-gateway --tag-specifications 'ResourceType=internet-gateway,Tags=[{Key=Name,Value='\"${VPC_NAME}\"'-igw}]' --query InternetGateway.InternetGatewayId --output text )\naws ec2 attach-internet-gateway --vpc-id ${VPC_NAME} --internet-gateway-id ${IGW_ID}\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#subnet-find","title":"subnet find","text":"<pre><code>aws ec2 describe-subnets --filters \"Name=vpc-id,Values=${ovpc1_id}\" \\\n  --query \"Subnets[*].{ID:SubnetId,CIDR:CidrBlock}\"\n\naws ec2 describe-subnets --filters \"Name=vpc-id,Values=${ovpc1_id}\" \\\n  --query \"Subnets[*]\" |jq -r '.[].SubnetId'\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#first-2-subnets","title":"first 2 subnets","text":"<pre><code>FIRST_2AZ=$(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text |awk '{print $1,$2}')\nSUBNET_IDS=$(for i in ${FIRST_2AZ}; do \n    aws ec2 describe-subnets \\\n        --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n        --query 'Subnets[?AvailabilityZone==`'\"${i}\"'`].SubnetId' \\\n        --output text\ndone |xargs)\n</code></pre> <pre><code>FIRST_2AZ=$(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text |awk '{print $1,$2}')\nSUBNET_IDS=$(for i in ${FIRST_2AZ}; do \naws ec2 describe-subnets \\\n--filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n--query 'Subnets[?(AvailabilityZone==`'\"${i}\"'` &amp;&amp; MapPublicIpOnLaunch==`true`)].SubnetId' \\\n--output text\ndone |xargs)\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#list-subnet-in-table","title":"list subnet in table","text":"<pre><code>aws ec2 describe-subnets --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n  --query \"Subnets[].[AvailabilityZone,SubnetId]\" --output text\n</code></pre> <ul> <li>refer: ../../EKS/solutions/network/eks-custom-network</li> </ul>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#createdelete-transit-gateway","title":"create/delete transit gateway","text":"","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#create","title":"create","text":"<pre><code>aws ec2 create-transit-gateway \\\n  --tag-specifications 'ResourceType=transit-gateway,Tags=[{Key=Name,Value=otgw1}]' \\\n  --query TransitGateway.TransitGatewayId --output text\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#delete-transit-gateway","title":"delete transit gateway","text":"<pre><code>aws ec2 describe-transit-gateway-attachments |jq -r .TransitGatewayAttachments[].TransitGatewayAttachmentId\naws ec2 delete-transit-gateway-vpc-attachment --transit-gateway-attachment-id tgw-attach-012c31682d0c11f22\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#vpc-subnet","title":"vpc &amp; subnet","text":"<pre><code>aws ec2 create-subnet --cidr-block 10.1.0.0/20 --vpc-id vpc-xxx --availability-zone-id cnnw1-az1\naws ec2 create-subnet --cidr-block 10.1.16.0/20 --vpc-id vpc-xxx --availability-zone-id cnnw1-az2\naws ec2 create-subnet --cidr-block 10.1.32.0/20 --vpc-id vpc-xxx --availability-zone-id cnnw1-az3\n\n\naws ec2 create-subnet --cidr-block 10.2.0.0/20 --vpc-id vpc-xxx --availability-zone-id cnnw1-az1\naws ec2 create-subnet --cidr-block 10.2.16.0/20 --vpc-id vpc-xxx --availability-zone-id cnnw1-az2\naws ec2 create-subnet --cidr-block 10.2.32.0/20 --vpc-id vpc-xxx --availability-zone-id cnnw1-az3\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#route-table","title":"route table","text":"","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#peering","title":"peering","text":"<pre><code>CLUSTER_NAME=ekscluster2\nTARGET_CIDR='10.251.0.0/16'\nPEER_ID=pcx-xxx\n\nVPC_ID=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} \\\n  --query \"cluster.resourcesVpcConfig.vpcId\" \\\n  --output text)\n\nROUTE_TABLES=($(aws ec2 describe-route-tables \\\n  --filters \"Name=vpc-id,Values=${VPC_ID}\" \"Name=association.main,Values=false\" \\\n  --query \"RouteTables[].RouteTableId\" \\\n  --output text))\n\nfor i in ${ROUTE_TABLES[@]}; do\n  aws ec2 create-route --route-table-id $i \\\n    --destination-cidr-block ${TARGET_CIDR} \\\n    --vpc-peering-connection-id ${PEER_ID}\ndone\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#tgw","title":"tgw","text":"","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#cidr-range","title":"cidr range","text":"RFC 1918 range Example CIDR block 10.0.0.0 - 10.255.255.255 (10/8 prefix) 10.0.0.0/16 172.16.0.0 - 172.31.255.255 (172.16/12 prefix) 172.31.0.0/16 192.168.0.0 - 192.168.255.255 (192.168/16 prefix) 192.168.0.0/20","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#func-get-default-vpc-","title":"func-get-default-vpc-","text":"func-get-default-vpc<pre><code>function get-default-vpc () {\n    DEFAULT_VPC=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true --query 'Vpcs[0].VpcId' --output text)\n    DEFAULT_CIDR=$(aws ec2 describe-vpcs --filter Name=is-default,Values=true --query 'Vpcs[0].CidrBlock' --output text)\n}\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#func-get-subnets-","title":"func-get-subnets-","text":"func-get-subnets<pre><code>function get-subnets () {\n    if [[ $# -lt 1 ]]; then\n        echo \"format: $0 VPC_ID [true|false]\"\n        echo \"parameter 2: true for public, false for private\"\n        return\n    else\n        local VPC_ID=$1\n        local IS_PUBLIC=$(echo $2 |tr 'A-Z' 'a-z') # lower case $2\n    fi\n\n    if [[ -z ${IS_PUBLIC} ]]; then\n        IS_PUBLIC=true\n    fi\n\n    if [[ ${IS_PUBLIC} == 'true' || ${IS_PUBLIC} == 'false' ]]; then\n        echo \"get public subnet is: \" ${IS_PUBLIC}\n    else\n        echo \"parameter 2: true for public, false for private\"\n        return\n    fi\n\n    SUBNET_IDS=$(aws ec2 describe-subnets \\\n        --filter \"Name=vpc-id,Values=${VPC_ID}\" \\\n        --query 'Subnets[?MapPublicIpOnLaunch==`'\"${IS_PUBLIC}\"'`].SubnetId' \\\n        --output text)\n}\n</code></pre> <p>also see sample in ../../EKS/cluster/eks-private-access-cluster</p>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#get-instance-vpc","title":"get instance vpc","text":"<pre><code>VPC_ID=$(aws ec2 describe-instances --instance-ids ${INST_ID} --query 'Reservations[0].Instances[0].VpcId' --output text)\n</code></pre>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/awscli/vpc-cmd/#create-vpc-endpoint","title":"create vpc endpoint","text":"<p>another sample: ssm-cmd another sample: TC-private-apigw-dataflow</p>","tags":["aws/network/vpc","aws/cmd","todo"]},{"location":"CLI/linux/docker-cmd/","title":"docker cmd","text":"","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#docker-build","title":"docker build","text":"<pre><code>docker build --tag panlm/ntnx:app2 .\ndocker run -d --name app2 -p 5000:5000 app2\ndocker login -u panlm\ndocker push panlm/ntnx:app2\n</code></pre> <pre><code>docker pull panlm/ntnx:app2\ndocker run -d --name app2 -p 5000:5000 panlm/ntnx:app2\n\ndocker exec -it app2 /bin/bash\n</code></pre>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#docker-buildx-","title":"docker-buildx-","text":"<ul> <li>download binary from https://github.com/docker/buildx/ <pre><code>mkdir -p ~/.docker/cli-plugins\nmv &lt;buildx&gt; ~/.docker/cli-plugins/docker-buildx\nchmod a+x ~/.docker/cli-plugins/docker-buildx\n</code></pre></li> <li>check qemu emulators <pre><code>docker buildx ls\ndocker run -t --rm --privileged tonistiigi/binfmt --install all\ndocker buildx create --use --platform=linux/arm64,linux/amd64 --name multi-platform-builder\ndocker buildx inspect --bootstrap\n</code></pre></li> <li>build multi arch <pre><code>docker buildx build \\\n--platform linux/amd64,linux/arm64 \\\n-t 123456789012.dkr.ecr.us-east-2.amazonaws.com/osarch:latest \\\n--push .\n</code></pre></li> <li>refer: ../../../../WebClip/How to quickly setup an experimental environment to run containers on x86 and AWS Graviton2 based Amazon EC2 instances</li> <li>refer: multi-architecture-image</li> </ul>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#docker-image","title":"docker image","text":"","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#clean","title":"clean","text":"<pre><code>docker image prune -a\n</code></pre>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#samples","title":"samples","text":"","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#flask-app","title":"flask app","text":"<ul> <li> <p>python_app.py <pre><code>#!/usr/bin/env python3\nfrom flask import Flask\nimport os\n\napp = Flask(__name__)\n@app.route('/')\ndef index():\n    return f\"{{ OS Architecture: {os.uname().machine} }}\"\n\nif __name__ == '__main__':\n    app().run(host='0.0.0.0')\n</code></pre></p> </li> <li> <p>Dockerfile <pre><code>FROM public.ecr.aws/bitnami/python:3.7\nEXPOSE 5000\nWORKDIR /\nCOPY ./python_app.py /app.py\nRUN pip install flask\nCMD [\"flask\", \"run\", \"--host\", \"0.0.0.0\"]\n</code></pre></p> </li> <li>create repo ../awscli/ecr-cmd</li> <li> <p>build <pre><code>echo ${REPO_URI}\ndocker build -t ${REPO_URI}:latest .\ndocker push ${REPO_URI}:latest\n</code></pre></p> </li> <li> <p>docker run for testing <pre><code>docker run --rm -d -p 8080:5000 --name osarch ${REPO_URI}:latest\n</code></pre></p> </li> </ul>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#build-colorapp-","title":"build-colorapp-","text":"<ul> <li> <p>v1 <pre><code>export AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document |jq -r '.region')\nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\nECR_URL=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\n\naws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_URL}\n\ncd /tmp\ngit clone https://github.com/sanjeevrg89/samplecolorapp.git\ncd samplecolorapp\n\nPROJ_NAME=sample\nAPP_NAME=colorapp\nECR_IMAGE_NAME=${ECR_URL}/${PROJ_NAME}/${APP_NAME}\naws ecr create-repository \\\n--repository-name ${PROJ_NAME}/${APP_NAME}\ndocker build . -t ${ECR_IMAGE_NAME}:v1\ndocker push ${ECR_IMAGE_NAME}:v1\n</code></pre></p> </li> <li> <p>v2 <pre><code>cd v2\ndocker build . -t ${ECR_IMAGE_NAME}:v2\ndocker push ${ECR_IMAGE_NAME}:v2\n</code></pre></p> </li> <li> <p>refer: https://github.com/sanjeevrg89/samplecolorapp</p> </li> </ul>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#ubuntu-based","title":"ubuntu-based","text":"<pre><code>FROM python:2.7\n#RUN [\"apt-get\", \"update\"]\n#RUN [\"apt-get\", \"install\", \"-y\", \"vim\"]\nCOPY . /app\nWORKDIR /app\nRUN pip install -r requirements.txt\nEXPOSE 5000\nCMD python ./app.py\n</code></pre>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#centos-based","title":"centos-based","text":"<pre><code>FROM centos:7\nRUN [\"yum\", \"install\", \"-y\", \"epel-release\", \"gcc\", \"python-devel\", \"python2-pip\"]\nRUN [\"rpm\", \"-Uvh\", \"https://repo.mysql.com/mysql80-community-release-el7-3.noarch.rpm\"]\nRUN [\"yum\", \"install\", \"-y\", \"--enablerepo=mysql80-community\", \"mysql-community-devel\"]\nCOPY . /app\nWORKDIR /app\nRUN pip install -r requirements.txt\nEXPOSE 5000\nCMD python ./app.py\n</code></pre>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#docker-run","title":"docker run","text":"<ul> <li>docker-run <pre><code>docker run --restart=unless-stopped redis\n</code></pre></li> </ul>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#docker-push","title":"docker push","text":"<ul> <li>https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-push-ecr-image.html</li> </ul>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#docker-environment-variable","title":"docker environment variable","text":"<p>https://phoenixnap.com/kb/docker-environment-variables</p> <p><code>ENV SPARK_VERSION=3.3.3</code></p>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#compose","title":"compose","text":"<pre><code>sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\nsudo chmod a+x /usr/local/bin/docker-compose\n</code></pre>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/docker-cmd/#install-","title":"install-","text":"<ul> <li>ubuntu <ul> <li>https://docs.docker.com/engine/install/ubuntu/</li> </ul> </li> </ul> <pre><code># for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install -y ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\nsudo getent group docker\nsudo groupadd docker\nsudo usermod -aG docker $USER\nnewgrp docker\n</code></pre>","tags":["docker","linux","cmd"]},{"location":"CLI/linux/eksctl/","title":"eksctl-cmd","text":"","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#install","title":"install","text":"<pre><code># install eksctl\n# consider install eksctl version 0.89.0\n# if you have older version yaml \n# https://eksctl.io/announcements/nodegroup-override-announcement/\ncurl --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nsudo mv -v /tmp/eksctl /usr/local/bin\neksctl completion bash &gt;&gt; ~/.bash_completion\n. /etc/profile.d/bash_completion.sh\n. ~/.bash_completion\n</code></pre> <p>refer: ../../cloud9/setup-cloud9-for-eks </p>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#auto-mode-","title":"auto-mode-","text":"<pre><code>eksctl create cluster --name=ekscluster1 --enable-auto-mode\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#oidc","title":"oidc","text":"<pre><code>eksctl utils associate-iam-oidc-provider --cluster $EKS_CLUSTER_NAME --region $AWS_REGION --approve\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#iamidentitymapping-","title":"iamidentitymapping-","text":"<ul> <li>add role to <code>aws-auth</code> configmap (eks-aws-auth) <pre><code>CLUSTER_NAME=ekscluster1\nARN=role-arn\nAWS_REGION=us-west-2\n\neksctl get iamidentitymapping \\\n    --cluster ${CLUSTER_NAME} --region ${AWS_REGION}\n\neksctl create iamidentitymapping \\\n    --cluster ${CLUSTER_NAME} --region ${AWS_REGION} \\\n    --arn ${ARN} \\\n    --group system:masters --username admin \n</code></pre></li> </ul>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#create-windows-self-managed-node-group","title":"create windows self-managed node group","text":"<pre><code>CLUSTER_NAME=myeksctl\nexport AWS_DEFAULT_REGION=us-west-2\neksctl create nodegroup   \\\n  --cluster $CLUSTER_NAME   \\\n  --name nodegroup-win-1   \\\n  --node-type m5.xlarge   \\\n  --nodes 1   \\\n  --nodes-min 1   \\\n  --nodes-max 2 \\\n  --node-ami-family WindowsServer2019FullContainer \\\n  --managed=false\n</code></pre> <pre><code>CLUSTER_NAME=myeksctl\nexport AWS_DEFAULT_REGION=us-west-2\neksctl create nodegroup   \\\n  --cluster $CLUSTER_NAME   \\\n  --name nodegroup-br-1   \\\n  --node-type m5.xlarge   \\\n  --nodes 1   \\\n  --nodes-min 1   \\\n  --nodes-max 2 \\\n  --node-ami-family Bottlerocket\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#create-nodegroup","title":"create nodegroup","text":"<ul> <li>create nodegroup on a cluster which not created by eksctl<ul> <li>https://eksctl.io/usage/unowned-clusters/#creating-nodegroups <pre><code>CLUSTER_NAME=ekscluster2\nexport AWS_DEFAULT_REGION=us-west-2\neksctl create nodegroup   \\\n  --cluster ${CLUSTER_NAME}   \\\n  --name mng-a   \\\n  --node-type m5.large   \\\n  --nodes 3   \\\n  --node-private-networking \\\n  --subnet-ids subnet-aaa,subnet-bbb \\\n  --node-security-groups sg-xxx # this is the ControlPlaneSecurityGroup\n</code></pre></li> </ul> </li> </ul>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#scale-nodegroup","title":"scale nodegroup","text":"<pre><code>CLUSTER_NAME=ekscluster1\nNODEGROUP_NAME=managed-ng\nAWS_REGION=us-east-2\n\neksctl scale nodegroup \\\n    --cluster=${CLUSTER_NAME} \\\n    --region ${AWS_REGION} \\\n    --nodes=3 \\\n    ${NODEGROUP_NAME}\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#func-create-iamserviceaccount-","title":"func-create-iamserviceaccount-","text":"func-create-iamserviceaccount.sh<pre><code># depends on: CLUSTER_NAME / NAMESPACE_NAME\n# output variable: S3_ADMIN_ROLE_ARN\n# quick link: https://panlm.github.io/CLI/functions/func-create-iamserviceaccount.sh\n\nfunction create-iamserviceaccount () {\n    OPTIND=1\n    OPTSTRING=\"h?s:c:n:r:\"\n    local SA_NAME=\"\"\n    local CLUSTER_NAME=\"\"\n    local NAMESPACE_NAME=\"\"\n    local ROLE_ONLY=\"\"\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            s) SA_NAME=${OPTARG} ;;\n            c) CLUSTER_NAME=${OPTARG} ;;\n            n) NAMESPACE_NAME=${OPTARG} ;;\n            r) ROLE_ONLY=${OPTARG} ;;\n            h|\\?) \n                echo \"format: create-iamserviceaccount -s SERVICE_ACCOUNT_NAME -c CLUSTER_NAME -n NAMESPACE_NAME -r [true|false] \"\n                echo -e \"\\tsample: create-iamserviceaccount -s sa_name -c ekscluster1 -n monitoring -r true \"\n                return 0\n            ;;\n        esac\n    done\n    : ${SA_NAME:?Missing -s}\n    : ${CLUSTER_NAME:?Missing -c}\n    : ${NAMESPACE_NAME:?Missing -n}\n    : ${ROLE_ONLY:?Missing -r}\n\n    if [[ ${ROLE_ONLY} == \"true\" ]]; then\n        local ROLE_OPTION=\"--role-only\"\n    elif [[ ${ROLE_ONLY} == \"false\" ]]; then\n        local ROLE_OPTION=\"\"\n    else\n        echo \"only true/false allow in parameter '-r' \"\n        return 9\n    fi\n\n    echo ${SA_NAME:=sa-s3-admin-$(TZ=EAT-8 date +%Y%m%d-%H%M%S)}\n    eksctl create iamserviceaccount -c ${CLUSTER_NAME} \\\n        --name ${SA_NAME} --namespace ${NAMESPACE_NAME} \\\n        --attach-policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess \\\n        --role-name ${SA_NAME}-$(TZ=EAT-8 date +%Y%m%d-%H%M%S) ${ROLE_OPTION} --approve \\\n        --override-existing-serviceaccounts\n    unset S3_ADMIN_ROLE_ARN\n    S3_ADMIN_ROLE_ARN=$(eksctl get iamserviceaccount -c $CLUSTER_NAME \\\n        --name ${SA_NAME} -o json |jq -r '.[].status.roleARN')\n    echo ${S3_ADMIN_ROLE_ARN}\n}\n</code></pre> <ul> <li>refer: func-create-iamserviceaccount</li> </ul>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#appmesh-cluster","title":"appmesh cluster","text":"<pre><code>eksctl create cluster \\\n--name appmeshtest \\\n--nodes-min 2 \\\n--nodes-max 3 \\\n--nodes 2 \\\n--auto-kubeconfig \\\n--full-ecr-access \\\n--appmesh-access\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#appmesh-access-","title":"appmesh-access-","text":"<p><code>--appmesh-access</code> will apply customer inline policy for appmesh</p> <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"servicediscovery:CreateService\",\n                \"servicediscovery:DeleteService\",\n                \"servicediscovery:GetService\",\n                \"servicediscovery:GetInstance\",\n                \"servicediscovery:RegisterInstance\",\n                \"servicediscovery:DeregisterInstance\",\n                \"servicediscovery:ListInstances\",\n                \"servicediscovery:ListNamespaces\",\n                \"servicediscovery:ListServices\",\n                \"servicediscovery:GetInstancesHealthStatus\",\n                \"servicediscovery:UpdateInstanceCustomHealthStatus\",\n                \"servicediscovery:GetOperation\",\n                \"route53:GetHealthCheck\",\n                \"route53:CreateHealthCheck\",\n                \"route53:UpdateHealthCheck\",\n                \"route53:ChangeResourceRecordSets\",\n                \"route53:DeleteHealthCheck\",\n                \"appmesh:*\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\n</code></pre>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#full-ecr-access","title":"full-ecr-access","text":"<p><code>--full-ecr-access</code> will apply ECR power user policy to node</p> <ul> <li>and others </li> </ul>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksctl/#refer","title":"refer","text":"<ul> <li>https://eksctl.io/usage/minimum-iam-policies/</li> </ul>","tags":["aws/container/eks"]},{"location":"CLI/linux/eksdemo/","title":"eksdemo","text":"","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/eksdemo/#install","title":"install","text":"<pre><code>curl --location \"https://github.com/awslabs/eksdemo/releases/latest/download/eksdemo_$(uname -s)_x86_64.tar.gz\" |tar xz -C /tmp\nsudo mv -v /tmp/eksdemo /usr/local/bin\n</code></pre>","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/eksdemo/#create-eks-cluster-","title":"create-eks-cluster-","text":"<ul> <li> <p>create cluster <pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=us-west-2\n\neksdemo create cluster ${CLUSTER_NAME} \\\n    --instance m5.large \\\n    --nodes 3 \\\n    --version 1.31 \\\n    --vpc-cidr 10.10.0.0/16\n</code></pre></p> </li> <li> <p>create hosted zone (route53-cmd)</p> </li> <li>create ACM (create-certificate-with-eksdemo)</li> <li>install alb controller (install alb controller) </li> <li>install external dns (install externaldns)</li> <li>install game-2048 (link) <pre><code>eksdemo install example-game-2048 -c ${CLUSTER_NAME} -I game2048.${DOMAIN_NAME} --dry-run\n</code></pre></li> </ul>","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/eksdemo/#create-node-group","title":"create node group","text":"<pre><code>eksdemo create ng mng1 \\\n    -c ekscluster1 -i m5.large -N 3 \n</code></pre>","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/eksdemo/#fargate-profile-","title":"fargate-profile-","text":"<pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=us-west-2\nNAMESPACE=game-2048\n\neksdemo create fargate-profile fp-game-2048 \\\n    -c ${CLUSTER_NAME} \n    --namespaces ${NAMESPACE}\n</code></pre>","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/eksdemo/#addons-","title":"addons-","text":"<ul> <li>externaldns (externaldns-for-route53)</li> <li>aws load balancer controller (aws-load-balancer-controller)</li> <li> <p>metrics-server (metrics-server)</p> </li> <li> <p>2 certificates, one for each domain name in original region</p> </li> </ul> right-click &amp; open-in-new-tab:  <p></p> <p>refer: create-certificate-with-eksdemo </p>","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/eksdemo/#refer","title":"refer","text":"<ul> <li>when create broken due to role change in cloud9, add another admin user to eks cluster and try create nodegroup (eks-access-api)</li> </ul>","tags":["aws/container/eks","aws/cmd"]},{"location":"CLI/linux/ffmpeg/","title":"ffmpeg","text":"","tags":["cmd/ffmpeg"]},{"location":"CLI/linux/ffmpeg/#cut-first-15-sec-video-clip","title":"cut first 15 sec video clip","text":"<pre><code>ffmpeg -i J3tfdcwb5U4.mp4 -ss 00:00:0.0 -c copy -t 18  \"newfile.mp4\"\n</code></pre>","tags":["cmd/ffmpeg"]},{"location":"CLI/linux/go-cmd/","title":"go-cmd","text":"","tags":["draft","linux"]},{"location":"CLI/linux/go-cmd/#install","title":"install","text":"<p>git/git-mkdocs/CLI/linux/linux-cmd</p>","tags":["draft","linux"]},{"location":"CLI/linux/granted-assume/","title":"assume","text":"<p>https://www.granted.dev/</p>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/granted-assume/#create-role-for-account-to-assume","title":"create role for account to assume","text":"create-aws-config-entity<pre><code>function create-aws-config-entity () {\necho WS_NAME=$(TZ=EAT-8 date +%Y%m%d-%H%M)\nACCOUNT_ID=$(GRANTED_QUIET=true . assume panlm --exec \"aws sts get-caller-identity\" |jq -r '.Account')\nLOCAL_ACCOUNT_ID=$(aws sts get-caller-identity |jq -r '.Account')\nROLE_NAME=panlm # easy for remeber and switch from WSParticipantRole\nenvsubst &gt; /tmp/${ROLE_NAME}-trust.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": [\n                    \"arn:aws:iam::${ACCOUNT_ID}:root\",\n                    \"arn:aws:iam::${LOCAL_ACCOUNT_ID}:root\"\n                ]\n            },\n            \"Action\": \"sts:AssumeRole\",\n            \"Condition\": {}\n        }\n    ]\n}\nEOF\naws iam create-role --role-name ${ROLE_NAME} \\\n    --assume-role-policy-document file:///tmp/${ROLE_NAME}-trust.json \\\n    --max-session-duration 43200 |tee /tmp/${ROLE_NAME}-role.json\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n    --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\nROLE_ARN=$(cat /tmp/${ROLE_NAME}-role.json |jq -r '.Role.Arn')\n\nCREDENTIAL_ENTITY_NAME=\"0-ws-${WS_NAME}\"\nenvsubst &gt;&gt; ~/.aws/config &lt;&lt;-EOF\n[profile $CREDENTIAL_ENTITY_NAME]\nrole_arn=${ROLE_ARN}\nsource_profile=panlm\nrole_session_name=granted\nregion=us-east-2\nEOF\necho ${CREDENTIAL_ENTITY_NAME}\n}\n</code></pre>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/granted-assume/#modify-role-for-account-to-assume","title":"modify role for account to assume","text":"<ul> <li>DEPRECATED due to new SCP policy do not allow to modify WSParticipantRole\u2019s trust policy</li> <li>login from macbook CLI</li> <li>modify existed role for login - WSParticipantRole</li> <li>create aws credential entities</li> </ul> <pre><code>assume panlm\n\necho ${AWS_ACCESS_KEY_ID} \necho ${AWS_SECRET_ACCESS_KEY}\necho ${AWS_SESSION_TOKEN}\n\naws sts get-caller-identity\n</code></pre> <pre><code>echo ${WS_NAME:=$(TZ=EAT-8 date +%Y%m%d)}\nACCOUNT_ID=$(GRANTED_QUIET=true . assume panlm --exec \"aws sts get-caller-identity\" |jq -r '.Account')\nROLE_NAME=\"WSParticipantRole\"\n\nTEMP=$(mktemp)\naws iam get-role --role-name ${ROLE_NAME} --output json &gt; ${TEMP}.1\ncat ${TEMP}.1 |jq '.Role.AssumeRolePolicyDocument.Statement[0].Principal.AWS += [\"arn:aws:iam::'\"${ACCOUNT_ID}\"':root\"]' |jq -r '.Role.AssumeRolePolicyDocument' |tee ${TEMP}.2\n\naws iam update-assume-role-policy --role-name ${ROLE_NAME} \\\n  --policy-document file://${TEMP}.2\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n  --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\nROLE_ARN=$(cat ${TEMP}.1 |jq -r '.Role.Arn')\n\nCREDENTIAL_ENTITY_NAME=\"0-ws-${WS_NAME}\"\necho '['\"$CREDENTIAL_ENTITY_NAME\"']' &gt;&gt; ~/.aws/credentials\necho 'role_arn='${ROLE_ARN} &gt;&gt; ~/.aws/credentials\necho 'source_profile=panlm' &gt;&gt; ~/.aws/credentials\necho 'role_session_name=granted' &gt;&gt; ~/.aws/credentials\necho 'region=us-east-2' &gt;&gt; ~/.aws/credentials\necho ''\necho ${CREDENTIAL_ENTITY_NAME}\n</code></pre>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/granted-assume/#install-on-mac","title":"install on mac","text":"<ul> <li> <p>https://docs.commonfate.io/granted/getting-started#installing-the-cli <pre><code>brew tap common-fate/granted\nbrew install granted\n</code></pre></p> </li> <li> <p>still has issue until 0.20.7 <pre><code>VERSION=0.20.3\ncurl -OL https://releases.commonfate.io/granted/v${VERSION}/granted_${VERSION}_darwin_x86_64.tar.gz\ntar -zxvf ./granted_${VERSION}_darwin_x86_64.tar.gz -C /usr/local/bin/\n\nrm -f /usr/local/bin/assumego\nln -s /usr/local/bin/granted /usr/local/bin/assumego\n</code></pre></p> </li> </ul>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/granted-assume/#import-existed-credentials-to-mac-login-keychain","title":"import existed credentials to mac <code>login</code> keychain","text":"<pre><code>granted credentials import example\n</code></pre>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/granted-assume/#export-to-aws-credentials-file","title":"export to aws credentials file","text":"<ul> <li>This command can be used to return your credentials to the original insecure plaintext format in the AWS credentials file. <pre><code>granted credentials export-plaintext example\n</code></pre></li> </ul>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/granted-assume/#refer","title":"refer","text":"<ul> <li>https://docs.commonfate.io/granted/introduction</li> <li> <p>https://awsu.me/</p> </li> <li> <p>open console in chrome browser <pre><code>granted console\n</code></pre></p> </li> </ul>","tags":["cmd","aws/security/iam"]},{"location":"CLI/linux/helm-cmd/","title":"helm-cmd","text":"","tags":["kubernetes"]},{"location":"CLI/linux/helm-cmd/#install","title":"install","text":"<pre><code>helm upgrade -i -f prom.yaml prom-0327 prometheus-community/kube-prometheus-stack --namespace monitoring\n</code></pre>","tags":["kubernetes"]},{"location":"CLI/linux/helm-cmd/#search-chats","title":"search chats","text":"<pre><code>helm search repo &lt;repo_name&gt;\n</code></pre>","tags":["kubernetes"]},{"location":"CLI/linux/helm-cmd/#show-value","title":"show value","text":"<pre><code># refer defualt value\nhelm show values prometheus-community/kube-prometheus-stack &gt; values_default.yaml\n</code></pre>","tags":["kubernetes"]},{"location":"CLI/linux/iptables/","title":"iptables","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/iptables/#example","title":"example","text":"<ul> <li>git/git-mkdocs/CLI/linux/linux-cmd</li> <li>fake-waf-on-ec2-forwarding-https</li> <li>reverse-proxy-in-china-region-</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/iptables/#doc","title":"doc","text":"<ul> <li>https://www.frozentux.net/iptables-tutorial/cn/iptables-tutorial-cn-1.1.19.html#TRAVERSINGOFTABLES</li> <li>https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture#iptables-and-connection-tracking</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/iptables/#compare-with-nginx","title":"compare with nginx","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/jq-cmd/","title":"how-to-use-jq","text":"","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#reference","title":"reference","text":"<ul> <li>https://programminghistorian.org/en/lessons/json-and-jq</li> <li>https://jqplay.org/</li> <li>https://stedolan.github.io/jq/manual/#Invokingjq</li> <li>https://ubuntu.com/blog/improving-cli-output-with-jq</li> </ul>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#sample","title":"sample","text":"","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#snapshot-sort","title":"snapshot sort","text":"<p>refer git/git-mkdocs/CLI/awscli/ebs-cmd</p> <p></p>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#select","title":"select","text":"<pre><code>t = pyjq.all('.entities[] | select (.uuid==\\\"' + i + '\\\") ', full)\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#output","title":"output","text":"<pre><code>jq -r '[...]|@csv' |column -t -s','\njq -r '[...]|@tsv' |column -t \n</code></pre> <pre><code># add table head\naz resource list |jq -r '\\\n[\"name\",\"resgrp\"], [\"--\",\"--\"], \\\n(.[] | [.name, .resourceGroup])|@tsv' |column -t\n\naz resource list |jq -r '\\\n([\"name\", \"resgrp\", \"Owner\"] | (., map(length*\"-\"))), \\\n(.[] | [.name, .resourceGroup, .tags.owner//\"-\"])|@tsv' |column -t\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#if-else","title":"if else","text":"<pre><code>aws translate list-text-translation-jobs |jq -r '.TextTranslationJobPropertiesList[] | (if .JobStatus == \"IN_PROGRESS\" then .JobStatus, .JobName, .JobId else empty end)' |xargs\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#combine-output-to-a-array","title":"combine output to a array","text":"<pre><code>... |jq -s .\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#filter-value-based-on-regexp","title":"filter value based on regexp","text":"<p><pre><code>#get all script from blueprint\ncat *.json | jq -r '.. | select (.|tostring|test(\"^#!.*\"))'\n</code></pre> and <pre><code>#sample, replace REGEXHERE to your string\n#Key name is \"Name\", replace it\n| select((.Tags[]|select(.Key==\"Name\")|.Value) | match(\"REGEXHERE\") )\n</code></pre></p>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#edit-json-file-directly-","title":"edit-json-file-directly-","text":"<pre><code>jq '. += { \"cpuManagerPolicy\":\"static\"}' /etc/kubernetes/kubelet/kubelet-config.json\n</code></pre> <ul> <li>refer: <ul> <li>../awscli/ecs-cmd</li> <li>../awscli/apigw-cmd</li> <li>../../cloud9/setup-cloud9-for-eks</li> <li>granted-assume</li> <li>../awscli/route53-cmd</li> </ul> </li> </ul>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#good-sample","title":"good sample","text":"<pre><code>developer:\n  android:\n    members:\n\n    - alice\n    - bob\n    oncall:\n    - bob\nhr:\n  members:\n  - charlie\n  - doug\nthis:\n  is:\n    really:\n      deep:\n        nesting:\n          members:\n          - example deep nesting\n</code></pre> <p>to</p> <pre><code>developer-android-members:\n\n  - alice\n  - bob\ndeveloper-android-oncall:\n  - bob\nhr-members:\n  - charlie\n  - doug\nthis-is-really-deep-nesting-members:\n  - example deep nesting\n</code></pre> <p>code </p> <pre><code>yq . | # convert yaml to json using python-yq\n    jq ' \n    . as $input | # Save the input for later\n    . | paths | # Get the list of paths \n        select(.[-1] | tostring | test(\"^(members|oncall|priv)$\"; \"ix\")) | # Only find paths which end with members, oncall, and priv\n        . as $path | # save each path in the $path variable\n    ( $input | getpath($path) ) as $members | # Get the value of each path from the original input\n    {\n        \"key\": ( $path | join(\"-\") ), # The key is the join of all path keys\n        \"value\": $members  # The value is the list of members\n    }\n    ' |\n    jq -s 'from_entries' | # collect kv pairs into a full object using slurp\n    yq --sort-keys -y . # Convert back to yaml using python-yq\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#reinvent-breakout-session","title":"reinvent breakout session","text":"<p>download json <pre><code>youtube-dl https://www.youtube.com/playlist?list=PL2yQDdvlhXf-Jdg0SkHt85s-YvTUaNmgT --skip-download --write-info-json --write-annotations\n</code></pre></p> <p>get title url and description <pre><code>cat *json |jq -r '[\n(if (.title|test(\"\\\\([A-Z]{3}[0-9]{3}\")) then (.title|scan(\"[A-Z]{3}[0-9]{3}\")) else (\" \") end),\n.title,\n.webpage_url,\n(.description\n|gsub(\"\\n\";\"#\")\n|gsub(\"\\\"\";\"\")\n|gsub(\"#Subscribe:.*$\";\"\")\n|gsub(\"Learn more about[^#]*#\";\"\"))\n]|@csv'  &gt; ../a.txt\n</code></pre> upload a.txt</p> <p>match following line <pre><code>xx xx xx xx xx xx xx (CON312 xx xx xx xx\n</code></pre></p> <p>and print following line, if not match, then print \u201d \u201c <pre><code>CON312\n</code></pre></p> <pre><code>#!/bin/bash\n\nfor i in $a ; do\n    file=$(ls |egrep '\\('\"$i\"'\\)' )\n    if [[ -z $file ]]; then\n        echo $i\n    else\n        url=$(cat \"$file\" |jq -r '.webpage_url')\n        echo $i $url\n    fi\ndone\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#get-lengh","title":"get lengh","text":"<pre><code>jq -r '.TransitGateways | length'\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#install-jq","title":"install jq","text":"<p>https://stedolan.github.io/jq/download/</p>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#install-jq-on-centos7","title":"install jq on CentOS7","text":"<pre><code>sudo wget -O /usr/local/bin/jq 'https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64'\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#install-pyjq-on-mac","title":"install pyjq on mac","text":"<pre><code>brew remove jq\nbrew install ruby (ruby &gt; 2.3)\nbrew install --HEAD jq\npip install pyjq\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/jq-cmd/#install-pyjq-on-centos-7","title":"install pyjq on CentOS 7","text":"<pre><code>yum groupinstall -y 'Development Tools'\nyum install python-devel\npip install pyjq\n\nyum install python2-pip\npip install \u2014upgrade pip\n</code></pre>","tags":["cmd/jq","python"]},{"location":"CLI/linux/kubectx/","title":"kubectx","text":"<p>https://github.com/ahmetb/kubectx#manual-installation-macos-and-linux</p>","tags":["kubernetes"]},{"location":"CLI/linux/kubectx/#install-manually","title":"install manually","text":"<pre><code>sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx\nsudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx\nsudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens\n</code></pre> <ul> <li>refer: git/git-mkdocs/cloud9/setup-cloud9-for-eks </li> </ul>","tags":["kubernetes"]},{"location":"CLI/linux/kubernetes-cmd/","title":"kubernetes-cmd","text":"","tags":["cmd"]},{"location":"CLI/linux/kubernetes-cmd/#h1","title":"H1","text":"<ul> <li>kubeadm</li> <li>kubectl-cmd</li> <li>kubectl-proxy</li> <li>eksdemo</li> <li>kubectx</li> <li>eksctl</li> </ul>","tags":["cmd"]},{"location":"CLI/linux/linux-cmd/","title":"linux cmd","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#awk","title":"awk","text":"<pre><code>cat docs/CLI/awscli/vpc-cmd.md |awk '/^```sh title=\"func-.*/,/^```$/ {print}' &gt; /tmp/$$.1\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#awscurl","title":"awscurl","text":"<pre><code>export AWS_DEFAULT_REGION=us-east-2\nexport AMP_QUERY_ENDPOINT=https://aps-workspaces.us-east-2.amazonaws.com/workspaces/ws-xxx/api/v1/query\nawscurl -X POST --region ${AWS_DEFAULT_REGION} --service aps \\\n\"${AMP_QUERY_ENDPOINT}\" -d 'query=prometheus_tsdb_head_series' \\\n--header 'Content-Type: application/x-www-form-urlencoded'\n</code></pre> <pre><code>awscurl -X POST --region ${AWS_DEFAULT_REGION} --service aps \\\n\"${AMP_QUERY_ENDPOINT}\" -d 'query=up&amp;time=1652382537&amp;stats=all' \\\n--header 'Content-Type: application/x-www-form-urlencoded'\n</code></pre> <pre><code>query=sum+%28rate+%28go_gc_duration_seconds_count%5B1m%5D%29%29&amp;start=1652382537&amp;end=1652384705&amp;step=1000&amp;stats=all\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#install","title":"install","text":"<pre><code>pip install git+https://github.com/okigan/awscurl\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#brew","title":"brew","text":"<ul> <li>install <pre><code>sudo yum install -y git gcc make curl\ngit clone https://github.com/Homebrew/brew.git\nsudo cp brew/bin/brew /usr/local/bin/\n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#column","title":"column","text":"<pre><code>column -t\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#curl","title":"curl","text":"<ul> <li>curl-sample-1</li> <li>badssl.com</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#check-http-return-code","title":"check http return code","text":"<pre><code>curl -sL -w '%{http_code}' -o /dev/null \"https://httpbin.org/status/302\"\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#datediff","title":"datediff","text":"<ul> <li>http://www.fresse.org/dateutils/ <pre><code>git clone https://github.com/hroptatyr/dateutils.git\ncd dateutils\nsudo yum install -y texinfo gperf\nautoreconf -i\n./configure\nmake\nsudo make install \n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ec2-instance-selector","title":"ec2-instance-selector","text":"<pre><code>brew tap aws/tap\nbrew install ec2-instance-selector\n</code></pre> <pre><code>ec2-instance-selector -c 4 -m 16 -r us-east-2 -a arm64\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#envsubst","title":"envsubst","text":"<pre><code>var1=string1\nvar2=string2\n\ncat &gt;$$.yaml &lt;&lt;-'EOF'\n$var1\n$var2\n$var3\nEOF\n\nexport var1 var2\ncat $$.yaml |envsubst '$var1 $var2' &gt; $$-new.yaml\n</code></pre> <ul> <li>refer envsubst</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ffmpeg","title":"ffmpeg","text":"<ul> <li>ffmpeg</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#fio","title":"fio","text":"<ul> <li>snapshot impact with fio</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#firewall-cmd","title":"firewall-cmd","text":"<pre><code>firewall-cmd --permanent --add-port=80/tcp\nfirewall-cmd --reload\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#function","title":"function","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#less-or-no-parameters","title":"less or no parameters","text":"<ul> <li>\u5728 func \u4e2d\u5b9a\u4e49 local \u53d8\u91cf\uff0cexport \u540e\u5728 func \u5916\u90e8\u4f9d\u7136\u65e0\u6cd5\u8bbf\u95ee <pre><code>function a() {\n local var1=cccc\n echo $var1\n export var1\n}\n\nfunction b() {\n  echo $var1\n  var1=bbb\n}\n\nvar1=abc\n\na\necho $var1\n\nb\necho $var1\n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#parse-parameter","title":"parse parameter","text":"<p><code>c:p:</code> \u53c2\u6570 c \u548c p \u90fd\u9700\u8981\u53c2\u6570 <code>cp</code> \u53c2\u6570 c \u548c p \u90fd\u4e0d\u9700\u8981\u53c2\u6570</p> <pre><code>function parsepara () {\n    OPTIND=1\n    OPTSTRING=\"h?v:c:p:\"\n    local VPC_ID=\"\"\n    local VPC_CIDR=\"\"\n    local PORTS=()\n    while getopts ${OPTSTRING} opt; do\n        case \"${opt}\" in\n            v) VPC_ID=${OPTARG} ;;\n            c) VPC_CIDR=${OPTARG} ;;\n            p) PORTS+=(\"${OPTARG}\") ;;\n            h|\\?) \n                echo \"format: create-sg -v VPC_ID -c VPC_CIDR [-p PORT1] [-p PORT2]\"\n                echo -e \"\\tsample: create-sg -v vpc-xxx -p 172.31.0.0/16\"\n                echo -e \"\\tsample: create-sg -v vpc-xxx -p 0.0.0.0/0 -p 80 -p 443\"\n                return 0\n            ;;\n        esac\n    done\n    : ${VPC_ID:?Missing -v}\n    : ${VPC_CIDR:?Missing -c}\n\n    echo \"CIDR:\"${CIDR}\n    echo \"PORTS:\"${PORTS}\n    echo \"PORTS[@]\"${PORTS[@]}\n\n    for i in ${PORTS[@]:--1}; do\n        echo \"i:\"$i\n    done\n}\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#history","title":"history","text":"<pre><code>bash                        # open a new session.\nunset HISTFILE              # avoid recording commands to file.\ncommands not recorded\n.\n.\nexit\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#imagemagick","title":"imagemagick","text":"<pre><code>brew install imagemagick\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ip-forward-","title":"ip-forward-","text":"<pre><code>echo 'net.ipv4.ip_forward = 1\nnet.ipv4.conf.default.rp_filter = 0\nnet.ipv4.conf.default.accept_source_route = 0\n' |tee -a /etc/sysctl.conf\nsysctl -p\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ip-public","title":"ip-public","text":"<ul> <li>cmd-my-public-ip-address</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#iptables-","title":"iptables-","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#masquerade-","title":"MASQUERADE-","text":"<pre><code>iptables -t nat -A POSTROUTING -j MASQUERADE\niptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j MASQUERADE\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#iptables","title":"iptables","text":"<pre><code>yum install iptables-services -y;\n\n# Start and configure iptables:\nsystemctl enable iptables;\nsystemctl start iptables;\n\n\n# Configuration below allows allows all traffic:\n# Set the default policies for each of the built-in chains to ACCEPT:\niptables -P INPUT ACCEPT;\niptables -P FORWARD ACCEPT;\niptables -P OUTPUT ACCEPT;\n\n# Flush the nat and mangle tables, flush all chains (-F), and delete all non-default chains (-X):\niptables -t nat -F;\niptables -t mangle -F;\niptables -F;\niptables -X;\n\n# Configure nat table to hairpin traffic back to GWLB:\niptables -t nat -A PREROUTING -p udp -s $gwlb_ip -d $instance_ip -i eth0 -j DNAT --to-destination $gwlb_ip:6081;\niptables -t nat -A POSTROUTING -p udp --dport 6081 -s $gwlb_ip -d $gwlb_ip -o eth0 -j MASQUERADE;\n\n# Save iptables:\nservice iptables save;\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#lsblk-","title":"lsblk-","text":"<pre><code>lsblk -o name,mountpoint,label,size,uuid\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#network-monitor","title":"network monitor","text":"<ul> <li>https://www.tecmint.com/linux-network-bandwidth-monitoring-tools/</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#iperf","title":"iperf","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/network-throughput-benchmark-linux-ec2/</li> <li>server  <pre><code>sudo iperf -s\n</code></pre></li> <li>client  <pre><code>iperf -c 172.31.30.41 --parallel 40 -i 1 -t 2\n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#openssl","title":"openssl","text":"<p>compile</p> <ul> <li>https://gist.github.com/fernandoaleman/5459173e24d59b45ae2cfc618e20fe06</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#encryption","title":"encryption","text":"<ul> <li>encrypt on mac <pre><code>openssl enc -aes-256-cbc -salt -in file.txt -out file.enc\n</code></pre></li> <li>decrypt on linux <pre><code>openssl enc -d -aes-256-cbc -in file.enc -out file.txt -pass pass:yourpassword\n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#parallel","title":"parallel","text":"<p>touch 1024 files, with parallel 128, filename will test-1, test-2, etc. <pre><code>time seq 1 1024 | parallel --will-cite -j 128 touch /mnt/efs/01/tutorial/touch/${directory}/test-1.4-{}\n</code></pre></p>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#regctl","title":"regctl","text":"<ul> <li>regctl</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#rsync","title":"rsync","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#notable-folder","title":"notable folder","text":"<pre><code>rsync -narv --delete /home/ubuntu/.notable /home/ubuntu/OneDrive/CrossSync/\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#sync-to-s3","title":"sync to s3","text":"<p>upload only md file to s3</p> <ul> <li>\u2013exclude \u53c2\u6570\u5fc5\u987b\u653e\u5728 \u2013include \u53c2\u6570\u4e4b\u524d\u3002</li> <li>\u5982\u679c\u60a8\u9700\u8981\u4e0a\u4f20\u591a\u4e2a\u7c7b\u578b\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a \u2013include \u53c2\u6570\u3002 <pre><code>aws s3 sync ./work-notes s3://knowledge-base-quick-worknotes-1350/work-notes --delete  --exclude \"*\" --include \"*.md\"\n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#work-notes","title":"work-notes","text":"<pre><code>bash\n\nexport HISTSIZE=0\ncd ~/Documents/\nrsync -avr --delete \\\n    ./git \\\n    ./work-notes \\\n    ./SA-Baseline-50-12 \\\n    ./customers \\\n    stevenpan@10.68.69.100:/Users/stevenpan/Documents/\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#sed","title":"sed","text":"<pre><code>file=file.md\ngsed -i 's/^!\\[\\[\\([^]]\\+\\)\\]\\]/![](\\1)/' ${file}\n# change \n# ![[stream-k8s-control-panel-logs-to-s3-21.png]]\n# to \n# ![](stream-k8s-control-panel-logs-to-s3-21.png)\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#sponge-tee-redirect-to-same-file","title":"sponge &amp; tee &amp; redirect to same file","text":"<p>sponge  reads  standard input and writes it out to the specified file. Unlike a shell redirect, sponge soaks up all its input before opening the output file. This allows constructing pipelines that read from and write to the same file.</p>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ssh","title":"ssh","text":"<ul> <li>ssh-cmd</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#stress-ng","title":"stress-ng","text":"<pre><code>stress-ng --vm-bytes $(awk '_MemFree_{printf \"%d\\n\", $2 * 0.95;}' &lt; _proc_meminfo)k --vm-keep -m 1\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#container","title":"container","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cpu-stress-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: stress-ng\n  template:\n    metadata:\n      labels:\n        app: stress-ng\n    spec:\n      containers:\n\n      - name: stress-ng-container\n        image: polinux/stress-ng # progrium/stress\n        command:\n        - 'sh'\n        - '-c'\n        - |\n          while true ; do\n            echo \"start stress (10 min)\"\n            stress-ng --cpu 2 --timeout 600\n            echo \"start sleep (10min)\"\n            sleep 600\n          done\n        resources:\n          limits:\n            cpu: \"1\"\n          requests:\n            cpu: \"1\"\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#tar","title":"tar","text":"<pre><code>tar cf a.tar ./blue-green-upgrade/ --exclude=\".terraform\"\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#tcp-setting-time_wiat","title":"tcp setting - TIME_WIAT","text":"<pre><code>net.ipv4.tcp_fin_timeout = 30\nnet.ipv4.ip_local_port_range = 15000 65000\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_tw_reuse = 1\n\nnet.ipv4.ip_forward=1\nnet.ipv4.conf.all.accept_source_route = 1\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#tc-traffic-control","title":"tc - traffic control","text":"<pre><code>yum install iproute-tc\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#doc","title":"doc","text":"<ul> <li>https://lartc.org/lartc.html#LARTC.COOKBOOK.FULLNAT.INTRO</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#scenario","title":"scenario","text":"<ul> <li>connection-network-with-overlap-cidrs</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#tcpdump","title":"tcpdump","text":"<p>dump multicast packages <pre><code>tcpdump -i ens5 -s0 -vv net 224.0.0.0/4 -A\n</code></pre></p>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ts","title":"ts","text":"<p>add timestamp at the front of every command output <pre><code>yum install moreutils\nls |ts\n</code></pre></p>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#vim","title":"vim","text":"<ul> <li>vim-cmd</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#wscat-","title":"wscat-","text":"<pre><code>sudo apt install -y npm\nnpm install wscat\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#webish","title":"webi.sh","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#go-","title":"go-","text":"<pre><code>curl -sS https://webi.sh/golang | sh\nsource ~/.config/envman/PATH.env\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#xfs","title":"xfs","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#xfs-mount-","title":"xfs-mount-","text":"<pre><code>mount -t xfs -o nouuid /dev/nvme1n1 /mnt\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#get-uuid","title":"get uuid","text":"<pre><code>xfs_db -c uuid /dev/nvme1n1\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#xtop","title":"xtop","text":"<ul> <li>top</li> <li>htop</li> <li>atop</li> <li>iftop <pre><code>iftop -t -s 10 &gt; output\n</code></pre></li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#yum","title":"yum","text":"<pre><code>yum --showduplicates list terraform\nyum install terraform-1.5.7-1\nyum versionlock terraform\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#fixed-version","title":"fixed version","text":"centos7centos8/9 <pre><code>yum install yum-plugin-versionlock\n</code></pre> <pre><code>yum install python3-dnf-plugin-versionlock\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#ip-address-calc","title":"ip address calc","text":"<pre><code>yum -y install sipcalc --enablerepo=epel\n</code></pre> <pre><code>brew install sipcalc \n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/linux-cmd/#others","title":"others","text":"<ul> <li>web-performance-testing-tool</li> <li>httpbin.org</li> <li>badssl.com</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/nodejs-cmd/","title":"nodejs-cmd","text":"","tags":["nodejs"]},{"location":"CLI/linux/nodejs-cmd/#install","title":"install","text":"<p>https://github.com/nvm-sh/nvm/releases <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash\nnvm install 20\nnode -v\nnpm -v\n</code></pre></p> <ul> <li>16 works on amazon linux 2 (has glibc 2.26)</li> <li>18/20 does not work on AL2 (no glibc 2.27/2.28)</li> <li>20 works on ubuntu 22</li> </ul>","tags":["nodejs"]},{"location":"CLI/linux/nodejs-cmd/#on-al2023","title":"on al2023","text":"<p>https://linux.how2shout.com/how-to-install-nodejs-20-x-on-amazon-linux-2023/ <pre><code>curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -\ndnf update\ndnf install -y nodejs20\n</code></pre></p>","tags":["nodejs"]},{"location":"CLI/linux/nodejs-cmd/#on-ubuntu","title":"on ubuntu","text":"<p>https://joshtronic.com/2023/04/23/how-to-install-nodejs-20-on-ubuntu-2004-lts/</p>","tags":["nodejs"]},{"location":"CLI/linux/nodejs-cmd/#h1","title":"H1","text":"<p>https://docs.aws.amazon.com/cdk/v2/guide/work-with-cdk-typescript.html <pre><code>npm -g install typescript\n</code></pre></p> <p>To update your project\u2019s NPM dependencies to the latest permitted version according to the rules you specified in\u00a0<code>package.json</code>: <pre><code>npm update\n</code></pre></p> <pre><code># Install the latest version of everything that matches the ranges in 'package.json'\nnpm install\n\n# Install the same exact dependency versions as recorded in 'package-lock.json'\nnpm ci\n</code></pre>","tags":["nodejs"]},{"location":"CLI/linux/postgres-cmd/","title":"postgres-cmd","text":"","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#install-pg-16-client-on-amazon-linux-2023","title":"install pg 16 client on amazon linux 2023","text":"<pre><code>yum install -y gcc readline-devel libicu-devel zlib-devel openssl-devel systemd-devel\nwget https://ftp.postgresql.org/pub/source/v16.3/postgresql-16.3.tar.gz  # PostgreSQL 16.1\ntar -xzf postgresql-16.3.tar.gz\ncd postgresql-16.3\n\n./configure --with-systemd --with-openssl\nmake &amp;&amp; make install\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#dump","title":"dump","text":"<pre><code>pg_dump -U postgres -d brconnector_db -a -h 172.17.0.1 &gt; filename.sql\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#h1","title":"H1","text":"<pre><code>select table_name from information_schema.tables;\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#replication-in-postgres","title":"replication in postgres","text":"<pre><code>select client_addr, state, sent_lsn, write_lsn,\n    flush_lsn, replay_lsn, sync_state from pg_stat_replication;\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#running-in-docker","title":"running in docker","text":"","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#run-postgres-in-docker","title":"run postgres in docker","text":"<pre><code>docker run --name postgres \\\n  -e POSTGRES_PASSWORD=mysecretpassword \\\n  -p 5432:5432 \\\n  -d postgres\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#create-db","title":"create db","text":"<pre><code>docker exec -it postgres psql -U postgres\nCREATE DATABASE brproxydb;\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#list-db","title":"list db","text":"<pre><code>docker exec -it postgres01 /bin/sh\n # psql -U postgres\nCREATE DATABASE nutanix with owner postgres;\n\n\\l list database\n\\c connect to database\n\\q quit psql\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#others","title":"others","text":"<pre><code>docker-machine ssh docker01\n\n./start-volume-plugin.sh\ncheck ip address on interface docker0 and add to \"filesystem whilelist\"\n\ndocker inspect postgres01\ndocker inspect --format '{{.Config.Volumes}}' postgres01\n\ndocker run -d --name postgres01 -p 5432:5432 --volume-driver nutanix -v pgdata01:_var_lib_postgresql_data postgres:latest\n</code></pre> <pre><code>docker ps\n`docker exec -it NutanixVolumePlugin /bin/sh`\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/postgres-cmd/#update-tables","title":"update tables","text":"<pre><code>docker exec -it postgres psql -U postgres\n\n\\c brconnector_db\nupdate eiai_key set api_key = 'br-xxx' where id = 2;\n</code></pre>","tags":["postgresql"]},{"location":"CLI/linux/python-cmd/","title":"python-cmd","text":"","tags":["python"]},{"location":"CLI/linux/python-cmd/#python38-on-amazon-linux","title":"python38 on amazon linux","text":"","tags":["python"]},{"location":"CLI/linux/python-cmd/#yum","title":"yum","text":"<pre><code>sudo yum install -y amazon-linux-extras\namazon-linux-extras | grep -i python\nsudo amazon-linux-extras enable python3.8\nsudo yum install -y python3.8 python38-devel\n</code></pre>","tags":["python"]},{"location":"CLI/linux/python-cmd/#compile","title":"compile","text":"<p>Install Python 3.8 on CentOS 7 / CentOS 8 | ComputingForGeeks</p> <pre><code>./configure --enable-optimizations --with-ensurepip=install\nmake altinstall\n</code></pre>","tags":["python"]},{"location":"CLI/linux/python-cmd/#venv","title":"venv","text":"<pre><code>python3 -m venv venv\nsource ./venv/bin/activate\npip install --upgrade pip\n</code></pre>","tags":["python"]},{"location":"CLI/linux/python-cmd/#httpserver","title":"http.server","text":"<p>unencrypted traffic</p> <pre><code>python -m http.server -d output/html 80\npython3 -m http.server 80 &amp;\ndisown\n</code></pre>","tags":["python"]},{"location":"CLI/linux/python-cmd/#refer","title":"refer","text":"<ul> <li>python-sample-phase-json</li> <li>python-sample-to-create-upload</li> <li></li> </ul>","tags":["python"]},{"location":"CLI/linux/regctl/","title":"regctl","text":"<p>sync registry tool, support multi architecture container images</p>","tags":["linux","cmd"]},{"location":"CLI/linux/regctl/#install","title":"install","text":"<pre><code>curl -L https://github.com/regclient/regclient/releases/download/v0.7.1/regctl-linux-amd64\n</code></pre>","tags":["linux","cmd"]},{"location":"CLI/linux/regctl/#cmd","title":"cmd","text":"<ul> <li>login <pre><code># login\naws ecr-public get-login-password --region us-east-1 |regctl registry login ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com --user AWS --pass-stdin\n</code></pre></li> <li> <p>export <pre><code>regctl image export 123456789012.dkr.ecr.us-west-2.amazonaws.com/$REPO_PREFIX/$IMG_LAMBDA:latest /dev/null\n\nIMG_LAMBDA=x6u9o2u4/sample-connector-for-bedrock-lambda\nregctl image copy public.ecr.aws/${IMG_LAMBDA}:latest 123456789012.dkr.ecr.us-west-2.amazonaws.com/brconn/${IMG_LAMBDA}:latest\n</code></pre></p> </li> <li> <p>copy to private registry <pre><code>regctl image copy  nginx:latest 123456789012.dkr.ecr.us-west-2.amazonaws.com/nginx\n</code></pre></p> </li> </ul>","tags":["linux","cmd"]},{"location":"CLI/linux/terraform-cmd/","title":"terraform-cmd","text":"","tags":["terraform"]},{"location":"CLI/linux/terraform-cmd/#install-","title":"install-","text":"<ul> <li>RHEL <pre><code>sudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo\nsudo yum -y install terraform\n</code></pre></li> <li>AL2 <pre><code>sudo yum install -y yum-utils shadow-utils\nsudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\nsudo yum -y install terraform\n</code></pre></li> </ul>","tags":["terraform"]},{"location":"CLI/linux/terraform-cmd/#variable","title":"variable","text":"<pre><code>variable \"region\" {\n  description = \"region\"\n  type        = string\n  default = \"us-east-2\"\n}\n</code></pre> <pre><code>terraform apply -var \"region=us-east-2\"\n</code></pre>","tags":["terraform"]},{"location":"CLI/linux/terraform-cmd/#workspace","title":"workspace","text":"<pre><code># create new one\nterraform workspace new test\n# show current \nterraform workspace show\n# list all \nterraform workspace list\n</code></pre>","tags":["terraform"]},{"location":"CLI/linux/terraform-cmd/#state","title":"state","text":"<pre><code>terraform state list\nterraform state show xxxxxx\n</code></pre>","tags":["terraform"]},{"location":"CLI/linux/ubuntu-cmd/","title":"ubuntu","text":"","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#install-missing-kernel-module","title":"install missing kernel module","text":"<pre><code>sudo apt install linux-modules-extra-`uname -r`\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#dpkg","title":"dpkg","text":"<pre><code>dpkg -l |grep pkg_name\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#search-file-belongs-to","title":"search file belongs to","text":"<pre><code>dpkg -S /bin/ls\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#get-all-files-the-package-installed","title":"get all files the package installed","text":"<pre><code>dpkg-query -L &lt;package_name&gt;\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#get-all-files-in-deb-package","title":"get all files in deb package","text":"<pre><code>dpkg-deb -c &lt;package_name.deb&gt;\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#apt-file-find-pkg-provide-files","title":"apt-file \u2013 find pkg provide files","text":"<pre><code>sudo apt-get install apt-file\nsudo apt-file update\napt-file search  a.h\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#fixed-specific-version","title":"fixed specific version","text":"<pre><code>sudo apt install terraform=1.5.7-1\nsudo apt-mark hold terraform\n</code></pre>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#install-develop-packages","title":"install develop packages","text":"<p><pre><code>sudo apt-get install build-essential\n</code></pre> \u7c7b\u4f3c <code>yum -y groupinstall \"Development Tools\"</code></p>","tags":["ubuntu"]},{"location":"CLI/linux/ubuntu-cmd/#install-docker","title":"install docker","text":"<ul> <li>git/git-mkdocs/CLI/linux/docker-cmd</li> </ul>","tags":["ubuntu"]},{"location":"CLI/linux/vim-cmd/","title":"vim-cmd","text":"","tags":["cmd"]},{"location":"CLI/linux/vim-cmd/#sort","title":"sort","text":"<pre><code>%!sort\n</code></pre>","tags":["cmd"]},{"location":"CLI/linux/vim-cmd/#search","title":"search","text":"<pre><code>/[\u4eac\u6d25\u6caa\u6e1d\u5180\u8c6b\u4e91\u8fbd\u9ed1\u6e58\u9c81\u65b0\u82cf\u6d59\u8d63\u9102\u6842\u7518\u664b\u8499\u9655\u5409\u95fd\u8d35\u7ca4\u9752\u85cf\u5ddd\u5b81\u743c\u4f7f\u9886A-Z]\\{1}[A-Z]\\{1}[A-Z0-9]\\{4}[A-Z0-9\u6302\u5b66\u8b66\u6e2f\u6fb3]\\{1}/\n</code></pre>","tags":["cmd"]},{"location":"CLI/linux/vim-cmd/#json","title":"json","text":"<pre><code>%!jq -r .\n</code></pre>","tags":["cmd"]},{"location":"CLI/linux/vim-cmd/#1-2","title":"\\1 \\2","text":"<p><pre><code>:%s/$\\([^$]\\+\\)/\"\\1\": \"$\\1\",/\n</code></pre> from <pre><code>$context.accountId\n</code></pre> to <pre><code>\"context.accountId\": $context.accountId,\n</code></pre></p>","tags":["cmd"]},{"location":"CLI/linux/vim-cmd/#my-vimrc-config","title":"my vimrc config","text":"<pre><code>\"set nocompatible\n\"source $VIMRUNTIME/vimrc_example.vim\n\"source $VIMRUNTIME/mswin.vim\n\"behave mswin\n\nversion 6.0\nset nocompatible\n\n\"if has(\"gui_running\")\n\"  set imactivatekey=C-space\n\"  inoremap &lt;ESC&gt; &lt;ESC&gt;:set iminsert=0&lt;CR&gt;\n\"endif\n\nlet s:cpo_save=&amp;cpo\nset cpo&amp;vim\nlet &amp;cpo=s:cpo_save\nunlet s:cpo_save\nset fileformat=unix\nset fileformats=unix,dos\n\"if &amp;filetype != 'dos'\n\"  set filetype=dos\n\"endif\nset backspace=2\nset history=100\nset keymodel=startsel,stopsel\nset selection=exclusive\nset selectmode=mouse,key\nset noswapfile\nset showtabline=0\nset foldcolumn=3\nset nonumber\nset nohlsearch\nset noai\nset modeline\nset showmatch\nset encoding=default\nset syntax=panlm\n\n\" encoding settings\nset encoding=utf-8\nset langmenu=zh_CN.UTF-8\nlanguage message zh_CN.UTF-8\nset fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1\n\nif has(\"gui_running\")\n\"  set guifontset=-*-vera\\ sans\\ yuanti\\ mono-medium-r-normal-*-16-*-*-*-*-*-iso10646-1\n\"  set guifont=vera\\ sans\\ yuanti\\ mono\\ 12\n\"  set guifont=WenQuanYi\\ Zen\\ Hei\\ Mono\\ 13\n\"  set guifont=Liberation\\ Mono\\ 13\n\"  set guifontwide=LiHei\\ Pro\\ 11\n\"  set guifont=Consolas:h11:cANSI\n  set guifont=Monaco:h14\n  set showtabline=2\n  set columns=116\n  set lines=30\n  set cmdheight=1\n  set guioptions-=T \"no toolbar\n  set nomousehide\n  set shiftwidth=3\n  colorscheme oceandeep\n  syntax on\nendif\n\nif has('multi_byte_ime')\n  highlight Cursor guibg=Green guifg=NONE\n  highlight CursorIM guibg=Purple guifg=NONE\nendif\n\n\" folding setting\nset foldmethod=expr\nset foldlevel=0\nset foldcolumn=3\n\"set foldclose=all\n\"set foldexpr=getline(v:lnum)=~'^==*\\ .*\\ =\\\\\\\\+$'?'&gt;1':'='\nset foldexpr=getline(v:lnum)=~'^==*\\ .*\\ ==*$'?('&gt;'.strlen(matchstr(getline(v:lnum),'^==*'))):'='\n\n\" Setting viminfo option\nset viminfo='50,&lt;100,s10,:300,/300,h,rA:,rB:,%\n\nset undolevels=100\nset nowrapscan\n\n\" Auto format paragraph {{{\n\" (http://vim.sourceforge.net/tips/tip.php?tip_id=440)\n\" using gqvw to instead\n\"set textwidth=75\n\"set formatoptions=aw2tq\n\"map Q gq\n\"nmap &lt;silent&gt; ,f :set tw=75&lt;cr&gt;gqap:set tw=0&lt;cr&gt;\n\"obsoleted: nmap &lt;f9&gt; 70&lt;bar&gt;f r&lt;cr&gt;\n\"nmap &lt;silent&gt; &lt;s-f9&gt; 77&lt;bar&gt;ha&lt;cr&gt;&lt;esc&gt;\n\"nmap &lt;silent&gt; ,w :set wrap!&lt;bar&gt;set wrap?&lt;cr&gt;\n\" }}}\n\n\" \"Always set your working directory to the file you're editing\n\" autocmd BufEnter * cd %:p:h\n\" let g:netrw_altv = 1\n\" \" not use explorer.vim instead of netrw\n\" \"let g:explVertical=1\n\" \"let g:explSplitRight=1\n\" let g:miniBufExplMapWindowNavVim = 1\n\" let g:miniBufExplMapWindowNavArrows = 1\n\" let g:miniBufExplMapCTabSwitchBuffs = 1\n\" let g:miniBufExplModSelTarget = 1\n\n\" Statusline Settings\n\"set statusline=%&lt;%1*===\\ %5*%f%1*%(\\ ===\\ %4*%h%1*%)%(\\ ===\\ %4*%m%1*%)%(\\ ===\\ %4*%r%1*%)\\ ===%====\\ %2*%b(0x%B)%1*\\ ===\\ %3*%l,%c%V%1*\\ ===\\ %5*%P%1*\\ ===%0* laststatus=2\nset statusline=%&lt;===\\ %F%m\\ %y\\ ===%====\\ %c%V,%l/%L\\ %P\\ === laststatus=2\n\n\" draw a table/sheet with mouse\n:map &lt;F1&gt; :call ToggleSketch()&lt;CR&gt;\n\n\" When editing a file, always jump to the last cursor position\n\" let g:leave_my_cursor_position_alone = 1\n  autocmd BufReadPost *\n        \\ if ! exists(\"g:leave_my_cursor_position_alone\") |\n        \\     if line(\"'\\\"\") &gt; 0 &amp;&amp; line (\"'\\\"\") &lt;= line(\"$\") |\n        \\         exe \"normal g'\\\"\" |\n        \\     endif |\n        \\ endif\n\n\"Easy menu-style switch between files with a simple map\nmap &lt;F5&gt;        :buffers&lt;CR&gt;:e #\n\"set virtualedit mode\nnmap    ,c      :set virtualedit=all&lt;cr&gt;\nnmap    ,nc     :set virtualedit=&lt;cr&gt;\n\"about windows operation\nnmap    &lt;a-n&gt;       :new&lt;cr&gt;&lt;c-w\n\nnmap    &lt;a-q&gt;       :close!&lt;cr&gt;&lt;c-w\n\nnmap &lt;c-n&gt; :enew!&lt;cr&gt;\nnmap &lt;c-t&gt; :tabnew&lt;cr&gt;\n\"using panlm syntax\n\"map ,p :set syntax=panlm&lt;cr&gt;\n\"make header tag\nnmap ,1 :s/^[[:blank:]=]*/= /&lt;cr&gt;:s/[[:blank:]=]*$/ =/&lt;cr&gt;\nnmap ,2 :s/^[[:blank:]=]*/== /&lt;cr&gt;:s/[[:blank:]=]*$/ ==/&lt;cr&gt;\nnmap ,3 :s/^[[:blank:]=]*/=== /&lt;cr&gt;:s/[[:blank:]=]*$/ ===/&lt;cr&gt;\nnmap ,4 :s/^[[:blank:]=]*/==== /&lt;cr&gt;:s/[[:blank:]=]*$/ ====/&lt;cr&gt;\nnmap ,d :s/^==* \\(.*\\) ==*$/\\1/&lt;cr&gt;\n\"edit _vimrc file quickly\n\"for windows\n\"nmap ,s :source d:\\program\\vim\\_vimrc&lt;cr&gt;\n\"nmap ,e :e d:\\program\\vim\\_vimrc&lt;cr&gt;\n\"for mac\nnmap ,s :source ~/.gvimrc&lt;cr&gt;\nnmap ,e :e ~/.gvimrc&lt;cr&gt;\nnmap ,p :e d:\\program\\vim\\vimfiles\\syntax\\panlm.vim&lt;cr&gt;\nnmap ,! A   &lt;&lt;&lt;\n\n\"others\nmap &lt;F3&gt;        yiw/\\c&lt;c-r&gt;\"&lt;cr&gt;\nmap &lt;Leader&gt;sh  :source $HOME/vimfiles/tools/vimsh/vimsh.vim&lt;CR&gt;\nmap &lt;Leader&gt;meta    gg/&lt;PRE&gt;&lt;cr&gt;ma/&lt;\\/PRE&gt;&lt;cr&gt;\"zd'a:%d&lt;cr&gt;\"zp:%s/\\_$\\_s//&lt;cr&gt;:%s/&lt;a [^&gt;]\\+&gt;//g&lt;cr&gt;:%s/&lt;\\/a&gt;//g&lt;cr&gt;:%s/&lt;PRE&gt;//&lt;cr&gt;A&amp;amp;&amp;lt;&amp;gt;&amp;quot;&lt;esc&gt;:%s/&lt;P&gt;/\\r/g&lt;cr&gt;:%s/&amp;amp;/\\&amp;/g&lt;cr&gt;:%s/&amp;lt;/&lt;/g&lt;cr&gt;:%s/&amp;gt;/&gt;/g&lt;cr&gt;:%s/&amp;quot;/\"/g&lt;cr&gt;gg/&lt;\\/PRE&gt;&lt;cr&gt;i&lt;cr&gt;&lt;esc&gt;dGgg\n\"map     &lt;Leader&gt;Note    :%s#\\(Note \\+\\)\\([[:digit:]]\\+\\.[[:digit:]]\\+\\)#\\1|\\2|#g&lt;cr&gt;\nnmap    ,viki       :VikiMinorMode&lt;cr&gt;\nnmap    &lt;leader&gt;#   :'a,'b! nl -ba&lt;cr&gt;\nmap ,nf     :s/ \\?=\\+ \\?//g&lt;cr&gt;\n\nnmap    &lt;silent&gt;&lt;leader&gt;q   :qall!&lt;cr&gt;\n\n\" Add ---/=== Automatic\nnmap ,- Yp^v$r-\nnmap ,= Yp^v$r=\n\n\" Highlight Current Line {{{\n\" (http://vim.sourceforge.net/tips/tip.php?tip_id=263)\n\" (http://vim.sourceforge.net/tips/tip.php?tip_id=769)\n\" highlight CurrentLine guibg=#4b4b4b guifg=white ctermbg=darkgrey ctermfg=white\n\" \"au! Cursorhold * exe 'match CurrentLine /\\%' . line('.') . 'l.*/'\n\" au! Cursorhold * exe 'match CurrentLine /.*\\%#.*/'\n\" set ut=10\n\" nmap &lt;silent&gt; &lt;f9&gt; :au! Cursorhold&lt;cr&gt;:match none&lt;cr&gt;\n\" nmap &lt;silent&gt; &lt;s-f9&gt; :au! Cursorhold * exe 'match CurrentLine /.*\\%#.*/'&lt;cr&gt;\n\" }}}\n\" nmap keys {{{\nnmap &lt;silent&gt; &lt;f7&gt; :set foldcolumn=3&lt;CR&gt;\nnmap &lt;silent&gt; &lt;f8&gt; :set foldcolumn=0&lt;CR&gt;\nnmap &lt;silent&gt; &lt;f9&gt; :set number!&lt;bar&gt;set number?&lt;CR&gt;\nnmap &lt;silent&gt; &lt;f11&gt; :set hlsearch!&lt;bar&gt;set hlsearch?&lt;CR&gt;\n\" }}}\n\" auto insert date and time {{{\niab Pdate &lt;C-R&gt;=strftime(\"%d %b %Y, %A\")&lt;CR&gt;\niab Ptime &lt;C-R&gt;=strftime(\"%H:%M:%S\")&lt;CR&gt;\n\" }}}\n\" Display time about cmd running {{{\n\"command -complete=command -nargs=+ Time :let ct=strftime(\"%s\") | exec &lt;q-args&gt; |let t=strftime(\"%s\")| :echohl MoreMsg |let min=(t - ct)/60 | let sec=(t - ct)%60 |let min = min &lt; 10 ? \"0\".min : min | let sec= sec&lt;10 ? \"0\".sec : sec | echo min.\":\".sec | echohl None\n\" }}}\n\" easy pasting to windows apps {{{\n\" Tip#21\n\" set clipboard=unnamed\n\" }}}\n\n\" disable set textwidth auto in /etc/vim/vimrc\nlet g:leave_my_textwidth_alone = 1\n\n\" vim -b : edit binary using xxd-format!\naugroup Binary\n  au!\n  au BufReadPre  *.bin let &amp;bin=1\n  au BufReadPost *.bin if &amp;bin | %!xxd\n  au BufReadPost *.bin set ft=xxd | endif\n  au BufWritePre *.bin if &amp;bin | %!xxd -r\n  au BufWritePre *.bin endif\n  au BufWritePost *.bin if &amp;bin | %!xxd\n  au BufWritePost *.bin set nomod | endif\naugroup END\n\nlet g:XkbSwitchEnabled = 1\nlet g:XkbSwitchLib = '~/.vim/ISS-mac/input-source-switcher/build/libInputSourceSwitcher.dylib' \n\n\" vim:foldmethod=marker:foldenable:foldlevel=0:fileformat=unix\n</code></pre>","tags":["cmd"]},{"location":"CLI/linux/web-performance-testing-tool/","title":"web-press-testing-tool","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#ab","title":"ab","text":"<pre><code>sudo yum install httpd-tools\n\nab -kc 150 -t 600 http://k8s-loki-lokiloki-6ece7e0eb3-1692301772.us-east-1.elb.amazonaws.com\n\nwhile true ; do ab -kc 250 -t 3600 -n 1000000 http://k8s-loki-lokigate-42e5f864af-1843259072.us-east-1.elb.amazonaws.com/ ; done\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#hey","title":"hey","text":"<pre><code>wget https://hey-release.s3.us-east-2.amazonaws.com/hey_linux_amd64\ncurl -L -o hey https://hey-release.s3.us-east-2.amazonaws.com/hey_linux_amd64\n</code></pre>","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#httpie","title":"httpie","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#httpload","title":"httpload","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#k6","title":"k6","text":"<p>k6 is a load testing suite that allows you to synthetically load and monitor your application. For more details about k6, read the\u00a0documentation.</p>","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#locustio","title":"Locust.io","text":"<ul> <li>Locust.io</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#distributed-load-test-on-aws","title":"distributed load test on aws","text":"<ul> <li>Distributed Load Testing on AWS</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#siege","title":"siege","text":"","tags":["cmd","linux"]},{"location":"CLI/linux/web-performance-testing-tool/#wrk","title":"wrk","text":"<ul> <li>https://github.com/wg/wrk</li> </ul>","tags":["cmd","linux"]},{"location":"CLI/windows/docker-on-windows/","title":"Docker On Windows","text":"","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/docker-on-windows/#install-docker-on-windows-after-may-2023-","title":"install-docker-on-windows-after-may-2023-","text":"<ul> <li>https://github.com/OneGet/MicrosoftDockerProvider <pre><code>Invoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/microsoft/Windows-Containers/Main/helpful_tools/Install-DockerCE/install-docker-ce.ps1\" -o install-docker-ce.ps1\n.\\install-docker-ce.ps1\n</code></pre></li> </ul>","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/docker-on-windows/#sample-build-iis-sqlcmd-container","title":"sample build iis + sqlcmd container","text":"<ul> <li>iis + sqlcmd <pre><code>FROM mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2019\n\n# https://learn.microsoft.com/en-us/sql/tools/sqlpackage/sqlpackage-download?view=sql-server-ver16#installation-file-download-alternative\n# Download the SQL Server command-line tools installer\nADD https://go.microsoft.com/fwlink/?linkid=2262108 C:\\\\temp\\\\sqlcmd.msi\n# Install sqlcmd using the installer\nRUN msiexec /i C:\\\\temp\\\\sqlcmd.msi /quiet\n# Add sqlcmd to the PATH environment variable\nRUN setx PATH \"%PATH%;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn\"\n\nRUN powershell -NoProfile -Command Remove-Item -Recurse C:\\inetpub\\wwwroot\\*\n\nWORKDIR /inetpub/wwwroot\n\nCOPY index.html .\n</code></pre></li> </ul>","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/docker-on-windows/#windows-2016","title":"windows 2016","text":"<ul> <li>failed start docker daemon <pre><code>fatal: failed to start daemon: this version of Windows does not support the docker daemon (Windows build 17763 or higher is required)\n</code></pre></li> </ul>","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/docker-on-windows/#windows-2019","title":"windows 2019","text":"<ul> <li>no need to enable tls1.2</li> <li>install-docker-on-windows-after-may-2023- </li> </ul>","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/docker-on-windows/#deprecated","title":"deprecated","text":"<pre><code>Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force\nInstall-Module -Name DockerMsftProvider -Force\nInstall-Package -Name docker -ProviderName DockerMsftProvider -Force\nRestart-Computer -Force\n</code></pre>","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/docker-on-windows/#enable-tls12","title":"enable tls1.2","text":"<ul> <li>session <pre><code>[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n</code></pre></li> <li>global <pre><code>reg add HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319 /f /v SystemDefaultTlsVersions /t REG_DWORD /d 1 /reg:64  \nreg add HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319 /f /v SystemDefaultTlsVersions /t REG_DWORD /d 1 /reg:32  \nreg add HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319 /f /v SchUseStrongCrypto /t REG_DWORD /d 1 /reg:64  \nreg add HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319 /f /v SchUseStrongCrypto /t REG_DWORD /d 1 /reg:32\n</code></pre></li> </ul>","tags":["microsoft/windows","docker"]},{"location":"CLI/windows/powershell/","title":"powershell","text":"","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#download-file","title":"download file","text":"<pre><code>Invoke-WebRequest -uri 'https://github.com/microsoft/windows-container-tools/releases/download/v1.1/LogMonitor.exe' -OutFile 'c:\\Logmonitor.exe'\n\nInvoke-WebRequest -uri 'https://github.com/prometheus-community/windows_exporter/releases/download/v0.25.1/windows_exporter-0.25.1-amd64.msi' -OutFile 'c:\\windows_exporter-0.25.1-amd64.msi'\n\nmsiexec /i 'c:\\windows_exporter-0.25.1-amd64.msi' ENABLED_COLLECTORS=os,iis\n# default port 9182\nInvoke-WebRequest -URI 'http://localhost:9182/metrics' -UseBasicParsing\n</code></pre>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#download-awsnvmezip-","title":"download-AWSNVMe.zip-","text":"<pre><code>invoke-webrequest https://s3.amazonaws.com/ec2-windows-drivers-downloads/NVMe/Latest/AWSNVMe.zip -outfile $env:USERPROFILE\\nvme_driver.zip\nexpand-archive $env:userprofile\\nvme_driver.zip -DestinationPath $env:userprofile\\nvme_driver\n</code></pre>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#rsat-tools","title":"RSAT tools","text":"<ul> <li>../../others/POC-mig-filezilla-to-transfer-family</li> </ul>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#download-file-using-base64","title":"download file using base64","text":"<ul> <li>tar folder, do not zip it <pre><code>function ConvertTo-Base64($file_path) {\n    $content = Get-Content -Path $file_path -Raw\n    $byte_array = [System.Text.Encoding]::UTF8.GetBytes($content)\n    $base64 = [System.Convert]::ToBase64String($byte_array)\n    return $base64\n}\n\n# \u6307\u5b9a\u8981\u8f6c\u6362\u4e3aBase64\u7684\u6587\u4ef6\u8def\u5f84\n$file_path = \"C:\\path\\to\\your\\file.txt\"\n\n# \u8c03\u7528\u51fd\u6570\u5c06\u6587\u4ef6\u5185\u5bb9\u8f6c\u6362\u4e3aBase64\u7f16\u7801\n$base64_content = ConvertTo-Base64 -file_path $file_path\n\n# \u6253\u5370Base64\u7f16\u7801\u540e\u7684\u5185\u5bb9\nWrite-Host $base64_content\n</code></pre></li> </ul>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#connecting-to-sql-server-using-dotnet-framework-","title":"connecting-to-sql-server-using-dotnet-framework-","text":"<pre><code>$sqlConn = New-Object System.Data.SqlClient.SqlConnection\n$sqlConn.ConnectionString = \"Server=xxx.us-east-1.rds.amazonaws.com;Integrated Security=true;Initial Catalog=master\"\n$sqlConn.Open()\n\necho $SqlConn\n\n$sqlCmd = $sqlConn.CreateCommand()\n$sqlCmd.CommandText = \"select session_id,client_net_address from sys.dm_exec_connections\"\n\n$sqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter\n$sqlAdapter.SelectCommand = $sqlCmd\n\n$dataSet = New-Object System.Data.DataSet\n$sqlAdapter.Fill($dataSet)\n\n$dataSet.Tables[0] | Format-Table\n</code></pre> <pre><code>StatisticsEnabled                : False\nAccessToken                      :\nConnectionString                 : Server=xxx.com;Integrated Security=true;Initial Catalog=master\nConnectionTimeout                : 15\nDatabase                         : master\nDataSource                       : xxx.us-east-1.rds.amazonaws.com\nPacketSize                       : 8000\nClientConnectionId               : 02f6f78e-0c5c-4400-9506-2ff19679e978\nServerVersion                    : 15.00.4355\nState                            : Open\nWorkstationId                    : 11C683A04E28\nCredential                       :\nFireInfoMessageEventOnUserErrors : False\nSite                             :\nContainer                        :\n</code></pre>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#get-compute-name","title":"get compute name","text":"","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#lab1","title":"lab1","text":"<pre><code># \u5bfc\u5165 Active Directory \u6a21\u5757\nImport-Module ActiveDirectory\n\n# \u83b7\u53d6\u6240\u6709\u8ba1\u7b97\u673a\u5bf9\u8c61\n$allComputers = Get-ADComputer -Filter * -Properties Name, LastLogonDate, OperatingSystem\n\n# \u8bbe\u7f6e\u4e00\u4e2a\u65f6\u95f4\u9608\u503c\uff0c\u4f8b\u5982 90 \u5929\n$threshold = (Get-Date).AddDays(-90)\n\n# \u7b5b\u9009\u51fa\u6700\u8fd1\u767b\u5f55\u7684\u8ba1\u7b97\u673a\n$activeComputers = $allComputers | Where-Object { $_.LastLogonDate -gt $threshold }\n\n# \u521b\u5efa\u4e00\u4e2a\u7a7a\u6570\u7ec4\u6765\u5b58\u50a8\u5728\u7ebf\u8ba1\u7b97\u673a\n$onlineComputers = @()\n\n# \u904d\u5386\u6d3b\u8dc3\u8ba1\u7b97\u673a\u5217\u8868\uff0c\u68c0\u67e5\u662f\u5426\u5728\u7ebf\nforeach ($computer in $activeComputers) {\n    if (Test-Connection -ComputerName $computer.Name -Count 1 -Quiet) {\n        $onlineComputers += $computer\n    }\n}\n\n# \u8f93\u51fa\u7ed3\u679c\u5230 CSV \u6587\u4ef6\n$onlineComputers | Select-Object Name, OperatingSystem, LastLogonDate | \n    Export-Csv -Path \"C:\\ActiveComputers.csv\" -NoTypeInformation\n\nWrite-Host \"Active computers list has been exported to C:\\ActiveComputers.csv\"\n</code></pre>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"CLI/windows/powershell/#lab2","title":"lab2","text":"<pre><code># \u5bfc\u5165 Active Directory \u6a21\u5757\nImport-Module ActiveDirectory\n\n# \u8bbe\u7f6e\u65f6\u95f4\u9608\u503c\uff0c\u4f8b\u5982 90 \u5929\n$threshold = (Get-Date).AddDays(-90)\n\n# \u83b7\u53d6\u6240\u6709\u8ba1\u7b97\u673a\u8d26\u6237\n$computers = Get-ADComputer -Filter * -Properties Name, LastLogonDate, Enabled\n\n# \u7b5b\u9009\u6709\u6548\u7684\u8ba1\u7b97\u673a\u8d26\u6237\n$activeComputers = $computers | Where-Object {\n    $_.Enabled -eq $true -and\n    $_.LastLogonDate -gt $threshold\n}\n\n# \u5bfc\u51fa\u7ed3\u679c\u5230 CSV \u6587\u4ef6\n$activeComputers | Select-Object Name, LastLogonDate |\n    Export-Csv -Path \"C:\\ActiveComputers.csv\" -NoTypeInformation\n\n# \u663e\u793a\u7ed3\u679c\u6458\u8981\nWrite-Host \"\u603b\u8ba1\u7b97\u673a\u6570\u91cf: $($computers.Count)\"\nWrite-Host \"\u6709\u6548\u8ba1\u7b97\u673a\u6570\u91cf: $($activeComputers.Count)\"\nWrite-Host \"\u7ed3\u679c\u5df2\u5bfc\u51fa\u5230 C:\\ActiveComputers.csv\"\n</code></pre>","tags":["microsoft/windows","microsoft/powershell"]},{"location":"EKS/","title":"Container","text":""},{"location":"EKS/#1-eks","title":"1 EKS","text":""},{"location":"EKS/#11-cluster","title":"1.1 cluster","text":"<p><pre><code>(path:git/git-mkdocs/EKS/cluster file:.md)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - EKS Auto Mode: EKS Auto Mode - EKS Addons: EKS \u5e38\u7528\u63d2\u4ef6\u6e05\u5355 - Create EKS Cluster with Terraform: \u4f7f\u7528 Terraform \u521b\u5efa EKS \u96c6\u7fa4 - Create Private Only EKS Cluster: \u5728\u5df2\u6709 VPC \u4e2d\u521b\u5efa\u79c1\u6709\u8bbf\u95ee\u7684 EKS \u96c6\u7fa4 - Create Public Access EKS Cluster: \u521b\u5efa\u516c\u6709\u8bbf\u95ee\u7684 EKS \u96c6\u7fa4 - Create Public Access EKS Cluster in China Region: \u5728\u4e2d\u56fd\u533a\u57df\uff0c\u521b\u5efa\u5171\u6709\u8bbf\u95ee\u7684 EKS \u96c6\u7fa4 - EKS Upgrade Procedure: EKS \u96c6\u7fa4\u5347\u7ea7 &lt;\u2013&gt;</p>"},{"location":"EKS/#12-kubernetes","title":"1.2 kubernetes","text":"<p><pre><code>(path:git/git-mkdocs/EKS/kubernetes file:.md)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - horizontal pod autoscaler: horizontal pod autoscaler - k8s-liveness-readiness-startup-probes:  - topology spread constraints: topology spread constraints &lt;\u2013&gt;</p>"},{"location":"EKS/#13-solutions","title":"1.3 solutions","text":"<p><pre><code>( path:git/git-mkdocs/EKS/solutions file:.md )\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - appmesh-workshop-eks: appmesh workshop - argocd: gitops \u5de5\u5177 - automated-canary-deployment-using-flagger: \u81ea\u52a8\u5316 canary \u90e8\u7f72 - cloudwatch-to-firehose-python: \u5728 firehose \u4e0a\uff0c\u5904\u7406\u4ece cloudwatch \u53d1\u9001\u6765\u7684\u65e5\u5fd7 - EKS Access API: eks-access-api - eks-audit-log-security-lake:  - eks-aws-auth: EKS aws-auth - EKS Container Insights: \u542f\u7528 EKS \u7684 container insight \u529f\u80fd - eks-custom-network: \u53ef\u4ee5\u89e3\u51b3\u5b50\u7f51\u5730\u5740\u6bb5\u8017\u5c3d\u7684\u95ee\u9898 - Fargate on EKS: \u5728 EKS \u96c6\u7fa4\u4e2d\u4f7f\u7528 Fargate - eks-loggroup-description: eks \u65e5\u5fd7\u7c7b\u578b\u5206\u6790 - eks-prefix-assignment:  - enable-prometheus-in-cloudwatch: \u5c06 EKS \u96c6\u7fa4\u7684 prometheus \u6570\u636e\u6c47\u603b\u5230 cloudwatch - enable-sg-on-pod: \u542f\u7528 pod \u5b89\u5168\u7ec4 - Export Cloudwatch Log Group to S3: \u5bfc\u51fa cloudwatch \u65e5\u5fd7\u5230 s3 - flux: gitops \u5de5\u5177 - Using Loki for Logging: \u4f7f\u7528 loki \u6536\u96c6\u65e5\u5fd7 - Install Grafana on Beanstalk: \u5728 EC2 / beanstalk / EKS \u4e0a\u5b89\u88c5 grafana  - install-prometheus-grafana-on-eks: \u5b89\u88c5 grafana \u548c prometheus - Stream EKS Control Panel Logs to S3: \u76ee\u524d EKS \u63a7\u5236\u5e73\u9762\u65e5\u5fd7\u53ea\u652f\u6301\u53d1\u9001\u5230 cloudwatch\uff0c\u4e14\u5728\u540c\u4e00\u4e2a log group \u4e2d\u67095\u79cd\u7c7b\u578b6\u79cd\u524d\u7f00\u7684 log stream \u7684\u65e5\u5fd7\uff0c\u4e0d\u5229\u4e8e\u7edf\u4e00\u67e5\u8be2\u3002\u4e14\u53ea\u6709 audit \u65e5\u5fd7\u662f json \u683c\u5f0f\u5176\u4ed6\u5747\u662f\u5355\u884c\u65e5\u5fd7\uff0c\u4e14\u5b57\u6bb5\u5404\u4e0d\u76f8\u540c\u3002\u672c\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u601d\u8def\u7edf\u4e00\u4fdd\u5b58\u65e5\u5fd7\u4f9b\u540e\u7eed\u5206\u6790\u5904\u7406 - IRSA \u4e2d\u7684 Token \u5256\u6790: \u672c\u6587\u6863\u603b\u7ed3\u4e86\u5c06 AWS IAM \u89d2\u8272\u6388\u4e88 AWS EKS \u96c6\u7fa4\u7684\u670d\u52a1\u8d26\u6237\u7684\u8fc7\u7a0b - Building Prometheus HA Architect with Thanos: \u7528 Thanos \u89e3\u51b3 Prometheus \u5728\u591a\u96c6\u7fa4\u5927\u89c4\u6a21\u73af\u5883\u4e0b\u7684\u9ad8\u53ef\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u9650\u5236 - EKS Security Group Deepdive: \u6df1\u5165 EKS \u5b89\u5168\u7ec4 &lt;\u2013&gt;</p>"},{"location":"EKS/#14-addons","title":"1.4 addons","text":"<p><pre><code>(file:.md path:git/git-mkdocs/EKS/addons) \n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - aws-for-fluent-bit:  - aws-load-balancer-controller: \u4f7f\u7528 aws \u8d1f\u8f7d\u5747\u8861\u63a7\u5236\u5668 - cert-manager: \u8bc1\u4e66\u7ba1\u7406\u63d2\u4ef6 - cluster-autoscaler: EKS \u96c6\u7fa4\u4e2d\u5b89\u88c5 Cluster Autoscaler - cni-metrics-helper: cni-metrics-helper - ebs-for-eks: \u4f7f\u7528 ebs \u4f5c\u4e3a pod \u6301\u4e45\u5316\u5b58\u50a8  - EFS CSI on EKS: \u4f7f\u7528 EFS \u4f5c\u4e3a Pod \u6301\u4e45\u5316\u5b58\u50a8 - eks-addons-coredns: eks-addons-coredns - eks-addons-kube-proxy: eks-addons-kube-proxy - eks-addons-vpc-cni: eks-addons-vpc-cni - eksup: EKS \u5347\u7ea7\u5c0f\u5de5\u5177 - externaldns-for-route53: \u4f7f\u7528 externaldns \u7ec4\u4ef6 - karpenter: \u4f7f\u7528 Karpenter \u4ee3\u66ff Cluster Autoscaler - kube-no-trouble: Kubernetes \u5347\u7ea7\u5c0f\u5de5\u5177 - kube-state-metrics: EKS \u96c6\u7fa4\u4e2d\u7528\u4e8e\u6027\u80fd\u76d1\u63a7\u4f7f\u7528\u7684\u6307\u6807\u670d\u52a1 - Metrics Server: EKS \u96c6\u7fa4\u4e2d\u7528\u4e8e\u5f39\u6027\u6269\u5c55\u4f7f\u7528\u7684\u6307\u6807\u670d\u52a1 - nginx-ingress-controller: nginx-ingress-controller - nginx-ingress-controller-community-ver: \u4f7f\u7528 nginx ingress - nginx-ingress-controller-nginx-ver: nginx-ingress-controller-nginx-ver - pluto: Kubernetes \u5347\u7ea7\u5c0f\u5de5\u5177 &lt;\u2013&gt;</p>"},{"location":"EKS/#2-ecs","title":"2 ECS","text":"<p><pre><code>(file:.md path:git/git-mkdocs/EKS/ecs) \n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - Migrating .NET Classic Applications to Amazon ECS Using Windows Containers:  - ecs-windows-gmsa:  - poc-container-on-domainless-windows-in-ecs:  - Windows Authentication with gMSA for .NET Linux Containers in Amazon ECS:  &lt;\u2013&gt;</p>"},{"location":"EKS/#3-ecr","title":"3 ECR","text":"<p><pre><code>(file:.md path:git/git-mkdocs/EKS/ecr) \n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - Enable scan on push in ECR and send notification to SNS: \u542f\u7528 ECR \u7684 Scan on push \u4e4b\u540e\uff0c\u81ea\u52a8\u5c06\u626b\u63cf\u7ed3\u679c\u4e2d CRITICAL \u7684\u4fe1\u606f\u53d1\u9001\u5230\u76ee\u6807 SNS \u544a\u8b66 &lt;\u2013&gt;</p>"},{"location":"EKS/addons/aws-for-fluent-bit/","title":"aws-for-fluent-bit","text":"<ul> <li>https://github.com/aws/aws-for-fluent-bit</li> <li>https://github.com/aws/eks-charts/blob/master/stable/aws-for-fluent-bit/README.md</li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/aws-for-fluent-bit/#default-cloudwatch-log-group","title":"default cloudwatch log group","text":"<ul> <li><code>/aws/containerinsights/&lt;CLUSTER_NAME&gt;/application</code></li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/aws-for-fluent-bit/#disable-logging-capture","title":"disable logging capture","text":"<ul> <li>set <code>READ_FROM_TAIL</code> to <code>Off</code> for <code>fluent-bit</code> daemonset</li> <li>need to verify this CLI <pre><code>aws eks create-addon --cluster-name ${CLUSTER_NAME} \\\n    --addon-name amazon-cloudwatch-observability \\\n    --addon-version ${ADDON_DEFAULT_VERSION} \\\n    --configuration-values '{ \"containerLogs\": { \"enabled\": false } }' \\\n    --resolve-conflicts OVERWRITE\n</code></pre></li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/aws-for-fluent-bit/#query-configuration-values","title":"query configuration values","text":"<pre><code>aws eks describe-addon-configuration \\\n    --addon-name amazon-cloudwatch-observability \\\n    --addon-version v1.5.3-eksbuild.1\n</code></pre>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/aws-for-fluent-bit/#refer","title":"refer","text":"<p>eks-loggroup-description</p>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/aws-load-balancer-controller/","title":"aws-load-balancer-controller","text":"","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#github","title":"github","text":"<ul> <li>https://github.com/kubernetes-sigs/aws-load-balancer-controller</li> <li>https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/how-it-works/</li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#workshop","title":"workshop","text":"<ul> <li>awslbc-ingress-lab-echoserver</li> <li>https://www.eksworkshop.com/beginner/180_fargate/prerequisites-for-alb/</li> <li>\u5e38\u7528ingress\u7684\u76f8\u5173\u914d\u7f6e (awslbc-ingress-settings)</li> <li>\u4f7f\u7528\u5df2\u6709ingress\u7684\u76f8\u5173\u914d\u7f6e (awslbc-ingress-settings-ingress-group)</li> <li>pod rediness gate (link)</li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#install","title":"install","text":"","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#install-with-eksdemo-","title":"install-with-eksdemo-","text":"<ul> <li>https://github.com/awslabs/eksdemo/blob/main/docs/install-awslb.md</li> <li> <p>remove service account if existed  <pre><code>echo ${CLUSTER_NAME}\neksctl delete iamserviceaccount -c ${CLUSTER_NAME} \\\n    --name aws-load-balancer-controller --namespace kube-system\n</code></pre></p> </li> <li> <p>create  <pre><code>echo ${CLUSTER_NAME}\necho ${AWS_DEFAULT_REGION}\n\neksdemo install aws-lb-controller -c ${CLUSTER_NAME} --namespace kube-system \n</code></pre></p> </li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#install-","title":"install-","text":"<ul> <li>https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/deploy/installation/</li> <li> <p>Install AWS Load Balancer Controller <pre><code>CLUSTER_NAME=ekscluster1\nAWS_REGION=us-west-2\nVPC_ID=$(aws cloudformation describe-stacks --stack-name eksctl-${CLUSTER_NAME}-cluster  --query 'Stacks[0].Outputs[?OutputKey==`VPC`].OutputValue' --output text)\nexport AWS_DEFAULT_REGION=${AWS_REGION}\nexport AWS_PAGER=\"\"\n\neksctl utils associate-iam-oidc-provider \\\n  --cluster ${CLUSTER_NAME} \\\n  --approve\n\n# curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.1/docs/install/iam_policy.json\ngit clone https://github.com/kubernetes-sigs/aws-load-balancer-controller.git\n\n# check iamserviceaccount has been create by eksctl\naws cloudformation describe-stacks --stack-name eksctl-${CLUSTER_NAME}-addon-iamserviceaccount-kube-system-aws-load-balancer-controller 2&gt;&amp;1 1&gt;/dev/null\nif [[ $? -ne 0 ]]; then\n\nif [[ ${AWS_REGION%%-*} == \"cn\" ]]; then \n  # aws china region\n  IAM_POLICY_TEMPLATE=iam_policy_cn.json \nelse\n  # aws commercial region\n  IAM_POLICY_TEMPLATE=iam_policy.json \nfi\ncp aws-load-balancer-controller/docs/install/${IAM_POLICY_TEMPLATE} .\n\npolicy_name=AWSLoadBalancerControllerIAMPolicy-`date +%m%d%H%M`\npolicy_arn=$(aws iam create-policy \\\n  --policy-name ${policy_name}  \\\n  --policy-document file://${IAM_POLICY_TEMPLATE} \\\n  --query 'Policy.Arn' \\\n  --output text)\n\neksctl create iamserviceaccount \\\n  --cluster=${CLUSTER_NAME} \\\n  --namespace=kube-system \\\n  --name=aws-load-balancer-controller \\\n  --role-name=${policy_name} \\\n  --attach-policy-arn=${policy_arn} \\\n  --override-existing-serviceaccounts \\\n  --approve\n\n# check iamserviceaccount has been create by eksctl\nfi\n\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\n\n# following helm cmd will fail if you use 3.9.0 version\n# downgrade to helm 3.8.2\n# and another solved issue is here: [[ingress-controller-lab-issue]]\nif [[ ${AWS_REGION%%-*} == \"cn\" ]]; then \n  # aws china region\n  helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller \\\n    -n kube-system \\\n    --set clusterName=${CLUSTER_NAME} \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=aws-load-balancer-controller \\\n    --set image.repository=961992271922.dkr.ecr.cn-northwest-1.amazonaws.com.cn/amazon/aws-load-balancer-controller \\\n    --set region=${AWS_DEFAULT_REGION} \\\n    --set vpcId=${VPC_ID} \nelse\n  # aws commercial region\n  helm install aws-load-balancer-controller eks/aws-load-balancer-controller \\\n    -n kube-system \\\n    --set clusterName=${CLUSTER_NAME} \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=aws-load-balancer-controller \\\n    --set region=${AWS_DEFAULT_REGION} \\\n    --set vpcId=${VPC_ID} \nfi\n\nkubectl get deployment -n kube-system aws-load-balancer-controller\n</code></pre></p> </li> <li> <p>awslbc-ingress-controller-lab-issue</p> </li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#install-in-china-region","title":"install-in-china-region","text":"<pre><code># using china region ecr url\nhelm upgrade -i aws-load-balancer-controller \\\n    eks/aws-load-balancer-controller \\\n    -n kube-system \\\n    --set clusterName=${CLUSTER_NAME} \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=aws-load-balancer-controller \\\n    --set image.repository=961992271922.dkr.ecr.cn-northwest-1.amazonaws.com.cn/amazon/aws-load-balancer-controller \\\n    # --set region=${AWS_DEFAULT_REGION} \\\n    # --set vpcId=${VPC_ID} \n</code></pre> <p>find registry url from eks-container-image-registries-url-by-region using parameter <code>image.repository</code>  (refer LINK)</p> <p>if you got <code>ImagePullBackOff</code>, could replace domain name as following <pre><code>kubectl -n kube-system edit deployment aws-load-balancer-controller\n</code></pre></p> <pre><code># https://docs.aws.amazon.com/eks/latest/userguide/add-ons-images.html\n# add `.cn` postfix for china region\nREGISTRY=602401143452.dkr.ecr.us-east-1.amazonaws.com\n# REGISTRY=961992271922.dkr.ecr.cn-northwest-1.amazonaws.com.cn\n</code></pre>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#upgrade","title":"upgrade","text":"<ul> <li>Migrate v1 to v2 </li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#supported-kubernetes-versions","title":"Supported Kubernetes versions","text":"<ul> <li>AWS Load Balancer Controller v2.0.0~v2.1.3 requires Kubernetes 1.15+</li> <li>AWS Load Balancer Controller v2.2.0~v2.3.1 requires Kubernetes 1.16-1.21</li> <li>AWS Load Balancer Controller v2.4.0+ requires Kubernetes 1.19+</li> <li>AWS Load Balancer Controller v2.5.0+ requires Kubernetes 1.22+</li> <li>AWS Load Balancer Controller v2.6.0+ requires Kubernetes 1.22+</li> <li>AWS Load Balancer Controller v2.7.0+ requires Kubernetes 1.22+</li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#check-version","title":"check version","text":"<pre><code>helm list -n kube-system\n</code></pre>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#in-private-cluster","title":"in private cluster","text":"<p>\u5982\u679c\u8282\u70b9\u7ec4\u65e0\u6cd5\u8bbf\u95ee\u516c\u7f51\uff0c\u5219\u521b\u5efa ingress \u65f6\u611f\u89c9\u5f88\u6162\uff0c\u7ea6 5-6 \u5206\u949f\u624d\u80fd\u770b\u5230 alb\uff0c\u5206\u6790\u65e5\u5fd7\u770b\u5230\uff0c\u521b\u5efa alb \u8fc7\u7a0b\u4e2d\u4f1a\u8bbf\u95ee <code>shield</code> \u548c <code>wafv2</code> \u7b49\u670d\u52a1\u65f6\u8d85\u65f6\u5bfc\u81f4</p>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#blog","title":"blog","text":"<ul> <li>How To Expose Multiple Applications on Amazon EKS Using a Single Application Load Balancer</li> <li>Expose Amazon EKS pods through cross-account load balancer <ul> <li>https://aws.amazon.com/blogs/networking-and-content-delivery/implement-a-central-ingress-application-load-balancer-supporting-private-amazon-elastic-kubernetes-service-vpcs/</li> </ul> </li> <li>Enabling mTLS with ALB in Amazon EKS  Containers </li> </ul>","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/aws-load-balancer-controller/#refer","title":"refer","text":"","tags":["aws/container/eks","kubernetes/ingress"]},{"location":"EKS/addons/cert-manager/","title":"cert-manager","text":"","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cert-manager/#install","title":"install","text":"","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cert-manager/#install-with-eksdemo","title":"install with eksdemo","text":"<ul> <li>https://github.com/awslabs/eksdemo/blob/main/docs/install-cert-manager.md <pre><code>echo ${CLUSTER_NAME}\necho ${AWS_DEFAULT_REGION}\neksdemo install cert-manager -c ${CLUSTER_NAME}\n\nkubectl get clusterissuer\n# default name is letsencrypt-prod\n</code></pre></li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cert-manager/#install-with-helm","title":"install with helm","text":"<ul> <li>https://cert-manager.io/docs/installation/helm/</li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cert-manager/#install-manually","title":"install manually","text":"<ul> <li>https://cert-manager.io/docs/installation/</li> <li>install newest version  <pre><code>kubectl create ns cert-manager\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml \\\n-n cert-manager\n# CM_VERSION=v1.12.3 (2023/07)\n# https://github.com/cert-manager/cert-manager/releases/download/${CM_VERSION}/cert-manager.yaml\n</code></pre></li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cert-manager/#issuer-certificates-","title":"issuer-certificates-","text":"<pre><code>TEST_DOMAIN=thanos-gateway.poc1109.aws.panlm.xyz\ncat &lt;&lt;EOF | kubectl apply -f -\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${TEST_DOMAIN}\n  namespace: monitoring\nspec:\n  secretName: thanos-gateway-tls\n  dnsNames:\n\n    - ${TEST_DOMAIN}\n  issuerRef:\n    name: letsencrypt-prod\n    kind: ClusterIssuer\nEOF\n</code></pre>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cert-manager/#newest-version-v1123-202404","title":"newest version v1.12.3 (2024/04)","text":"<p>https://cert-manager.io/docs/releases/</p> <p></p>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/","title":"cluster-autoscaler","text":"","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#link","title":"link","text":"<ul> <li>workshop</li> <li>troubleshooting</li> <li>github</li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#blog","title":"blog","text":"<ul> <li>Creating Kubernetes Auto Scaling Groups for Multiple Availability Zones</li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#install","title":"install","text":"","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#eksdemo","title":"eksdemo","text":"<pre><code>echo ${CLUSTER_NAME}\necho ${AWS_DEFAULT_REGION}\n\neksdemo install autoscaling cluster-autoscaler -c ${CLUSTER_NAME} -n kube-system\n</code></pre>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#manual","title":"manual","text":"<p>https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/autoscaling.html</p>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#create-service-account","title":"create service account","text":"<pre><code>CLUSTER_NAME=ekscluster1\nAWS_REGION=us-east-2\n\ncat &gt; cluster-autoscaler-policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"autoscaling:SetDesiredCapacity\",\n                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/&lt;my-cluster&gt;\": \"owned\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"VisualEditor1\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"autoscaling:DescribeAutoScalingInstances\",\n                \"autoscaling:DescribeAutoScalingGroups\",\n                \"ec2:DescribeLaunchTemplateVersions\",\n                \"autoscaling:DescribeTags\",\n                \"autoscaling:DescribeLaunchConfigurations\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nEOF\n\nARN=$(aws iam create-policy \\\n    --policy-name AmazonEKSClusterAutoscalerPolicy-$RANDOM \\\n    --policy-document file://cluster-autoscaler-policy.json |jq -r '.Policy.Arn')\n\neksctl create iamserviceaccount \\\n  --cluster=${CLUSTER_NAME} \\\n  --namespace=kube-system \\\n  --name=cluster-autoscaler \\\n  --attach-policy-arn=${ARN} \\\n  --override-existing-serviceaccounts \\\n  --approve\n</code></pre>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#install-from-yaml","title":"install from yaml","text":"<pre><code>curl -o cluster-autoscaler-autodiscover.yaml https://raw.githubusercontent.com/kubernetes/autoscaler/master/cluster-autoscaler/cloudprovider/aws/examples/cluster-autoscaler-autodiscover.yaml\nsed -i \"s/.YOUR CLUSTER NAME./${CLUSTER_NAME}/\" cluster-autoscaler-autodiscover.yaml\n\nkubectl apply -f cluster-autoscaler-autodiscover.yaml\n\nkubectl patch deployment cluster-autoscaler \\\n  -n kube-system \\\n  -p '{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\": \"false\"}}}}}'\n</code></pre> <pre><code>kubectl -n kube-system edit deployment.apps/cluster-autoscaler\n</code></pre> <pre><code>#add following parameter\n--balance-similar-node-groups\n--skip-nodes-with-system-pods=false\n</code></pre> <p>get newest version for your cluster, for example 1.21.3 / 1.22.3 <pre><code>VER=1.21.3\nkubectl set image deployment cluster-autoscaler \\\n  -n kube-system \\\n  cluster-autoscaler=k8s.gcr.io/autoscaling/cluster-autoscaler:v${VER}\n</code></pre></p> <pre><code>kubectl -n kube-system logs -f deployment.apps/cluster-autoscaler\n</code></pre>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#helm","title":"helm","text":"<p>https://github.com/kubernetes/autoscaler/blob/master/charts/cluster-autoscaler/README.md</p> <ul> <li>create service account in previous chapter</li> <li> <p>install from helm <pre><code>helm repo add autoscaler https://kubernetes.github.io/autoscaler\nhelm install myca-release autoscaler/cluster-autoscaler \\\n    -n kube-system \\\n    --set autoDiscovery.clusterName=${CLUSTER_NAME} \\\n    --set awsRegion=${AWS_REGION} \\\n    --set rbac.serviceAccount.create=false \\\n    --set rbac.serviceAccount.name=cluster-autoscaler\n\n# refer values\n# wget -O myca-values.yaml https://github.com/kubernetes/autoscaler/raw/master/charts/cluster-autoscaler/values.yaml\n</code></pre></p> </li> <li> <p>check version <pre><code>helm list -n kube-system\n</code></pre></p> </li> </ul>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cluster-autoscaler/#compatibility-and-upgrade","title":"compatibility and upgrade","text":"<p>https://github.com/kubernetes-sigs/metrics-server#compatibility-matrix</p>","tags":["kubernetes","aws/container/eks"]},{"location":"EKS/addons/cni-metrics-helper/","title":"cni-metrics-helper","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/cni-metrics-helper/#install","title":"install","text":"<ul> <li>https://github.com/aws/amazon-vpc-cni-k8s</li> <li>https://github.com/aws/amazon-vpc-cni-k8s/blob/master/cmd/cni-metrics-helper/README.md</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/","title":"ebs-for-eks","text":"","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#install","title":"install","text":"","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#using-eksdemo-","title":"using-eksdemo-","text":"<ul> <li> <p>if you already have a service account called <code>ebs-csi-controller-sa</code>, delete it <pre><code>echo ${CLUSTER_NAME}\neksctl delete iamserviceaccount -c ${CLUSTER_NAME} \\\n    --name ebs-csi-controller-sa --namespace kube-system\neksctl delete iamserviceaccount -c ${CLUSTER_NAME} \\\n    --name ebs-csi-node-sa --namespace kube-system\n</code></pre></p> </li> <li> <p>install ebs plugin <pre><code>echo ${CLUSTER_NAME}\necho ${AWS_DEFAULT_REGION}\n\neksdemo install storage-ebs-csi -c ${CLUSTER_NAME} --namespace kube-system\n</code></pre></p> </li> </ul>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#manual","title":"manual","text":"<p>https://github.com/kubernetes-sigs/aws-ebs-csi-driver/blob/master/docs/install.md</p>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#ebs-csi","title":"ebs-csi","text":"<pre><code>echo ${CLUSTER_NAME:=ekscluster1}\necho ${AWS_REGION:=us-east-2}\n\ngit clone https://github.com/kubernetes-sigs/aws-ebs-csi-driver.git\nkubectl apply -k aws-ebs-csi-driver/deploy/kubernetes/overlays/stable\n\n# verify pod running\nkubectl get pods -n kube-system\n</code></pre>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#assign-policy-to-node","title":"assign policy to node","text":"<pre><code># # (option) using customer managed policy\n# aws iam create-policy \\\n#     --policy-name Amazon_EBS_CSI_Driver \\\n#     --policy-document file://./aws-ebs-csi-driver/docs/example-iam-policy.json \\\n#     --region ${AWS_REGION}\n# POLICY_NAME=$(aws iam list-policies \\\n#   --query 'Policies[?PolicyName==`Amazon_EBS_CSI_Driver`].Arn' \\\n#   --output text --region ${AWS_REGION} )\n\n# using aws managed policy\nPOLICY_ARN=$(aws iam list-policies \\\n  --query 'Policies[?PolicyName==`AmazonEBSCSIDriverPolicy`].Arn' \\\n  --output text --region ${AWS_REGION} )\n# check detail permission in this policy (need --no-cli-pager)\n# aws iam get-policy-version --policy-arn ${POLICY_ARN} --version-id v1 --no-cli-pager\n\n# get vpc id\nVPC_ID=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} --region ${AWS_REGION} \\\n  --query \"cluster.resourcesVpcConfig.vpcId\" --output text )\n# get nodegroups' instance profiles\nTAG=tag:kubernetes.io/cluster/${CLUSTER_NAME}\nINSTANCE_PROFILES=($(aws ec2 describe-instances \\\n  --filters \"Name=${TAG},Values=owned\" \"Name=vpc-id,Values=${VPC_ID}\"\\\n  |jq -r '.Reservations[].Instances[].IamInstanceProfile.Arn' ) )\n# get role arns for instance profiles\nROLE_ARNS=($(for i in ${INSTANCE_PROFILES[@]}; do\n  aws iam get-instance-profile \\\n    --instance-profile-name ${i##*/} |jq -r '.InstanceProfile.Roles[0].Arn'\ndone |sort -u ))\necho ${ROLE_ARNS[@]}\n\n# attach policy to role\nfor i in ${ROLE_ARNS[@]}; do\n  aws iam attach-role-policy --policy-arn ${POLICY_ARN} \\\n    --role-name ${i##*/} --region ${AWS_REGION}\ndone\n</code></pre>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#verify","title":"verify","text":"<pre><code>kubectl apply -f aws-ebs-csi-driver/examples/kubernetes/dynamic-provisioning/manifests/\n</code></pre>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#cross-az-pod-definition","title":"cross az pod definition","text":"<ul> <li>check pv status</li> <li>check pod on which az</li> <li>delete pod and launch to another az</li> <li>check pod status pending</li> <li>kill pod and launch back to original az</li> </ul> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: app\nspec:\n#  nodeSelector:\n#    topology.kubernetes.io/zone: cn-northwest-1b\n  containers:\n\n  - name: app\n    image: public.ecr.aws/docker/library/centos:centos7.9.2009\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out.txt; sleep 5; done\"]\n    volumeMounts:\n    - name: persistent-storage\n      mountPath: /data\n  volumes:\n  - name: persistent-storage\n    persistentVolumeClaim:\n      claimName: ebs-claim\n  terminationGracePeriodSeconds: 0\n</code></pre>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#check-log","title":"check log","text":"<pre><code>k logs -f deploy/ebs-csi-controller csi-provisioner -n kube-system \n</code></pre>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/ebs-for-eks/#ebs-csi-pod-has-6-container","title":"ebs-csi-pod has 6 container","text":"<ul> <li> <p>https://www.velotio.com/engineering-blog/kubernetes-csi-in-action-explained-with-features-and-use-cases</p> </li> <li> <p>ebs-plugin </p> </li> <li>csi-provisioner </li> <li>csi-attacher </li> <li>csi-snapshotter </li> <li>csi-resizer </li> <li>liveness-probe</li> </ul>","tags":["aws/storage/ebs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/","title":"EFS CSI on EKS","text":"","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#link","title":"link","text":"<ul> <li>efs workshop</li> <li>efs-on-eks-mini-priviledge</li> <li>Introducing Amazon EFS CSI dynamic provisioning</li> </ul>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#create-efs-","title":"create-efs-","text":"<pre><code>echo ${CLUSTER_NAME:=ekscluster1}\necho ${AWS_DEFAULT_REGION:=cn-northwest-1} ; export AWS_DEFAULT_REGION\n\nVPC_ID=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} \\\n  --query \"cluster.resourcesVpcConfig.vpcId\" --output text )\nVPC_CIDR=$(aws ec2 describe-vpcs --vpc-ids ${VPC_ID} \\\n  --query \"Vpcs[].CidrBlock\" --output text )\n\n# create security group\nSG_ID=$(aws ec2 create-security-group --description ${CLUSTER_NAME}-efs-eks-sg \\\n  --group-name efs-sg-$RANDOM --vpc-id ${VPC_ID} |jq -r '.GroupId' )\n# allow tcp 2049 (nfs v4)\naws ec2 authorize-security-group-ingress --group-id ${SG_ID}  --protocol tcp --port 2049 --cidr ${VPC_CIDR}\n\n# create efs\nFILESYSTEM_ID=$(aws efs create-file-system \\\n    --creation-token ${CLUSTER_NAME} |jq -r '.FileSystemId' )\necho ${FILESYSTEM_ID}\n\nwhile true ; do\naws efs describe-file-systems \\\n    --file-system-id ${FILESYSTEM_ID} \\\n    --query 'FileSystems[].LifeCycleState' \\\n    --output text |grep -q available\nif [[ $? -eq 0 ]]; then\n  break\nelse\n  echo \"wait...\"\n  sleep 10\nfi  \ndone\n\n# create mount target\nTAG=tag:kubernetes.io/role/internal-elb\nSUBNETS=($(aws eks describe-cluster --name ${CLUSTER_NAME} \\\n    |jq -r '.cluster.resourcesVpcConfig.subnetIds[]'))\nPRIV_SUBNETS=($(aws ec2 describe-subnets --filters \"Name=${TAG},Values=1\" \\\n    --subnet-ids ${SUBNETS[@]} |jq -r '.Subnets[].SubnetId' ) )\nfor i in ${PRIV_SUBNETS[@]} ; do\n    echo \"creating mount target in: \" $i\n    aws efs create-mount-target --file-system-id ${FILESYSTEM_ID} \\\n        --subnet-id ${i} --security-group ${SG_ID}\ndone\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#install-efs-csi","title":"install efs-csi","text":"","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#install-using-eksdemo","title":"install using eksdemo","text":"<pre><code>eksdemo  install storage efs-csi -c ekscluster1\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#install-from-github","title":"install from github","text":"<p>\u76f4\u63a5\u5b89\u88c5\u4e0d\u989d\u5916\u914d\u7f6e\u6743\u9650\u7684\u8bdd\uff0c\u53ea\u80fd\u9a8c\u8bc1\u9759\u6001 provision \u5982\u679c\u9a8c\u8bc1\u52a8\u6001 provision\uff0c\u4f1a\u6709\u6743\u9650\u4e0d\u591f\u7684\u544a\u8b66\uff0c\u56e0\u4e3a\u9700\u8981\u52a8\u6001\u521b\u5efa access point\uff0c\u53ef\u4ee5\u901a\u8fc7\u8282\u70b9 role\u65b9\u5f0f\u52a0\u8f7d\u6743\u9650\uff0c\u6216\u8005\u91cd\u65b0\u90e8\u7f72\u4e3a irsa</p> <pre><code>git clone https://github.com/kubernetes-sigs/aws-efs-csi-driver.git\nkubectl apply -k ./aws-efs-csi-driver/deploy/kubernetes/overlays/stable\n\n# verify pod running\nkubectl get pods -n kube-system\n\n# verify version\npod1=$(kubectl get pod -n kube-system -l app=efs-csi-controller |tail -n 1 |awk '{print $1}')\nkubectl exec -it ${pod1} -n kube-system -- mount.efs --version\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#uninstall","title":"uninstall","text":"<pre><code>cd aws-efs-csi-driver/deploy/kubernetes/overlays/stable\nkubectl kustomize |kubectl delete -f -\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#install-from-helm","title":"install from helm","text":"<p>https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/docs/README.md#installation</p>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#node-role-alternative","title":"node role (alternative)","text":"<ul> <li>you will got error in creating pod:  <code>User: arn:aws:sts::xxx:assumed-role/eksctl-ekscluster1-nodegroup-mana-NodeInstanceRole-1LTHOM1WRDBIS/i-xxx is not authorized to perform: elasticfilesystem:DescribeMountTargets on the specified resource</code>, if you miss this step <pre><code>wget -O iam-policy.json 'https://github.com/kubernetes-sigs/aws-efs-csi-driver/raw/master/docs/iam-policy-example.json'\n# cp aws-efs-csi-driver/docs/iam-policy-example.json iam-policy.json\n\n## Create an IAM policy \nPOLICY_ARN=$(aws iam create-policy \\\n  --policy-name EFSCSIControllerIAMPolicy-$RANDOM \\\n  --policy-document file://iam-policy.json |jq -r '.Policy.Arn' )\necho ${POLICY_ARN}\n\n## attach policy to node role MANUALLY\n</code></pre></li> </ul>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#sa-role","title":"sa role","text":"<pre><code># do steps in **node role** chapter\n# need POLICY_ARN\n\necho ${CLUSTER_NAME}\necho ${AWS_DEFAULT_REGION}\necho ${POLICY_ARN}\n\neksctl utils associate-iam-oidc-provider \\\n    --cluster ${CLUSTER_NAME} \\\n    --approve\neksctl create iamserviceaccount \\\n    --cluster=${CLUSTER_NAME} \\\n    --namespace=kube-system \\\n    --name=efs-csi-controller-sa \\\n    --override-existing-serviceaccounts \\\n    --attach-policy-arn=${POLICY_ARN} \\\n    --approve\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#install","title":"install","text":"<p><pre><code>helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver\nhelm repo update\n\n# get url for your region \n# https://docs.aws.amazon.com/eks/latest/userguide/add-ons-images.html\n# add `.cn` postfix for china region\nif [[ ${AWS_DEFAULT_REGION%%-*} == \"cn\" ]]; then \n  REGISTRY=961992271922.dkr.ecr.cn-northwest-1.amazonaws.com.cn\nelse \n  REGISTRY=602401143452.dkr.ecr.us-east-1.amazonaws.com\nfi\nhelm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver \\\n  --namespace kube-system \\\n  --set image.repository=${REGISTRY}/eks/aws-efs-csi-driver \\\n  --set controller.serviceAccount.create=false \\\n  --set controller.serviceAccount.name=efs-csi-controller-sa\n</code></pre> find registry url from eks-container-image-registries-url-by-region</p>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#for-private-cluster","title":"for private cluster","text":"<p>https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/docs/README.md#installation</p> <pre><code>--set sidecars.livenessProbe.image.repository=602401143452.dkr.ecr.region-code.amazonaws.com/eks/livenessprobe \\\n--set sidecars.node-driver-registrar.image.repository=602401143452.dkr.ecr.region-code.amazonaws.com/eks/csi-node-driver-registrar \\\n--set sidecars.csiProvisioner.image.repository=602401143452.dkr.ecr.region-code.amazonaws.com/eks/csi-provisioner\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#uninstall_1","title":"uninstall","text":"<pre><code>helm uninstall aws-efs-csi-driver -n kube-system\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#verify","title":"verify","text":"","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#static-provisioning","title":"static provisioning","text":"<p>link using static provision with mount, no access point needed, so no additional iam policy</p> <pre><code>echo ${FILESYSTEM_ID}\n\ncat &gt; storageclass.yaml &lt;&lt;-EOF\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-sc-mnt\nprovisioner: efs.csi.aws.com\nEOF\n\n# ensure volumeHandle has been replaced by your efs filesystem id\nenvsubst &gt; pv.yaml &lt;&lt;-EOF\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: efs-pv-mnt\nspec:\n  capacity:\n    storage: 6Gi             # equal or bigger pvc, but it's a soft limit\n  volumeMode: Filesystem\n  accessModes:\n\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: efs-sc-mnt\n  csi:\n    driver: efs.csi.aws.com\n    volumeHandle: ${FILESYSTEM_ID}\nEOF\n\ncat &gt; pvc.yaml &lt;&lt;-EOF\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: efs-claim-mnt\nspec:\n  accessModes:\n\n    - ReadWriteMany\n  storageClassName: efs-sc-mnt\n  resources:\n    requests:\n      storage: 5Gi           # it's a soft limit\nEOF\n\necho '---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: efs-app1\nspec:\n  containers:\n\n  - name: efs-app1\n    image: busybox\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out1.txt; sleep 5; done\"]\n    volumeMounts:\n    - name: persistent-storage\n      mountPath: /data\n  volumes:\n  - name: persistent-storage\n    persistentVolumeClaim:\n      claimName: efs-claim-mnt\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: efs-app2\nspec:\n  containers:\n  - name: efs-app2\n    image: busybox\n    command: [\"/bin/sh\"]\n    args: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out2.txt; sleep 5; done\"]\n    volumeMounts:\n    - name: persistent-storage\n      mountPath: /data\n  volumes:\n  - name: persistent-storage\n    persistentVolumeClaim:\n      claimName: efs-claim-mnt\n' |tee pod.yaml\n\n\nkubectl apply -f storageclass.yaml\nkubectl apply -f pv.yaml\nkubectl apply -f pvc.yaml\nkubectl apply -f pod.yaml\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#dynamic-provisioning-with-efs-access-point","title":"dynamic provisioning with efs access point","text":"<p>https://github.com/kubernetes-sigs/aws-efs-csi-driver/tree/master/examples/kubernetes/dynamic_provisioning need additional iam policy, execute <code>node role</code> part, or reinstall with irsa</p> <pre><code>echo ${FILESYSTEM_ID}\n\n# ensure volumeHandle has been replaced by your efs filesystem id\nenvsubst &gt; ./dy-storageclass.yaml &lt;&lt;-EOF\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-sc\nprovisioner: efs.csi.aws.com\n# reclaimPolicy: Ratain # delete pod\nparameters:\n  provisioningMode: efs-ap\n  fileSystemId: ${FILESYSTEM_ID}\n  directoryPerms: \"700\"\n  gidRangeStart: \"1000\" # optional\n  gidRangeEnd: \"2000\" # optional\n  basePath: \"/dynamic_provisioning\" # optional\nEOF\n\necho '---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: efs-claim\nspec:\n  accessModes:\n\n    - ReadWriteMany\n  storageClassName: efs-sc\n  resources:\n    requests:\n      storage: 5Gi                      # soft limit\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: efs-app-dy1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: efs-app-dy1\n  template:\n    metadata:\n      labels:\n        app: efs-app-dy1\n    spec:\n      containers:\n        - name: app\n          image: public.ecr.aws/docker/library/centos:centos7.9.2009\n          command: [\"/bin/sh\"]\n          args: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out1; sleep 5; done\"]\n          volumeMounts:\n            - name: persistent-storage\n              mountPath: /data\n      volumes:\n        - name: persistent-storage\n          persistentVolumeClaim:\n            claimName: efs-claim\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: efs-app-dy2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: efs-app-dy2\n  template:\n    metadata:\n      labels:\n        app: efs-app-dy2\n    spec:\n      containers:\n        - name: app\n          image: public.ecr.aws/docker/library/centos:centos7.9.2009\n          command: [\"/bin/sh\"]\n          args: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out2; sleep 5; done\"]\n          volumeMounts:\n            - name: persistent-storage\n              mountPath: /data\n      volumes:\n        - name: persistent-storage\n          persistentVolumeClaim:\n            claimName: efs-claim\n' |tee ./dy-pod.yaml\n\nkubectl apply -f dy-storageclass.yaml\nkubectl apply -f dy-pod.yaml\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#check-log","title":"check log","text":"<pre><code>kubectl logs deployment/efs-csi-controller -n kube-system -c efs-plugin\nkubectl logs daemonset/efs-csi-node -n kube-system -c efs-plugin\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#reference","title":"reference","text":"<ul> <li>Amazon EFS quotas and limits</li> </ul>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#redeploy-deployment-and-daemonset","title":"redeploy deployment and daemonset","text":"<pre><code>kubectl rollout restart deploy efs-csi-controller -n kube-system\nkubectl rollout restart ds efs-csi-node -n kube-system\n</code></pre>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/efs-csi/#todo","title":"todo","text":"<ul> <li> #todo cross vpc efs csi mount</li> </ul>","tags":["aws/storage/efs","aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/","title":"eks-addons-coredns","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/#github","title":"github","text":"<ul> <li>doc </li> </ul> <p>latest version </p> <p>To improve the stability and availability of the CoreDNS Deployment, versions\u00a0<code>v1.9.3-eksbuild.5</code>\u00a0and later and\u00a0<code>v1.10.1-eksbuild.2</code>\u00a0are deployed with a\u00a0<code>PodDisruptionBudget</code>. If you\u2019ve deployed an existing\u00a0<code>PodDisruptionBudget</code>, your upgrade to these versions might fail. If the upgrade fails, completing one of the following tasks should resolve the issue:</p> <ul> <li>When doing the upgrade of the Amazon EKS add-on, choose to override the existing settings as your conflict resolution option. </li> <li>Remove your existing\u00a0<code>PodDisruptionBudget</code>\u00a0and try the upgrade again.</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/#updating","title":"updating","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/#from-cli","title":"from cli","text":"<pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=us-east-2\naws eks describe-addon --cluster-name ${CLUSTER_NAME} \\\n--addon-name coredns --query \"addon.addonVersion\" --output text\n\naws eks update-addon --cluster-name ${CLUSTER_NAME} \\\n--addon-name coredns --addon-version v1.9.3-eksbuild.5 \\\n--resolve-conflicts PRESERVE \n#--configuration-values '{\"replicaCount\":3}'\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/#from-webui","title":"from webui","text":"<p>select <code>PRESERVE</code> </p>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/#others","title":"others","text":"<ul> <li>managed-coredns</li> <li>self-managed-coredns</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-coredns/#refer","title":"refer","text":"<ul> <li>https://github.com/coredns/deployment/blob/master/kubernetes/Upgrading_CoreDNS.md</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-kube-proxy/","title":"eks-addons-kube-proxy","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-kube-proxy/#github","title":"github","text":"<ul> <li>doc</li> </ul> <p>There are two types of the\u00a0<code>kube-proxy</code>\u00a0container image available for each Amazon EKS cluster version:</p> <ul> <li>Default\u00a0\u2013 This image type is based on a Debian-based Docker image that is maintained by the Kubernetes upstream community.    </li> <li>Minimal\u00a0\u2013 This image type is based on a\u00a0minimal base image\u00a0maintained by Amazon EKS Distro, which contains minimal packages and doesn\u2019t have shells. For more information, see\u00a0Amazon EKS Distro.</li> </ul> <p></p> <pre><code>aws eks describe-addon-versions --addon-name kube-proxy |jq -r '.addons[].addonVersions[].addonVersion'\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/","title":"eks-addons-vpc-cni","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/#github","title":"github","text":"<ul> <li>github </li> <li>doc </li> </ul> <p>minor version </p> <p>latest version  20230731 update: 1.13.3-eksbuild.1 </p> <p>Upgrading (or downgrading) the VPC CNI version should result in no downtime. Existing pods should not be affected and will not lose network connectivity. New pods will be in pending state until the VPC CNI is fully initialized and can assign pod IP addresses. In v1.12.0+, VPC CNI state is restored via an on-disk file:\u00a0<code>/var/run/aws-node/ipam.json</code>. In lower versions, state is restored via calls to container runtime.</p>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/#updating-add-on","title":"Updating add-on","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/#from-webui-prefer","title":"from webui (prefer)","text":"<p>works select <code>PRESERVE</code> </p>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/#from-cli","title":"from cli","text":"<p>not success</p> <ul> <li> <p>check addon version <pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=us-east-2\naws eks describe-addon --cluster-name ${CLUSTER_NAME} \\\n--addon-name vpc-cni --query addon.addonVersion --output text\n</code></pre></p> </li> <li> <p>backup <pre><code>kubectl get daemonset aws-node -n kube-system -o yaml &gt; aws-k8s-cni-old.yaml\n</code></pre></p> </li> <li> <p>upgrade <pre><code>SOURCE_VERSION=v1.13.2-eksbuild.1\nTARGET_VERSION=v1.13.3-eksbuild.1\naws eks update-addon --cluster-name ${CLUSTER_NAME} \\\n--addon-name vpc-cni --addon-version ${TARGET_VERSION} \\\n--resolve-conflicts PRESERVE \n</code></pre></p> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/#re-install","title":"re-install","text":"<pre><code># arn:aws:iam::xxx:role/eksctl-ekscluster1-addon-vpc-cni-Role1\n\n# --configuration-values '{\"env\":{\"ENABLE_IPv4\":\"true\",\"ENABLE_IPv6\":\"false\"}}'\n\naws eks create-addon --cluster-name ${CLUSTER_NAME} \\\n--addon-name vpc-cni --addon-version v1.13.2-eksbuild.1 \\\n--service-account-role-arn arn:aws:iam::xxx:role/eksctl-ekscluster1-addon-vpc-cni-Role1 \\\n--resolve-conflicts OVERWRITE\n\n# aws eks delete-addon --cluster-name ekscluster1 --addon-name vpc-cni\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-addons-vpc-cni/#additional","title":"additional","text":"<ul> <li>security-group-for-pod<ul> <li>../solutions/network/enable-sg-on-pod</li> </ul> </li> <li>upgrade-vpc-cni</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-external-snat/","title":"eks-external-snat","text":"","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-external-snat/#snat-disabled-prefer","title":"snat disabled (prefer)","text":"<p>work node in private subnet (LINK)</p> <p> <pre><code>kubectl set env daemonset -n kube-system aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-external-snat/#snat-enabled","title":"snat enabled","text":"<p>work node in public subnet</p> <p> <pre><code>kubectl set env daemonset -n kube-system aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=false\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/addons/eks-external-snat/#reference","title":"reference","text":"<ul> <li>https://docs.aws.amazon.com/eks/latest/userguide/external-snat.html</li> </ul> <p>https://broadcast.amazon.com/videos/388152</p>","tags":["aws/container/eks"]},{"location":"EKS/addons/eksup/","title":"eksup","text":"","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/eksup/#github","title":"github","text":"<ul> <li>https://clowdhaus.github.io/eksup/</li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/externaldns-for-route53/","title":"ExternalDNS for Route53","text":"","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/externaldns-for-route53/#func-create-hosted-zone","title":"func create hosted zone","text":"<ul> <li>refer: ../../CLI/awscli/route53-cmd</li> <li>refer: ../../CLI/awscli/route53-cmd </li> <li>refer: route53-subdomian</li> <li>you also could create private hosted zone and associate to your vpc. plugin will insert/update record in your private hosted zone. (link)</li> </ul>","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/externaldns-for-route53/#install","title":"install","text":"","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/externaldns-for-route53/#install-with-eksdemo-","title":"install-with-eksdemo-","text":"<ul> <li>https://github.com/awslabs/eksdemo/blob/main/docs/install-edns.md <pre><code>echo ${CLUSTER_NAME}\necho ${AWS_DEFAULT_REGION}\n\neksdemo install external-dns -c ${CLUSTER_NAME} \n</code></pre></li> </ul>","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/externaldns-for-route53/#install-","title":"install-","text":"<ul> <li>https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md</li> <li> <p>\u521b\u5efa\u6240\u9700\u8981\u7684\u670d\u52a1\u8d26\u53f7 (create service account)</p> <ul> <li>\u786e\u4fdd EKS \u96c6\u7fa4\u540d\u79f0\u6b63\u786e (ensure eks cluster name is correct)</li> <li>\u786e\u4fdd\u4f7f\u7528\u6b63\u786e\u7684 Region (ensure region is correct)</li> <li>\u786e\u4fdd\u57df\u540d\u5339\u914d\u6240\u9700 (ensure domain name is correct) <pre><code>CLUSTER_NAME=ekscluster1\nAWS_REGION=us-east-2\nDOMAIN_NAME=api0413.aws.panlm.xyz\nEXTERNALDNS_NS=externaldns\nexport AWS_PAGER=\"\"\n\n# create namespace if it does not yet exist\nkubectl get namespaces | grep -q $EXTERNALDNS_NS || \\\n  kubectl create namespace $EXTERNALDNS_NS\n\ncat &gt;externaldns-policy.json &lt;&lt;-EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ChangeResourceRecordSets\"\n      ],\n      \"Resource\": [\n        \"arn:aws:route53:::hostedzone/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ListHostedZones\",\n        \"route53:ListResourceRecordSets\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\nEOF\n\nPOLICY_NAME=AllowExternalDNSUpdates-${RANDOM}\naws iam create-policy --policy-name ${POLICY_NAME} --policy-document file://externaldns-policy.json\n\n# example: arn:aws:iam::XXXXXXXXXXXX:policy/AllowExternalDNSUpdates\nexport POLICY_ARN=$(aws iam list-policies \\\n --query 'Policies[?PolicyName==`'\"${POLICY_NAME}\"'`].Arn' --output text)\n\neksctl create iamserviceaccount \\\n  --cluster ${CLUSTER_NAME} \\\n  --name \"external-dns\" \\\n  --namespace ${EXTERNALDNS_NS:-\"default\"} \\\n  --override-existing-serviceaccounts \\\n  --attach-policy-arn $POLICY_ARN \\\n  --approve\n</code></pre></li> </ul> </li> <li> <p>\u4f7f\u7528\u4e0a\u8ff0\u670d\u52a1\u8d26\u53f7\u5b89\u88c5 ExternalDNS (install ExternalDNS with existed SA) <pre><code>echo ${EXTERNALDNS_NS}\necho ${DOMAIN_NAME}\necho ${AWS_REGION}\n\nenvsubst &gt;externaldns-with-rbac.yaml &lt;&lt;-EOF\n# comment out sa if it was previously created\n# apiVersion: v1\n# kind: ServiceAccount\n# metadata:\n#   name: external-dns\n#   labels:\n#     app.kubernetes.io/name: external-dns\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: external-dns\n  labels:\n    app.kubernetes.io/name: external-dns\nrules:\n\n  - apiGroups: [\"\"]\n    resources: [\"services\",\"endpoints\",\"pods\",\"nodes\"]\n    verbs: [\"get\",\"watch\",\"list\"]\n  - apiGroups: [\"extensions\",\"networking.k8s.io\"]\n    resources: [\"ingresses\"]\n    verbs: [\"get\",\"watch\",\"list\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: external-dns-viewer\n  labels:\n    app.kubernetes.io/name: external-dns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: external-dns\nsubjects:\n  - kind: ServiceAccount\n    name: external-dns\n    namespace: ${EXTERNALDNS_NS} # change to desired namespace: externaldns, kube-addons\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: external-dns\n  labels:\n    app.kubernetes.io/name: external-dns\nspec:\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: external-dns\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: external-dns\n    spec:\n      serviceAccountName: external-dns\n      containers:\n        - name: external-dns\n          image: registry.k8s.io/external-dns/external-dns:v0.13.2\n          args:\n            - --source=service\n            - --source=ingress\n            - --domain-filter=${DOMAIN_NAME} # will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones\n            - --provider=aws\n            - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization\n            - --aws-zone-type=public # only look at public hosted zones (valid values are public, private or no value for both)\n            - --registry=txt\n            - --txt-owner-id=external-dns\n          env:\n            - name: AWS_DEFAULT_REGION\n              value: ${AWS_REGION} # change to region where EKS is installed\n     # # Uncommend below if using static credentials\n     #        - name: AWS_SHARED_CREDENTIALS_FILE\n     #          value: /.aws/credentials\n     #      volumeMounts:\n     #        - name: aws-credentials\n     #          mountPath: /.aws\n     #          readOnly: true\n     #  volumes:\n     #    - name: aws-credentials\n     #      secret:\n     #        secretName: external-dns\nEOF\n\nkubectl create --filename externaldns-with-rbac.yaml \\\n  --namespace ${EXTERNALDNS_NS:-\"default\"}\n</code></pre></p> </li> </ul>","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/externaldns-for-route53/#sample","title":"sample","text":"<ul> <li>https://github.com/panlm/thanos-example/blob/main/POC-template/query/thanos-query-frontend-service.yaml</li> </ul>","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/externaldns-for-route53/#verify","title":"verify","text":"<ul> <li>create namespace <pre><code>NS=verify\nkubectl create ns ${NS}\n</code></pre></li> </ul> <p>service sample</p> <ul> <li> <p>create nlb (no more clb, 20230423) with service definition <pre><code>envsubst &gt;verify-nginx.yaml &lt;&lt;-EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  annotations:\n    external-dns.alpha.kubernetes.io/hostname: nginx.${DOMAIN_NAME}\n    service.beta.kubernetes.io/aws-load-balancer-scheme: \"internet-facing\"\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n    name: http\n    targetPort: 80\n  selector:\n    app: nginx\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - image: nginx\n        name: nginx\n        ports:\n        - containerPort: 80\n          name: http\nEOF\n\nkubectl create --filename verify-nginx.yaml -n ${NS:-default}\n</code></pre></p> </li> <li> <p>wait nlb available and execute <pre><code>aws route53 list-resource-record-sets --output json --hosted-zone-id $ZONE_ID \\\n  --query \"ResourceRecordSets[?Name == 'nginx.${DOMAIN_NAME}.']|[?Type == 'A']\"\n\naws route53 list-resource-record-sets --output json --hosted-zone-id $ZONE_ID \\\n  --query \"ResourceRecordSets[?Name == 'nginx.${DOMAIN_NAME}.']|[?Type == 'TXT']\"\n\ndig +short nginx.${DOMAIN_NAME}. A\n\ncurl http://nginx.${DOMAIN_NAME}\n</code></pre></p> </li> </ul> <p>ingress sample</p> <ul> <li> <p>ensure certificate is existed and create alb  <pre><code>echo ${CERTIFICATE_ARN}\n\nenvsubst &gt;verify-nginx-ingress.yaml &lt;&lt;-EOF\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: nginx\n  annotations:\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test,Application=nginx\n    alb.ingress.kubernetes.io/target-type: ip\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\": 443}]'\n    alb.ingress.kubernetes.io/ssl-redirect: '443'\n    alb.ingress.kubernetes.io/certificate-arn: ${CERTIFICATE_ARN}\nspec:\n  ingressClassName: alb\n  rules:\n\n    - host: server.${DOMAIN_NAME}\n      http:\n        paths:\n          - backend:\n              service:\n                name: nginx\n                port:\n                  number: 80\n            path: /\n            pathType: Prefix\nEOF\n\nkubectl create --filename verify-nginx-ingress.yaml -n ${NS:-default}\n</code></pre></p> </li> <li> <p>wait alb available and execute <pre><code>aws route53 list-resource-record-sets --output json --hosted-zone-id $ZONE_ID \\\n  --query \"ResourceRecordSets[?Name == 'server.${DOMAIN_NAME}.']\"\n\ndig +short server.${DOMAIN_NAME}. A\n\ncurl https://server.${DOMAIN_NAME}\n</code></pre></p> </li> </ul>","tags":["kubernetes","aws/network/route53"]},{"location":"EKS/addons/karpenter/","title":"karpenter-lab","text":"","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#compatibility","title":"compatibility","text":"","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#install","title":"install","text":"<ul> <li>https://karpenter.sh/docs/getting-started/getting-started-with-karpenter/</li> </ul>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#using-eksdemo","title":"using eksdemo","text":"<ul> <li>https://github.com/awslabs/eksdemo/blob/main/docs/install-karpenter.md <pre><code>eksdemo install karpenter -c ekscluster --dry-run\n</code></pre></li> </ul>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#using-helm","title":"using helm","text":"<ul> <li>create sqs for interrupt event <pre><code>aws sqs  create-queue --queue-name sqs-${CLUSTER_NAME}\n</code></pre></li> <li>create service account (refer: func-create-iamserviceaccount)</li> <li>install <pre><code>echo ${KARPENTER_VERSION:=1.0.0}\necho ${KARPENTER_NAMESPACE:=karpenter}\necho ${CLUSTER_NAME:=ekscluster1}\n\nhelm upgrade --install karpenter oci://public.ecr.aws/karpenter/karpenter \\\n    --version \"${KARPENTER_VERSION}\" \\\n    --namespace \"${KARPENTER_NAMESPACE}\" --create-namespace  \\\n    --set \"settings.clusterName=${CLUSTER_NAME}\"   \\\n    --set \"settings.interruptionQueue=sqs-${CLUSTER_NAME}\"   \\\n    --set controller.resources.requests.cpu=1   \\\n    --set controller.resources.requests.memory=1Gi   \\\n    --set controller.resources.limits.cpu=1   \\\n    --set controller.resources.limits.memory=1Gi   \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=karpenter \n</code></pre></li> </ul> <pre><code>helm upgrade -i -f a.value.yaml karpenter oci://public.ecr.aws/karpenter/karpenter \\\n    --version \"${KARPENTER_VERSION}\" \\\n    --namespace \"${KARPENTER_NAMESPACE}\" --create-namespace \n</code></pre>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#previous-version","title":"previous version","text":"<pre><code>echo ${CLUSTER_NAME:=eks-upgrade-demo}\necho ${AWS_DEFAULT_REGION:=us-east-2}\n\nexport KARPENTER_VERSION=v0.27.5\nexport AWS_ACCOUNT_ID=\"$(aws sts get-caller-identity --query Account --output text)\"\nexport TEMPOUT=$(mktemp)\n\necho $KARPENTER_VERSION $CLUSTER_NAME $AWS_DEFAULT_REGION $AWS_ACCOUNT_ID $TEMPOUT\n</code></pre> <pre><code>curl -fsSL https://karpenter.sh/\"${KARPENTER_VERSION}\"/getting-started/getting-started-with-karpenter/cloudformation.yaml  &gt; $TEMPOUT \\\n&amp;&amp; aws cloudformation deploy \\\n  --stack-name \"Karpenter-${CLUSTER_NAME}\" \\\n  --template-file \"${TEMPOUT}\" \\\n  --capabilities CAPABILITY_NAMED_IAM \\\n  --parameter-overrides \"ClusterName=${CLUSTER_NAME}\"\n</code></pre>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#instance-family","title":"instance family","text":"<pre><code>spec:\n  requirements:\n\n  - key: karpenter.k8s.aws/instance-family\n    operator: In\n    values: [c5, m5, r5]\n</code></pre>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#install-eks-node-viewer","title":"install eks-node-viewer","text":"<pre><code>go install github.com/awslabs/eks-node-viewer/cmd/eks-node-viewer@latest\nsudo mv -v ~/go/bin/eks-node-viewer /usr/local/bin\n</code></pre>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#scenario","title":"scenario","text":"","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#coredns","title":"coredns","text":"<pre><code>kubectl get deploy -n kube-system coredns -o yaml\n\napiVersion: apps/v1\nkind: Deployment\n...\n  template:\n    metadata:\n      annotations:\n        cluster-autoscaler.kubernetes.io/safe-to-evict: \"false\"\n        karpenter.sh/do-not-evict: \"true\"\n      creationTimestamp: null\n      labels:\n        eks.amazonaws.com/component: coredns\n        foo: bar\n        k8s-app: kube-dns\n        ...\n</code></pre>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#workshop","title":"workshop","text":"<ul> <li>https://catalog.workshops.aws/karpenter/</li> <li>https://www.eksworkshop.com/beginner/085_scaling_karpenter/</li> </ul>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#run-gpu-pod","title":"run gpu pod","text":"<ul> <li>https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/</li> </ul>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#refer","title":"refer","text":"<ul> <li>Creating Kubernetes Auto Scaling Groups for Multiple Availability Zones</li> <li>https://stormforge.io/kubernetes-autoscaling/eks-karpenter/</li> <li>https://medium.com/@gajaoncloud/karpenter-mastery-nodepools-nodeclasses-for-workload-nirvana-bc89850fa934</li> </ul> <ul> <li>ec2-spot-instance</li> </ul>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#sample","title":"sample","text":"<pre><code>---\napiVersion: karpenter.k8s.aws/v1\nkind: EC2NodeClass\nmetadata:\n  name: default\nspec:\n  amiSelectorTerms:\n\n    - alias: al2023@latest\n  role: KarpenterNodeRole-ekscluster1\n  securityGroupSelectorTerms:\n  - tags:\n      aws:eks:cluster-name: ekscluster1\n  subnetSelectorTerms:\n  - tags:\n      Name: eksctl-ekscluster1-cluster/SubnetPrivate*\n  tags:\n    intent: apps\n</code></pre>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/karpenter/#sample-no-amd","title":"sample - no amd","text":"<p>https://docs.aws.amazon.com/eks/latest/userguide/create-node-pool.html <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      nodeSelector:\n        kubernetes.io/arch: amd64\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n\n            - matchExpressions:\n              - key: eks.amazonaws.com/instance-cpu-manufacturer\n                operator: In\n                values:\n                - aws\n                - intel\n      containers:\n      - name: my-app\n        image: nginx:latest\n</code></pre></p>","tags":["aws/container/karpenter","aws/container/eks"]},{"location":"EKS/addons/kube-no-trouble/","title":"kube-no-trouble","text":"","tags":["kubernetes"]},{"location":"EKS/addons/kube-no-trouble/#github","title":"github","text":"<p>https://github.com/doitintl/kube-no-trouble</p>","tags":["kubernetes"]},{"location":"EKS/addons/kube-no-trouble/#install","title":"install","text":"<pre><code>sh -c \"$(curl -sSL https://git.io/install-kubent)\"\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/addons/kube-no-trouble/#check-target-version-125","title":"check target version 1.25","text":"<pre><code>kubent -t 1.25\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/addons/kube-no-trouble/#windows","title":"windows","text":"<ul> <li>https://github.com/doitintl/kube-no-trouble/releases/download/nightly-0.7.0-53-g4fa4920/kubent-nightly-0.7.0-53-g4fa4920-windows-amd64.tar.gz</li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/kube-state-metrics/","title":"kube-state-metrics","text":"<ul> <li>https://github.com/kubernetes/kube-state-metrics</li> <li>included by prometheus operator</li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/kube-state-metrics/#kube-state-metrics-vs-cadvisor","title":"kube-state-metrics vs. cadvisor","text":"<p>https://aws.amazon.com/blogs/containers/monitoring-amazon-eks-on-aws-fargate-using-prometheus-and-grafana/</p> <p>To measure a pod\u2019s performance on Fargate, we need metrics like vCPU, memory usage, and network transfers. Prometheus collects these metrics from two sources: cAdvisor and kube-state-metrics.</p>","tags":["kubernetes"]},{"location":"EKS/addons/kube-state-metrics/#cadvisor","title":"cadvisor","text":"<p>refer: cadvisor <pre><code>container_cpu*\n</code></pre></p>","tags":["kubernetes"]},{"location":"EKS/addons/kube-state-metrics/#kube-state-metrics_1","title":"kube-state-metrics","text":"<pre><code>kube_pod_*\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/addons/kube-state-metrics/#kube-state-metrics-vs-metrics-server","title":"kube-state-metrics vs. metrics-server","text":"<p>https://github.com/kubernetes/kube-state-metrics?tab=readme-ov-file#kube-state-metrics-vs-metrics-server</p> <p>The\u00a0metrics-server\u00a0is a project that has been inspired by\u00a0Heapster\u00a0and is implemented to serve the goals of core metrics pipelines in\u00a0Kubernetes monitoring architecture. It is a cluster level component which periodically scrapes metrics from all Kubernetes nodes served by Kubelet through Metrics API. The metrics are aggregated, stored in memory and served in\u00a0Metrics API format. The metrics-server stores the latest values only and is not responsible for forwarding metrics to third-party destinations.</p> <p>kube-state-metrics (KSM) is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects. (See examples in the Metrics section below.) It is not focused on the health of the individual Kubernetes components, but rather on the health of the various objects inside, such as deployments, nodes and pods.</p> <p>Having kube-state-metrics as a separate project also enables access to these metrics from monitoring systems such as Prometheus.</p>","tags":["kubernetes"]},{"location":"EKS/addons/kube-state-metrics/#refer","title":"refer","text":"<ul> <li>https://medium.com/@seifeddinerajhi/monitoring-kubernetes-clusters-with-kube-state-metrics-2b9e73a67895#:~:text=Kube%2DState%2DMetrics%20vs%20Metrics%20Server%3A</li> <li>metrics-server</li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/kyverno/","title":"Kyverno","text":"<p>Kubernetes Native Policy Management</p>","tags":["kubernetes"]},{"location":"EKS/addons/kyverno/#install","title":"install","text":"<p>https://kyverno.io/docs/installation/methods/ <pre><code>helm repo add kyverno https://kyverno.github.io/kyverno/\nhelm repo update\nhelm install kyverno kyverno/kyverno -n kyverno --create-namespace\nhelm install kyverno-policies kyverno/kyverno-policies -n kyverno\n</code></pre></p>","tags":["kubernetes"]},{"location":"EKS/addons/kyverno/#install-from-nirmata","title":"install from nirmata","text":"<p>https://github.com/nirmata/kyverno-notation-aws#install</p>","tags":["kubernetes"]},{"location":"EKS/addons/metrics-server/","title":"Metrics Server","text":"<p>Metrics Server is not meant for non-autoscaling purposes. For example, don\u2019t use it to forward metrics to monitoring solutions, or as a source of monitoring solution metrics. In such cases please collect metrics from Kubelet\u00a0<code>/metrics/resource</code>\u00a0endpoint directly.</p> <p>refer: kube-state-metrics</p>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/metrics-server/#github","title":"github","text":"<ul> <li>https://github.com/kubernetes-sigs/metrics-server</li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/metrics-server/#install","title":"install","text":"","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/metrics-server/#from-helm","title":"from helm","text":"<ul> <li>https://artifacthub.io/packages/helm/metrics-server/metrics-server <pre><code>helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/\nhelm upgrade --install metrics-server metrics-server/metrics-server -n kube-system\n</code></pre></li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/metrics-server/#from-yaml","title":"from yaml","text":"<ul> <li>support 1.30+</li> <li>https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/metrics-server.html <pre><code>kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\n\nkubectl get deployment metrics-server -n kube-system\n</code></pre></li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/metrics-server/#sample","title":"sample","text":"<ul> <li>../kubernetes/k8s-hpa-horizontal-pod-autoscaler</li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/metrics-server/#alternative","title":"alternative","text":"<ul> <li>prometheus-adapter</li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/","title":"nginx-ingress-controller-community-ver","text":"","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#install","title":"install","text":"","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#install-with-eksdemo","title":"install with eksdemo","text":"<ul> <li>https://github.com/awslabs/eksdemo/blob/main/docs/install-ingress-nginx.md <pre><code>echo ${CLUSTER_NAME}\neksdemo install ingress-nginx -c ${CLUSTER_NAME} --namespace kube-system\n</code></pre></li> </ul>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#install-manually","title":"install manually","text":"<ul> <li>link <pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nhelm install my-ing1 ingress-nginx/ingress-nginx\n\nkubectl annotate service/my-ing1-ingress-nginx-controller \\\n  service.beta.kubernetes.io/aws-load-balancer-internal=\"false\" \\\n  service.beta.kubernetes.io/aws-load-balancer-type=nlb \\\n  service.beta.kubernetes.io/aws-load-balancer-nlb-target-type=ip\n\n# need aws lbc \n# service.beta.kubernetes.io/aws-load-balancer-nlb-target-type=ip\n</code></pre></li> </ul>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#resources","title":"resources","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/cornellanthony/nlb-nginxIngress-eks/master/apple.yaml \nkubectl apply -f https://raw.githubusercontent.com/cornellanthony/nlb-nginxIngress-eks/master/banana.yaml\n</code></pre>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#tls-certificate-option","title":"tls certificate (option)","text":"<p>for nlb <pre><code>openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls-n.key -out tls-n.crt -subj \"/CN=*elb.us-west-2.amazonaws.com/O=*.elb.us-west-2.amazonaws.com\"\n\nkubectl create secret tls tls-secret-n --key tls-n.key --cert tls-n.crt\n</code></pre></p> <p>for your domain</p> <ul> <li>create certificate for your domain</li> <li>create cname record in route53 to mapping your domain to nlb domain name</li> <li>using your domain name in ingress yaml definition</li> </ul>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#ingress","title":"ingress","text":"<p>for nlb <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: example-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"false\"\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  tls:\n\n  - hosts:\n    - '*.elb.us-west-2.amazonaws.com'\n    secretName: tls-secret-n\n  rules:\n  - host: '*.elb.us-west-2.amazonaws.com'\n    http:\n      paths:\n        - path: /apple\n          pathType: Prefix\n          backend:\n            service: \n              name: apple-service\n              port: \n                number: 5678\n        - path: /banana\n          pathType: Prefix\n          backend:\n            service: \n              name: banana-service\n              port: \n                number: 5678\n</code></pre> (refer: appendix)</p>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#refer","title":"refer","text":"<ul> <li>Using a Network Load Balancer with the NGINX Ingress Controller on Amazon EKS </li> <li>https://kubernetes.github.io/ingress-nginx/deploy/ <pre><code>k apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml\n</code></pre></li> </ul>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#appendix-for-clb","title":"appendix - for clb","text":"","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#certificate","title":"certificate","text":"<p>for clb <pre><code>openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls-c.key -out tls-c.crt -subj \"/CN=*.us-east-2.elb.amazonaws.com/O=*.us-east-2.elb.amazonaws.com\"\n\nkubectl create secret tls tls-secret-c --key tls-c.key --cert tls-c.crt\n</code></pre></p>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#ingress_1","title":"ingress","text":"<p>for clb <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: example-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"false\"\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  tls:\n\n  - hosts:\n    - '*.us-east-2.elb.amazonaws.com'\n    secretName: tls-secret-c\n  rules:\n  - host: '*.us-east-2.elb.amazonaws.com'\n    http:\n      paths:\n        - path: /apple\n          pathType: Prefix\n          backend:\n            service: \n              name: apple-service\n              port: \n                number: 5678\n        - path: /banana\n          pathType: Prefix\n          backend:\n            service: \n              name: banana-service\n              port: \n                number: 5678\n</code></pre></p>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#appendix-ingress-nginx-output","title":"appendix - ingress-nginx-output","text":"<pre><code>LAST DEPLOYED: Mon Aug 15 01:17:43 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nThe ingress-nginx controller has been installed.\nIt may take a few minutes for the LoadBalancer IP to be available.\nYou can watch the status by running 'kubectl --namespace default get services -o wide -w my-ing1-ingress-nginx-controller'\n\nAn example Ingress that makes use of the controller:\n  apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    name: example\n    namespace: foo\n  spec:\n    ingressClassName: nginx\n    rules:\n\n      - host: www.example.com\n        http:\n          paths:\n            - pathType: Prefix\n              backend:\n                service:\n                  name: exampleService\n                  port:\n                    number: 80\n              path: /\n    # This section is only required if TLS is to be enabled for the Ingress\n    tls:\n      - hosts:\n        - www.example.com\n        secretName: example-tls\n\nIf TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\n\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: example-tls\n    namespace: foo\n  data:\n    tls.crt: &lt;base64 encoded cert&gt;\n    tls.key: &lt;base64 encoded key&gt;\n  type: kubernetes.io/tls\n</code></pre>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-community-ver/#appendix-other-sample","title":"appendix - other sample","text":"<pre><code>---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: game-2048-ns2\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: game-2048-ns2\n  name: deployment-2048\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: app-2048\n  replicas: 5\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: app-2048\n    spec:\n      containers:\n\n      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest\n        imagePullPolicy: Always\n        name: app-2048\n        ports:\n        - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: game-2048-ns2\n  name: service-2048\nspec:\n  ports:\n    - port: 80\n      targetPort: 80\n      protocol: TCP\n  type: NodePort\n  selector:\n    app.kubernetes.io/name: app-2048\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  namespace: game-2048-ns2\n  name: ingress-2048\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"false\"\n    nginx.ingress.kubernetes.io/rewrite-target: /$2\n    nginx.ingress.kubernetes.io/use-regex: \"true\"\nspec:\n  ingressClassName: nginx\n  tls:\n  - hosts:\n    - '*.elb.us-east-2.amazonaws.com'\n    secretName: tls-secret-n\n  rules:\n    - http:\n        paths:\n        - path: /abc(/|$)(.*)\n          pathType: Prefix\n          backend:\n            service:\n              name: service-2048\n              port:\n                number: 80\n</code></pre>","tags":["nginx","kubernetes/ingress","aws/container/eks"]},{"location":"EKS/addons/nginx-ingress-controller-nginx-ver/","title":"nginx-ingress-controller-nginx-version","text":"","tags":["aws/container/eks","kubernetes/ingress","nginx"]},{"location":"EKS/addons/nginx-ingress-controller-nginx-ver/#install","title":"install","text":"<ul> <li>https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-helm/</li> </ul> <p><pre><code>helm repo add nginx-stable https://helm.nginx.com/stable\nhelm repo update\nhelm install my-release nginx-stable/nginx-ingress\n\nkubectl annotate service/my-release-nginx-ingress \\\n  service.beta.kubernetes.io/aws-load-balancer-type=nlb\n  \u00a0\u00a0 \u00a0nginx.ingress.kubernetes.io/rewrite-target:\u00a0/:q\n\n\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '60'\n    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'\n    service.beta.kubernetes.io/aws-load-balancer-type: nlb\n</code></pre> or <pre><code>git clone https://github.com/nginxinc/kubernetes-ingress.git --branch v2.3.0\ncd kubernetes-ingress/deployments/helm-chart\nhelm install my-release .\n</code></pre></p>","tags":["aws/container/eks","kubernetes/ingress","nginx"]},{"location":"EKS/addons/nginx-ingress-controller-nginx-ver/#app-expose","title":"app expose","text":"","tags":["aws/container/eks","kubernetes/ingress","nginx"]},{"location":"EKS/addons/nginx-ingress-controller/","title":"nginx-ingress-controller","text":"","tags":["kubernetes/ingress"]},{"location":"EKS/addons/nginx-ingress-controller/#understand-version","title":"understand version","text":"<ul> <li> <p>Community version\u00a0\u2013 Found in the\u00a0kubernetes/ingress-nginx\u00a0repo on GitHub, the community Ingress controller is based on NGINX Open Source with docs on\u00a0Kubernetes.io. It is maintained by the Kubernetes community with a\u00a0commitment from F5\u00a0NGINX\u00a0to help manage the project</p> </li> <li> <p>NGINX version\u00a0\u2013 Found in the\u00a0nginxinc/kubernetes-ingress\u00a0repo on GitHub, NGINX Ingress Controller is developed and maintained by F5\u00a0NGINX with docs on\u00a0docs.nginx.com. It is available in two editions:</p> <ul> <li>NGINX Open Source\u2011based (free and open source option)</li> <li>NGINX Plus-based\u00a0(commercial option)</li> </ul> </li> <li> <p>nginx-ingress-controller-community-ver </p> </li> <li>nginx-ingress-controller-nginx-ver</li> </ul>","tags":["kubernetes/ingress"]},{"location":"EKS/addons/nginx-ingress-controller/#refer","title":"refer","text":"<ul> <li>Exposing Kubernetes Applications Part 3 NGINX Ingress Controller </li> </ul>","tags":["kubernetes/ingress"]},{"location":"EKS/addons/nginx-ingress-controller/#compatibility","title":"compatibility","text":"<ul> <li>https://github.com/kubernetes/ingress-nginx#supported-versions-table</li> </ul>","tags":["kubernetes/ingress"]},{"location":"EKS/addons/pluto/","title":"pluto-cmd","text":"","tags":["kubernetes"]},{"location":"EKS/addons/pluto/#scan","title":"scan","text":"<ul> <li>scan folder <pre><code>pluto detect-files -d .\n</code></pre></li> <li>scan helm <pre><code>pluto detect-helm -o wide\n</code></pre></li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/pluto/#install","title":"install","text":"","tags":["kubernetes"]},{"location":"EKS/addons/pluto/#asdf","title":"asdf","text":"<ul> <li>https://asdf-vm.com/guide/getting-started.html#_1-install-dependencies <pre><code>git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.11.3\necho '. \"$HOME/.asdf/asdf.sh\"' &gt;&gt; ~/.bash_profile\necho '. \"$HOME/.asdf/completions/asdf.bash\"' &gt;&gt; ~/.bash_profile\nsource ~/.bash_profile\n</code></pre></li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/pluto/#pluto","title":"pluto","text":"<ul> <li>https://pluto.docs.fairwinds.com/installation/#asdf <pre><code>asdf plugin-add pluto\nlastest_version=$(asdf list-all pluto |tail -n 1)\nasdf install pluto ${lastest_version}\nasdf local pluto ${lastest_version}\npluto version\n</code></pre></li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/prometheus-adapter/","title":"prometheus-adapter","text":"<ul> <li>cannot see cpu/mem in k9s, using metrics-server to instead</li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/prometheus-adapter/#install","title":"install","text":"<ul> <li>https://github.com/kubernetes-sigs/prometheus-adapter <pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\nhelm install prom-adapter prometheus-community/prometheus-adapter -n kube-system\n</code></pre></li> </ul>","tags":["kubernetes"]},{"location":"EKS/addons/prometheus-adapter/#alternative","title":"alternative","text":"<ul> <li>metrics-server</li> </ul>","tags":["kubernetes"]},{"location":"EKS/cluster/eks-auto-mode-sample/","title":"eks-auto-mode-sample","text":"<ul> <li>https://aws.amazon.com/blogs/aws/streamline-kubernetes-cluster-management-with-new-amazon-eks-auto-mode/</li> <li>https://aws.amazon.com/blogs/containers/getting-started-with-amazon-eks-auto-mode/</li> </ul>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#components","title":"components","text":"<ul> <li>https://docs.aws.amazon.com/eks/latest/userguide/automode.html#_automated_components</li> <li>Karpenter </li> <li>AWS Load Balancer Controller</li> <li>AWS EBS CSI</li> <li>AWS VPC CNI</li> <li>Identity and Access Management</li> </ul>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#limitation","title":"limitation","text":"<ul> <li>https://docs.aws.amazon.com/eks/latest/userguide/auto-networking.html</li> <li>Security Groups per Pod (SGPP).</li> <li>Custom Networking. The IP Addresses of Pods and Nodes must be from the same CIDR Block.</li> <li>Warm IP, warm prefix, and warm ENI configurations.</li> <li>Minimum IP targets configuration.</li> <li>Enabling or disabling prefix delegation.</li> <li>Other configurations supported by the open-source AWS CNI.</li> <li>Network Policy configurations such as conntrack timer customization (default is 300s).</li> <li>Exporting network event logs to CloudWatch.</li> </ul>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#pricing","title":"pricing","text":"<ul> <li>\u989d\u5916\u6536\u53d6 auto mode \u7ba1\u7406\u7684 EC2 \u8282\u70b9\u7684 Ondemond \u4ef7\u683c 12% (link)</li> </ul>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#workshop","title":"workshop","text":"<p>https://catalog.us-east-1.prod.workshops.aws/workshops/aadbd25d-43fa-4ac3-ae88-32d729af8ed4/</p>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#sample","title":"sample","text":"","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#load-balancer-controller","title":"load balancer controller","text":"<ul> <li>test pod with service and ingress <pre><code>---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: echoserver\nspec:\n  selector:\n    matchLabels:\n      app: echoserver\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: echoserver\n    spec:\n      containers:\n      - image: k8s.gcr.io/e2e-test-images/echoserver:2.5\n        imagePullPolicy: Always\n        name: echoserver\n        ports:\n        - containerPort: 8080\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: echoserver\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\n    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\nspec:\n  loadBalancerClass: eks.amazonaws.com/nlb\n  ports:\n\n    - port: 80\n      targetPort: 8080\n      protocol: TCP\n  type: LoadBalancer\n  selector:\n    app: echoserver\n\n---\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  labels:\n    app.kubernetes.io/name: LoadBalancerController\n  name: eks-alb\nspec:\n  controller: eks.amazonaws.com/alb\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: echoserver\n  annotations:\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/target-type: ip\nspec:\n  ingressClassName: eks-alb\n  rules:\n\n  - host: '*.us-west-2.elb.amazonaws.com'\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: echoserver\n            port:\n              number: 80\n</code></pre></li> </ul>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-auto-mode-sample/#ebs-csi","title":"ebs csi","text":"<ul> <li> <p>storage class (doc) <pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: auto-ebs-sc\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\nprovisioner: ebs.csi.eks.amazonaws.com\nvolumeBindingMode: WaitForFirstConsumer\nparameters:\n  type: gp3\n</code></pre></p> </li> <li> <p>test pod <pre><code>---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: test-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 9Gi\n  # \u4e0d\u6307\u5b9a storageClassName,\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684 StorageClass\n\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pod\nspec:\n  containers:\n\n  - name: test-container\n    image: nginx\n    volumeMounts:\n    - name: test-volume\n      mountPath: /test-data\n  volumes:\n  - name: test-volume\n    persistentVolumeClaim:\n      claimName: test-pvc\n</code></pre></p> </li> </ul>","tags":["draft","aws/container/eks"]},{"location":"EKS/cluster/eks-cluster-addons-list/","title":"EKS Addons","text":"","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/cluster/eks-cluster-addons-list/#list","title":"list","text":"<ul> <li> <p>\u6258\u7ba1\u96c6\u7fa4\u63d2\u4ef6</p> <ul> <li>../addons/eks-addons-coredns </li> <li>../addons/eks-addons-vpc-cni </li> <li>../addons/eks-addons-kube-proxy </li> </ul> </li> <li> <p>\u7b2c\u4e09\u65b9\u63d2\u4ef6</p> <ul> <li>../addons/aws-load-balancer-controller </li> <li>externaldns </li> <li>../addons/cert-manager </li> <li>ebs-csi-driver </li> <li>prometheus operator / grafana operator</li> <li>splunk-otel-collector </li> <li>../addons/nginx-ingress-controller </li> <li>../addons/metrics-server </li> <li>../addons/cluster-autoscaler </li> </ul> </li> <li> <p>\u5176\u4ed6\u63d2\u4ef6</p> <ul> <li>efs-csi-driver </li> <li>cloudwatch-agent / fluentbit </li> <li>kubernetes-dashboard </li> <li>tigera-operator for calico </li> <li>../addons/cni-metrics-helper </li> <li>../addons/kube-state-metrics </li> </ul> </li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/cluster/eks-cluster-addons-list/#upgrade-addons-sample","title":"upgrade addons sample","text":"<ul> <li>https://aws.amazon.com/blogs/containers/amazon-eks-add-ons-preserve-customer-edits/</li> <li>https://aws.amazon.com/cn/blogs/containers/amazon-eks-add-ons-advanced-configuration/ <pre><code>CLUSTER_NAME=ekscluster1\nADDON_NAME=coredns\n\naws eks describe-addon \\\n--cluster-name ${CLUSTER_NAME} \\\n--addon-name ${ADDON_NAME} | grep status\n\naws eks update-addon \\\n--cluster-name ${CLUSTER_NAME} \\\n--addon-name ${ADDON_NAME} \\\n--addon-version v1.8.7-eksbuild.3 \\\n--resolve-conflicts PRESERVE\n</code></pre></li> </ul>","tags":["aws/container/eks","kubernetes"]},{"location":"EKS/cluster/eks-cluster-with-terraform/","title":"Create EKS Cluster with Terraform","text":"","tags":["aws/container/eks","terraform"]},{"location":"EKS/cluster/eks-cluster-with-terraform/#install-terraform","title":"install terraform","text":"<ul> <li>https://developer.hashicorp.com/terraform/install</li> <li>this step has been included in setup-cloud9-for-eks </li> </ul> CentOS / AL2Ubuntu <pre><code>sudo yum install -y yum-utils shadow-utils\nsudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\nsudo yum -y install terraform\n</code></pre> <pre><code>sudo apt install terraform=1.5.7-1\nsudo apt-mark hold terraform\n</code></pre>","tags":["aws/container/eks","terraform"]},{"location":"EKS/cluster/eks-cluster-with-terraform/#sample-create-3x-clusters-for-thanos-poc-","title":"sample-create-3x-clusters-for-thanos-poc-","text":"<ul> <li> <p>get terraform template  <pre><code>git clone https://github.com/panlm/eks-blueprints-clusters.git\ncd eks-blueprints-clusters/multi-cluster-thanos\n</code></pre></p> </li> <li> <p>execute function to create an existed host zone (../../CLI/awscli/route53-cmd) <pre><code>curl -sL -o /tmp/func-create-hosted-zone.sh https://panlm.github.io/CLI/functions/func-create-hosted-zone.sh\nsource /tmp/func-create-hosted-zone.sh\n\nDOMAIN_NAME=eks1224.aws.panlm.xyz\ncreate-hosted-zone -n ${DOMAIN_NAME}\n</code></pre></p> </li> <li> <p>need setup upstream domain registry from your labtop (git/git-mkdocs/CLI/awscli/route53-cmd)</p> </li> <li> <p>terraform.tfvars <pre><code>aws_region          = \"us-east-2\"\nenvironment_name    = \"thanos\"\ncluster_version     = \"1.27\"\nhosted_zone_name    = \"eks1206.aws.panlm.xyz\" # your Existing Hosted Zone\neks_admin_role_name = \"panlm\" # Additional role admin in the cluster \n</code></pre></p> </li> <li> <p>build environment <pre><code>cd environment\nterraform init\nterraform apply -auto-approve\n</code></pre></p> </li> <li> <p>create ekscluster1, following output to save kubeconfig file <pre><code>cd ekscluster1\nterraform init\nterraform apply -auto-approve\n</code></pre></p> </li> <li> <p>create ekscluster2 and ekscluster3 from their folder with same commands</p> </li> <li> <p>in each eks cluster, will install following addons by argocd. access argocd svc url with default password saved in aws secret manager </p> </li> </ul>","tags":["aws/container/eks","terraform"]},{"location":"EKS/cluster/eks-cluster-with-terraform/#internal-error","title":"internal error","text":"<ul> <li>re-run <code>terraform apply</code> if you got following errors <pre><code>\u2502       * Internal error occurred: failed calling webhook \"mservice.elbv2.k8s.aws\": failed to call webhook: Post \"https://aws-load-balancer-webhook-service.kube-system.svc:443/mutate-v1-service?timeout=10s\": no endpoints available for service \"aws-load-balancer-webhook-service\"\n\u2502 \n\u2502   with module.eks_cluster.module.eks_blueprints_addons.module.cert_manager.helm_release.this[0],\n\u2502   on .terraform/modules/eks_cluster.eks_blueprints_addons.cert_manager/main.tf line 9, in resource \"helm_release\" \"this\":\n\u2502    9: resource \"helm_release\" \"this\" {\n</code></pre></li> </ul>","tags":["aws/container/eks","terraform"]},{"location":"EKS/cluster/eks-cluster-with-terraform/#refer","title":"refer","text":"<ul> <li>eks-blueprints-blue-green-upgrade</li> <li>helm-in-terraform</li> </ul>","tags":["aws/container/eks","terraform"]},{"location":"EKS/cluster/eks-private-access-cluster/","title":"Create Private Only EKS Cluster","text":"","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#prep-bastion","title":"prep bastion","text":"<ul> <li>\u521b\u5efavpc\u548ccloud9 <ul> <li>../../cloud9/create-standard-vpc-for-lab-in-china-region or hugo link </li> <li>\u5982\u679c\u53ea\u9700\u8981\u521b\u5efa\u6258\u7ba1\u8282\u70b9\u7ec4\uff0c\u79c1\u6709\u5b50\u7f51\u8def\u7531\u8868\u53ef\u4ee5\u6ca1\u6709\u6307\u5411 nat \u7684\u8def\u7531</li> <li>\u5982\u679c\u9700\u8981\u521b\u5efa\u81ea\u7ba1\u8282\u70b9\u7ec4\uff0c\u79c1\u6709\u5b50\u7f51\u8def\u7531\u8868\u9700\u8981\u6709\u6307\u5411 nat \u7684\u8def\u7531\uff0c\u5426\u5219\u8282\u70b9\u52a0\u96c6\u7fa4\u5931\u8d25\uff0c\u6216\u8005\u63d0\u524d\u521b\u5efa eks endpoint\u3002 <pre><code>Connect timeout on endpoint URL: \"https://eks.us-east-1.amazonaws.com/clusters/ekscluster-name\"\nExited with error on line 351\n</code></pre></li> </ul> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#prep-cloud9","title":"prep cloud9","text":"<ul> <li> <p>\u5b89\u88c5\u5fc5\u8981\u7684\u8f6f\u4ef6 </p> <ul> <li>../../cloud9/setup-cloud9-for-eks or hugo link <pre><code>sudo yum -y install jq gettext bash-completion moreutils wget\n</code></pre></li> </ul> </li> <li> <p>\u521b\u5efa\u5b89\u5168\u7ec4 eks-shared-sg\uff0cinbound\u89c4\u5219\u662f\u81ea\u5df1 (needed if your cluster is private only mode ) <pre><code># export VPC_ID=vpc-xxxxxxxx\n# export AWS_REGION=cn-north-1\nAWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nexport AWS_DEFAULT_REGION=${AWS_REGION}\nINST_ID=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.instanceId')\nVPC_ID=$(aws ec2 describe-instances --instance-ids ${INST_ID} |jq -r '.Reservations[0].Instances[0].VpcId')\n\nSG_NAME=eks-shared-sg\nSG_ID=$(aws ec2 describe-security-groups \\\n--filter Name=vpc-id,Values=$VPC_ID \\\n--query \"SecurityGroups[?GroupName == '\"${SG_NAME}\"'].GroupId\" \\\n--output text)\n\n# if SG does not existed, then create it\nif [[ -z ${SG_ID} ]]; then\nSG_ID=$(aws ec2 create-security-group \\\n  --description ${SG_NAME} \\\n  --group-name ${SG_NAME} \\\n  --vpc-id ${VPC_ID} \\\n  --query 'GroupId' \\\n  --output text )\naws ec2 authorize-security-group-ingress \\\n    --group-id ${SG_ID} \\\n    --protocol all \\\n    --source-group ${SG_ID}\nfi\n</code></pre></p> </li> <li> <p>assign security group to cloud9 instance <pre><code>SG_LIST=$(aws ec2 describe-instance-attribute --instance-id $INST_ID --attribute groupSet --query 'Groups[*].[GroupId]' --output text)\n\n# before\naws ec2 describe-instance-attribute --instance-id $INST_ID --attribute groupSet\n# assign\naws ec2 modify-instance-attribute --instance-id $INST_ID --groups $SG_LIST $SG_ID\n# after\naws ec2 describe-instance-attribute --instance-id $INST_ID --attribute groupSet\n</code></pre></p> </li> <li> <p>if you create private only cluster in vpc which you have created with public/private eks endpoint, using the Shared SG of the previous cluster</p> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#prep-config-","title":"prep-config-","text":"<ul> <li> <p>\u521b\u5efa\u5b8c\u81ea\u5b9a\u4e49 vpc \u540e\uff0c\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u4ee3\u7801 <pre><code>echo ${AWS_DEFAULT_REGION}\n\nACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)\nAZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text))\n\necho \"export VPC_ID=${VPC_ID}\" \necho \"export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}\"\necho \"export AZS=(${AZS[@]})\"\n\n# output yaml format for vpc/subnet info\n( echo 'vpc:'\necho '  id:' ${VPC_ID}\necho '  subnets:'\necho '    private:'\nfor i in ${AZS[@]} ; do\n    subnetid=$(aws ec2 describe-subnets \\\n    --filter \"Name=availability-zone,Values=$i\" \"Name=vpc-id,Values=$VPC_ID\" \"Name=tag-key,Values=kubernetes.io/role/internal-elb\" \\\n    --query 'Subnets[?MapPublicIpOnLaunch==`false`].SubnetId' --output text)\n    if [[ ! -z $subnetid ]]; then\n        echo \"      ${i}:\"\n        echo -e \"        id: $subnetid\"\n    fi\ndone\necho '    public:'\nfor i in ${AZS[@]} ; do\n    subnetid=$(aws ec2 describe-subnets \\\n    --filter \"Name=availability-zone,Values=$i\" \"Name=vpc-id,Values=$VPC_ID\" \\\n    --query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' --output text)\n    if [[ ! -z $subnetid ]]; then\n        echo \"      ${i}:\"\n        echo -e \"        id: $subnetid\"\n    fi\ndone\nif [ ! -z $SG_ID ]; then\n    echo \"  sharedNodeSecurityGroup: $SG_ID\"\nfi )\n</code></pre></p> </li> <li> <p>output will be used in next step</p> </li> <li>ensure you have no s3 endpoint in your target vpc <ul> <li>you could have ssm/ssmmessages endpoint</li> </ul> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#cluster-yaml","title":"cluster yaml","text":"<pre><code>touch cluster1.yaml\n</code></pre> <ul> <li>commercial region sample config<ul> <li>check here for china region sample config <pre><code>---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: ekscluster-privonly # MODIFY cluster name\n  region: \"us-east-2\" # MODIFY region\n  version: \"1.24\" # MODIFY version\n\n# full private cluster\nprivateCluster:\n  enabled: true \n  skipEndpointCreation: true # uncomment, if you create 2nd cluster in same vpc\n#   additionalEndpointServices:\n#   - \"autoscaling\"\n#   - \"logs\"\n#   - \"cloudformation\"\n\n# REPLACE THIS CODE BLOCK\nvpc:\n  subnets:\n    private:\n      us-east-2a:\n        id: subnet-xxxxxxxx\n      us-east-2b:\n        id: subnet-xxxxxxxx\n    public:\n      us-east-2a:\n        id: subnet-xxxxxxxx\n      us-east-2b:\n        id: subnet-xxxxxxxx\n  sharedNodeSecurityGroup: sg-xxxxxxxx\n\ncloudWatch:\n  clusterLogging:\n    enableTypes: [\"*\"]\n\n# secretsEncryption:\n#   keyARN: ${MASTER_ARN}\n\nmanagedNodeGroups:\n\n- name: mng1\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 1\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n\nnodeGroups:\n\n- name: ng1\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 1\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n  ami: ami-06a8057d9b6a06ee6\n  amiFamily: AmazonLinux2\n  overrideBootstrapCommand: |\n    #!/bin/bash\n    source /var/lib/cloud/scripts/eksctl/bootstrap.helper.sh\n    /etc/eks/bootstrap.sh ${CLUSTER_NAME} --container-runtime containerd --kubelet-extra-args \"--node-labels=${NODE_LABELS}\"\n\niam:\n  withOIDC: true\n\naddons:\n\n- name: vpc-cni \n  version: latest\n- name: coredns\n  version: latest # auto discovers the latest available\n- name: kube-proxy\n  version: latest\n</code></pre></li> </ul> </li> </ul> <pre><code>eksctl create cluster -f cluster1.yaml\n</code></pre> <pre><code># get optimized eks ami id for your version &amp; region\nEKS_VERSION=1.24\n# AWS_REGION=us-east-2\naws ssm get-parameter --name /aws/service/eks/optimized-ami/${EKS_VERSION}/amazon-linux-2/recommended/image_id --query \"Parameter.Value\" --output text\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#endpoint-","title":"endpoint-","text":"<p>https://docs.aws.amazon.com/eks/latest/userguide/private-clusters.html#private-cluster-requirements</p> <ul> <li>\u8bbe\u7f6e <code>skipEndpointCreation: false</code>\uff0c\u96c6\u7fa4\u521b\u5efa\u5b8c\u6210\u540e\u5c06\u81ea\u52a8\u521b\u5efa\u4ee5\u4e0b endpoint\uff0c\u5e76\u4e14\u7ed1\u5b9a <code>sharedNodeSecurityGroup</code> \u4e2d\u6307\u5b9a\u7684\u5b89\u5168\u7ec4<ul> <li>logs</li> <li>s3 (gw)</li> <li>sts</li> <li>ec2 / ec2messages</li> <li>ecr.dkr / ecr.api</li> </ul> </li> <li>\u4f60\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u4ee5\u4e0b endpoint\uff0c\u5e76\u4e14\u7ed1\u5b9a\u5b89\u5168\u7ec4\u5141\u8bb8 80 443 \u8bbf\u95ee<ul> <li>ssm / ssmmessages</li> </ul> </li> <li>\u53e6\u5916\u8fd8\u9700\u8981\u63d0\u524d\u521b\u5efa\u4ee5\u4e0b endpoint\uff0c\u5e76\u4e14\u7ed1\u5b9a\u5b89\u5168\u7ec4<ul> <li>eks \uff08\u4f7f\u7528\u81ea\u7ba1\u8282\u70b9\u7ec4\u65f6\u9700\u8981\uff09</li> <li>elasticfilesystem \uff08\u4f7f\u7528 efs \u65f6\u9700\u8981\uff09</li> <li>elasticloadbalancing \uff08\u4f7f\u7528 aws lb controller\u65f6\u9700\u8981\uff09</li> <li>kms \uff08\u5f85\u9a8c\u8bc1\uff09</li> <li>ebs \uff08\u5f85\u9a8c\u8bc1\uff09</li> <li>cloudformation (additional)</li> <li>autoscaling (hpa)</li> </ul> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#access-cluster","title":"access cluster","text":"<ul> <li>create-kubeconfig-manually</li> <li>recover-access-eks</li> <li>token-different</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#issue-about-kubectl","title":"issue about kubectl","text":"","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#solve-1","title":"solve 1","text":"<ul> <li>download aws-iam-authenticator, and then run write-kubeconfig command it will using aws-iam-authenticator instead of aws to create kubeconfig</li> <li><code>aws eks update-kubeconfig</code> default using aws</li> <li><code>eksctl utils write-kubeconfig</code> default using aws-iam-authenticator if you have installed</li> </ul> <pre><code>eksctl utils write-kubeconfig --cluster ekscluster1\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#solve-2","title":"solve 2","text":"<ul> <li>check if null TOKEN variable <code>aws_session_token=</code> in your <code>~/.aws/credentials</code></li> <li>delete it</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#network-topo-preview","title":"network topo preview","text":"<ul> <li>../solutions/network/TC-security-group-for-eks-deepdive</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-private-access-cluster/#reference","title":"reference","text":"<ul> <li>eks-public-access-cluster</li> <li>eks-nodegroup</li> <li>eksctl-sample-priv-addons</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster-in-china-region/","title":"Create Public Access EKS Cluster in China Region","text":"<ul> <li>create cloud9</li> <li>create vpc</li> </ul> right-click &amp; open-in-new-tab:  <ul> <li>get vpc id</li> </ul> right-click &amp; open-in-new-tab:  <ul> <li>pre-config</li> </ul> right-click &amp; open-in-new-tab:  <ul> <li>cluster config <pre><code>---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: ekscluster131 # MODIFY cluster name\n  region: \"cn-north-1\" # MODIFY region\n  version: \"1.24\" # MODIFY version\n\n# REPLACE THIS CODE BLOCK\nvpc:\n  subnets:\n    private:\n      us-east-2a:\n        id: subnet-xxxxxxxx\n      us-east-2b:\n        id: subnet-xxxxxxxx\n    public:\n      us-east-2a:\n        id: subnet-xxxxxxxx\n      us-east-2b:\n        id: subnet-xxxxxxxx\n  sharedNodeSecurityGroup: sg-xxxxxxxx\n\ncloudWatch:\n  clusterLogging:\n    enableTypes: [\"*\"]\n\n# secretsEncryption:\n#   keyARN: ${MASTER_ARN}\n\nmanagedNodeGroups:\n\n- name: mng1\n  minSize: 2\n  maxSize: 5\n  desiredCapacity: 2\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n\niam:\n  withOIDC: true\n\naddons:\n\n- name: vpc-cni \n  version: latest\n- name: coredns\n  version: latest # auto discovers the latest available\n- name: kube-proxy\n  version: latest\n</code></pre></li> </ul> <p>^8ir6w8</p>","tags":["aws/container/eks","aws/china"]},{"location":"EKS/cluster/eks-public-access-cluster/","title":"Create Public Access EKS Cluster","text":"<p>\u672c\u6587\u6307\u5bfc\u5feb\u901f\u521b\u5efa EKS \u96c6\u7fa4\u5b9e\u9a8c\u73af\u5883</p> <ul> <li>\u521b\u5efa\u5355\u4e2a\u96c6\u7fa4\uff0c\u53ef\u4ee5\u53c2\u8003\u7ae0\u8282 create cluster from scratch</li> <li>\u5982\u679c\u5e0c\u671b\u521b\u5efa\u591a\u4e2a\u96c6\u7fa4\u5728\u540c\u4e00\u4e2a VPC \u5185\u90e8\uff0c\u53ef\u4ee5\u53c2\u8003\u7ae0\u8282 create cluster in specific VPC</li> </ul> <p>\u53c2\u8003 quick-setup-cloud9 \u5feb\u901f\u8bbe\u7f6e\u5b9e\u9a8c\u7528 Cloud9 \u73af\u5883</p>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#create-cluster-from-scratch","title":"create cluster from scratch","text":"<ul> <li>don\u2019t put <code>subnets</code>/<code>sharedNodeSecurityGroup</code> in your <code>vpc</code> section. eksctl will create a clean vpc for you</li> <li>don\u2019t use <code>privateCluster</code> section, you could make cluster api server endpoint <code>public</code> or <code>public and private</code></li> <li>you still could put your group node in private subnet for security consideration</li> <li>recommend for most of POC environment</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#create-eks-cluster","title":"create eks cluster","text":"<ul> <li> <p>\u5c06\u5728\u4e0b\u9762\u533a\u57df\u521b\u5efa EKS \u96c6\u7fa4 (prepare to create eks cluster) <pre><code>export AWS_PAGER=\"\"\nexport AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nexport AWS_REGION=${AWS_DEFAULT_REGION}\n\nexport CLUSTER_NAME=ekscluster1\nexport EKS_VERSION=1.26\nCLUSTER_NUM=$(eksctl get cluster |wc -l)\nexport CIDR=\"10.25${CLUSTER_NUM}.0.0/16\"\n</code></pre></p> </li> <li> <p>\u6267\u884c\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u914d\u7f6e\u6587\u4ef6 (create eks cluster)\u3002\u6ce8\u610f\u96c6\u7fa4\u540d\u79f0\uff0c\u4f7f\u7528\u7684 AZ \u7b26\u5408\u4f60\u6240\u5728\u7684\u533a\u57df <pre><code>AZS=($(aws ec2 describe-availability-zones \\\n--query 'AvailabilityZones[].ZoneName' --output text |awk '{print $1,$2}'))\nexport AZ0=${AZS[0]}\nexport AZ1=${AZS[1]}\n\ncat &gt;$$.yaml &lt;&lt;-'EOF'\n---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: \"${CLUSTER_NAME}\"\n  region: \"${AWS_REGION}\"\n  version: \"${EKS_VERSION}\"\n\navailabilityZones: [\"${AZ0}\", \"${AZ1}\"]\n\nvpc:\n  cidr: \"${CIDR}\"\n  clusterEndpoints:\n    privateAccess: true\n    publicAccess: true\n\ncloudWatch:\n  clusterLogging:\n    enableTypes: [\"*\"]\n\n# secretsEncryption:\n#   keyARN: ${MASTER_ARN}\n\nmanagedNodeGroups:\n\n- name: managed-ng\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 2\n  instanceType: m5.large\n  privateNetworking: true\n\naddons:\n\n- name: vpc-cni \n  version: latest\n- name: coredns\n  version: latest \n- name: kube-proxy\n  version: latest\n\niam:\n  withOIDC: true\n\nEOF\ncat $$.yaml |envsubst '$CLUSTER_NAME $AWS_REGION $AZ0 $AZ1 $EKS_VERSION $CIDR ' &gt; cluster-${CLUSTER_NAME}.yaml\n</code></pre></p> </li> <li> <p>\u521b\u5efa\u96c6\u7fa4\uff0c\u9884\u8ba1\u9700\u8981 20 \u5206\u949f (wait about 20 mins) <pre><code>eksctl create cluster -f cluster-${CLUSTER_NAME}.yaml\n</code></pre></p> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#extra-service-accounts","title":"extra service accounts","text":"<pre><code>iam:\n  withOIDC: true\n  serviceAccounts:\n\n  - metadata:\n      name: aws-load-balancer-controller\n      namespace: kube-system\n    wellKnownPolicies:\n      awsLoadBalancerController: true\n  - metadata:\n      name: ebs-csi-controller-sa\n      namespace: kube-system\n    wellKnownPolicies:\n      ebsCSIController: true\n  - metadata:\n      name: efs-csi-controller-sa\n      namespace: kube-system\n    wellKnownPolicies:\n      efsCSIController: true\n  - metadata:\n      name: cloudwatch-agent\n      namespace: amazon-cloudwatch\n    attachPolicyARNs:\n    - \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\n  - metadata:\n      name: fluent-bit\n      namespace: amazon-cloudwatch\n    attachPolicyARNs:\n    - \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#get-newest-ami","title":"get-newest-ami","text":"<ul> <li> <p>get newest ami id for your self-managed node group, for GPU or Graviton instance (link) <pre><code>echo ${AWS_REGION}\necho ${EKS_VERSION}\n\nexport AMI=$(aws ssm get-parameter --name /aws/service/eks/optimized-ami/${EKS_VERSION}/amazon-linux-2/recommended/image_id --region ${AWS_REGION} --query \"Parameter.Value\" --output text)\n\ncat  &lt;&lt;-'EOF' |envsubst '$AMI' |tee -a cluster-${CLUSTER_NAME}.yaml\nnodeGroups:\n\n- name: ng1\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 1\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n  ami: \"${AMI}\"\n  amiFamily: AmazonLinux2\n  overrideBootstrapCommand: |\n    #!/bin/bash\n    source /var/lib/cloud/scripts/eksctl/bootstrap.helper.sh\n    /etc/eks/bootstrap.sh ${CLUSTER_NAME} --container-runtime containerd --kubelet-extra-args \"--node-labels=${NODE_LABELS} --max-pods=110\"\nEOF\n</code></pre></p> </li> <li> <p>\u6258\u7ba1\u8282\u70b9\u6ca1\u6709 <code>/var/lib/cloud/scripts/eksctl/bootstrap.helper.sh</code> \u811a\u672c\uff0c\u5bfc\u81f4\u5f53\u4f7f\u7528\u5b9a\u5236 ami \u5e76\u4e14 extra args \u4e2d NODE_LABELS \u53c2\u6570\u4e22\u5931\u3002(refer link)</p> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#access-eks-cluster-from-web-console","title":"access eks cluster from web console","text":"<ul> <li>\u5c06\u5b9e\u9a8c\u73af\u5883\u5bf9\u5e94\u7684 <code>TeamRole</code> \u89d2\u8272\u4f5c\u4e3a\u96c6\u7fa4\u7ba1\u7406\u5458\uff0c\u65b9\u4fbf\u4f7f\u7528 web \u9875\u9762\u67e5\u770b eks \u96c6\u7fa4 <pre><code>echo ${CLUSTER_NAME}\n\nACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\nAWS_REGION=us-east-2\n\nfor i in TeamRole WSOpsRole WSParticipantRole WSAdminRole ; do\neksctl create iamidentitymapping \\\n  --cluster ${CLUSTER_NAME} \\\n  --arn arn:aws:iam::${ACCOUNT_ID}:role/${i} \\\n  --username cluster-admin \\\n  --group system:masters \\\n  --region ${AWS_REGION}\ndone\n</code></pre></li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#create-cluster-in-specific-vpc","title":"create cluster in specific VPC","text":"<ul> <li>get target vpc id<ul> <li>or create new vpc (create-standard-vpc-for-lab-in-china-region) <pre><code>VPC_ID=\n</code></pre></li> </ul> </li> <li>create SG (../../CLI/awscli/ec2-cmd)<ul> <li>or using existed cluster\u2019s shared SG (see chapter refer) <pre><code>echo ${SG_ID}\n</code></pre></li> </ul> </li> <li>get vpc info (eks-private-access-cluster)</li> <li>cluster yaml <pre><code>---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: ekscluster2 # MODIFY cluster name\n  region: \"us-east-2\" # MODIFY region\n  version: \"1.26\" # MODIFY version\n\n# REPLACE THIS CODE BLOCK\nvpc:\n  subnets:\n    private:\n      us-east-2a:\n        id: subnet-xxxxxxxx\n      us-east-2b:\n        id: subnet-xxxxxxxx\n    public:\n      us-east-2a:\n        id: subnet-xxxxxxxx\n      us-east-2b:\n        id: subnet-xxxxxxxx\n  sharedNodeSecurityGroup: sg-xxxxxxxx\n# REPLACE THIS CODE BLOCK\n  clusterEndpoints:\n    privateAccess: true\n    publicAccess: true\n\ncloudWatch:\n  clusterLogging:\n    enableTypes: [\"*\"]\n\n# secretsEncryption:\n#   keyARN: ${MASTER_ARN}\n\nmanagedNodeGroups:\n\n- name: mng1\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 3\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n\niam:\n  withOIDC: true\n\naddons:\n\n- name: vpc-cni \n  version: latest\n- name: coredns\n  version: latest # auto discovers the latest available\n- name: kube-proxy\n  version: latest\n</code></pre></li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-public-access-cluster/#refer","title":"refer","text":"<ul> <li>../solutions/network/TC-security-group-for-eks-deepdive</li> <li>eks-private-access-cluster</li> <li>eks-nodegroup</li> <li>eksctl-default-tags-on-subnet</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/","title":"EKS Upgrade Procedure","text":"","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#workshop","title":"workshop","text":"<ul> <li>\u4e2d\u6587\u5347\u7ea7 workshop</li> <li>eks-upgrade-lab<ul> <li>https://eks-upgrades-workshop.netlify.app/</li> </ul> </li> <li>Workshop </li> <li>Accelerate software development lifecycles with GitOps</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#_1","title":"\u6d41\u7a0b","text":"<p>1: \u68c0\u67e5\u5e94\u7528\u914d\u7f6e\u6587\u4ef6\u517c\u5bb9\u6027</p> <ul> <li>eks-upgrade-insight</li> <li>kube-no-trouble </li> <li>pluto </li> <li>eksup </li> <li>\u68c0\u67e5\u7b2c\u4e09\u65b9\u63d2\u4ef6 (eks-cluster-addons-list)</li> </ul> <p>2: \u5347\u7ea7\u6838\u5fc3addon \uff08\u5982\u679c\u96c6\u7fa4\u76ee\u6807\u7248\u672c\u548c addon \u6709\u517c\u5bb9\u95ee\u9898\u5219\u5148\u5347\u7ea7 addon\uff0c\u5426\u5219\u5728\u5347\u7ea7\u5b8c\u7ba1\u7406\u8282\u70b9\u540e\u518d\u5347\u7ea7 addon\uff09</p> <ul> <li>coredns: <ul> <li>\u6258\u7ba1dns addon (managed-coredns)</li> <li>\u81ea\u7ba1dns addon (self-managed-coredns)</li> </ul> </li> <li>aws-node: upgrade-vpc-cni </li> <li>kube-proxy: eks-addons-kube-proxy</li> </ul> <p>3: \u5347\u7ea7 eks \u63a7\u5236\u5e73\u9762</p> <p>4: \u5347\u7ea7 eks \u7ba1\u7406\u8282\u70b9</p> <ul> <li>\u6258\u7ba1\u8282\u70b9\u7684\u66f4\u65b0 LINK <ul> <li>ssm-document-eks-node-upgrade </li> </ul> </li> <li>\u81ea\u7ba1\u8282\u70b9\u7684\u66f4\u65b0 LINK </li> </ul> <p>5: \u5347\u7ea7\u5176\u4ed6 addons</p>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#others","title":"others","text":"<ul> <li>mm-eks-upgrade-workshop-walkley</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#deck","title":"deck","text":"","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#docs-history","title":"docs history","text":"<ul> <li>for release 1.22 <ul> <li>https://github.com/awsdocs/amazon-eks-user-guide/blob/cb60bb7b2b78220f2f8809bbd640ec4d0fbcb5eb/doc_source/kubernetes-versions.md</li> </ul> </li> <li>for release 1.21 and before<ul> <li>https://github.com/awsdocs/amazon-eks-user-guide/blob/a7e7162191efbfdb256ffeb4ec26757c7f3cc7b3/doc_source/kubernetes-versions.md</li> </ul> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#refer","title":"refer","text":"<ul> <li>Amazon EKS \u96c6\u7fa4\u5347\u7ea7\u6307\u5357 </li> <li>amazon-eks-\u7248\u672c\u7ba1\u7406\u7b56\u7565\u4e0e\u5347\u7ea7\u6d41\u7a0b </li> <li>Automate Amazon EKS upgrades with infrastructure as code </li> <li>GCR Resilience Series - EKS Resilience</li> <li>https://kubernetes.io/releases/version-skew-policy/</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/cluster/eks-upgrade-procedure/#_2","title":"\u53c2\u8003\u6587\u6863","text":"<ul> <li>Kubernetes\u5b98\u65b9\u6587\u6863: Kubernetes Release Cycle</li> <li>Kubernetes\u5b98\u65b9\u6587\u6863: Kubernetes Deprecation Policy</li> <li>Kubernetes\u535a\u5ba2: Increasing the Kubernetes Support Window to One Year</li> <li>AWS\u535a\u5ba2: Planning Kubernetes Upgrades with Amazon EKS</li> <li>AWS\u535a\u5ba2: Making Cluster Updates Easy with Amazon EKS</li> <li>AWS\u5b98\u65b9\u6587\u6863: Amazon EKS Kubernetes versions</li> <li>AWS\u5b98\u65b9\u6587\u6863: Updating a cluster</li> <li>EKS\u6700\u4f73\u5b9e\u8df5\u624b\u518c: Handling Cluster Upgrades</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/ecr/aws-signer/","title":"aws-signer","text":"<p>profile supported platform: </p> <ul> <li>lambda</li> <li>notation for container registries</li> </ul>","tags":["draft","aws/security/signer","aws/NotInCN","aws/container"]},{"location":"EKS/ecr/aws-signer/#walkthrough","title":"walkthrough","text":"<ul> <li>create profile and get arn</li> <li>notation plugins (docs) and folder struction (docs)</li> <li>sign image <pre><code>export NOTATION_PASSWORD=$(aws ecr get-login-password --region us-west-2)\nexport NOTATION_USERNAME=AWS\nnotation sign 123456789012.dkr.ecr.us-west-2.amazonaws.com/nginx:latest \\\n    --plugin com.amazonaws.signer.notation.plugin \\\n    --id arn:aws:signer:us-west-2:123456789012:/signing-profiles/profile1\n</code></pre></li> </ul>","tags":["draft","aws/security/signer","aws/NotInCN","aws/container"]},{"location":"EKS/ecr/aws-signer/#not-in-china-region","title":"not in china region","text":"<p>N/A</p>","tags":["draft","aws/security/signer","aws/NotInCN","aws/container"]},{"location":"EKS/ecr/ecr-scan-on-push-notification-sns/","title":"Enable scan on push in ECR and send notification to SNS","text":"","tags":["aws/container/ecr","aws/integration/sns"]},{"location":"EKS/ecr/ecr-scan-on-push-notification-sns/#_1","title":"\u9700\u6c42","text":"<p>\u542f\u7528 ECR \u7684 Scan on push \u4e4b\u540e\uff0c\u81ea\u52a8\u5c06\u626b\u63cf\u7ed3\u679c\u4e2d CRITICAL \u7684\u4fe1\u606f\u53d1\u9001\u5230\u76ee\u6807 SNS \u544a\u8b66\u3002</p>","tags":["aws/container/ecr","aws/integration/sns"]},{"location":"EKS/ecr/ecr-scan-on-push-notification-sns/#_2","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u4f7f\u7528\u5df2\u6709\u7684 blog \u63cf\u8ff0\u573a\u666f\u53ef\u4ee5\u81ea\u52a8\u5c06\u626b\u63cf\u540e\u7684\u4fe1\u606f\u5206\u7c7b\u4fdd\u5b58\u5230 cloudwatch \u4e2d\uff0c\u53ef\u4ee5\u5728\u4e2d\u56fd\u533a\u4f7f\u7528 cloudformation \u90e8\u7f72\u6210\u529f\u3002\u5982\u4e0b\u67b6\u6784\u56fe\uff1a</p> <p></p> <p>\u4e0b\u8f7d cloudformation \u6a21\u677f\uff1atemplate-ecr.yml</p> <p>\u6211\u4eec\u5728\u4e0a\u8ff0\u67b6\u6784\u57fa\u7840\u4e0a\u505a\u4e86\u989d\u5916\u624b\u5de5\u4fee\u6539\uff1a</p> <ul> <li>\u521b\u5efa\u7279\u5b9a\u7684 SNS topic\uff0c\u6ce8\u518c\u90ae\u7bb1\u5e76\u63a5\u6536\u544a\u8b66</li> <li>\u7ed9 Lambda \u7684\u6267\u884c role \u6dfb\u52a0 SNS topic \u7684\u6743\u9650</li> <li>\u66f4\u65b0\u4e86 lambda \u51fd\u6570\u76f4\u63a5\u5c06 CRITICAL \u7684\u6d88\u606f\u540c\u65f6\u53d1\u9001\u5230 SNS \u544a\u8b66<ul> <li>\u4e0b\u8f7d\u53c2\u8003 new-lambda.py</li> </ul> </li> </ul>","tags":["aws/container/ecr","aws/integration/sns"]},{"location":"EKS/ecr/ecr-scan-on-push-notification-sns/#_3","title":"\u53c2\u8003","text":"<ul> <li>https://aws.amazon.com/blogs/containers/logging-image-scan-findings-from-amazon-ecr-in-cloudwatch-using-an-aws-lambda-function/</li> <li>https://aws.amazon.com/blogs/mt/get-notified-specific-lambda-function-error-patterns-using-cloudwatch/</li> </ul>","tags":["aws/container/ecr","aws/integration/sns"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/","title":"Mutating Webhook for Kubernetes in China","text":"","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#solution-1-api-gateway-mutating-webhook-for-k8","title":"solution 1: api-gateway-mutating-webhook-for-k8","text":"<p>https://github.com/aws-samples/amazon-api-gateway-mutating-webhook-for-k8</p> <p>This demo project is intended to illustrate how to use\u00a0Amazon API Gateway\u00a0and\u00a0AWS Lambda\u00a0to set up an HTTP service, then been integrated with Kubernetes as\u00a0admission webhooks\u00a0to receive admission requests and mutate or validate Kubernetes resources dynamically. Particularly this project will setup a mutating webhook to modify the docker image path in K8S Pod after the deployment been submitted to K8S API server and before it\u2019s been persisted in etcd.</p> <p></p>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#deploy-in-3xxx-account","title":"deploy in 3xxx account","text":"<p>following option#2</p> <pre><code>git clone https://github.com/aws-samples/amazon-api-gateway-mutating-webhook-for-k8.git\ncd amazon-api-gateway-mutating-webhook-for-k8\n\nexport S3_BUCKET=my_s3_bucket # need existed\n\nsam package -t sam-template.yaml --s3-bucket ${S3_BUCKET} --output-template-file packaged.yaml \n\nsam deploy --template-file packaged.yaml --stack-name stack-name-$RANDOM --capabilities CAPABILITY_IAM \n</code></pre>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#put-mutation-webhoos-in-your-cluster","title":"put mutation webhoos in your cluster","text":"<pre><code>---\napiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: image-mutating\nwebhooks:\n\n  - name: image.mutating.webhook\n    admissionReviewVersions: [\"v1\", \"v1beta1\"]\n    sideEffects: None\n    failurePolicy: Ignore\n    clientConfig:\n      url: https://xxx.execute-api.us-east-1.amazonaws.com\n    rules:\n      - operations: [ \"CREATE\", \"UPDATE\" ]\n        apiGroups: [\"\"]\n        apiVersions: [\"v1\"]\n        resources: [\"pods\"]\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#solution-2-nwcdlabscontainer-mirror","title":"solution 2: nwcdlabs/container-mirror","text":"<ul> <li>https://github.com/nwcdlabs/container-mirror</li> </ul>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#solution-3-dth-to-private-ecr","title":"solution 3: DTH to private ECR","text":"<ul> <li>https://aws.amazon.com/solutions/implementations/data-transfer-hub/</li> </ul>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#pod-to-verify","title":"pod to verify","text":"<pre><code>cat &gt; pod.yaml &lt;&lt;-EoF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: \"nginx-gcr\"\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx-gcr\n  template:\n    metadata:\n      labels:\n        app: \"nginx-gcr\"\n    spec:\n      containers:\n\n      - image: k8s.gcr.io/nginx\n        imagePullPolicy: Always\n        name: \"nginx\"\n        ports:\n        - containerPort: 80\nEoF\nk apply -f pod.yaml\n\nkubectl get pod nginx-gcr-deployment-784bf76d96-hjmv4 -o=jsonpath='{.spec.containers[0].image}'\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#refer","title":"refer","text":"<ul> <li>https://github.com/aws/amazon-eks-pod-identity-webhook/blob/master/hack/webhook-patch-ca-bundle.sh</li> <li>https://aws.amazon.com/cn/blogs/china/global-to-china-multinational-enterprise-kubernetes-application-cross-border-replication-and-deployment-solution/</li> </ul>","tags":["kubernetes"]},{"location":"EKS/ecr/mutating-webhook-for-k8s-in-china/#install-sam","title":"install sam","text":"<ul> <li>https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html</li> </ul>","tags":["kubernetes"]},{"location":"EKS/ecs/blog-migrating-net-classic-applications-to-amazon-ecs-using-windows-containers/","title":"Migrating .NET Classic Applications to Amazon ECS Using Windows Containers","text":"","tags":["aws/container/ecs","microsoft/dotnet"]},{"location":"EKS/ecs/blog-migrating-net-classic-applications-to-amazon-ecs-using-windows-containers/#start-from","title":"start from","text":"<ul> <li>initiate-ec2-windows-dev-environment</li> <li>clone repo</li> <li>open vs2022</li> </ul>","tags":["aws/container/ecs","microsoft/dotnet"]},{"location":"EKS/ecs/blog-migrating-net-classic-applications-to-amazon-ecs-using-windows-containers/#lab-walkthrough","title":"lab walkthrough","text":"<ul> <li>windows 2019 base AMI</li> <li>assign instance profile </li> <li>install microsoft edge</li> <li>../../CLI/windows/docker-on-windows</li> <li>install ms-visual-studio <ul> <li>clone repo: https://github.com/aws-samples/aws-ecs-windows-aspnet</li> </ul> </li> <li>download 4.5.2 sdk</li> <li>restart ms vs 2022<ul> <li>open solution explorer</li> <li>change Dockerfile (../../../../dotnet-core-and-framework)</li> <li>right click project AWSECSSample, Add Docker support </li> <li>start debugging, Container (Dockerfile)</li> <li>you will see docker image from cli</li> </ul> </li> <li>install awscli on windows</li> <li>upload docker image to ECS</li> <li>download cloudformation (../../git-attachment/aspnetwincontainer.json)<ul> <li>need windows 2019 AMI (Windows_Server-2019-English-Full-ECS_Optimized-) (git/git-mkdocs/CLI/awscli/ecs-cmd)</li> <li>assign public subnet </li> </ul> </li> </ul>","tags":["aws/container/ecs","microsoft/dotnet"]},{"location":"EKS/ecs/blog-migrating-net-classic-applications-to-amazon-ecs-using-windows-containers/#refer","title":"refer","text":"<p>another ecs github  https://github.com/aws-samples/ecs-refarch-cloudformation-windows</p>","tags":["aws/container/ecs","microsoft/dotnet"]},{"location":"EKS/ecs/ecs-windows-gmsa/","title":"ecs-windows-gmsa","text":"ecs node ec2 fargate windows support gMSA do not support gMSA linux support gMSA support gMSA (cn supported) <ul> <li>ecs<ul> <li>windows node<ul> <li>on ec2 <ul> <li>join domain: ws-windows-containers-on-aws lab 4</li> <li>domainless: poc-container-on-domainless-windows-node-in-ecs </li> </ul> </li> <li>on fargate do not support</li> </ul> </li> <li>linux<ul> <li>on ec2: https://docs.aws.amazon.com/zh_cn/AmazonECS/latest/developerguide/linux-gmsa.html</li> <li>on fargate: https://aws.amazon.com/blogs/containers/windows-authentication-with-gmsa-on-linux-containers-on-amazon-ecs-with-aws-fargate/</li> </ul> </li> </ul> </li> </ul>","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/ecs-windows-gmsa/#walkthrough","title":"walkthrough","text":"<p>https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/manage-serviceaccounts</p> <p></p> <p>create ad group and user <pre><code>$gmsa = \"WebApp02\"\n$groupname = \"WebApp02Group\"\n$username = \"WebApp02Account\"\n$password = \"Password1234!\"\n$domainname = \"containersws.local\"\n\n# Create the security group\nNew-ADGroup -Name \"$groupname Authorized Accounts\" -SamAccountName $groupname -GroupScope DomainLocal\n\n# Create the gMSA\nNew-ADServiceAccount -Name $gmsa -DnsHostName \"$gmsa.$domainname\" -ServicePrincipalNames \"host/$gmsa\", \"host/$gmsa.$domainname\" -PrincipalsAllowedToRetrieveManagedPassword $groupname\n\n# Create the standard user account. This account information needs to be stored in a secret store and will be retrieved by the ccg.exe hosted plug-in to retrieve the gMSA password. Replace 'StandardUser01' and 'p@ssw0rd' with a unique username and password. We recommend using a random, long, machine-generated password.\nNew-ADUser -Name $username -AccountPassword (ConvertTo-SecureString -AsPlainText $password -Force) -Enabled 1\n\n# Add your container hosts to the security group\nAdd-ADGroupMember -Identity $groupname -Members $username\n</code></pre></p> <p>create credspec <pre><code>Install-Module -Name CredentialSpec -Force\nNew-CredentialSpec -AccountName $gmsa -Path \"C:\\MyFolder\\WebApp01_CredSpec.json\"\n</code></pre></p> <p>save user / password in secret manager https://docs.amazonaws.cn/en_us/AmazonECS/latest/developerguide/tutorial-gmsa-windows.html#tutorial-gmsa-windows-step2 <pre><code>aws secretsmanager create-secret \\\n--name gmsa-plugin-input-domainless \\\n--description \"Amazon ECS - gMSA Portable Identity.\" \\\n--secret-string '{\"username\":\"StandardUser01\",\"password\":\"Password1234!\",\"domainName\":\"containersws.local\"}'\n</code></pre></p> <p>modify for ECS  https://docs.amazonaws.cn/en_us/AmazonECS/latest/developerguide/tutorial-gmsa-windows.html#tutorial-gmsa-windows-step3 <pre><code>\"HostAccountConfig\": {\n      \"PortableCcgVersion\": \"1\",\n      \"PluginGUID\": \"{859E1386-BDB4-49E8-85C7-3070B13920E1}\",\n      \"PluginInput\": \"{\\\"credentialArn\\\": \\\"arn:aws:secretsmanager:aws-region:111122223333:secret:gmsa-plugin-input\\\"}\"\n    }\n</code></pre></p>","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/ecs-windows-gmsa/#refer","title":"refer","text":"<ul> <li>Additional credential spec configuration for non-domain-joined container host use case </li> <li>https://docs.aws.amazon.com/AmazonECS/latest/developerguide/windows-gmsa.html</li> </ul>","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/ecs-windows-gmsa/#troubleshooting","title":"troubleshooting","text":"<p>https://github.com/microsoft/SDN/issues/339 <pre><code>PS C:\\&gt; nltest /sc_verify:containersws.local\nFlags: b0 HAS_IP  HAS_TIMESERV\nTrusted DC Name \\\\IP-C61302A0.containersws.local\nTrusted DC Connection Status Status = 0 0x0 NERR_Success\nTrust Verification Status = 0 0x0 NERR_Success\nThe command completed successfully\n</code></pre></p> <pre><code>dir \\\\containersws.local\\sysvol\n</code></pre> <pre><code>klist get krbtgt\nklist sessions\n</code></pre>","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/ecs-windows-gmsa/#refer_1","title":"refer","text":"<p>https://www.amazonaws.cn/en/new/2024/amazon-ecs-adds-gmsa-authentication-for-linux-containers-for-amazon-fargate/</p>","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/poc-container-on-domainless-windows-node-in-ecs/","title":"poc-container-on-domainless-windows-in-ecs","text":"","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/poc-container-on-domainless-windows-node-in-ecs/#walkthrough","title":"walkthrough","text":"<ul> <li>background (ecs-windows-gmsa)</li> <li>complete step 1 in ws-gmsa-linux-containers-ecs or workshop link </li> <li>create seperate ecs cluster using windows node, do not create capacity provider, and setup asg to 1<ul> <li>put to workshop\u2019s vpc</li> <li>../../CLI/awscli/ecs-cmd</li> </ul> </li> <li>create outbound endpoint in vpc for your domain name resolution<ul> <li>workshop\u2019s directory is \u201cdirectory.<code>amazon-ecs-gmsa-linux.com</code>\u201d, and get it\u2019s DNS addresses</li> <li>../../CLI/awscli/route53-cmd</li> </ul> </li> <li>go workshop step 4, create credspec</li> <li>build sample web app in step 5 to build windows iis container <ul> <li>rollback to .net6 commit id 1d58ce653829dea3a63005b0cc48cc903bfcd560</li> </ul> </li> <li>modify credspec to domain less format (ecs-windows-gmsa)<ul> <li>script \\ shell script works fine</li> </ul> </li> <li>run task and verify access sqlserver in domain <ul> <li>git/git-mkdocs/CLI/windows/powershell</li> </ul> </li> </ul>","tags":["microsoft/windows","aws/container/ecs"]},{"location":"EKS/ecs/ws-gmsa-linux-containers-ecs/","title":"Windows Authentication with gMSA for .NET Linux Containers in Amazon ECS","text":"<p>workshop https://catalog.us-east-1.prod.workshops.aws/workshops/a6761c4f-f1f8-44e9-8455-fda420122632/en-US</p> <p>blog https://aws.amazon.com/cn/blogs/containers/using-windows-authentication-with-gmsa-on-linux-containers-on-amazon-ecs/</p> <p></p>","tags":["microsoft/gmsa","aws/container/ecs"]},{"location":"EKS/ecs/ws-gmsa-linux-containers-ecs/#lab","title":"lab","text":"<p>wait until <code>CDKToolkit</code> bootstrap template display on cloudformation, you could logon to your windows dev EC2 with credential in Secret Manager <pre><code>git clone https://github.com/aws-samples/gmsa-linux-containers-ecs.git\n\n# has send pull request\n# change cdk-dotnet\\src\\CdkDotnet\\CdkDotnet.csproj\n# 2.93.0 --&gt; 2.130.0\n\n$Env:AWS_DEFAULT_REGION = \"us-east-1\"\n$Env:EC2_INSTANCE_KEYPAIR_NAME = \"gmsa\"\n$Env:MY_SG_INGRESS_IP = \"0.0.0.0\" \n$Env:DOMAIN_JOIN_ECS = 0 \n\n# npm --verison\n# if version is lower, for example 1.4.9\n# choco uninstall npm \n\nnpm install -g aws-cdk # npm upgrade\ncdk --version\n\n# cd cdk-dotnet\ncdk deploy \"*\" --require-approval \"never\" --verbose\n\n# if got cdk cli version compatibility issue\n# add \"npx\" at the front of CLI\n</code></pre> wiat 1 hour to deploy complete</p> <p>create cloudformation stack to upgrade existing one <pre><code>$env:DEPLOY_APP=1\n$env:APP_TD_REVISION = 2\ncdk deploy \"*\" --require-approval \"never\" --verbose\n</code></pre></p> <p>directory.amazon-ecs-gmsa-linux.com <pre><code> .\\Add-ECSContainerInstancesToADGroup.ps1 -EcsAsgName amazon-ecs-gmsa-linux\n</code></pre></p> <pre><code> .\\update-ecs-task-definition-cred-spec.sh -t amazon-ecs-gmsa-linux-web-site-task\n</code></pre> <pre><code>$env:DEPLOY_APP=1\n$env:APP_TD_REVISION = 2\ncdk deploy \"*\" --require-approval \"never\" --verbose\n</code></pre>","tags":["microsoft/gmsa","aws/container/ecs"]},{"location":"EKS/kubernetes/k8s-hpa-horizontal-pod-autoscaler/","title":"hpa-horizontal-pod-autoscaler","text":"","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-hpa-horizontal-pod-autoscaler/#sample","title":"sample","text":"<ul> <li>https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-hpa-horizontal-pod-autoscaler/#v1","title":"v1","text":"<ul> <li>https://user-images.githubusercontent.com/16036481/72983523-c4634f00-3de1-11ea-9a46-fa5229580d06.jpg</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-hpa-horizontal-pod-autoscaler/#v2","title":"v2","text":"<pre><code>k autoscale sts thanos-receive-cluster3-tmp -n thanos --cpu-percent=60   --min=1  --max=10 --dry-run=client -oyaml &gt; ~/environment/hpa.yaml\n</code></pre> <pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  creationTimestamp: null\n  name: thanos-receive-cluster3-tmp\nspec:\n  maxReplicas: 10\n  minReplicas: 1\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: StatefulSet\n    name: thanos-receive-cluster3-tmp\n  metrics:\n\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 70\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-hpa-horizontal-pod-autoscaler/#resource","title":"resource","text":"<ul> <li>doc</li> <li>workshop</li> <li>sysctl</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/","title":"k8s-liveness-readiness-startup-probes","text":"<p>readiness probe - This is simply a signal to inform Kubernetes when to put this pod behind the load balancer and when to put this service behind the proxy to serve traffic. If you put an application behind the load balancer before it\u2019s ready, then a user can reach this pod but won\u2019t get the expected response of a healthy server.</p> <p>liveness probe - The liveness probe let\u2019s Kubernetes know if the pod is in a healthy state. If it isn\u2019t healthy, then Kubernetes should restart it.</p> <p>startup probes - The kubelet uses startup probes to know when a container application has started. If such a probe is configured, liveness and readiness probes do not start until it succeeds, making sure those probes don\u2019t interfere with the application startup. This can be used to adopt liveness checks on slow starting containers, avoiding them getting killed by the kubelet before they are up and running.</p>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#verify","title":"verify","text":"<ul> <li> <p>create deployment <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: init-container\n          image: busybox\n          command: \n            - 'sh'\n            - '-c'\n            - |\n              echo \"Hello World\" &gt; /usr/share/nginx/html/index.html\n              echo \"Hello liveness\" &gt; /usr/share/nginx/html/liveness.html\n              echo \"Hello readiness\" &gt; /usr/share/nginx/html/readiness.html\n              echo \"Hello startup\" &gt; /usr/share/nginx/html/startup.html\n              echo \"Hello ELB\" &gt; /usr/share/nginx/html/elbcheck.html\n              while true ; do sleep 60; echo ===; done\n          volumeMounts:\n          - name: nginx-html\n            mountPath: /usr/share/nginx/html\n        - name: nginx\n          image: nginx:latest\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: nginx-html\n              mountPath: /usr/share/nginx/html\n          startupProbe:\n            httpGet:\n              path: /startup.html\n              port: 80\n            initialDelaySeconds: 2\n            periodSeconds: 2\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /readiness.html\n              port: 80\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            failureThreshold: 1\n          livenessProbe:\n            httpGet:\n              path: /liveness.html\n              port: 80\n            initialDelaySeconds: 15\n            periodSeconds: 15\n            failureThreshold: 1\n      volumes:\n        - name: nginx-html\n          emptyDir: {}\n</code></pre></p> </li> <li> <p>ELB / startup / liveness / readiness probe \u5206\u522b\u68c0\u67e5\u4e0d\u540c\u7684 html</p> </li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#startup-failed","title":"startup failed","text":"<ul> <li>\u542f\u52a8 probe \u5728 pod \u6b63\u5e38\u542f\u52a8\u540e\u5931\u6548\uff0c\u4e0d\u518d\u68c0\u67e5</li> <li>\u9664\u975e liveness \u68c0\u67e5\u5931\u6548\uff0ccontainer \u88ab\u91cd\u542f\u540e\uff0c\u624d\u4f1a\u518d\u6b21 check</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#liveness-failed","title":"liveness failed","text":"<ul> <li>nginx container \u91cd\u542f</li> <li>init container \u672a\u91cd\u542f</li> <li>ip address \u4e0d\u53d8</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#readiness-failed","title":"readiness failed","text":"<ul> <li>remove from service / ELB</li> <li>nginx container \u672a\u91cd\u542f</li> <li>init container \u672a\u91cd\u542f</li> <li>ip address \u4e0d\u53d8</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#_1","title":"\u7ed3\u8bba","text":"<ul> <li>startup probe \u7528\u4e8e\u6162\u901f\u5bb9\u5668\u542f\u52a8\u68c0\u67e5</li> <li>readiness probe \u68c0\u67e5\u57fa\u672c\u96f7\u540c\u4e0e ELB \u81ea\u5e26\u7684\u5065\u5eb7\u68c0\u67e5\uff0c\u533a\u522b\u5728\u4e8e readiness \u68c0\u67e5\u7531 kubelet \u53d1\u8d77\uff0c\u5728\u8282\u70b9\u672c\u5730\u5b8c\u6210\uff1bELB \u7684\u5065\u5eb7\u68c0\u67e5\u901a\u8fc7\u7f51\u7edc\u5b8c\u6210\u3002\u4f7f\u7528\u5176\u4e00\u5373\u53ef</li> <li>liveness probe \u662f\u552f\u4e00\u68c0\u67e5\u5931\u8d25\u540e\u4f1a\u91cd\u542f\u5bb9\u5668\uff0c\u5982\u679c pod \u6709\u591a\u4e2a\u5bb9\u5668\uff0c\u5219\u53ea\u68c0\u67e5\u542f\u7528\u4e86\u8be5 probe \u7684 container\u3002pod \u5730\u5740\u4fdd\u6301\u4e0d\u53d8\u3002</li> <li>\u573a\u666f1\uff1aELB + liveness<ul> <li>ELB \u68c0\u67e5\u5931\u6548 \u5c0f\u4e8e liveness \u68c0\u67e5\u5931\u6548<ul> <li>\u5141\u8bb8\u670d\u52a1\u4e34\u65f6\u4e0d\u53ef\u7528\uff0cELB \u68c0\u67e5\u5931\u8d25\u5c06\u4e0d\u518d\u5c06\u6d41\u91cf\u8f6c\u5230\u8be5 POD\u3002POD \u5728 liveness \u68c0\u67e5\u5931\u6548\u524d\u5982\u679c\u80fd\u56de\u590d\uff0c\u5219\u81ea\u52a8\u52a0\u56de\uff08\u6ee1\u8db3 ELB \u68c0\u67e5\u6210\u529f\uff09</li> </ul> </li> <li>ELB \u68c0\u67e5\u5931\u6548 \u5927\u4e8e liveness \u68c0\u67e5\u5931\u6548<ul> <li>\u670d\u52a1\u5c06\u88ab\u91cd\u542f</li> </ul> </li> </ul> </li> <li>pod readiness gate \u529f\u80fd\u5728 1.29 \u96c6\u7fa4\u4e2d\u672a\u8868\u73b0\u4e3a\u52a0\u5feb pod \u6ce8\u518c\u5230 ELB<ul> <li>\u5728 namespace \u5c42\u9762\u6dfb\u52a0\u6807\u7b7e\u540e\uff0c\u8fd8\u9700\u8981\u989d\u5916\u914d\u7f6e <code>objectSelector</code> \u624d\u80fd\u6b63\u5e38\u6293\u53d6\u5230 default namespace \u4e2d\u7684 POD</li> </ul> </li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#prestop-hook-","title":"prestop-hook-","text":"<ul> <li>blog: How to rapidly scale your application with ALB on EKS without losing traffic</li> <li>blog: https://aws.amazon.com/ko/blogs/tech/case-study-lotteon-running-on-amazon-eks/</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-liveness-readiness-startup-probes/#refer","title":"refer","text":"<ul> <li>https://aws.amazon.com/blogs/containers/preventing-kubernetes-misconfigurations-using-datree/</li> <li>https://www.datree.io/resources/kubernetes-readiness-and-liveness-probes-best-practices</li> <li>https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/</li> <li>https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.7/deploy/pod_readiness_gate/</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-request-limit-best-practices/","title":"k8s-request-limit-best-practices","text":"<p>Kubernetes Best Practices - Resource Requests and Limits https://www.youtube.com/watch?v=xjpHggHKm78</p> <ul> <li>\u57fa\u4e8e request \u8c03\u5ea6\uff1b </li> <li>\u53ef\u4ee5\u8bbe\u7f6e namespace \u7ea7\u522b\u9650\u5236\u548c\u9ed8\u8ba4\u503c\uff1b</li> <li>\u9664\u975e\u79d1\u5b66\u8ba1\u7b97\u5e94\u7528\u4e00\u822c\u4e0d\u5efa\u8bae cpu request \u8d85\u8fc71000m\uff1b</li> <li>\u5185\u5b58\u4e0d\u53ef\u538b\u7f29\uff0c\u6269\u5c55\u8d85 request \u4e0d\u5230 limit \u540e\uff0c k8 \u4f1a reschedule \u4f4e\u4f18\u5148\u7ea7 pod \u6765\u91ca\u653e\u7a7a\u95f4\u4ece\u800c\u6ee1\u8db3\u8bf7\u6c42</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-request-limit-best-practices/#cpu-request-limit","title":"cpu request / limit","text":"<p>link  Pod scheduling is based on requests. A Pod is scheduled to run on a Node only if the Node has enough CPU resources available to satisfy the Pod CPU request.</p> <p>link  The CPU resource is measured in\u00a0CPU\u00a0units. One CPU, in Kubernetes, is equivalent to:</p> <ul> <li>1 AWS vCPU</li> <li>1 GCP Core</li> <li>1 Azure vCore</li> <li>1 Hyperthread on a bare-metal Intel processor with Hyperthreading</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/","title":"k8s-topology-spread-constraints","text":"","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#link","title":"link","text":"<ul> <li>https://kubernetes.io/zh-cn/docs/concepts/scheduling-eviction/topology-spread-constraints/</li> <li>https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#_1","title":"\u96c6\u7fa4\u7ea7\u522b\u7684\u9ed8\u8ba4\u7ea6\u675f","text":"","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#_2","title":"\u5185\u7f6e\u9ed8\u8ba4\u7ea6\u675f","text":"<pre><code>defaultConstraints:\n\n  - maxSkew: 3\n    topologyKey: \"kubernetes.io/hostname\"\n    whenUnsatisfiable: ScheduleAnyway\n  - maxSkew: 5\n    topologyKey: \"topology.kubernetes.io/zone\"\n    whenUnsatisfiable: ScheduleAnyway\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#sample","title":"sample","text":"<ul> <li>6 node in 3 az</li> <li>1.25</li> </ul>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#nginx-deployment","title":"nginx deployment","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app: nginx\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: nginx\n    spec:\n      topologySpreadConstraints:\n\n      - maxSkew: 1\n        topologyKey: \"kubernetes.io/hostname\"\n        whenUnsatisfiable: DoNotSchedule\n        labelSelector:\n          matchLabels:\n            app: nginx\n      containers:\n      - image: nginx\n        name: nginx\n        resources: {}\nstatus: {}\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#pod","title":"pod","text":"<pre><code>kind: Pod\napiVersion: v1\nmetadata:\n  name: mypod\n  labels:\n    app: nginx\nspec:\n  topologySpreadConstraints:\n\n  - maxSkew: 1\n    # topologyKey: \"kubernetes.io/hostname\"\n    topologyKey: \"topology.kubernetes.io/zone\"\n    whenUnsatisfiable: DoNotSchedule\n    labelSelector:\n      matchLabels:\n        app: nginx\n  containers:\n  - name: pause\n    image: registry.k8s.io/pause:3.1\n</code></pre>","tags":["kubernetes"]},{"location":"EKS/kubernetes/k8s-topology-spread-constraints/#result","title":"result","text":"<ul> <li> <p>for zone </p> </li> <li> <p>for hostname check up topology in previous diagram</p> </li> </ul>","tags":["kubernetes"]},{"location":"EKS/others/nginx-sample/","title":"nginx sample","text":"","tags":["nginx","kubernetes"]},{"location":"EKS/others/nginx-sample/#nginx-deployment-service","title":"nginx deployment + service","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n\n      - name: nginx\n        image: nginx:1.14.2 # 1.14.2 - 1.16.1\n        ports:\n        - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n  type: NodePort\n</code></pre>","tags":["nginx","kubernetes"]},{"location":"EKS/others/nginx-sample/#deployment-with-resource-limit","title":"deployment with resource limit","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hello-world-deployment\n  labels:\n    app: hello-world\nspec:\n  selector:\n    matchLabels:\n      app: hello-world\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: hello-world\n    spec:\n      containers:\n\n      - name: hello-world\n        image: gcr.io/google-samples/hello-app:1.0\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            memory: 256Mi\n            cpu: \"250m\"\n          requests:\n            memory: 128Mi\n            cpu: \"80m\"\n</code></pre>","tags":["nginx","kubernetes"]},{"location":"EKS/others/nginx-sample/#deployment-service-ingress-","title":"deployment-service-ingress-","text":"<ul> <li>startupProbe is 30 sec <pre><code>---\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    name: http\n    targetPort: 80\n  selector:\n    app: httpbin\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: httpbin\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  template:\n    metadata:\n      labels:\n        app: httpbin\n    spec:\n      containers:\n      - image: nginx\n        name: httpbin\n        ports:\n        - containerPort: 80\n          name: http\n        startupProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 30\n          failureThreshold: 6\n          periodSeconds: 10\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: httpbin\n  annotations:\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test,Application=httpbin\n    alb.ingress.kubernetes.io/target-type: ip\nspec:\n  ingressClassName: alb\n  rules:\n    - host: '*.amazonaws.com'\n      http:\n        paths:\n          - backend:\n              service:\n                name: httpbin\n                port:\n                  number: 80\n            path: /\n            pathType: Prefix\n</code></pre></li> </ul>","tags":["nginx","kubernetes"]},{"location":"EKS/others/nginx-sample/#sample-for-hybrid-node-","title":"sample-for-hybrid-node-","text":"<pre><code>---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  namespace: default\n  labels:\n    app: nginx\nspec:\n  replicas: 6\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n\n            - matchExpressions:\n              - key: eks.amazonaws.com/compute-type\n                operator: In\n                values:\n                - hybrid\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n            memory: 512Mi\n          requests:\n            cpu: 250m\n            memory: 256Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\n  namespace: default\nspec:\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n    targetPort: 80\n    protocol: TCP\n  type: ClusterIP\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: nginx-ingress\n  namespace: default\n  annotations:\n    kubernetes.io/ingress.class: \"alb\"\n    alb.ingress.kubernetes.io/scheme: \"internet-facing\"\n    alb.ingress.kubernetes.io/target-type: \"ip\"\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: nginx-service\n            port:\n              number: 80\n</code></pre>","tags":["nginx","kubernetes"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/","title":"appmesh-workshop-eks","text":"<p>https://www.eksworkshop.com/intermediate/330_app_mesh/deploy_dj_app/clone_repo/</p>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#install-appmesh-controller","title":"install appmesh-controller","text":"<ul> <li>doc</li> <li>workshop</li> </ul> <pre><code>CLUSTER_NAME=ekscluster4\nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\nexport AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n\n# Create the namespace\nkubectl create ns appmesh-system\n\n# Install the App Mesh CRDs\nkubectl apply -k \"https://github.com/aws/eks-charts/stable/appmesh-controller/crds?ref=master\"\n\n# Create your OIDC identity provider for the cluster\neksctl utils associate-iam-oidc-provider \\\n--region=${AWS_DEFAULT_REGION} \\\n--cluster ${CLUSTER_NAME} --approve\n\n# Download the IAM policy for AWS App Mesh Kubernetes Controller\ncurl -o controller-iam-policy.json https://raw.githubusercontent.com/aws/aws-app-mesh-controller-for-k8s/master/config/iam/controller-iam-policy.json\n\n# Create an IAM policy called AWSAppMeshK8sControllerIAMPolicy\naws iam create-policy \\\n--policy-name AWSAppMeshK8sControllerIAMPolicy \\\n--policy-document file://controller-iam-policy.json\n\n# Create an IAM role for the appmesh-controller service account\neksctl create iamserviceaccount --cluster ${CLUSTER_NAME} \\\n--namespace appmesh-system \\\n--name appmesh-controller \\\n--attach-policy-arn arn:aws:iam::${AWS_ACCOUNT_ID}:policy/AWSAppMeshK8sControllerIAMPolicy,arn:aws:iam::aws:policy/AWSCloudMapFullAccess,arn:aws:iam::aws:policy/AWSAppMeshFullAccess  \\\n--override-existing-serviceaccounts --approve\n\n# install using helm\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\nhelm upgrade -i appmesh-controller eks/appmesh-controller \\\n    --namespace appmesh-system \\\n    --set region=${AWS_DEFAULT_REGION} \\\n    --set serviceAccount.create=false \\\n    --set serviceAccount.name=appmesh-controller\n\n#    --set tracing.enabled=true \\\n#    --set tracing.provider=x-ray\n\n# check version\nkubectl get deployment appmesh-controller -n appmesh-system -o json |jq -r \".spec.template.spec.containers[].image\" | cut -f2 -d ':'\n# check crds\nkubectl get crds | grep appmesh\n# check pods\nkubectl -n appmesh-system get all          \n</code></pre>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#ensure-node-role","title":"ensure node role","text":"<ul> <li>ensure node role has <code>AWSAppMeshEnvoyAccess</code> policy</li> </ul> <p>../../../CLI/linux/eksctl</p>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#flagger","title":"flagger","text":"<p>automated-canary-deployment-using-flagger</p>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#others","title":"others","text":"","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#appmesh-on-eks","title":"appmesh on eks","text":"<p>link</p> <pre><code>git clone https://github.com/aws/aws-app-mesh-examples.git\ncd aws-app-mesh-examples/walkthroughs/eks/\n</code></pre>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#github-repo","title":"github repo","text":"<pre><code>git clone https://github.com/aws/aws-app-mesh-examples.git\n</code></pre>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#howto-k8s-http2","title":"howto-k8s-http2","text":"<p>link</p> <pre><code>CLUSTER_NAME=ekscluster1\n\nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\nexport AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n\nexport VPC_ID=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} \\\n  --query \"cluster.resourcesVpcConfig.vpcId\" --output text )\n</code></pre> <pre><code>cd aws-app-mesh-examples/walkthroughs/howto-k8s-http2/\n./deploy\n</code></pre>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/appmesh-workshop-eks/#refer","title":"refer","text":"<p>automated-canary-deployment-using-flagger</p>","tags":["aws/container/appmesh","aws/container/eks"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/","title":"flagger lab","text":"","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/#install","title":"install","text":"<p>appmesh-workshop-eks</p>","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/#metrics-server-and-prometheus","title":"metrics-server and prometheus","text":"<pre><code>kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\n\nhelm upgrade -i appmesh-prometheus eks/appmesh-prometheus \\\n--namespace appmesh-system \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=appmesh-controller\n</code></pre>","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/#flagger","title":"flagger","text":"<pre><code>helm repo add flagger https://flagger.app\nhelm upgrade -i flagger flagger/flagger \\\n--namespace=appmesh-system \\\n--set meshProvider=appmesh:v1beta2 \\\n--set metricsServer=http://appmesh-prometheus:9090 \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=appmesh-controller\n\nkubectl get po -n appmesh-system | grep flagger\n</code></pre>","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/#automated-canary-deployments","title":"Automated Canary Deployments","text":"<p>Step 1. Create a mesh.</p> <ul> <li>must have the 2nd label </li> <li>need the 1st label for unique selection</li> </ul> <pre><code>set -u\nUNIQ_STR=$(date +%H%M)\nMESH_NAME=mesh${UNIQ_STR}\nenvsubst &gt;mesh.yaml &lt;&lt;-EOF\napiVersion: appmesh.k8s.aws/v1beta2\nkind: Mesh\nmetadata:\n  name: ${MESH_NAME}\nspec:\n  namespaceSelector:\n    matchLabels:\n      mash: ${MESH_NAME}\n      appmesh.k8s.aws/sidecarInjectorWebhook: enabled\nEOF\nkubectl apply -f mesh.yaml\n</code></pre> <p>Step 2.\u00a0Create a new namespace with App Mesh sidecar injection enabled. <pre><code>NS_NAME=namespace${UNIQ_STR}\n# NS_NAME=${MESH_NAME}\nenvsubst &gt;namespace.yaml &lt;&lt;-EOF\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: ${NS_NAME}\n  labels:\n    mash: ${MESH_NAME}\n    appmesh.k8s.aws/sidecarInjectorWebhook: enabled\nEOF\nkubectl apply -f namespace.yaml\n</code></pre></p> <p>Step 3.\u00a0Create a Kubernetes Deployment object.</p> <ul> <li>../../../CLI/linux/docker-cmd</li> </ul> <pre><code>IMAGE_URL=694242712155.dkr.ecr.us-east-2.amazonaws.com/sample/colorapp:v1\nenvsubst &gt;deployment.yaml &lt;&lt;-EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webapp\n  namespace: ${NS_NAME}\nspec:\n  minReadySeconds: 3\n  revisionHistoryLimit: 5\n  progressDeadlineSeconds: 60\n  strategy:\n    rollingUpdate:\n      maxUnavailable: 0\n    type: RollingUpdate\n  selector:\n    matchLabels:\n      app: webapp\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: webapp\n    spec:\n      containers:\n\n      - name: webapp\n        image: ${IMAGE_URL}\n        imagePullPolicy: IfNotPresent\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 0\n          periodSeconds: 10\n          timeoutSeconds: 1\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          successThreshold: 3\n        ports:\n        - name: http\n          containerPort: 80\n        resources:\n          limits:\n            cpu: 2000m\n            memory: 512Mi\n          requests:\n            cpu: 100m\n            memory: 64Mi\nEOF\nkubectl apply -f deployment.yaml\n</code></pre> <pre><code>kubectl get deploy -n ${NS_NAME}\n</code></pre> <p>Step 4.\u00a0Deploy a canary object. <pre><code>envsubst &gt;canary.yaml &lt;&lt;-EOF\napiVersion: flagger.app/v1beta1\nkind: Canary\nmetadata:\n  name: webapp\n  namespace: ${NS_NAME}\nspec:\n  # App Mesh API reference\n  provider: appmesh:v1beta2\n  # deployment reference\n  targetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: webapp\n  # the maximum time in seconds for the canary deployment\n  # to make progress before it is rollback (default 600s)\n  progressDeadlineSeconds: 60\n  service:\n    # container port\n    port: 80\n    targetPort: 80\n    # App Mesh ingress timeout (optional)\n    timeout: 15s\n    # App Mesh retry policy (optional)\n    retries:\n      attempts: 3\n      perTryTimeout: 5s\n      retryOn: \"gateway-error,client-error,stream-error\"\n    # App Mesh URI settings\n    match:\n\n      - uri:\n          prefix: /\n    rewrite:\n      uri: /\n  # define the canary analysis timing and KPIs\n  analysis:\n    # schedule interval (default 60s)\n    interval: 1m\n    # max number of failed metric checks before rollback\n    threshold: 5\n    # max traffic percentage routed to canary\n    # percentage (0-100)\n    maxWeight: 50\n    # canary increment step\n    # percentage (0-100)\n    stepWeight: 10\n    # App Mesh Prometheus checks\n    metrics:\n    - name: request-success-rate\n      # minimum req success rate (non 5xx responses)\n      # percentage (0-100)\n      thresholdRange:\n        min: 99\n      interval: 1m\n    - name: request-duration\n      # maximum req duration P99\n      # milliseconds\n      thresholdRange:\n        max: 500\n      interval: 30s\nEOF\nkubectl apply -f canary.yaml\n</code></pre></p> <pre><code>kubectl get canary -n ${NS_NAME} -w\n</code></pre> <p>Step 5.\u00a0To expose the webapp application outside the mesh, create an App Mesh gateway. <pre><code>helm upgrade -i appmesh-gateway-${UNIQ_STR} eks/appmesh-gateway \\\n--namespace ${NS_NAME}\n</code></pre></p> <p>Step 6.\u00a0Create a gateway route that points to the webapp virtual service. <pre><code>envsubst &gt;gatewayroute.yaml &lt;&lt;-EOF\napiVersion: appmesh.k8s.aws/v1beta2\nkind: GatewayRoute\nmetadata:\n  name: webapp\n  namespace: ${NS_NAME}\nspec:\n  httpRoute:\n    match:\n      prefix: \"/\"\n    action:\n      target:\n        virtualService:\n          virtualServiceRef:\n            name: webapp\nEOF\nkubectl apply -f gatewayroute.yaml\n</code></pre></p> <p>get URL <pre><code>URL=\"http://$(kubectl -n ${NS_NAME} get svc/appmesh-gateway-${UNIQ_STR} -ojson | jq -r \".status.loadBalancer.ingress[].hostname\")\"\necho ${URL}\n</code></pre></p>","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/#automated-canary-promotion","title":"Automated Canary Promotion","text":"<pre><code>IMAGE_URL_V2=${IMAGE_URL%:*}:v2\necho ${IMAGE_URL_V2}\n\nkubectl -n ${NS_NAME} set image deployment/webapp webapp=${IMAGE_URL_V2}\nkubectl get canaries -A -w\n\nkubectl describe canary webapp -n ${NS_NAME}\n</code></pre>","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/appmesh/automated-canary-deployment-using-flagger/#refer","title":"refer","text":"<ul> <li>https://docs.flagger.app/</li> <li>https://aws.amazon.com/cn/blogs/containers/progressive-delivery-using-aws-app-mesh-and-flagger/</li> </ul>","tags":["aws/container/eks","aws/container/appmesh","flagger"]},{"location":"EKS/solutions/compute/eks-fargate-lab/","title":"Fargate on EKS","text":"","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#_1","title":"\u73af\u5883\u51c6\u5907","text":"<ul> <li>\u767b\u5f55\u4f60\u7684\u5b9e\u9a8c\u73af\u5883 (LINK)\uff0c\u5e76\u4e14\u6253\u5f00 <code>AWS Console</code> </li> <li>\u8fdb\u5165 aws cloud9 (LINK)\uff0c\u6253\u5f00\u5df2\u7ecf\u51c6\u5907\u597d\u7684 <code>EKSLabIDE</code> \u684c\u9762\uff0c\u70b9\u51fb <code>+</code> \u65b0\u5efa\u4e00\u4e2a <code>Terminal</code> \u7a97\u53e3</li> <li> <p>\u5b89\u88c5\u5fc5\u8981\u7684\u8f6f\u4ef6 <pre><code>aws s3 cp s3://ee-assets-prod-us-east-1/modules/bd7b369f613f452dacbcea2a5d058d5b/v6/eksinit.sh . \nchmod +x eksinit.sh\n./eksinit.sh \nsource ~/.bash_profile \nsource ~/.bashrc\n\nkubectl get nodes\n</code></pre></p> </li> <li> <p>\u5982\u679c\u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u8282\u70b9\u4fe1\u606f\uff0c\u8868\u793a\u73af\u5883\u5df2\u7ecf\u5c31\u7eea\u3002</p> </li> </ul>","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#create-fargate-profile","title":"create fargate profile","text":"","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#use-eksctl","title":"use eksctl","text":"<ul> <li> <p>\u5728\u73b0\u6709\u96c6\u7fa4\u4e2d\u6dfb\u52a0 fargate \u652f\u6301 <pre><code>CLUSTER_NAME=eksworkshop-eksctl\nAWS_REGION=${AWS_DEFAULT_REGION}\nNAMESPACE=game-2048\n\n# pods in namespace called `game-2048` will be deployed to fargate profile\neksctl create fargateprofile \\\n    --cluster ${CLUSTER_NAME} \\\n    --region ${AWS_REGION} \\\n    --name ${NAMESPACE} \\\n    --namespace ${NAMESPACE}\n\neksctl get fargateprofile \\\n    --cluster ${CLUSTER_NAME} \\\n    -o yaml\n</code></pre></p> </li> <li> <p>\u4f60\u53ef\u4ee5\u767b\u5f55 eks \u7ba1\u7406\u754c\u9762\u786e\u8ba4 fargate profile \u521b\u5efa\u6210\u529f </p> </li> <li>\u622a\u4e2a\u56fe</li> </ul>","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#using-eksdemo","title":"using eksdemo","text":"<p>refer: git/git-mkdocs/CLI/linux/eksdemo</p>","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#install-aws-load-balancer-controller","title":"install aws load balancer controller","text":"<ul> <li>\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5b89\u88c5\u4e00\u4e2a\u5e94\u7528\uff0c\u5e76\u4e14\u5bf9\u5916\u53d1\u5e03\uff0c\u8fd9\u91cc\u9700\u8981\u7528\u5230 aws load balancer controller (refer aws-load-balancer-controller)</li> </ul>","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#deploy-game-2048","title":"deploy game 2048","text":"<ul> <li> <p>\u90e8\u7f72\u5e94\u7528 <pre><code>kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/examples/2048/2048_full.yaml\n</code></pre></p> </li> <li> <p>\u89c2\u5bdf\u5230\u6709 <code>fargate-</code> \u5f00\u5934\u7684\u8282\u70b9\u88ab\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d <pre><code>kubectl get all -n $NAMESPACE -o wide\n</code></pre></p> </li> <li> <p>\u89c2\u5bdf\u5e94\u7528\u8fd0\u884c\u5728 fargate \u8282\u70b9\u4e0a\uff0c\u4e14\u72b6\u6001\u5df2\u7ecf\u4e3a <code>running</code> <pre><code>kubectl get no  -o wide\n</code></pre></p> </li> <li> <p>\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee\u5e94\u7528URL <pre><code>kubectl get ing -n ${NAMESPACE} -o=custom-columns=\"URL\":.status.loadBalancer.ingress[*].hostname\n</code></pre></p> </li> </ul>","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#other-fargate-labs","title":"other fargate labs","text":"<ul> <li>immersion workshop</li> <li>eksworkshop</li> </ul>","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/compute/eks-fargate-lab/#monitoring-pods-on-fargate","title":"monitoring pods on fargate","text":"","tags":["aws/container/eks","aws/container/fargate"]},{"location":"EKS/solutions/gitops/argocd-lab/","title":"argocd-lab","text":"","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#install","title":"install","text":"<ul> <li>https://github.com/argoproj/argo-cd</li> </ul> <pre><code>kubectl create namespace argocd\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.4.8/manifests/install.yaml\n\n# install argocd binary\nsudo curl --silent --location -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.4.8/argocd-linux-amd64\nsudo chmod +x /usr/local/bin/argocd\n\n# connect to argo server\nkubectl patch svc argocd-server -n argocd -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'\nexport ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`\necho $ARGOCD_SERVER\nexport ARGO_PWD=`kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d`\nargocd login $ARGOCD_SERVER --username admin --password $ARGO_PWD --insecure\n</code></pre>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#add-helm","title":"add helm","text":"<pre><code>argocd repo add https://aws.github.io/eks-charts --type helm --name aws-eks-charts --project default\n</code></pre>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#install-aws-lb-controller","title":"install aws-lb-controller","text":"","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#with-argocd-ui","title":"with argocd UI","text":"<pre><code>cluster_name=ekscluster1\nexport AWS_DEFAULT_REGION=us-east-2\n\ncurl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json\npolicy_name=AWSLoadBalancerControllerIAMPolicy-$RANDOM\npolicy_arn=$(aws iam create-policy \\\n  --policy-name ${policy_name}  \\\n  --policy-document file://iam_policy.json \\\n  --query 'Policy.Arn' \\\n  --output text)\n\neksctl create iamserviceaccount \\\n  --cluster=${cluster_name} \\\n  --namespace=kube-system \\\n  --name=aws-load-balancer-controller \\\n  --role-name=${policy_name} \\\n  --attach-policy-arn=${policy_arn} \\\n  --override-existing-serviceaccounts \\\n  --approve\n</code></pre> <p>\u6700\u9ad8\u53ef\u9009\u7248\u672c chart version 1.4.3 </p>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#with-argocd-cli","title":"with argocd cli","text":"<pre><code>cat &gt;aws-lb-controller.yaml &lt;&lt;-EOF\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: aws-lb-controller\nspec:\n  destination:\n    name: ''\n    namespace: kube-system\n    server: 'https://kubernetes.default.svc'\n  source:\n    path: ''\n    repoURL: 'https://aws.github.io/eks-charts'\n    targetRevision: 1.4.3\n    chart: aws-load-balancer-controller\n    helm:\n      parameters:\n\n        - name: clusterName\n          value: ekscluster1\n        - name: serviceAccount.create\n          value: 'false'\n        - name: serviceAccount.name\n          value: aws-load-balancer-controller\n  project: default\n  syncPolicy:\n    automated:\n      prune: false\n      selfHeal: false\nEOF\n\nkubectl apply -f aws-lb-controller.yaml -n argocd\n</code></pre>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#install-echoserver-with-argocd","title":"install echoserver with argocd","text":"<pre><code># argocd app create echoserver --repo https://github.com/kubernetes-sigs/aws-load-balancer-controller.git --path docs/examples/echoservice --dest-server https://kubernetes.default.svc --dest-namespace echoserver\n\nargocd app create echoserver --repo https://github.com/panlm/aws-eks-example.git --path echoserver --dest-server https://kubernetes.default.svc --dest-namespace echoserver\nargocd app sync apps\n</code></pre> <p>clone to your github </p> <ul> <li>modify ingress file to update hostname</li> <li>modify deployment file to increase replicas</li> </ul>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#install-2048-game","title":"install 2048 game","text":"<pre><code>argocd app create game2048 --repo https://github.com/panlm/aws-eks-example.git --path 2048 --dest-server https://kubernetes.default.svc --dest-namespace game2048\nargocd app sync apps\n</code></pre>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#install-prometheus-with-customized-values","title":"install prometheus with customized values","text":"<ul> <li> <p>argocd-sample-prometheus-operator</p> </li> <li> <p>need customized values put on github or define in argocd Application yaml</p> </li> </ul>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/argocd-lab/#refer","title":"refer","text":"<ul> <li>argocd-cmd</li> </ul>","tags":["gitops/argo"]},{"location":"EKS/solutions/gitops/flux-lab/","title":"flux-lab","text":"","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#bootstrap-v2","title":"bootstrap v2","text":"<pre><code>export GITHUB_TOKEN=ghp_xxxxxx\nflux check --pre\nflux bootstrap github \\\n    --owner=panlm \\\n    --repository=aws-eks-config \\\n    --branch=main \\\n    --personal \\\n    --path=clusters/ekscluster2\n</code></pre>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#another-sample","title":"another sample","text":"<pre><code>flux bootstrap github \\\n    --owner=panlm \\\n    --repository=eks-cluster-upgrades-workshop \\\n    --branch=main \\\n    --personal \\\n    --path=gitops/clusters/cluster-demo\n</code></pre> <pre><code>      owner: \"panlm\"\n      repository: \"eks-cluster-upgrades-workshop\"\n      private: \"true\"\n      branch: \"main\"\n      namespace: \"flux-system\"\n      path: \"gitops/clusters/cluster-demo\"\n</code></pre>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#lab","title":"lab","text":"<pre><code>flux get all\n\n# before delete ns\nflux uninstall --dry-run -n flux-system\n</code></pre>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#generate-yaml","title":"generate yaml","text":"<p><code>cat value.yaml</code> <pre><code>clusterName: ekscluster3\nserviceAccount:\n  create: false\n  name: aws-load-balancer-controller\n</code></pre></p> <pre><code>flux create source helm ww-gitops \\\n  --url=https://aws.github.io/eks-charts \\\n  --export &gt; a.yaml\n\nflux create helmrelease aws-load-balancer-controller \\\n  --source=HelmRepository/ww-gitops \\\n  --chart=aws-load-balancer-controller \\\n  --chart-version 1.4.4 --values value.yaml --export &gt; c.yaml\n</code></pre>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#helm-v1-alternative","title":"helm v1 (alternative)","text":"<pre><code>CLUSTER_NAME=ekscluster1\nkubectl create ns flux\nhelm repo add fluxcd https://charts.fluxcd.io \n\nhelm upgrade -i flux fluxcd/flux \\\n--set git.url=git@github.com:panlm/aws-eks-config \\\n--set git.branch=main \\\n--set git.path=clusters/${CLUSTER_NAME} \\\n--namespace flux\n\nhelm upgrade -i helm-operator fluxcd/helm-operator \\\n--set helm.versions=v3 \\\n--set git.ssh.secretName=flux-git-deploy \\\n--set git.branch=main \\\n--namespace flux\n\nkubectl -n flux logs deployment/flux | grep identity.pub | cut -d '\"' -f2\n# put public key to repo's `Deploy keys`\n</code></pre>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#dependencies","title":"dependencies","text":"","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#others","title":"others","text":"<p>https://www.eksworkshop.com/intermediate/260_weave_flux/</p> <p>got error: <pre><code>[Container] 2022/04/06 07:19:56 Running command curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -  \n\n/codebuild/output/tmp/script.sh: 4: /codebuild/output/tmp/script.sh: sudo: not found\n</code></pre></p> <p>try to find <code>build details</code> in <code>image-codepipeline</code> <code>build project</code> modify <code>buildspec</code> remove <code>sudo</code> before <code>apt-key add</code></p>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/gitops/flux-lab/#workshop","title":"workshop","text":"<ul> <li>Accelerate software development lifecycles with GitOps</li> </ul>","tags":["aws/container/eks","gitops/weaveworks/flux"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/","title":"\u7a81\u7834VPC\u5730\u5740\u9650\u5236\uff1aEKS\u6df7\u5408\u8282\u70b9\u67b6\u6784\u5b9e\u6218\u6307\u5357","text":"<p>\u201c\u5728\u8f6f\u4ef6\u67b6\u6784\u4e2d\uff0c\u9650\u5236\u5f80\u5f80\u50ac\u751f\u521b\u65b0\u3002\u201d </p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#vpc","title":"\u5f15\u8a00\uff1a\u5f53VPC\u5730\u5740\u8017\u5c3d\u9047\u4e0a\u5bb9\u5668\u5316\u6d6a\u6f6e","text":"<p>\u60f3\u8c61\u4e00\u4e0b\u8fd9\u4e2a\u573a\u666f\uff1a\u4f60\u6b63\u5728\u4e3a\u4e00\u4e2a\u5927\u578b\u96f6\u552e\u4f01\u4e1a\u4e0a\u7ebf\u5bb9\u5668\u5316\u89e3\u51b3\u65b9\u6848\u3002\u4e00\u5207\u770b\u8d77\u6765\u90fd\u5f88\u5b8c\u7f8e\uff0c\u76f4\u5230\u4f60\u53d1\u73b0\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898 - VPC\u5730\u5740\u7a7a\u95f4\u4e0d\u8db3\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5047\u8bbe\u7684\u60c5\u51b5\uff0c\u800c\u662f\u6211\u4eec\u5728\u9999\u6e2f\u533a\u57df\u5b9e\u65bdEKS\u9879\u76ee\u65f6\u771f\u5b9e\u9047\u5230\u7684\u6311\u6218\u3002</p> <p>\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u5177\u4f53\u7684\u6848\u4f8b\u5f00\u59cb\uff1a\u5ba2\u6237\u8ba1\u5212\u5c06\u5176\u6838\u5fc3\u4e1a\u52a1\u5e94\u7528\u8fc1\u79fb\u5230\u5bb9\u5668\u5e73\u53f0\u3002\u8fd9\u4e2a\u5e94\u7528\u9700\u8981\u90e8\u7f72\u5728\u5df2\u7ecf\u89c4\u5212\u597d\u7684VPC\u4e2d\uff0c\u4f46\u73b0\u6709VPC\u7684\u5730\u5740\u7a7a\u95f4\u5341\u5206\u6709\u9650\u3002\u5982\u679c\u91c7\u7528\u6807\u51c6\u7684EKS\u914d\u5408AWS VPC CNI\u7684\u90e8\u7f72\u65b9\u6848\uff0c\u53ef\u7528\u7684IP\u5730\u5740\u5c06\u5f88\u5feb\u8017\u5c3d\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_1","title":"\u4e3a\u4ec0\u4e48\u8fd9\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\uff1f","text":"<p>\u4f60\u53ef\u80fd\u4f1a\u60f3\uff1a\u201d\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u6269\u5c55VPC\u7684\u5730\u5740\u7a7a\u95f4\u5462\uff1f\u201d\u786e\u5b9e\uff0cAWS VPC\u652f\u6301\u9644\u52a0\u6b21\u8981CIDR\uff0c\u8fd9\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f46\u73b0\u5b9e\u60c5\u51b5\u5f80\u5f80\u6bd4\u6211\u4eec\u60f3\u8c61\u7684\u66f4\u590d\u6742\uff1a</p> <ol> <li> <p>\u6280\u672f\u9650\u5236\uff1aAWS\u5bf9VPC CIDR\u7684\u6269\u5c55\u6709\u4e25\u683c\u7684\u9650\u5236\u3002\u4f8b\u5982\uff0c\u6839\u636eAWS\u5b98\u65b9\u6587\u6863\uff0c\u5f53VPC\u7684\u4e3b\u8981CIDR\u572810.0.0.0/8\u8303\u56f4\u5185\u65f6\uff0c\u53ea\u80fd\u9644\u52a0100.64.0.0/10\u4f5c\u4e3a\u6b21\u8981CIDR\uff0c\u65e0\u6cd5\u9644\u52a0\u5176\u4ed6\u7f51\u6bb5\uff0c\u4f8b\u5982198.19.0.0/16\u4f5c\u4e3a\u6b21\u8981CIDR\u3002</p> </li> <li> <p>\u4f01\u4e1a\u7f51\u7edc\u89c4\u5212\uff1a\u66f4\u5173\u952e\u7684\u662f\uff0c\u4f01\u4e1a\u5df2\u7ecf\u6709\u4e25\u683c\u7684\u5168\u7403IP\u5730\u5740\u5206\u914d\u7b56\u7565\uff1a    - 10.0.0.0/8\u7f51\u6bb5\uff1a\u9884\u7559\u7ed9AWS\u4e91\u73af\u5883\u548c\u6570\u636e\u4e2d\u5fc3    - 100.64.0.0/10\u7f51\u6bb5\uff1a\u4e13\u95e8\u7528\u4e8e\u5e97\u94fa\u7f51\u7edc</p> </li> </ol> <p>\u8fd9\u79cd\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u7f51\u7edc\u89c4\u5212\u8ba9\u53ef\u7528\u7684\u5730\u5740\u7a7a\u95f4\u53d8\u5f97\u6781\u5176\u73cd\u8d35\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#overlay","title":"\u521d\u6b21\u5c1d\u8bd5\uff1aOverlay\u7f51\u7edc\u7684\u9677\u9631","text":"<p>\u4e8e\u662f\u6211\u4eec\u9996\u5148\u60f3\u5230\u4e86\u4f7f\u7528overlay\u7f51\u7edc\u65b9\u6848\u3002\u8fd9\u770b\u8d77\u6765\u662f\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f\uff1a\u4f7f\u7528Calico\u6216Cilium\u8fd9\u6837\u7684CNI\u63d2\u4ef6\u6765\u521b\u5efaOverlay\u7f51\u7edc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u6709\u9650\u7684VPC\u5730\u5740\u7a7a\u95f4\u4e0a\u8fd0\u884c\u5927\u91cfPod\u3002\u7136\u800c\uff0c\u5b9e\u65bd\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9047\u5230\u4e86\u53e6\u4e00\u4e2a\u6311\u6218\uff1aPod\u7684overlay\u7f51\u7edc\u5730\u5740\u5bf9EKS\u63a7\u5236\u5e73\u9762\u5b8c\u5168\u4e0d\u53ef\u89c1\u3002\u8fd9\u5bfc\u81f4\u4e86api-server\u548cpod\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u95ee\u9898\u3002\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u67d0\u4e9b\u5173\u952ePod\uff08\u5982\u51c6\u5165\u63a7\u5236\u5668webhook\uff09\u4e2d\u8bbe\u7f6e<code>hostNetwork: true</code>\u6765\u4e34\u65f6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8fd9\u79cd\u65b9\u6848\u5e76\u4e0d\u5b8c\u7f8e\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_2","title":"\u8bbe\u8ba1\u65b0\u65b9\u6848\uff1a\u5e73\u8861\u591a\u65b9\u9700\u6c42","text":"<p>\u9762\u5bf9\u8fd9\u4e9b\u6311\u6218\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u601d\u8003\u6574\u4e2a\u67b6\u6784\u8bbe\u8ba1\u3002\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u591a\u4e2a\u5173\u952e\u9700\u6c42\uff1a</p> <ol> <li> <p>\u4f01\u4e1a\u5185\u90e8\u8bbf\u95ee\u80fd\u529b\uff1a\u6240\u6709EKS VPC\u4e2d\u7684\u5e94\u7528\u7ec4\u4ef6\uff08\u5305\u62ec\u6570\u636e\u5e93\uff09\u5fc5\u987b\u652f\u6301\u4f01\u4e1a\u5185\u90e8\u8bbf\u95ee\uff0c\u6216\u8005\u88ab\u4f01\u4e1a\u5185\u90e8\u5176\u4ed6\u5e94\u7528\u8bbf\u95ee    - \u9700\u8981\u652f\u6301\u5821\u5792\u673a\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u8fdb\u884c\u6570\u636e\u5e93\u5ba1\u8ba1    - \u5141\u8bb8\u5e94\u7528\u901a\u8fc7ingress\u66b4\u9732\u670d\u52a1\u7ed9\u5176\u4ed6\u4e1a\u52a1\u4f7f\u7528</p> </li> <li> <p>\u7f51\u7edc\u8fde\u901a\u6027    - Pod\u5fc5\u987b\u80fd\u8bbf\u95ee\u4f01\u4e1a\u7684\u4e24\u4e2a\u6838\u5fc3\u7f51\u6bb5\uff1a10.0.0.0/8\u548c100.64.0.0/10    - \u4fdd\u6301\u4f01\u4e1a\u7f51\u7edc\u7684\u7a33\u5b9a\u6027\uff0c\u4e0d\u5f15\u5165\u989d\u5916\u7684CIDR\u901a\u544a</p> </li> <li> <p>\u6210\u672c\u6548\u76ca    - \u5728\u6ee1\u8db3\u6280\u672f\u8981\u6c42\u7684\u540c\u65f6\uff0c\u9700\u8981\u6743\u8861\u65b9\u6848\u7684\u603b\u4f53\u6210\u672c    - \u8003\u8651\u957f\u671f\u7ef4\u62a4\u548c\u6269\u5c55\u7684\u4fbf\u5229\u6027</p> </li> </ol>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_3","title":"\u521b\u65b0\u89e3\u51b3\u65b9\u6848\uff1a\u7a81\u7834\u4f20\u7edf\u67b6\u6784\u7684\u9650\u5236","text":"<p>\u7ecf\u8fc7\u6df1\u5165\u601d\u8003\u548c\u53cd\u590d\u9a8c\u8bc1\uff0c\u6211\u4eec\u53d1\u73b0\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u8df3\u51fa\u4f20\u7edf\u601d\u7ef4\u7684\u675f\u7f1a\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e24\u79cd\u521b\u65b0\u65b9\u6848\uff0c\u6bcf\u79cd\u65b9\u6848\u90fd\u4ece\u4e0d\u540c\u89d2\u5ea6\u5de7\u5999\u5730\u89e3\u51b3\u4e86IP\u5730\u5740\u7a7a\u95f4\u4e0d\u8db3\u7684\u95ee\u9898\u3002\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u770b\u8fd9\u4e24\u79cd\u65b9\u6848\u7684\u7cbe\u5999\u4e4b\u5904\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#albvpc","title":"\u65b9\u6848\u4e00\uff1a\u5de7\u7528ALB\u8de8VPC\u90e8\u7f72","text":"<p>\u7b2c\u4e00\u4e2a\u65b9\u6848\u7684\u7075\u611f\u6765\u81ea\u4e8eAWS Load Balancer Controller\u7684\u4e00\u4e2a\u9c9c\u4e3a\u4eba\u77e5\u7684\u7279\u6027 - \u8de8VPC\u90e8\u7f72\u6a21\u5f0f\u3002\u8fd9\u4e2a\u65b9\u6848\u7684\u601d\u8def\u975e\u5e38\u5de7\u5999\uff1a\u6211\u4eec\u4e0d\u518d\u6267\u7740\u4e8e\u5728\u73b0\u6709VPC\u4e2d\u6324\u51fa\u66f4\u591a\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u662f\u53e6\u8f9f\u8e4a\u5f84\uff0c\u5728\u4e00\u4e2a\u5168\u65b0\u7684VPC\u4e2d\u90e8\u7f72EKS\u96c6\u7fa4\u548c\u5e94\u7528POD\u3002\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u65b9\u6848\u7684\u5177\u4f53\u8bbe\u8ba1\uff1a</p> <p></p> <p>\u66f4\u591a\u6280\u672f\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003AWS\u5b98\u65b9\u535a\u5ba2\uff1aExpose Amazon EKS pods through cross-account load balancer</p> <p>\u5728\u8fd9\u4e2a\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u65b0\u5efa\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684VPC\uff08\u56fe\u4e2d\u663e\u793a\u4e3a172.16\uff09\u5e76\u901a\u8fc7VPC Peering\u4e0e\u539f\u6709VPC\uff08\u56fe\u4e2d\u663e\u793a\u4e3a10.255\uff09\u5b9e\u73b0\u4e92\u8054\uff0c\u800cEKS\u96c6\u7fa4\u5219\u90e8\u7f72\u5728\u65b0\u5efa\u7684VPC\u4e2d\uff08\u4f7f\u7528172.16.0.0/16\u4f5c\u4e3aCIDR\uff09\u3002\u8fd9\u79cd\u5206\u79bb\u5f0f\u7684\u67b6\u6784\u8bbe\u8ba1\u5e26\u6765\u4e86\u51e0\u4e2a\u5173\u952e\u4f18\u52bf\uff1a</p> <p>\u9996\u5148\uff0c\u901a\u8fc7\u5c06EKS\u96c6\u7fa4\u90e8\u7f72\u5728\u72ec\u7acb\u7684VPC\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u5bb9\u5668\u5de5\u4f5c\u8d1f\u8f7d\u5206\u914d\u5145\u8db3\u7684IP\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u73b0\u6709\u7684\u4e1a\u52a1\u5e94\u7528\u3002\u5176\u6b21\uff0c\u5728\u90e8\u7f72AWS Load Balancer Controller\u65f6\uff0c\u6211\u4eec\u5c06\u5176\u914d\u7f6e\u4e3a\u4f7f\u7528\u539f\u6709\u7684VPC\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u8d1f\u8f7d\u5747\u8861\u5668\u80fd\u591f\u6b63\u786e\u5904\u7406\u8fdb\u51fa\u6d41\u91cf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5165\u6808\u6d41\u91cf\u5c06\u901a\u8fc7\u90e8\u7f72\u5728\u4e1a\u52a1\u5e94\u7528A\u7684VPC\u4e2d\u7684\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u7ecf\u7531VPC Peering\u8bbf\u95eeEKS VPC\u4e2d\u7684\u5e94\u7528Pod\u3002</p> <p>\u4e3a\u4e86\u5904\u7406\u51fa\u6808\u6d41\u91cf\uff0c\u6211\u4eec\u5728\u539f\u6709VPC\u4e2d\u90e8\u7f72\u4e86\u4e00\u4e2a\u5185\u90e8NAT\u8bbe\u5907\u3002\u8fd9\u4e2a\u8bbe\u5907\u914d\u5907\u4e86\u4e24\u4e2a\u5f39\u6027\u7f51\u7edc\u63a5\u53e3\uff08ENI\uff09\uff0c\u5206\u522b\u8fde\u63a5\u5230\u4e24\u4e2aVPC\u4e2d\uff0c\u7528\u4e8e\u5904\u7406\u4ece\u5e94\u7528Pod\u53d1\u51fa\u7684\u6d41\u91cf\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u5e94\u7528Pod\u80fd\u591f\u6b63\u5e38\u8bbf\u95ee\u5916\u90e8\u8d44\u6e90\uff0c\u540c\u65f6\u4fdd\u6301\u4e86\u7f51\u7edc\u6d41\u91cf\u7684\u53ef\u63a7\u6027\u548c\u5b89\u5168\u6027\u3002(feature blog)</p> <p>\u53e6\u5916\uff0c\u6211\u4eec\u5c06\u4e1a\u52a1\u5e94\u7528\u540e\u53f0\u6240\u9700\u8981\u7684\u6570\u636e\u5e93\u7b49\u7ec4\u4ef6\u653e\u5230\u539f\u6709VPC\uff0810.255\uff09\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4f01\u4e1a\u5185\u90e8\u5176\u4ed6\u5e94\u7528\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f8b\u5982\u5821\u5792\u673a\u7b49\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_4","title":"\u65b9\u6848\u4e8c\uff1a\u6df7\u5408\u8282\u70b9\u67b6\u6784\u7684\u521b\u65b0\u4e4b\u9053","text":"<p>\u7b2c\u4e8c\u4e2a\u65b9\u6848\u5c55\u73b0\u4e86AWS\u5728\u5bb9\u5668\u7f16\u6392\u9886\u57df\u7684\u53c8\u4e00\u6b21\u521b\u65b0\u3002\u5b83\u5de7\u5999\u5730\u5229\u7528\u4e86Amazon EKS\u57282024\u5e74re:Invent\u5927\u4f1a\u4e0a\u53d1\u5e03\u7684\u6df7\u5408\u8282\u70b9\uff08Hybrid Node\uff09\u529f\u80fd\uff0c\u4e3a\u6211\u4eec\u5e26\u6765\u4e86\u4e00\u4e2a\u53d8\u901a\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u65b9\u6848\u7684\u67b6\u6784\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u65b9\u6848\u7684\u6838\u5fc3\u5728\u4e8e\u5176\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684VPC\uff08\u56fe\u4e2d\u663e\u793a\u4e3a172.16\uff09\uff0c\u5e76\u4e14\u4f7f\u7528TGW\u4e0e\u539f\u6709 VPC\uff08\u56fe\u4e2d\u663e\u793a\u4e3a10.255\uff09\u4e92\u8054\u3002\u4f7f\u7528 TGW \u4ee3\u66ff VPC Peering \u7684\u4e3b\u8981\u539f\u56e0\u5728\u4e0e\u6211\u4eec\u9700\u8981\u7cbe\u7ec6\u5316\u63a7\u5236\u4e0d\u53ef\u89c1\u7684Overlay\u7f51\u6bb5\uff08RemotePODNetwork\uff09\u8def\u7531\u3002</p> <p>\u5c06\u9700\u8981\u88ab\u4f01\u4e1a\u5185\u90e8\u5176\u4ed6\u5e94\u7528\u76f4\u63a5\u8bbf\u95ee\u7684\u7ec4\u4ef6\uff0c\u5305\u62ec\u6570\u636e\u5e93\u3001\u4e0d\u9002\u5408\u8fd0\u884c\u5728 Overlay \u73af\u5883\u4e2d\u7684\u7279\u5b9a\u5e94\u7528\u7b49\u90e8\u7f72\u5728\u539f\u6709 VPC\u4e2d\u3002\u5c06\u53ef\u4ee5\u8fd0\u884c\u5728 Overlay \u7f51\u7edc\u4e0a\u7684\u5e94\u7528\u90e8\u7f72\u5728\u72ec\u7acb\u7684 vpc \u4e2d\u3002\u901a\u8fc7AWS Load Balancer Controller\u66b4\u9732\u5230\u539f\u6709 vpc \u4e2d\u3002</p> <p>\u540c\u6837\u4e3a\u4e86\u5904\u7406\u51fa\u6808\u6d41\u91cf\uff0c\u6211\u4eec\u5728\u539f\u6709VPC\u4e2d\u90e8\u7f72\u4e86\u4e00\u4e2a\u5185\u90e8NAT\u8bbe\u5907\u3002\u8fd9\u4e2a\u8bbe\u5907\u914d\u5907\u4e86\u4e24\u4e2a\u5f39\u6027\u7f51\u7edc\u63a5\u53e3\uff08ENI\uff09\uff0c\u5206\u522b\u8fde\u63a5\u5230\u4e24\u4e2aVPC\u4e2d\uff0c\u7528\u4e8e\u5904\u7406\u4ece\u5e94\u7528Pod\u53d1\u51fa\u7684\u6d41\u91cf\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u5e94\u7528Pod\u80fd\u591f\u6b63\u5e38\u8bbf\u95ee\u5916\u90e8\u8d44\u6e90\uff0c\u540c\u65f6\u4fdd\u6301\u4e86\u7f51\u7edc\u6d41\u91cf\u7684\u53ef\u63a7\u6027\u548c\u5b89\u5168\u6027\u3002</p> <p>\u4f7f\u7528\u8be5\u65b9\u6848\u9700\u8981\u989d\u5916\u8003\u8651\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>\u4eceAWS\u5b98\u65b9\u6587\u6863\u6765\u770b\uff1a\u4e0d\u652f\u6301\u5728\u4e91\u57fa\u7840\u8bbe\u65bd\uff08\u5305\u62ec AWS \u533a\u57df\u3001AWS Local Zones\u3001AWS Outposts \u6216\u5176\u4ed6\u4e91\uff09\u4e2d\u8fd0\u884c Amazon EKS \u6df7\u5408\u8282\u70b9\u529f\u80fd\u3002\u5982\u679c\u60a8\u5728 Amazon EC2 \u5b9e\u4f8b\u4e0a\u8fd0\u884c\u6df7\u5408\u8282\u70b9\uff0c\u5219\u9700\u8981\u652f\u4ed8\u6df7\u5408\u8282\u70b9\u529f\u80fd\u4f7f\u7528\u8d39\u3002</li> <li>\u4e0d\u80fd\u4f7f\u7528100.64\u7f51\u6bb5\u4f5c\u4e3a\u8fdc\u7a0bPOD\u7f51\u7edc\u7684 CIDR</li> <li>\u4e0d\u80fd\u4f7f\u7528\u4e0e\u73b0\u6709 VPC \u91cd\u53e0\u7684 CIDR \u4f5c\u4e3a\u8fdc\u7a0b\u8282\u70b9\u7f51\u7edc\u7684 CIDR</li> <li>\u989d\u5916\u7684\u7f51\u7edc\u7ec4\u4ef6 TGW \u7684\u6210\u672c</li> </ul> <p>\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e2a\u53d8\u901a\u65b9\u6848\u7684\u5177\u4f53\u5b9e\u65bd\u6b65\u9aa4\uff0c\u5305\u62ec\u73af\u5883\u51c6\u5907\u3001\u7f51\u7edc\u914d\u7f6e\u3001\u8282\u70b9\u90e8\u7f72\u4ee5\u53ca\u76f8\u5173\u7ec4\u4ef6\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_5","title":"\u5b9e\u65bd\u90e8\u7f72\u6307\u5357\uff1a\u4ece\u7406\u8bba\u5230\u5b9e\u8df5","text":"<p>\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5e26\u60a8\u4e00\u6b65\u6b65\u5b9e\u73b0EKS\u6df7\u5408\u8282\u70b9\u67b6\u6784\u3002\u4e3a\u4e86\u786e\u4fdd\u90e8\u7f72\u8fc7\u7a0b\u6e05\u6670\u53ef\u63a7\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u6d4b\u8bd5\u73af\u5883\u4f5c\u4e3a\u5b9e\u8df5\u57fa\u7840\u3002\u8fd9\u4e2a\u73af\u5883\u7531\u4e24\u4e2a\u6838\u5fc3VPC\u7ec4\u6210\uff1a</p> <ul> <li>\u539f\u6709 VPC\uff08CIDR: 10.10.0.0/16\uff09\uff1a\u7528\u4e8e\u90e8\u7f72EKS\u63a7\u5236\u5e73\u9762\u548c\u7ba1\u7406\u7ec4\u4ef6</li> <li>\u65b0\u5efa\u72ec\u7acb VPC\uff08CIDR: 10.20.0.0/16\uff09\uff1a\u7528\u4e8e\u90e8\u7f72\u6df7\u5408\u8282\u70b9\u548c\u4e1a\u52a1\u5e94\u7528</li> </ul> <p>\u8fd9\u4e2a\u914d\u7f6e\u5b8c\u7f8e\u5bf9\u5e94\u4e86\u6211\u4eec\u524d\u9762\u8ba8\u8bba\u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u5728\u5b9e\u8df5\u4e2d\u9a8c\u8bc1\u6bcf\u4e2a\u6280\u672f\u51b3\u7b56\u7684\u6709\u6548\u6027\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6309\u7167\u660e\u786e\u7684\u6b65\u9aa4\uff0c\u9010\u4e00\u5b8c\u6210\u4ece\u57fa\u7840\u8bbe\u65bd\u642d\u5efa\u5230\u5e94\u7528\u90e8\u7f72\u7684\u5168\u8fc7\u7a0b\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_6","title":"\u7f51\u7edc\u67b6\u6784\u8bbe\u8ba1\uff1a\u6784\u5efa\u7a33\u56fa\u7684\u57fa\u7840","text":"<p>\u5728\u5f00\u59cb\u5177\u4f53\u90e8\u7f72\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6df1\u5165\u4e86\u89e3\u6574\u4e2a\u7f51\u7edc\u67b6\u6784\u7684\u8bbe\u8ba1\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u6211\u4eec\u7684\u5b8c\u6574\u7f51\u7edc\u67b6\u6784\u8bbe\u8ba1\uff0c\u5305\u62ecVPC\u914d\u7f6e\u3001\u5b50\u7f51\u5212\u5206\u3001\u8def\u7531\u8bbe\u7f6e\u4ee5\u53ca\u5404\u7ec4\u4ef6\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\uff1a</p> <p></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_7","title":"\u57fa\u7840\u8bbe\u65bd\u90e8\u7f72\uff1a\u5206\u6b65\u5b9e\u65bd\u6307\u5357","text":"<p>\u5728\u5f00\u59cb\u90e8\u7f72\u6df7\u5408\u8282\u70b9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b8c\u6210\u57fa\u7840\u8bbe\u65bd\u7684\u90e8\u7f72\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5305\u62ec\u521b\u5efaEKS\u96c6\u7fa4\u3001\u914d\u7f6e\u7f51\u7edc\u8d44\u6e90\u4ee5\u53ca\u51c6\u5907\u6df7\u5408\u8282\u70b9\u5b9e\u4f8b\u3002\u8ba9\u6211\u4eec\u9010\u4e00\u6df1\u5165\u4e86\u89e3\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#eks","title":"\u7b2c\u4e00\u9636\u6bb5\uff1a\u521b\u5efaEKS\u96c6\u7fa4","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528eksdemo\u5de5\u5177\u521b\u5efa\u6807\u51c6\u7684EKS\u96c6\u7fa4\u3002\u8fd9\u4e2a\u5de5\u5177\u4e0d\u4ec5\u7b80\u5316\u4e86\u96c6\u7fa4\u521b\u5efa\u8fc7\u7a0b\uff0c\u8fd8\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2aCIDR\u4e3a10.10.0.0/16\u7684VPC\u3002\u8be6\u7ec6\u7684\u521b\u5efa\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003\uff1agit/git-mkdocs/CLI/linux/eksdemo</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_8","title":"\u7b2c\u4e8c\u9636\u6bb5\uff1a\u914d\u7f6e\u7f51\u7edc\u73af\u5883","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u548c\u914d\u7f6e\u4e1a\u52a1\u5e94\u7528\u7684\u7f51\u7edc\u73af\u5883\u3002\u8fd9\u5305\u62ec\u521b\u5efa\u4e13\u7528VPC\u548c\u8bbe\u7f6e\u7f51\u7edc\u4e92\u8054\u3002</p> <ol> <li> <p>\u521b\u5efaIDC VPC    \u4f7f\u7528Amazon Q Developer CLI\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u5b8c\u5584\u7684VPC\uff1a <pre><code>\u5728us-west-2\u533a\u57df\uff0c\u521b\u5efa vpc \u540d\u4e3a idc\uff0cCIDR \u4f7f\u7528 10.20.0.0/16\uff0cvpc \u9700\u89813\u4e2a\u516c\u6709\u5b50\u7f51\uff0c3\u4e2a\u79c1\u6709\u5b50\u7f51\uff0c3\u4e2a tgw \u5b50\u7f51\uff0c\u516c\u6709\u5b50\u7f51\u5171\u4eab1\u4e2a\u8def\u7531\u8868\u5e76\u4e14\u9ed8\u8ba4\u8def\u7531\u6307\u5411 igw\uff0c\u79c1\u6709\u5b50\u7f51\u5171\u4eab1\u4e2a\u8def\u7531\u8868\u5e76\u4e14\u9ed8\u8ba4\u8def\u7531\u6307\u5411 nat\uff0ctgw \u5b50\u7f51\u5171\u4eab1\u4e2a\u8def\u7531\u8868\u6ca1\u6709\u9ed8\u8ba4\u8def\u7531\n</code></pre></p> </li> <li> <p>\u914d\u7f6e\u7f51\u7edc\u4e92\u8054    \u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a\u5efa\u7acbVPC\u4e4b\u95f4\u7684\u901a\u4fe1\u6865\u6881\u3002\u6211\u4eec\u9009\u62e9\u4f7f\u7528Transit Gateway\u4f5c\u4e3a\u6838\u5fc3\u7f51\u7edc\u67a2\u7ebd\uff0c\u901a\u8fc7\u5b83\u6765\u5b9e\u73b0VPC\u95f4\u7684\u9ad8\u6548\u4e92\u8054\u3002\u4f7f\u7528Amazon Q Developer CLI\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u952e\u5b8c\u6210\u8fd9\u4e2a\u914d\u7f6e\uff1a</p> </li> </ol> <pre><code>\u5728 us-west-2 \u533a\u57df\uff0c\u73b0\u5728\u628a ekscluster1 vpc \u548c idc vpc \u7528 tgw \u505a\u4e92\u8054\uff0cidc vpc \u91cc\u5df2\u7ecf\u6709\u4e13\u7528\u7684 tgw \u5b50\u7f51\uff0c\u4f60\u9700\u8981\u5728 ekscluster1 vpc \u91cc\u521b\u5efa\u4e13\u7528 tgw \u5b50\u7f51\uff0c\u81ea\u52a8\u8bbe\u7f6e\u6240\u6709\u8def\u7531\u8868\u4f7f\u5f97\u7f51\u7edc\u53ef\u4ee5\u4e92\u8054\u4e92\u901a\n</code></pre> <ol> <li>\u90e8\u7f72\u6df7\u5408\u8282\u70b9\u5b9e\u4f8b    \u5728\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u5c31\u7eea\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728IDC VPC\u4e2d\u90e8\u7f72\u5c06\u8981\u4f5c\u4e3a\u6df7\u5408\u8282\u70b9\u7684EC2\u5b9e\u4f8b\u3002\u8fd9\u4e9b\u5b9e\u4f8b\u9700\u8981\u6ee1\u8db3\u7279\u5b9a\u7684\u8981\u6c42\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u80fd\u591f\u987a\u5229\u52a0\u5165EKS\u96c6\u7fa4\uff1a</li> </ol> <pre><code>\u5728 us-west-2 \u533a\u57df idc vpc \u91cc\uff0c\u6bcf\u4e2a private \u5b50\u7f51\u4e2d\u521b\u5efa 1 \u4e2a ec2\uff0c\u4f7f\u7528 ubuntu22 AMI\uff0c\u673a\u578b\u4e3a m5.large\u3002\u7136\u540e\u5728 idc vpc \u91cc\u521b\u5efa\u4e00\u4e2a EC2 Instance Connect Endpoint\n</code></pre> <ol> <li>\u914d\u7f6e\u5b9e\u4f8b\u7f51\u7edc    \u4e3a\u4e86\u786e\u4fdd\u6df7\u5408\u8282\u70b9\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5bf9EC2\u5b9e\u4f8b\u8fdb\u884c\u4e00\u4e9b\u7279\u6b8a\u7684\u7f51\u7edc\u914d\u7f6e\uff1a</li> </ol> <ul> <li> <p>\u5b89\u5168\u7ec4\u8bbe\u7f6e</p> <ul> <li>\u914d\u7f6e\u5165\u7ad9\u89c4\u5219\uff1a\u5141\u8bb8\u6765\u81ea10.0.0.0/8\u7f51\u6bb5\u7684\u6240\u6709\u6d41\u91cf</li> <li>\u76ee\u7684\uff1a\u786e\u4fdd\u96c6\u7fa4\u5185\u90e8\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u7545\u901a</li> </ul> </li> <li> <p>\u7f51\u7edc\u63a5\u53e3\u4f18\u5316</p> <ul> <li>\u5173\u95ed\u6e90/\u76ee\u7684\u5730\u5740\u68c0\u67e5</li> <li>\u539f\u56e0\uff1a\u8fd9\u662foverlay\u7f51\u7edc\u6b63\u5e38\u5de5\u4f5c\u7684\u5fc5\u8981\u6761\u4ef6</li> </ul> </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#eks_1","title":"\u7b2c\u4e09\u9636\u6bb5\uff1a\u914d\u7f6eEKS\u96c6\u7fa4\u7f51\u7edc","text":"<p>\u5b8c\u6210\u57fa\u7840\u7f51\u7edc\u8bbe\u7f6e\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9EKS\u96c6\u7fa4\u8fdb\u884c\u7279\u5b9a\u7684\u7f51\u7edc\u914d\u7f6e\uff0c\u4ee5\u652f\u6301\u6df7\u5408\u8282\u70b9\u7684\u63a5\u5165\uff1a</p> <ol> <li> <p>\u96c6\u7fa4\u5b89\u5168\u7ec4\u914d\u7f6e    \u914d\u7f6e\u5b89\u5168\u7ec4\u89c4\u5219\u4ee5\u5141\u8bb8\u5fc5\u8981\u7684\u7f51\u7edc\u901a\u4fe1\uff1a <pre><code># \u5141\u8bb8\u6765\u81ea10.0.0.0/8\u7f51\u6bb5\u7684\u6240\u6709\u6d41\u91cf\naws ec2 authorize-security-group-ingress \\\n  --group-id ${CLUSTER_SG_ID} \\\n  --protocol all \\\n  --cidr 10.0.0.0/8\n</code></pre></p> </li> <li> <p>\u6df7\u5408\u8282\u70b9\u7f51\u7edc\u8bbe\u7f6e    \u5728EKS\u96c6\u7fa4\u914d\u7f6e\u4e2d\u542f\u7528\u6df7\u5408\u8282\u70b9\u652f\u6301\uff0c\u8bbe\u7f6e\u4e24\u4e2a\u5173\u952e\u53c2\u6570\uff1a    - remoteNodeNetworks\uff1a\u6307\u5b9aIDC VPC\u4e2d\u7684\u79c1\u6709\u5b50\u7f51\u8303\u56f4    - remotePodNetworks\uff1a\u5b9a\u4e49Cilium\u5c06\u4f7f\u7528\u7684Overlay CIDR\u8303\u56f4</p> </li> </ol> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u5c06\u5728EKS\u63a7\u5236\u53f0\u4e2d\u914d\u7f6e\uff1a </p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#systems-manager","title":"\u7b2c\u56db\u9636\u6bb5\uff1a\u914d\u7f6eSystems Manager","text":"<p>AWS Systems Manager\uff08SSM\uff09\u5728\u6df7\u5408\u8282\u70b9\u67b6\u6784\u4e2d\u626e\u6f14\u7740\u5173\u952e\u89d2\u8272\uff0c\u5b83\u8d1f\u8d23\u5efa\u7acb\u548c\u7ef4\u62a4EKS\u63a7\u5236\u5e73\u9762\u4e0e\u8fdc\u7a0b\u8282\u70b9\u4e4b\u95f4\u7684\u5b89\u5168\u901a\u4fe1\u901a\u9053\u3002</p> <ol> <li> <p>\u521b\u5efaSSM\u6fc0\u6d3b\u914d\u7f6e    \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efaSSM\u6fc0\u6d3b\u914d\u7f6e\uff0c\u8fd9\u5c06\u751f\u6210\u7528\u4e8e\u8282\u70b9\u6ce8\u518c\u7684\u51ed\u8bc1\uff1a <pre><code>aws ssm create-activation \\\n     --region us-west-2 \\\n     --default-instance-name eks-hybrid-nodes \\\n     --description \"Activation for EKS hybrid nodes\" \\\n     --iam-role vscode-server-VSCodeInstanceBootstrapRole \\\n     --tags Key=EKSClusterARN,Value=arn:aws:eks:us-west-2:123456789012:cluster/ekscluster1 \\\n     --registration-limit 100\n</code></pre></p> </li> <li> <p>\u521d\u59cb\u5316\u6df7\u5408\u8282\u70b9    \u83b7\u53d6\u6fc0\u6d3b\u51ed\u8bc1\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u6df7\u5408\u8282\u70b9\u4e0a\u6267\u884c\u521d\u59cb\u5316\u914d\u7f6e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u6b65\u9aa4\uff1a</p> </li> </ol> <pre><code># 1. install nodeadm\ncurl -OL 'https://hybrid-assets.eks.amazonaws.com/releases/latest/bin/linux/amd64/nodeadm'\nchmod a+x nodeadm\napt update\n./nodeadm install 1.31 --credential-provider ssm\n# 2. prepare config\ncat &gt;nodeConfig.yaml &lt;&lt;-EOF\napiVersion: node.eks.aws/v1alpha1\nkind: NodeConfig\nspec:\n  cluster:\n    name: ekscluster1\n    region: us-west-2\n  hybrid:\n    ssm:\n      activationCode: xxxx\n      activationId: xxxx\nEOF\n# 3. init hybrid node\n./nodeadm init -c file://./nodeConfig.yaml\n</code></pre> <p>\u6ce8\u610f\uff1a\u8fd9\u4e2a\u521d\u59cb\u5316\u8fc7\u7a0b\u9700\u8981\u5728\u6bcf\u4e2a\u6df7\u5408\u8282\u70b9\u4e0a\u91cd\u590d\u6267\u884c\u3002\u786e\u4fdd\u5728\u6267\u884c\u524d\u5df2\u7ecf\u6b63\u786e\u914d\u7f6e\u4e86\u8282\u70b9\u7684\u7f51\u7edc\u548c\u5b89\u5168\u7ec4\u8bbe\u7f6e\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_9","title":"\u5b89\u88c5\u548c\u914d\u7f6e\u96c6\u7fa4\u7ec4\u4ef6","text":"<p>\u5728\u5b8c\u6210\u6df7\u5408\u8282\u70b9\u7684\u57fa\u7840\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6e\u4e00\u4e9b\u5fc5\u8981\u7684\u96c6\u7fa4\u7ec4\u4ef6\uff0c\u4ee5\u786e\u4fdd\u6574\u4e2a\u73af\u5883\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u5305\u62ec\u8d1f\u8f7d\u5747\u8861\u63a7\u5236\u5668\u548c\u7f51\u7edc\u63d2\u4ef6\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_10","title":"\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5AWS Load Balancer Controller\u6765\u7ba1\u7406\u5e94\u7528\u8d1f\u8f7d\u5747\u8861\u5668\uff1a <pre><code>eksdemo install aws-lb-controller -c ${CLUSTER_NAME} --namespace awslb\n</code></pre></p> <p>\u4e3a\u4e86\u786e\u4fdd\u8d1f\u8f7d\u5747\u8861\u63a7\u5236\u5668\u7684\u7a33\u5b9a\u8fd0\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u8282\u70b9\u4eb2\u548c\u6027\u6765\u63a7\u5236\u5176\u90e8\u7f72\u4f4d\u7f6e\u3002\u5982\u679c\u4e0d\u5e0c\u671b\u5c06\u63a7\u5236\u5668\u90e8\u7f72\u5728\u6df7\u5408\u8282\u70b9\u4e0a\uff0c\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a <pre><code>spec:\n  template:\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n\n            - matchExpressions:\n              - key: eks.amazonaws.com/compute-type\n                operator: NotIn\n                values:\n                - hybrid\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_11","title":"\u914d\u7f6e\u7f51\u7edc\u63d2\u4ef6","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6eCilium\u4f5c\u4e3a\u96c6\u7fa4\u7684\u7f51\u7edc\u63d2\u4ef6\u3002Cilium\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684CNI\u63d2\u4ef6\uff0c\u5b83\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u7f51\u7edc\u8fde\u63a5\uff0c\u8fd8\u652f\u6301\u9ad8\u7ea7\u7684\u7f51\u7edc\u7b56\u7565\u548c\u53ef\u89c2\u6d4b\u6027\u529f\u80fd\u3002\u5728\u6211\u4eec\u7684\u6df7\u5408\u8282\u70b9\u67b6\u6784\u4e2d\uff0cCilium\u5c06\u8d1f\u8d23\u7ba1\u7406\u8de8VPC\u7684Pod\u7f51\u7edc\u901a\u4fe1\u3002</p> <p>\u4ee5\u4e0b\u662fCilium\u914d\u7f6e\u7684\u5173\u952e\u90e8\u5206\u8bf4\u660e\uff1a</p> <ol> <li>\u8282\u70b9\u4eb2\u548c\u6027\u914d\u7f6e\uff1a\u901a\u8fc7affinity\u8bbe\u7f6e\u786e\u4fddCilium Agent\u53ea\u8fd0\u884c\u5728\u6df7\u5408\u8282\u70b9\u4e0a\uff0c\u800cOperator\u7ec4\u4ef6\u5219\u8fd0\u884c\u5728\u975e\u6df7\u5408\u8282\u70b9\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f18\u5316\u7f51\u7edc\u6027\u80fd\u548c\u7ba1\u7406\u6548\u7387\u3002</li> <li>IP\u5730\u5740\u7ba1\u7406\uff1a\u91c7\u7528cluster-pool\u6a21\u5f0f\u8fdb\u884cIP\u5206\u914d\uff0c\u6bcf\u4e2a\u8282\u70b9\u83b7\u5f97\u4e00\u4e2a<code>/24</code>\u7f51\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7cbe\u7ec6\u7684\u5730\u5740\u7ba1\u7406\uff0c\u540c\u65f6\u4fdd\u6301\u7f51\u7edc\u7684\u53ef\u6269\u5c55\u6027\u3002</li> <li>\u7f51\u7edc\u4f18\u5316\uff1a\u7981\u7528\u4e86\u4e0d\u5fc5\u8981\u7684Envoy\u7ec4\u4ef6\uff0c\u5e76\u914d\u7f6e\u4e86unmanagedPodWatcher\u6765\u4f18\u5316Pod\u7f51\u7edc\u7ba1\u7406\uff0c\u63d0\u9ad8\u6574\u4f53\u6027\u80fd\u3002</li> </ol> <pre><code>helm repo add cilium https://helm.cilium.io/\ncat &gt;cilium-values.yaml &lt;&lt;-EOF\naffinity:\n  nodeAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      nodeSelectorTerms:\n\n      - matchExpressions:\n        - key: eks.amazonaws.com/compute-type\n          operator: In\n          values:\n          - hybrid\nipam:\n  mode: cluster-pool\n  operator:\n    clusterPoolIPv4MaskSize: 24\n    clusterPoolIPv4PodCIDRList:\n    - 10.30.0.0/16\noperator:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: eks.amazonaws.com/compute-type\n            operator: NotIn\n            values:\n              - hybrid\n  unmanagedPodWatcher:\n    restart: false\nenvoy:\n  enabled: false\nEOF\n\nhelm upgrade -i cilium cilium/cilium \\\n    --version v1.16.9 \\\n    --namespace kube-system \\\n    --values cilium-values.yaml \n</code></pre> <p>\u5b8c\u6210Cilium\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u6df7\u5408\u8282\u70b9\u7684\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u4e4b\u524d\u6dfb\u52a0\u5230\u96c6\u7fa4\u7684\u6df7\u5408\u8282\u70b9\u5e94\u8be5\u4f1a\u4eceNotReady\u72b6\u6001\u8f6c\u53d8\u4e3aReady\u72b6\u6001\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u8282\u70b9\u72b6\u6001\uff1a <pre><code>kubectl get ciliumnode\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_12","title":"\u9a8c\u8bc1\u90e8\u7f72","text":"<p>\u4e3a\u4e86\u9a8c\u8bc1\u6574\u4e2a\u73af\u5883\u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u90e8\u7f72\u4e00\u4e2a\u6d4b\u8bd5\u7528\u7684Nginx Pod\u5e76\u901a\u8fc7AWS Load Balancer Controller\u521b\u5efaIngress\u8d44\u6e90\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u89c2\u5bdf\u5230\u4e00\u4e2a\u73b0\u8c61\uff1a\u867d\u7136ALB\u80fd\u591f\u6210\u529f\u521b\u5efa\uff0c\u4f46Target Group\u4e2d\u7684Pod\u5730\u5740\u4f1a\u663e\u793a\u4e3a\u4e0d\u53ef\u8fbe\u72b6\u6001\u3002\u8fd9\u4e2a\u95ee\u9898\u5c06\u5728\u540e\u7eed\u7684\u7f51\u7edc\u8def\u7531\u914d\u7f6e\u90e8\u5206\u5f97\u5230\u89e3\u51b3\u3002</p> <p>\u90e8\u7f72\u9a8c\u8bc1\u7684 nginx POD (../../others/nginx-sample)</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_13","title":"\u7f51\u7edc\u8def\u7531\u914d\u7f6e\uff1a\u6784\u5efa\u53ef\u9760\u7684\u901a\u4fe1\u901a\u9053","text":"<p>\u5728\u6df7\u5408\u8282\u70b9\u67b6\u6784\u4e2d\uff0c\u7f51\u7edc\u8def\u7531\u914d\u7f6e\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u6838\u5fc3\u3002\u6b63\u786e\u7684\u8def\u7531\u8bbe\u7f6e\u4e0d\u4ec5\u786e\u4fdd\u4e86Pod\u95f4\u7684\u901a\u4fe1\uff0c\u8fd8\u7ef4\u62a4\u4e86\u6574\u4e2a\u96c6\u7fa4\u7684\u7f51\u7edc\u8fde\u901a\u6027\u3002\u8ba9\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u5173\u952e\u7684\u914d\u7f6e\u8fc7\u7a0b\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#pod","title":"Pod\u7f51\u7edc\u8def\u7531\u67b6\u6784","text":"<p>\u5728\u6211\u4eec\u7684\u8bbe\u8ba1\u4e2d\uff0cPod\u7f51\u7edc\u4f7f\u752810.30.0.0/16\u4f5c\u4e3a\u603b\u4f53CIDR\u8303\u56f4\uff0c\u6bcf\u4e2a\u6df7\u5408\u8282\u70b9\u83b7\u5f97\u4e00\u4e2a/24\u5b50\u7f51\u3002\u8fd9\u79cd\u8bbe\u8ba1\u65e2\u4fdd\u8bc1\u4e86\u5730\u5740\u7a7a\u95f4\u7684\u6709\u6548\u5229\u7528\uff0c\u53c8\u4fbf\u4e8e\u8fdb\u884c\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u63a7\u5236\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_14","title":"\u8def\u7531\u914d\u7f6e\u6b65\u9aa4","text":"<ol> <li> <p>EKS VPC\u8def\u7531\u914d\u7f6e    \u5728EKS VPC\u7684\u516c\u6709\u5b50\u7f51\u4e2d\u914d\u7f6e\u8def\u7531\u8868\uff0c\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6765\u81eaALB\u7684\u5165\u7ad9\u6d41\u91cf\uff1a </p> </li> <li> <p>Transit Gateway\u6838\u5fc3\u8def\u7531    \u914d\u7f6eTransit Gateway\u4f5c\u4e3a\u7f51\u7edc\u7684\u4e2d\u592e\u67a2\u7ebd\uff1a    - \u5c06\u6240\u6709\u76ee\u6807\u4e3a10.30.0.0/16\u7684\u6d41\u91cf\u8f6c\u53d1\u5230IDC VPC    - \u786e\u4fddPod\u7f51\u7edc\u6d41\u91cf\u80fd\u591f\u6b63\u786e\u5230\u8fbe\u76ee\u6807\u8282\u70b9 </p> </li> <li> <p>IDC VPC\u7cbe\u7ec6\u8def\u7531    \u5728IDC VPC\u7684TGW\u5b50\u7f51\u4e2d\u914d\u7f6e\u7ec6\u7c92\u5ea6\u7684Pod\u7f51\u7edc\u8def\u7531\uff1a    - \u4e3a\u6bcf\u4e2a\u6df7\u5408\u8282\u70b9\u914d\u7f6e\u4e13\u5c5e\u7684/24\u7f51\u6bb5    - \u4f8b\u5982\uff1a10.30.0.0/24 \u2192 \u6df7\u5408\u8282\u70b91    - \u786e\u4fdd\u6d41\u91cf\u80fd\u591f\u51c6\u786e\u5230\u8fbe\u76ee\u6807Pod </p> </li> <li> <p>\u53cc\u5411\u901a\u4fe1\u4fdd\u969c    \u4e3a\u786e\u4fdd\u7f51\u7edc\u7684\u53cc\u5411\u8fde\u901a\u6027\uff0c\u9700\u8981\u914d\u7f6e\u4ee5\u4e0b\u8def\u7531\uff1a</p> </li> </ol> <p>a. IDC VPC\u56de\u7a0b\u8def\u7531\uff1a</p> <pre><code>  - \u76ee\u6807\uff1a10.10.0.0/16\uff08EKS VPC\uff09\n  - \u4e0b\u4e00\u8df3\uff1aTransit Gateway\n  - \u4f5c\u7528\uff1a\u786e\u4fdd\u4ecePod\u53d1\u51fa\u7684\u6d41\u91cf\u80fd\u591f\u8fd4\u56deEKS\u96c6\u7fa4\n</code></pre> <p>b. Transit Gateway\u56de\u7a0b\u914d\u7f6e\uff1a</p> <pre><code>  - \u7ef4\u62a4\u5230EKS VPC\uff0810.10.0.0/16\uff09\u7684\u8def\u7531\n  - \u786e\u4fdd\u96c6\u7fa4\u7ec4\u4ef6\u95f4\u7684\u53cc\u5411\u901a\u4fe1\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_15","title":"\u81ea\u52a8\u5316\u5de5\u5177\uff1a\u8def\u7531\u8868\u540c\u6b65\u811a\u672c","text":"<p>\u5728\u6df7\u5408\u8282\u70b9\u67b6\u6784\u4e2d\uff0cPod CIDR\u7684\u8def\u7531\u914d\u7f6e\u9700\u8981\u968f\u7740\u8282\u70b9\u7684\u53d8\u5316\u800c\u66f4\u65b0\u3002\u4e3a\u4e86\u81ea\u52a8\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u8def\u7531\u8868\u540c\u6b65\u811a\u672c\u3002\u8fd9\u4e2a\u811a\u672c\u53ef\u4ee5\u76d1\u63a7Cilium\u8282\u70b9\u7684\u72b6\u6001\uff0c\u5e76\u81ea\u52a8\u66f4\u65b0\u76f8\u5e94\u7684\u8def\u7531\u914d\u7f6e\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_16","title":"\u80cc\u666f\u8bf4\u660e","text":"<p>\u5728\u4f7f\u7528Cilium\u4f5c\u4e3aCNI\u63d2\u4ef6\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u88ab\u5206\u914d\u4e00\u4e2aoverlay\u7f51\u7edcCIDR\uff08\u598210.30.x.0/24\uff09\u3002\u8fd9\u4e9bCIDR\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7<code>kubectl get ciliumnode</code>\u547d\u4ee4\u67e5\u770b\u3002\u4e3a\u4e86\u786e\u4fdd\u7f51\u7edc\u7684\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9bCIDR\u4fe1\u606f\u540c\u6b65\u5230VPC\u7684\u8def\u7531\u8868\u4e2d\uff0c\u5e76\u5c06\u76ee\u6807\u8bbe\u7f6e\u4e3a\u5bf9\u5e94\u8282\u70b9\u7684ENI\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_17","title":"\u811a\u672c\u529f\u80fd","text":"<p>\u8fd9\u4e2a\u81ea\u52a8\u5316\u811a\u672c\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u81ea\u52a8\u83b7\u53d6Cilium\u8282\u70b9\u4fe1\u606f\u548c\u5206\u914d\u7684CIDR</li> <li>\u66f4\u65b0\u8def\u7531\u8868\u4e2d\u7684\u8def\u7531\u6761\u76ee</li> <li>\u6e05\u7406\u8fc7\u671f\u7684\u8def\u7531\u914d\u7f6e</li> <li>\u4fdd\u6301\u8def\u7531\u8868\u4e0e\u5f53\u524d\u96c6\u7fa4\u72b6\u6001\u7684\u540c\u6b65</li> </ul> <pre><code>#!/bin/bash -x\n\n# \u914d\u7f6e - \u8bf7\u66ff\u6362\u4e3a\u60a8\u7684\u5b9e\u9645\u503c\nREGION=\"us-west-2\"  # \u8bf7\u66ff\u6362\u4e3a\u60a8\u7684\u5b9e\u9645\u533a\u57df\nROUTE_TABLE_ID=\"rtb-074975b4268607ffd\"  # \u8bf7\u66ff\u6362\u4e3a TGW \u4f7f\u7528\u7684\u8def\u7531\u8868 ID\n\necho \"\u5f00\u59cb\u540c\u6b65 Cilium \u8def\u7531\u5230\u8def\u7531\u8868 $ROUTE_TABLE_ID...\"\n\n# \u83b7\u53d6 Cilium \u8282\u70b9\u4fe1\u606f\necho \"\u83b7\u53d6 Cilium \u8282\u70b9\u4fe1\u606f...\"\nCILIUM_NODES=$(kubectl get ciliumnode -o json)\n\n# \u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u6709\u6548\u7684 Cilium CIDR\ndeclare -a VALID_CIDRS\n\n# \u904d\u5386\u6bcf\u4e2a Cilium \u8282\u70b9\uff0c\u6536\u96c6\u6709\u6548\u7684 CIDR\nwhile read -r node; do\n  OVERLAY_CIDR=$(echo $node | jq -r '.spec.ipam.podCIDRs[0]')\n  if [[ -n \"$OVERLAY_CIDR\" &amp;&amp; \"$OVERLAY_CIDR\" != \"null\" ]]; then\n    VALID_CIDRS+=(\"$OVERLAY_CIDR\")\n    echo \"\u6709\u6548 CIDR: $OVERLAY_CIDR\"\n  fi\ndone &lt; &lt;(echo $CILIUM_NODES | jq -c '.items[]')\n\n# \u83b7\u53d6\u5f53\u524d\u8def\u7531\u8868\u4fe1\u606f\necho \"\u83b7\u53d6\u8def\u7531\u8868 $ROUTE_TABLE_ID \u7684\u5f53\u524d\u8def\u7531...\"\nCURRENT_ROUTES=$(aws ec2 describe-route-tables --route-table-ids $ROUTE_TABLE_ID --query 'RouteTables[0].Routes' --output json --region $REGION)\n\n# \u904d\u5386\u6bcf\u4e2a Cilium \u8282\u70b9\uff0c\u66f4\u65b0\u8def\u7531\necho $CILIUM_NODES | jq -c '.items[]' | while read -r node; do\n  NODE_NAME=$(echo $node | jq -r '.metadata.name')\n  OVERLAY_CIDR=$(echo $node | jq -r '.spec.ipam.podCIDRs[0]')\n  NODE_IP=$(echo $node | jq -r '.spec.addresses[] | select(.type==\"InternalIP\").ip')\n\n  echo \"\u8282\u70b9: $NODE_NAME, IP: $NODE_IP, CIDR: $OVERLAY_CIDR\"\n\n  # \u901a\u8fc7\u8282\u70b9 IP \u67e5\u627e\u5b9e\u4f8b ID\n  INSTANCE_ID=$(aws ec2 describe-instances --filters \"Name=private-ip-address,Values=$NODE_IP\" --query 'Reservations[0].Instances[0].InstanceId' --output text --region $REGION)\n\n  if [[ -z \"$INSTANCE_ID\" || \"$INSTANCE_ID\" == \"None\" ]]; then\n    echo \"\u8b66\u544a: \u65e0\u6cd5\u901a\u8fc7 IP $NODE_IP \u627e\u5230\u5b9e\u4f8b ID\uff0c\u8df3\u8fc7\u6b64\u8282\u70b9\"\n    continue\n  fi\n\n  echo \"\u627e\u5230\u5b9e\u4f8b ID: $INSTANCE_ID\"\n\n  # \u68c0\u67e5\u662f\u5426\u9700\u8981\u66f4\u65b0\u8def\u7531\n  ROUTE_EXISTS=$(echo $CURRENT_ROUTES | jq --arg cidr \"$OVERLAY_CIDR\" 'any(.[] | .DestinationCidrBlock == $cidr)' 2&gt;/dev/null)\n\n  if [[ \"$ROUTE_EXISTS\" != \"true\" ]]; then\n    echo \"\u6dfb\u52a0\u6216\u66f4\u65b0\u8def\u7531: $OVERLAY_CIDR -&gt; $INSTANCE_ID\"\n\n    # \u83b7\u53d6\u5b9e\u4f8b\u7684 ENI ID\n    ENI_ID=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].NetworkInterfaces[0].NetworkInterfaceId' --output text --region $REGION)\n\n    if [[ -n \"$ENI_ID\" &amp;&amp; \"$ENI_ID\" != \"None\" ]]; then\n      # \u6dfb\u52a0\u6216\u66ff\u6362\u8def\u7531\n      aws ec2 replace-route --route-table-id $ROUTE_TABLE_ID --destination-cidr-block $OVERLAY_CIDR --network-interface-id $ENI_ID --region $REGION || \\\n      aws ec2 create-route --route-table-id $ROUTE_TABLE_ID --destination-cidr-block $OVERLAY_CIDR --network-interface-id $ENI_ID --region $REGION\n\n      echo \"\u8def\u7531\u5df2\u66f4\u65b0: $OVERLAY_CIDR -&gt; $ENI_ID\"\n    else\n      echo \"\u8b66\u544a: \u65e0\u6cd5\u83b7\u53d6 $INSTANCE_ID \u7684 ENI ID\"\n    fi\n  else\n    echo \"\u8def\u7531\u5df2\u5b58\u5728: $OVERLAY_CIDR\"\n  fi\ndone\n\n# \u91cd\u65b0\u83b7\u53d6\u6700\u65b0\u7684\u8def\u7531\u8868\u4fe1\u606f\uff08\u56e0\u4e3a\u53ef\u80fd\u5df2\u7ecf\u66f4\u65b0\u4e86\uff09\nUPDATED_ROUTES=$(aws ec2 describe-route-tables --route-table-ids $ROUTE_TABLE_ID --query 'RouteTables[0].Routes' --output json --region $REGION)\n\n# \u68c0\u67e5\u5e76\u5220\u9664\u591a\u4f59\u7684 10.30.x.0/24 \u8def\u7531\necho \"\u68c0\u67e5\u5e76\u5220\u9664\u591a\u4f59\u7684 10.30.x.0/24 \u8def\u7531...\"\necho $UPDATED_ROUTES | jq -c '.[]' | while read -r route; do\n  CIDR=$(echo $route | jq -r '.DestinationCidrBlock // \"\"')\n\n  # \u68c0\u67e5\u662f\u5426\u662f 10.30.x.0/24 \u683c\u5f0f\u7684\u8def\u7531\n  if [[ $CIDR =~ ^10\\.30\\.[0-9]+\\.0/24$ ]]; then\n    # \u68c0\u67e5\u6b64 CIDR \u662f\u5426\u5728\u6709\u6548 CIDR \u5217\u8868\u4e2d\n    FOUND=false\n    for VALID_CIDR in \"${VALID_CIDRS[@]}\"; do\n      if [[ \"$VALID_CIDR\" == \"$CIDR\" ]]; then\n        FOUND=true\n        break\n      fi\n    done\n\n    # \u5982\u679c\u4e0d\u5728\u6709\u6548\u5217\u8868\u4e2d\uff0c\u5220\u9664\u6b64\u8def\u7531\n    if [[ \"$FOUND\" == \"false\" ]]; then\n      echo \"\u5220\u9664\u591a\u4f59\u8def\u7531: $CIDR\"\n      aws ec2 delete-route --route-table-id $ROUTE_TABLE_ID --destination-cidr-block $CIDR --region $REGION\n    else\n      echo \"\u4fdd\u7559\u6709\u6548\u8def\u7531: $CIDR\"\n    fi\n  fi\ndone\n\necho \"\u540c\u6b65\u5b8c\u6210!\"\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_18","title":"\u73af\u5883\u6e05\u7406\uff1a\u6309\u4f9d\u8d56\u987a\u5e8f\u62c6\u9664\u67b6\u6784","text":"<p>\u5728\u5b8c\u6210\u6d4b\u8bd5\u540e\uff0c\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u8d39\u7528\uff0c\u6211\u4eec\u9700\u8981\u6309\u7167\u6b63\u786e\u7684\u987a\u5e8f\u6e05\u7406\u73af\u5883\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u7279\u522b\u6ce8\u610f\u8d44\u6e90\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u786e\u4fdd\u6e05\u7406\u64cd\u4f5c\u4e0d\u4f1a\u56e0\u4e3a\u4f9d\u8d56\u51b2\u7a81\u800c\u5931\u8d25\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_19","title":"\u5e94\u7528\u6e05\u7406","text":"<p>\u9996\u5148\u6e05\u7406\u8fd0\u884c\u5728\u96c6\u7fa4\u4e2d\u7684\u5e94\u7528\u8d44\u6e90\uff1a <pre><code># \u5220\u9664\u6240\u6709\u5e94\u7528\u7ea7\u8d44\u6e90\nkubectl delete deployment,service,ingress --all\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_20","title":"\u8282\u70b9\u6e05\u7406","text":"<p>\u5728\u5220\u9664\u96c6\u7fa4\u4e4b\u524d\uff0c\u9700\u8981\u5148\u6e05\u7406\u6df7\u5408\u8282\u70b9\u53ca\u5176\u76f8\u5173\u914d\u7f6e\uff1a <pre><code># \u91cd\u7f6e\u6df7\u5408\u8282\u70b9\uff08\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6267\u884c\uff09\nsudo ./nodeadm reset\n\n# \u6e05\u7406SSM\u6fc0\u6d3b\u914d\u7f6e\naws ssm delete-activation --activation-id &lt;your-activation-id&gt;\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_21","title":"\u96c6\u7fa4\u7ec4\u4ef6\u6e05\u7406","text":"<p>\u6309\u7167\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u4e0a\u5c42\u7ec4\u4ef6\u5f00\u59cb\u6e05\u7406\uff1a <pre><code># 1. \u5220\u9664\u8d1f\u8f7d\u5747\u8861\u63a7\u5236\u5668\neksdemo delete aws-lb-controller -c ${CLUSTER_NAME}\n\n# 2. \u5220\u9664\u7f51\u7edc\u63d2\u4ef6\nhelm delete cilium -n kube-system\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_22","title":"\u7f51\u7edc\u8d44\u6e90\u6e05\u7406","text":"<p>\u7f51\u7edc\u8d44\u6e90\u7684\u6e05\u7406\u9700\u8981\u9075\u5faa\u4ece\u5185\u5230\u5916\u7684\u987a\u5e8f\uff1a</p> <ol> <li> <p>\u8def\u7531\u914d\u7f6e    - \u5220\u9664Transit Gateway\u8def\u7531\u8868\u4e2d\u7684\u8def\u7531\u6761\u76ee    - \u6e05\u7406VPC\u8def\u7531\u8868\u4e2d\u7684\u81ea\u5b9a\u4e49\u8def\u7531</p> </li> <li> <p>\u7f51\u7edc\u8fde\u63a5    - \u5206\u79bb\u5e76\u5220\u9664Transit Gateway Attachments    - \u5220\u9664Transit Gateway    - \u6e05\u7406TGW\u5b50\u7f51\u8def\u7531\u8868</p> </li> </ol>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_23","title":"\u8ba1\u7b97\u8d44\u6e90\u6e05\u7406","text":"<p>\u5220\u9664IDC VPC\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u8d44\u6e90\uff1a</p> <ol> <li> <p>\u5b9e\u4f8b\u8d44\u6e90    - \u7ec8\u6b62\u6df7\u5408\u8282\u70b9EC2\u5b9e\u4f8b    - \u5220\u9664EC2 Instance Connect Endpoint</p> </li> <li> <p>\u7f51\u7edc\u5b89\u5168    - \u5220\u9664\u81ea\u5b9a\u4e49\u5b89\u5168\u7ec4\u89c4\u5219    - \u5220\u9664\u5b89\u5168\u7ec4</p> </li> </ol>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_24","title":"\u57fa\u7840\u8bbe\u65bd\u6e05\u7406","text":"<p>\u6700\u540e\u6e05\u7406\u57fa\u7840\u7f51\u7edc\u8d44\u6e90\uff1a</p> <ol> <li>VPC\u8d44\u6e90 <pre><code># \u5220\u9664IDC VPC\naws ec2 delete-vpc --vpc-id ${IDC_VPC_ID}\n\n# \u5220\u9664EKS\u96c6\u7fa4\uff08\u8fd9\u5c06\u540c\u65f6\u5220\u9664EKS VPC\uff09\neksdemo delete cluster ${CLUSTER_NAME}\n</code></pre></li> </ol>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_25","title":"\u6e05\u7406\u9a8c\u8bc1","text":"<p>\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u786e\u4fdd\u6240\u6709\u8d44\u6e90\u5df2\u6b63\u786e\u6e05\u7406\uff1a <pre><code># \u9a8c\u8bc1EKS\u96c6\u7fa4\naws eks describe-cluster --name ${CLUSTER_NAME}\n\n# \u9a8c\u8bc1VPC\u8d44\u6e90\naws ec2 describe-vpcs --filters \"Name=tag:Name,Values=idc\"\n\n# \u9a8c\u8bc1\u7f51\u7edc\u7ec4\u4ef6\naws ec2 describe-transit-gateways\n</code></pre></p> <p>\u63d0\u793a\uff1a\u5728\u6267\u884c\u6e05\u7406\u64cd\u4f5c\u65f6\uff0c\u5efa\u8bae\u4fdd\u6301\u5bf9\u8d44\u6e90\u5220\u9664\u987a\u5e8f\u7684\u8ddf\u8e2a\u3002\u5982\u679c\u9047\u5230\u5220\u9664\u5931\u8d25\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u5b58\u5728\u672a\u53d1\u73b0\u7684\u8d44\u6e90\u4f9d\u8d56\uff0c\u9700\u8981\u5148\u627e\u5230\u5e76\u5220\u9664\u4f9d\u8d56\u8d44\u6e90\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_26","title":"\u53c2\u8003\u8d44\u6599","text":"","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#aws","title":"AWS\u5b98\u65b9\u6587\u6863","text":"<ul> <li>EKS\u6df7\u5408\u8282\u70b9\u6982\u8ff0 - \u5168\u9762\u4e86\u89e3EKS\u6df7\u5408\u8282\u70b9\u529f\u80fd\u7684\u5b98\u65b9\u6307\u5357</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_27","title":"\u6280\u672f\u535a\u5ba2","text":"<ul> <li>\u6df1\u5165\u7406\u89e3EKS\u6df7\u5408\u8282\u70b9 - AWS\u5b98\u65b9\u535a\u5ba2\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u6df7\u5408\u8282\u70b9\u7684\u6280\u672f\u539f\u7406</li> <li>\u901a\u8fc7\u8de8\u8d26\u6237\u8d1f\u8f7d\u5747\u8861\u5668\u66b4\u9732EKS Pod - \u4ecb\u7ecd\u8de8VPC\u90e8\u7f72\u65b9\u6848\u7684\u8be6\u7ec6\u5b9e\u73b0</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/hybrid-node/use-eks-hybrid-node-to-solve-ipaddr-exhausted/#_28","title":"\u793e\u533a\u8d44\u6e90","text":"<ul> <li>\u89e3\u6790EKS\u6df7\u5408\u8282\u70b9\u7684\u96c6\u7fa4\u7f51\u7edc - AWS re:Post\u4e0a\u7684\u6280\u672f\u6587\u7ae0\uff0c\u6df1\u5165\u5206\u6790\u7f51\u7edc\u67b6\u6784</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/logging/cloudwatch-to-firehose-python/","title":"cloudwatch-to-firehose-python","text":"","tags":["aws/serverless/lambda","aws/mgmt/cloudwatch","aws/analytics/kinesis/firehose","python"]},{"location":"EKS/solutions/logging/cloudwatch-to-firehose-python/#create","title":"create","text":"<p>source from here</p> <ol> <li>create from blueprint <code>Process CloudWatch logs sent to Kinesis Firehose</code> <pre><code>Process CloudWatch logs sent to Kinesis Firehose\n\nAn Amazon Kinesis Firehose stream processor that extracts individual log events from records sent by Cloudwatch Logs subscription filters.\n\npython3.8\u00a0\u00b7\u00a0kinesis-firehose\u00a0\u00b7\u00a0cloudwatch-logs\u00a0\u00b7\u00a0splunk\n</code></pre></li> </ol>","tags":["aws/serverless/lambda","aws/mgmt/cloudwatch","aws/analytics/kinesis/firehose","python"]},{"location":"EKS/solutions/logging/cloudwatch-to-firehose-python/#revision","title":"revision","text":"<p>download lambda_function</p>","tags":["aws/serverless/lambda","aws/mgmt/cloudwatch","aws/analytics/kinesis/firehose","python"]},{"location":"EKS/solutions/logging/cloudwatch-to-firehose-python/#3-party-python-lib","title":"3-party python lib","text":"<p>download from attachments/stream-k8s-control-panel-logs-to-s3/package.zip</p>","tags":["aws/serverless/lambda","aws/mgmt/cloudwatch","aws/analytics/kinesis/firehose","python"]},{"location":"EKS/solutions/logging/cloudwatch-to-firehose-python/#layer-version","title":"layer version","text":"<ul> <li>../../../CLI/awscli/lambda-cmd</li> </ul>","tags":["aws/serverless/lambda","aws/mgmt/cloudwatch","aws/analytics/kinesis/firehose","python"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/","title":"Security Lake Support Collecting Audit Logging from EKS","text":"<p>news: https://aws.amazon.com/about-aws/whats-new/2024/02/amazon-security-lake-audit-logs-eks/?nc1=h_ls</p>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#diagram","title":"diagram","text":"<ul> <li>both accounts in same Organizations </li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#accounts","title":"accounts","text":"<ul> <li>account A \u4ea7\u751f eks audit log</li> <li>account B security lake delegate admin, owned all data</li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#enable-security-lake","title":"enable security lake","text":"<ul> <li>for account in orgs<ul> <li>need delegate administrator to enable for log type &amp; account &amp; region in orgs</li> </ul> </li> <li>for standalone account<ul> <li>enable by itself</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#settings-in-eks","title":"settings in eks","text":"<ul> <li>no need EKS to enable logging for audit (account A)</li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#query-from-athena-account-b","title":"query from athena account B","text":"<ul> <li>glue table has been created in db: <code>amazon_security_lake_glue_db_us_east_2</code></li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#query-from-athena-in-account-a","title":"query from athena in account A","text":"<ul> <li>account B<ul> <li>create subscribers with lake formation data access in security lake</li> <li>share named resource to account A (Securely share your data across AWS accounts using AWS Lake Formation)<ul> <li>grant database describe permissions to account A (need grant grant permission for quicksight use it)</li> </ul> </li> </ul> </li> <li>account A<ul> <li>accept resource sharing in RAM</li> <li>select databases in lake formation, create resource link (input new database name)</li> <li>query tables in new database name in Athena</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#query-from-quicksights-athena-dataset","title":"query from quicksight\u2019s athena dataset","text":"<ul> <li>account A<ul> <li>grant quicksight user to access new database name in lake formation</li> <li>create dataset and analytics in quicksight</li> </ul> </li> <li>sample dashboard for security lake 1.0 format<ul> <li>https://github.com/aws-samples/amazon-security-lake-quicksight</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-audit-log-security-lake/#refer","title":"refer","text":"<ul> <li>supported in terraform provider aws 5.40+</li> <li>https://docs.splunk.com/Documentation/AddOns/released/AWS/SecurityLake</li> <li>https://schema.ocsf.io/1.1.0/classes/api_activity?extensions=</li> <li>https://docs.aws.amazon.com/security-lake/latest/userguide/open-cybersecurity-schema-framework.html</li> </ul>","tags":["aws/container/eks","aws/security/security-lake"]},{"location":"EKS/solutions/logging/eks-loggroup-description/","title":"eks-loggroup-description","text":"","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#loggroup","title":"loggroup","text":"","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#awsekscluster_namecluster","title":"/aws/eks/cluster_name/cluster","text":"<p>eks control panel logging</p> <ul> <li>kube-apiserver-audit </li> <li>kube-apiserver </li> <li>kube-scheduler</li> <li>kube-controller-manager </li> <li>cloud-controller-manager </li> <li>authenticator <p>\u5982\u679c\u4f7f\u7528lambda-cwl-opensearch\uff0c\u4e0d\u9700\u8981\u5206\u5f00\u6210\u591a\u4e2aindex\uff1b\u5982\u679c\u4f7f\u7528firehose to opensearch\uff0c\u53ef\u80fd\u9700\u8981\u8003\u8651\u591a\u4e2afirehose</p> </li> </ul> <p>https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html</p>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#awscontainerinsightscluster_nameapplication","title":"/aws/containerinsights/cluster_name/application","text":"<p>All applications logs stored under <code>/var/log/containers/*.log</code> are streamed into the dedicated log group. \u5f53 Kubernetes Pod \u88ab\u9a71\u9010\u6216\u5220\u9664\u65f6\uff0c\u4e0e\u8be5 Pod \u5173\u8054\u7684\u65e5\u5fd7\u5c06\u4ece\u5de5\u4f5c\u8282\u70b9\u4e2d\u6c38\u4e45\u5220\u9664\u3002 All non-application logs such as kube-proxy and aws-node logs are excluded by default. However, additional Kubernetes add-on logs, such as CoreDNS logs, are also processed and streamed into this log group.</p> <ul> <li>log rotate in k8s refer: link</li> <li><code>containerLogMaxSize</code> default 10MB</li> <li><code>containerLogMaxFiles</code> default 5</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#awscontainerinsightscluster_namedataplane","title":"/aws/containerinsights/cluster_name/dataplane","text":"<p>EKS already provides control plane logs. With Fluent Bit integration in Container Insights,\u00a0the logs generated by EKS data plane components, which run on every worker node and are responsible for maintaining running pods are captured as data plane logs. These logs are also streamed into a dedicated CloudWatch log group under this log group. kube-proxy, aws-node, and Docker runtime logs are saved into this log group. In addition to control plane logs, having data plane logs stored in CloudWatch Logs helps to provide a complete picture of your EKS clusters.</p>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#awscontainerinsightscluster_namehost","title":"/aws/containerinsights/cluster_name/host","text":"<p>system logs for each EKS worker node are streamed into the log group. These system logs include the contents of <code>/var/log/messages, /var/log/dmesg, /var/log/secure</code> files. Considering the stateless and dynamic nature of containerized workloads, where EKS worker nodes are often being terminated during scaling activities, streaming those logs in real time with Fluent Bit and having those logs available in CloudWatch logs, even after the node is terminated, are critical in terms of observability and monitoring health of EKS worker nodes. It also enables you to debug or troubleshoot cluster issues without logging into worker nodes in many cases and analyze these logs in more systematic way.</p>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#awscontainerinsightscluster_nameperformance","title":"/aws/containerinsights/cluster_name/performance","text":"<p>performance metrics used by container insight</p>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#awscontainerinsightscluster_nameprometheus","title":"/aws/containerinsights/cluster_name/prometheus","text":"<p>prometheus metrics </p> <ul> <li>LINK1</li> <li>LINK2</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#ekscluster_namewindows","title":"/EKS/cluster_name/Windows","text":"<p>\u53ef\u4ee5\u5b9a\u5236 log for windows pod logging-windows-container</p>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#query-with-logs-insights","title":"query with logs insights","text":"<ul> <li>https://repost.aws/knowledge-center/eks-get-control-plane-logs</li> <li>https://aws.github.io/aws-eks-best-practices/security/docs/detective/#analyze-logs-with-log-insights</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#enable-container-insight","title":"enable container insight","text":"<ul> <li>git/git-mkdocs/EKS/solutions/monitor/eks-container-insights</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#solutions","title":"solutions","text":"<pre><code>( file:POC-PCF-EKS-DRAFT  section:/Metric-\u6307\u6807-/)\n$matchline:+27\n</code></pre>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#metric-","title":"Metric-\u6307\u6807-","text":"<ul> <li>\u4f7f\u7528\u5f00\u6e90 prometheus \u76d1\u63a7 (TC-prometheus-ha-architect-with-thanos.zh)</li> <li>cloudwatch\u539f\u59cb\u76d1\u63a7ec2 metric</li> <li>\u4f7f\u7528cloudwatch container insight (eks-container-insights)<ul> <li>Enable Prometheus Metrics in CloudWatch (enable-prometheus-in-cloudwatch)</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#logging-","title":"Logging-\u65e5\u5fd7-","text":"<ul> <li>eks\u76f8\u5173\u65e5\u5fd7\u7ec4\u63cf\u8ff0 (eks-loggroup-description)</li> <li>\u8f6c\u53d1cloudwatch\u65e5\u5fd7\u5230splunk (cloudwatch-firehose-splunk)<ul> <li>\u63a7\u5236\u5e73\u9762\uff1a<ul> <li>\u542f\u7528eks\u65e5\u5fd7\u53d1\u9001\u5230Cloudwatch (LINK)</li> <li>\u8f6c\u53d1cloudtrail\u4e2d\u76f8\u5173eks\u65e5\u5fd7\u5230splunk (LINK)</li> </ul> </li> <li>\u6570\u636e\u5e73\u9762<ul> <li>\u63a8\u8350EFK\u89e3\u51b3\u65b9\u6848\u4f5c\u4e3a\u65e5\u5fd7\u6536\u96c6 (eks-fluentbit-opensearch)</li> <li>Windows\u8282\u70b9\u7ec4\u65e5\u5fd7\u6536\u96c6 (logging-windows-container)</li> <li>ALB logging could be enabled to S3, how to forward to splunk (LINK)</li> </ul> </li> </ul> </li> <li>\u5feb\u901f\u68c0\u7d22 Amazon EKS \u63a7\u5236\u5e73\u9762\u65e5\u5fd7 (LINK)</li> <li>\u8f6c\u53d1cloudwatch\u65e5\u5fd7\u5230opensearch (eks-control-panel-log-cwl-firehose-opensearch)</li> <li>eks\u63a7\u5236\u5e73\u9762\u65e5\u5fd7\u7ec4\u5305\u542b\u591a\u4e2a\u65e5\u5fd7\u6d41\uff0c\u4f7f\u7528lambda-cwl-opensearch\uff0c\u5c06\u65e5\u5fd7\u6d41\u53d1\u9001\u5230opensearch\u65f6\uff0c\u57fa\u4e8elog group name\u548clog stream name\u7ec4\u5408\u521b\u5efa\u72ec\u7acbindex\u6587\u4ef6<ul> <li>\u6216\u8005\u5c06\u65e5\u5fd7\u901a\u8fc7 kinesis firehose \u6ce8\u5165\u5230 s3 \u5e76\u4e14\u4f7f\u7528\uff0c\u7136\u540e\u4f7f\u7528 glue crawler \u722c\u53d6\u8868\u7ed3\u6784\u4fbf\u4e8e athena \u8fdb\u884c\u67e5\u8be2\uff0c\u53e6\u5916\u53ef\u4ee5\u4f7f\u7528 glue databrew \u8fdb\u884c\u4e8c\u6b21\u5904\u7406 (git/git-mkdocs/EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3)</li> </ul> </li> <li>\u8f6c\u53d1eks\u63a7\u5236\u5e73\u9762\u65e5\u5fd7\u5230s3 (eks-logging-cost-compare)</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/eks-loggroup-description/#tracing-","title":"Tracing-\u8ddf\u8e2a-","text":"<ul> <li>\u4f7f\u7528app mesh (aws-appmesh-RETIRED)</li> <li>\u4f7f\u7528x-ray (x-ray-lab)</li> <li>\u4f7f\u7528ADOT (adot-aws-distro-open-telemetry)</li> </ul> <p>&lt;\u2013&gt;</p>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/logging/export-cloudwatch-log-group-to-s3/","title":"Export Cloudwatch Log Group to S3","text":"<ul> <li>https://docs.aws.amazon.com/zh_cn/AmazonCloudWatch/latest/logs/S3ExportTasks.html#S3Permissions</li> <li>\u5bfc\u51fa\u65e5\u5fd7\u683c\u5f0f\u6587\u4ef6\u7c7b\u4f3c\uff1a </li> </ul>","tags":["aws/mgmt/cloudwatch","aws/storage/s3"]},{"location":"EKS/solutions/logging/export-cloudwatch-log-group-to-s3/#create-bucket-and-policy","title":"create bucket and policy","text":"<pre><code>bucket_name=my-exported-logs-2358-$RANDOM\naws_region=us-east-2\nenvsubst &gt;policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": \"s3:GetBucketAcl\",\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:s3:::${bucket_name}\",\n            \"Principal\": { \"Service\": \"logs.${aws_region}.amazonaws.com\" }\n        },\n        {\n            \"Action\": \"s3:PutObject\" ,\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:s3:::${bucket_name}/*\",\n            \"Condition\": { \"StringEquals\": { \"s3:x-amz-acl\": \"bucket-owner-full-control\" } },\n            \"Principal\": { \"Service\": \"logs.${aws_region}.amazonaws.com\" }\n        }\n    ]\n}\nEOF\n\naws s3api create-bucket --bucket ${bucket_name} \\\n--create-bucket-configuration LocationConstraint=${aws_region} \\\n--region ${aws_region}\n\n# will overwrite existed policy attached on s3 bucket !\naws s3api put-bucket-policy --bucket ${bucket_name} --policy file://policy.json\n</code></pre>","tags":["aws/mgmt/cloudwatch","aws/storage/s3"]},{"location":"EKS/solutions/logging/export-cloudwatch-log-group-to-s3/#export-task","title":"export task","text":"<pre><code>loggroup_name=\"/aws/eks/ekscluster1/cluster\"\nbegin_time=$(date --date \"2 days ago\" +%s)\nend_time=$(date --date \"1 days ago\" +%s)\n\nsuffix=$(date +%Y%m%d-%H%M%S)\n#for i in kube-apiserver-audit kube-apiserver kube-scheduler authenticator kube-controller-manager cloud-controller-manager ; do\nfor i in kube-apiserver-audit ; do\n  task_name=${i}-${suffix}\n  # create export task\n  aws logs create-export-task --task-name ${task_name} \\\n    --log-group-name ${loggroup_name} \\\n    --log-stream-name-prefix ${i} \\\n    --from ${begin_time}000 --to ${end_time}000 \\\n    --destination ${bucket_name} \\\n    --destination-prefix ${i} |tee /tmp/$$\n  task_id=$(cat /tmp/$$ |jq -r '.taskId')\n  while true; do\n    # describe task\n    aws logs describe-export-tasks \\\n      --task-id ${task_id} |tee /tmp/$$.task\n    task_status=$(cat /tmp/$$.task |jq -r '.exportTasks[0].status.code')\n    if [[ ${task_status} == \"COMPLETED\" ]]; then\n      break\n    fi\n    sleep 10\n  done\ndone\n</code></pre>","tags":["aws/mgmt/cloudwatch","aws/storage/s3"]},{"location":"EKS/solutions/logging/export-cloudwatch-log-group-to-s3/#remaining-issues","title":"remaining issues","text":"<ul> <li>\u9700\u8981\u4fdd\u5b58\u5bfc\u51fa\u7684\u65f6\u95f4\u70b9\uff0c\u4ee5\u4fbf\u4e8e\u4e0b\u6b21\u4ece\u6539\u65f6\u95f4\u70b9\u7ee7\u7eed</li> <li>\u5bfc\u51fa\u540e\u5c06\u5728\u6307\u5b9a\u7684 prefix \u4e2d\uff0c\u521b\u5efa task id \u4e3a folder \uff0c\u6309\u7167\u6240\u6709 log stream name \u4f5c\u4e3a\u4e0b\u4e00\u5c42\u7684 folder \uff0c\u65e5\u5fd7\u6587\u4ef6\u4e3a gz \u538b\u7f29\u683c\u5f0f</li> <li>\u53ef\u4ee5\u7701\u7565 <code>log-stream-name-prefix</code> \u53c2\u6570\uff0c\u5bfc\u51fa\u6240\u6709\u65e5\u5fd7\uff0c\u8003\u8651\u65e5\u5fd7\u5982\u4f55\u8fdb\u884c\u4e8c\u6b21\u5904\u7406</li> <li>k8s\u63a7\u5236\u65e5\u5fd7\u5305\u542b\u7c7b\u4f3c\u524d\u7f00\uff0c\u6bd4\u5982 <code>kube-apiserver-audit-xxx</code> \u548c <code>kube-apiserver-xxxx</code> \uff0c\u5e76\u4e14\u524d\u8005\u662fjson\u683c\u5f0f\u65e5\u5fd7\uff0c\u540e\u8005\u662f\u884c\u65e5\u5fd7\uff0c\u5982\u4f55\u8fdb\u884c\u533a\u5206\u5bfc\u51fa\u5230\u4e0d\u540c prefix \u8def\u5f84\uff0c\u6216\u8005\u5bfc\u51fa\u540e\u5982\u4f55\u8fdb\u884c\u4e8c\u6b21\u5904\u7406\uff0c\u53c2\u8003\uff1a stream-k8s-control-panel-logs-to-s3 </li> <li>\u5bfc\u51fa\u6d88\u606f\u683c\u5f0f\u95ee\u9898\u5f85\u89e3\u51b3 athena-sample-query </li> </ul>","tags":["aws/mgmt/cloudwatch","aws/storage/s3"]},{"location":"EKS/solutions/logging/grafana-loki/","title":"Using Grafana Loki for Logging","text":"<p>Loki is a backend store for long-term log retention</p>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#diagram-for-distributed-microservices","title":"diagram for distributed microservices","text":"<p>refer: loki.excalidraw</p>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#walkthrough","title":"walkthrough","text":"","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#prerequisites","title":"prerequisites","text":"<ul> <li>ekscluster <ul> <li>eks cluster</li> </ul> </li> <li> <p>addons needed </p> <ul> <li>ebs-for-eks </li> <li>aws-load-balancer-controller </li> <li>metrics-server </li> <li>install-prometheus-operator </li> </ul> </li> <li> <p>this lab will ingest ELB access log for performance testing (see tools-) <pre><code>ELB_LOG_BUCKET=elb-access-log-$RANDOM\nLOKI_BUCKET=loki-bucket-$RANDOM\naws s3 mb s3://${ELB_LOG_BUCKET}\naws s3 mb s3://${LOKI_BUCKET}\n</code></pre></p> </li> <li> <p>add helm repo <pre><code>helm repo add grafana https://grafana.github.io/helm-charts\n</code></pre></p> </li> <li> <p>create sa for loki (git/git-mkdocs/CLI/linux/eksctl) <pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=ap-southeast-1\nNAMESPACE=loki\nLOKI_SA_NAME=role-loki-sa\ncreate-iamserviceaccount -s ${LOKI_SA_NAME} -c ${CLUSTER_NAME} -n ${NAMESPACE} -r false\n</code></pre></p> </li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#loki","title":"loki","text":"<ul> <li>select one sub-chapter to install </li> <li>grafana/loki chat \u63d0\u4f9b 3 \u79cd\u90e8\u7f72\u6a21\u5f0f\uff1a <ul> <li>singlebinary, </li> <li>simple-scaleable (default), suitable for up to 1TB/day</li> <li>distributed, suitable for over 1TB/day</li> </ul> </li> <li>\u5e76\u63d0\u4f9b\u591a\u79cd loki \u914d\u7f6e\u751f\u6210\u65b9\u6cd5<ul> <li>\u9ed8\u8ba4\u4f7f\u7528 template value \u751f\u6210 loki config</li> <li>\u4f7f\u7528 <code>structuredConfig</code> \u81ea\u5b9a\u4e49 loki config</li> <li>\u5916\u90e8\u5b9a\u4e49 secret or cm\uff0c\u4f7f\u7528 <code>configObjectName</code> \u5f15\u7528</li> </ul> </li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#distributed","title":"distributed","text":"<ul> <li> <p>using default values of loki-distributed chat <pre><code>helm upgrade -i loki grafana/loki-distributed --namespace loki --create-namespace\n</code></pre></p> </li> <li> <p>use customized values to install <pre><code>echo ${AWS_DEFAULT_REGION}\necho ${ELB_LOG_BUCKET}\necho ${LOKI_BUCKET}\necho ${LOKI_SA_NAME}\n\n# values based on grafana/loki chat, not grafana/loki-distributed chat\nenvsubst &gt; loki-distributed.yaml &lt;&lt;-EOF\ndeploymentMode: Distributed\n\nserviceAccount:\n  create: false\n  name: ${LOKI_SA_NAME}\n\nloki:\n  auth_enabled: false\n  useTestSchema: true\n  testSchemaConfig:\n    configs:\n\n      - from: 2024-04-01\n        store: tsdb\n        # object_store: '{{ include \"loki.testSchemaObjectStore\" . }}'\n        object_store: 's3'\n        schema: v13\n        index:\n          prefix: index_\n          period: 24h\n  storage_config:\n    object_prefix: \"s3prefix\"\n  storage:\n    bucketNames:\n      chunks: '${LOKI_BUCKET}'\n      ruler: '${LOKI_BUCKET}'\n      admin: '${LOKI_BUCKET}'\n    type: s3\n    s3:\n      region: '${AWS_DEFAULT_REGION}'\n      insecure: false\n      s3ForcePathStyle: false\n  commonConfig:\n    path_prefix: /var/loki\n    replication_factor: 1\n  limits_config:\n    ingestion_rate_mb: 19\n    ingestion_burst_size_mb: 29\n  ingester: \n    # max_transfer_retries: 0 # move this option to ingester.Config\n    chunk_encoding: snappy # gzip / flate\n    chunk_idle_period: 1h\n    chunk_target_size: 524288 # default 1.5MB, advice 512KB - 1MB for lower amount of logging\n    max_chunk_age: 2h\n    chunk_retain_period: 5m\n  compactor:\n    # shared_store: s3 # move this option to compactor.Config\n    apply_retention_interval: 48h\n    compaction_interval: 2h # lower value will cause chunk update to s3 more frequently \n    retention_enabled: true\n    delete_request_store: s3\n    # retention_delete_worker_count: 100\n    # working_directory: /loki/compactor\n\nchunksCache:\n  enabled: false\nwrite:\n  enabled: false\n  replicas: 0\nread:\n  enabled: false\n  replicas: 0\nbackend:\n  enabled: false\n  replicas: 0\n\ngateway:\n  enabled: true\n  replicas: 2\n  ingress:\n    enabled: true\n    ingressClassName: 'alb'\n    annotations: \n      alb.ingress.kubernetes.io/scheme: internet-facing\n      # alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=${ELB_LOG_BUCKET},access_logs.s3.prefix=\n    hosts:\n\n      - host: '*.${AWS_DEFAULT_REGION}.elb.amazonaws.com'\n        paths:\n          - path: /\n            pathType: Prefix\n  basicAuth:\n    enabled: false\n\ningester:\n  enabled: true\n  replicas: 2\n  maxUnavailable: 1\n  auth_enabled: false\n  persistence:\n    # -- Enable creating PVCs which is required when using boltdb-shipper\n    enabled: true # best to have due to we keep chunk more logger time locally\n    # -- Use emptyDir with ramdisk for storage. **Please note that all data in ingester will be lost on pod restart**\n    inMemory: false\n    # -- List of the ingester PVCs\n    # @notationType -- list\n    claims:\n\n      - name: data\n        size: 50Gi\n    enableStatefulSetAutoDeletePVC: false # default false\n    whenDeleted: Retain # default Retain\n    whenScaled: Retain\n  Config: \n    max_transfer_retries: 0 # mandortory\n  zoneAwareReplication:\n    # -- Enable zone awareness.\n    enabled: false\n\ndistributor:\n  enabled: true\n  replicas: 2\n  maxUnavailable: 1\n\nquerier:\n  enabled: true\n  replicas: 3\n  maxUnavailable: 1\n\nqueryFrontend:\n  enabled: true\n  replicas: 2\n  maxUnavailable: 1\n\n# backend target: QS/IG/C/R\nqueryScheduler:\n  enabled: true\n  replicas: 2\nindexGateway:\n  enabled: true\n  replicas: 2\n  maxUnavailable: 1\ncompactor:\n  enabled: true\n  replicas: 1\n  Config:\n    shared_store: s3 # mandortory\nruler:\n  enabled: true\n  replicas: 2\n  maxUnavailable: 1\n\nEOF\n\nhelm upgrade -i -f loki-distributed.yaml loki grafana/loki -n ${NAMESPACE} \n</code></pre></p> </li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#simple-scalable-deprecated","title":"simple-scalable (deprecated)","text":"<ul> <li>values yaml file for install <pre><code>echo ${AWS_DEFAULT_REGION}\necho ${ELB_LOG_BUCKET}\necho ${LOKI_BUCKET}\necho ${LOKI_SA_NAME}\n\n# values based on grafana/loki chat, not grafana/loki-simple-scalable chat\nenvsubst &gt; loki-simple.yaml &lt;&lt;-EOF\ndeploymentMode: SimpleScalable\n\nserviceAccount:\n  create: false\n  name: ${LOKI_SA_NAME}\n\nloki:\n  auth_enabled: false\n  useTestSchema: true\n  testSchemaConfig:\n    configs:\n\n      - from: 2024-04-01\n        store: tsdb\n        object_store: s3\n        schema: v13\n        index:\n          prefix: index_\n          period: 24h\n  storage:\n    bucketNames:\n      chunks: '${LOKI_BUCKET}'  \n      ruler: '${LOKI_BUCKET}'\n      admin: '${LOKI_BUCKET}'\n    type: s3\n    s3:\n      region: '${AWS_DEFAULT_REGION}'\n      insecure: false\n      s3ForcePathStyle: false\n\n  # storageConfig:\n  #   # boltdb_shipper:\n  #   #   shared_store: filesystem\n  #   #   active_index_directory: /var/loki/index\n  #   #   cache_location: /var/loki/cache\n  #   #   cache_ttl: 168h\n  #   tsdb_shipper:\n  #     active_index_directory: /loki/index\n  #     cache_location: /loki/index_cache\n  #   aws:\n  #     s3: s3://us-west-2/loki-bucket-16127\n\n  commonConfig:\n    path_prefix: /var/loki\n    replication_factor: 1\n  limits_config:\n    ingestion_rate_mb: 20\n    ingestion_burst_size_mb: 30\n  compactor:\n    apply_retention_interval: 1h\n    compaction_interval: 5m\n    retention_delete_worker_count: 500\n    retention_enabled: true\n    shared_store: s3\n\nchunksCache:\n  enabled: false\nwrite:\n  replicas: 3\nread:\n  replicas: 2\nbackend:\n  replicas: 2\ngateway:\n  replicas: 2\n  ingress:\n    enabled: true\n    ingressClassName: 'alb'\n    annotations: \n      alb.ingress.kubernetes.io/scheme: internet-facing\n      #alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=${ELB_LOG_BUCKET},access_logs.s3.prefix=\n    hosts:\n\n      - host: '*.${AWS_DEFAULT_REGION}.elb.amazonaws.com'\n        paths:\n          - path: /\n            pathType: Prefix\n  basicAuth:\n    enabled: false\nEOF\n\nhelm upgrade -i -f loki-simple.yaml loki grafana/loki -n ${NAMESPACE}\n</code></pre></li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#loki-stack","title":"loki-stack","text":"<ul> <li>\u65b0\u96c6\u7fa4\u6ca1\u6709\u5b89\u88c5 prometheus \u6216\u8005 grafana</li> <li>\u76f4\u63a5\u5b89\u88c5 <code>grafana/loki-stack</code>\uff0c\u5e76\u4e14 enable \u5b89\u88c5 grafana \u548cprometheus\uff0c\u9ed8\u8ba4 loki \u7684 datasource \u5c31\u53ef\u4ee5\u7528\uff0c\u624b\u5de5\u6dfb\u52a0 data source \u4fdd\u5b58\u540e\u9a8c\u8bc1\u5931\u8d25\uff0c\u4f46\u662f\u53ef\u4ee5\u67e5\u8be2\u5230\u6570\u636e</li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#promtail","title":"promtail","text":"<ul> <li>alternatives: fluent-bit / fluentd </li> <li>customized for promtail, change client url if you deploy loki components with distributed mode <pre><code>cat &gt;promtail.values &lt;&lt;-EOF\nconfig:\n  clients:\n    - url: http://loki-gateway/loki/api/v1/push # loki-gateway.loki.svc.cluster.local\nEOF\nhelm upgrade -i promtail -f promtail.values grafana/promtail -n loki\n</code></pre></li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#sample-pod-to-generate-logs","title":"sample pod to generate logs","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-logging\nspec:\n  selector:\n    matchLabels:\n      app: myapp-logging\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: myapp-logging\n    spec:\n      containers:\n\n      - name: myapp-logging\n        image: ubuntu\n        command: \n        - 'bash'\n        - '-c'\n        - 'while true ; do echo `date +%Y-%m-%dT%H:%M:%S.%NZ` \"a682775d0d85649f5b0d42f3b9f6896a 35.95.65.104:${RANDOM} 10.10.108.62:${RANDOM} 0.000301 0.000009 0.000017 - - 135 163 \\\"- - - \\\" \\\"-\\\" - -\"; sleep 0.02; done'\n</code></pre>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#dashboard-","title":"dashboard-","text":"<ul> <li>18042 v2 loki dashboard</li> <li>12019 - quick search - good for try<ul> <li>change to <code>{namespace=\"$namespace\", pod=~\"$pod\"} |~ \"$search\"</code> in Logs Panel definition</li> </ul> </li> <li>loki-stack will have some predefined dashboard - https://artifacthub.io/packages/helm/grafana/loki-stack </li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#tools-","title":"tools-","text":"<ul> <li> <p>docker build from git root <pre><code>docker build . -f tools/lambda-promtail/Dockerfile -t lambda-promtail\n</code></pre></p> </li> <li> <p>login ecr and put to repo ecr-cmd</p> </li> <li> <p>cloudformation for s3 <pre><code>WRITE_ADDR=http://k8s-loki-lokigate-xxxx.elb.amazonaws.com/loki/api/v1/push\nECR_URI=123456789012.dkr.ecr.ap-southeast-1.amazonaws.com/lambda-promtail:latest\necho ${AWS_DEFAULT_REGION}\necho ${ELB_LOG_BUCKET}\n\naws cloudformation create-stack --stack-name lambda-promtail-stack \\\n    --template-body file://./tools/lambda-promtail/template.yaml \\\n    --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \\\n    --disable-rollback \\\n    --parameters ParameterKey=WriteAddress,ParameterValue=${WRITE_ADDR} \\\n    ParameterKey=LambdaPromtailImage,ParameterValue=${ECR_URI} \\\n    ParameterKey=TenantID,ParameterValue=tenant-a \\\n    ParameterKey=SkipTlsVerify,ParameterValue=\"true\" \\\n    ParameterKey=EventSourceS3Bucket,ParameterValue=\"${ELB_LOG_BUCKET}\"\n</code></pre></p> </li> <li> <p>using terraform to deploy promtail in lambda (loki github) </p> </li> <li> <p>change lambda execution time to 15min</p> </li> <li>enable access log in ELB (refer: aws-elb-elastic-load-balancer)</li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#3-modes","title":"3 Modes","text":"","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#monolithic","title":"Monolithic","text":"<ul> <li>NO IG / QS in this mode </li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#microservices-mode","title":"Microservices Mode","text":"<ul> <li> <p>little hard to config </p> </li> <li> <p>ingester: sts / per node affinity</p> </li> <li>querier: sts / per node affinity</li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#simplescalable-mode-deprecated","title":"SimpleScalable Mode (deprecated)","text":"<p>https://github.com/grafana/helm-charts/tree/main/charts/loki-simple-scalable</p> <ul> <li> <p>architecture </p> </li> <li> <p>easy to use </p> </li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#refer","title":"refer","text":"<ul> <li>https://cloud.tencent.com/developer/article/2307121</li> <li>https://grafana.com/docs/loki/latest/get-started/components/</li> <li>https://grafana.com/docs/loki/latest/setup/install/helm/install-microservices/</li> <li>https://github.com/grafana/loki/issues/9131</li> <li>https://grafana.com/blog/2020/04/21/how-labels-in-loki-can-make-log-queries-faster-and-easier/</li> <li>flowlog: https://medium.com/qonto-way/building-a-comprehensive-and-cost-efficient-network-observability-platform-using-grafana-loki-aad4f4d9a7f</li> <li></li> </ul>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/grafana-loki/#sample","title":"sample","text":"<pre><code>loki:\n  auth_enabled: false\nminio:\n  enabled: true\n</code></pre>","tags":["grafana/loki"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/","title":"Stream EKS Control Panel Logs to S3","text":"","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#background","title":"background","text":"<p>\u76ee\u524d eks \u63a7\u5236\u5e73\u9762\u65e5\u5fd7\u53ea\u652f\u6301\u53d1\u9001\u5230 cloudwatch\uff0c\u4e14\u5728\u540c\u4e00\u4e2a log group \u4e2d\u6709 5 \u79cd\u7c7b\u578b 6\u79cd\u524d\u7f00\u7684 log stream \u7684\u65e5\u5fd7\uff0c\u4e0d\u5229\u4e8e\u7edf\u4e00\u67e5\u8be2\u3002\u4e14\u53ea\u6709 audit \u65e5\u5fd7\u662f json \u683c\u5f0f\u5176\u4ed6\u5747\u662f\u5355\u884c\u65e5\u5fd7\uff0c\u4e14\u5b57\u6bb5\u5404\u4e0d\u76f8\u540c\u3002</p> <ul> <li>kube-apiserver-audit</li> <li>kube-apiserver</li> <li>kube-scheduler</li> <li>authenticator</li> <li>kube-controller-manager</li> <li>cloud-controller-manager</li> </ul>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#requirement","title":"requirement","text":"<p>\u5ba2\u6237\u9700\u6c42\uff1a</p> <ol> <li>\u7b80\u5355 - \u5df2\u6709 splunk \u65e5\u5fd7\u5e73\u53f0\uff0c\u4e0d\u5e0c\u671b\u4f7f\u7528 opensearch \u7b49\u5176\u4ed6\u65e5\u5fd7\u5e73\u53f0\uff0c\u4fdd\u8bc1\u8fd0\u7ef4\u7b80\u5316</li> <li>\u5b9e\u65f6 - \u9700\u8981\u6709\u65b9\u6cd5\u5c06\u65e5\u5fd7\u8fd1\u5b9e\u65f6\u5730\u53d1\u9001\u5230S3\uff0c\u53ef\u4ee5\u901a\u8fc7 splunk \u8fdb\u884c\u67e5\u8be2\u548c\u5b9e\u65f6\u544a\u8b66\u3002export cloudwatch \u65e5\u5fd7\u7684\u65b9\u5f0f\uff0c\u5b9e\u65f6\u6027\u65e0\u6cd5\u6ee1\u8db3\uff0c\u4e14\u540c\u6837\u9700\u8981\u989d\u5916\u5b9e\u73b0 export \u7aef\u70b9\u7eed\u5bfc\u7684\u95ee\u9898</li> <li>\u4e8c\u6b21\u5904\u7406 - \u672a\u6765\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u65e5\u5fd7\u8fdb\u884c\u67e5\u8be2\u53ca\u5173\u952e\u5b57\u6bb5\u63d0\u53d6\u65b9\u4fbf\u8fdb\u884c\u5206\u6790\u548c\u544a\u8b66</li> <li>\u6210\u672c\u548c\u5b89\u5168 - \u6210\u672c\u63a7\u5236\uff0c\u9ad8\u5b89\u5168\u6027\uff0c\u652f\u6301\u591a\u8d26\u53f7</li> </ol>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#architecture","title":"architecture","text":"","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#walkthrough","title":"walkthrough","text":"","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#eks-cluster","title":"eks cluster","text":"<ul> <li>need an EKS cluster and enable log to cloudwatch</li> </ul>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#s3","title":"s3","text":"<ul> <li>\u521b\u5efas3\u6876</li> </ul> <pre><code>export AWS_PAGER=\"\"\nexport AWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nexport AWS_DEFAULT_REGION=${AWS_REGION}\nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity \\\n--query \"Account\" --output text)\n\nUNIQ=$(date +%Y%m%d%H%M)\nBUCKET_NAME=centrallog-$UNIQ\nS3_PREFIX=\"CentralizedAccountLogs\"\naws s3 mb s3://${BUCKET_NAME}\n\nATHENA_BUCKET_NAME=athena-$UNIQ\naws s3 mb s3://${ATHENA_BUCKET_NAME}\n</code></pre>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#lambda","title":"lambda","text":"<ul> <li>\u521b\u5efa\u51fd\u6570\u6240\u9700\u89d2\u8272</li> <li>\u4e0b\u8f7d\u5b9a\u5236 lambda \u4ee3\u7801 \u548c layer \uff08\u53c2\u89c1cloudwatch-to-firehose-python\uff09<ul> <li>lambda_function.py </li> <li>package.zip </li> </ul> </li> <li>\u521b\u5efa\u51fd\u6570\u5e76\u83b7\u53d6arn</li> </ul> <pre><code>echo ${AWS_REGION} ${UNIQ}\nLAMBDA_NAME=firehose-lambda-${UNIQ}\n\nif [[ ${AWS_REGION%%-*} == \"cn\" ]]; then\n  ARN_PREFIX=\"aws-cn\"\nelse\n  ARN_PREFIX=\"aws\"\nfi\n\n# create lambda role\nLAMBDA_ROLE_NAME=${LAMBDA_NAME}-role-${UNIQ}\necho '{\"Version\": \"2012-10-17\",\"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}, \"Action\": \"sts:AssumeRole\"}]}' |tee lambda-role-trust-policy.json\naws iam create-role --role-name ${LAMBDA_ROLE_NAME} --assume-role-policy-document file://lambda-role-trust-policy.json\n\nenvsubst &gt;lambda-role-policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"firehose:PutRecord\",\n                \"firehose:PutRecordBatch\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:${ARN_PREFIX}:firehose:${AWS_REGION}:${AWS_ACCOUNT_ID}:deliverystream/*\"\n        }\n    ]\n}\nEOF\n\nLAMBDA_POLICY_ARN=$(aws iam create-policy \\\n--policy-name ${LAMBDA_ROLE_NAME} \\\n--policy-document file://lambda-role-policy.json |jq -r '.Policy.Arn')\n\naws iam attach-role-policy --role-name ${LAMBDA_ROLE_NAME} --policy-arn ${LAMBDA_POLICY_ARN}\naws iam attach-role-policy --role-name ${LAMBDA_ROLE_NAME} --policy-arn arn:${ARN_PREFIX}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\naws iam attach-role-policy --role-name ${LAMBDA_ROLE_NAME} --policy-arn arn:${ARN_PREFIX}:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole\nLAMBDA_ROLE_ARN=$(aws iam get-role --role-name ${LAMBDA_ROLE_NAME} |jq -r '.Role.Arn')\n\n# download code and create lambda\n# wget -O lambda_function.py https://github.com/panlm/aws-labs/raw/main/eks-cloudwatch-log-firehose-s3/lambda_function.py\nzip lambda_function.zip ./lambda_function.py\n\nsleep 10\naws lambda create-function \\\n    --function-name ${LAMBDA_NAME} \\\n    --runtime python3.8 \\\n    --timeout 60 \\\n    --zip-file fileb://lambda_function.zip \\\n    --handler lambda_function.lambda_handler \\\n    --role ${LAMBDA_ROLE_ARN}\n\nLAMBDA_ARN=$(aws lambda get-function \\\n    --function-name ${LAMBDA_NAME} \\\n    --query 'Configuration.FunctionArn' --output text)\n\n# download package and create lambda layer\n# wget -O package.zip https://github.com/panlm/aws-labs/raw/main/eks-cloudwatch-log-firehose-s3/package.zip\n\naws lambda publish-layer-version \\\n    --layer-name layer_flatten_json \\\n    --description \"flatten_json\" \\\n    --zip-file fileb://package.zip \\\n    --compatible-runtimes python3.8\nLAYER_ARN=$(aws lambda list-layer-versions \\\n    --layer-name layer_flatten_json \\\n    --query 'LayerVersions[0].LayerVersionArn' --output text)\n\n# add layer to lambda\naws lambda update-function-configuration --function-name ${LAMBDA_NAME} \\\n--layers ${LAYER_ARN}\n</code></pre>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#firehose","title":"firehose","text":"<ul> <li>\u521b\u5efafirehose\u6240\u9700\u89d2\u8272</li> <li>\u521b\u5efafirehose\u5e76\u4e14\u5173\u8054 transform \u51fd\u6570</li> <li>\u83b7\u53d6arn</li> </ul> <pre><code>FIREHOSE_NAME=firehose-${UNIQ}\nFIREHOSE_ROLE_NAME=${FIREHOSE_NAME}-role-${UNIQ}\necho \"LAMBDA_NAME:\"${LAMBDA_NAME} \"LAMBDA_ARN:\"${LAMBDA_ARN} \"AWS_REGION:\"${AWS_REGION} \"ARN_PREFIX:\"${ARN_PREFIX} \"AWS_ACCOUNT_ID:\"${AWS_ACCOUNT_ID} \"BUCKET_NAME:\"${BUCKET_NAME} \"S3_PREFIX:\"${S3_PREFIX}\n\necho '{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"firehose.amazonaws.com\"\n            },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}' |tee firehose-role-trust-policy.json\naws iam create-role --role-name ${FIREHOSE_ROLE_NAME} \\\n  --assume-role-policy-document file://firehose-role-trust-policy.json\n\nenvsubst &gt;firehose-role-policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketLocation\",\n                \"s3:GetObject\",\n                \"s3:ListBucket\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:${ARN_PREFIX}:s3:::${BUCKET_NAME}\",\n                \"arn:${ARN_PREFIX}:s3:::${BUCKET_NAME}/*\"\n            ]\n        },\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"lambda:InvokeFunction\",\n                \"lambda:GetFunctionConfiguration\"\n            ],\n            \"Resource\": \"arn:${ARN_PREFIX}:lambda:${AWS_REGION}:${AWS_ACCOUNT_ID}:function:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%\"\n        },\n        {\n            \"Sid\": \"\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"arn:${ARN_PREFIX}:logs:${AWS_REGION}:${AWS_ACCOUNT_ID}:log-group:/aws/kinesisfirehose/${FIREHOSE_NAME}:log-stream:*\",\n                \"arn:${ARN_PREFIX}:logs:${AWS_REGION}:${AWS_ACCOUNT_ID}:log-group:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%:log-stream:*\"\n            ]\n        }\n    ]\n}\nEOF\n\nsed -i '/:function:/s/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%/'\"${LAMBDA_NAME}\"':$LATEST/' firehose-role-policy.json\n\nFIREHOSE_POLICY_ARN=$(aws iam create-policy \\\n--policy-name ${FIREHOSE_ROLE_NAME} \\\n--policy-document file://firehose-role-policy.json |jq -r '.Policy.Arn')\n\naws iam attach-role-policy \\\n--role-name ${FIREHOSE_ROLE_NAME} \\\n--policy-arn ${FIREHOSE_POLICY_ARN}\naws iam list-attached-role-policies --role-name ${FIREHOSE_ROLE_NAME}\n\nFIREHOSE_ROLE_ARN=$(aws iam get-role --role-name ${FIREHOSE_ROLE_NAME} |jq -r '.Role.Arn')\n\nsleep 10\naws firehose create-delivery-stream \\\n--delivery-stream-name ${FIREHOSE_NAME} \\\n--delivery-stream-type \"DirectPut\" \\\n--extended-s3-destination-configuration \"RoleARN=${FIREHOSE_ROLE_ARN},BucketARN=arn:aws:s3:::${BUCKET_NAME},Prefix=${S3_PREFIX}/,ErrorOutputPrefix=${S3_PREFIX}_failed/,BufferingHints={SizeInMBs=2,IntervalInSeconds=120},CompressionFormat=GZIP,EncryptionConfiguration={NoEncryptionConfig=NoEncryption},CloudWatchLoggingOptions={Enabled=true,LogGroupName=${FIREHOSE_ROLE_NAME},LogStreamName=${FIREHOSE_ROLE_NAME}},ProcessingConfiguration={Enabled=true,Processors=[{Type=Lambda,Parameters=[{ParameterName=LambdaArn,ParameterValue=${LAMBDA_ARN}:\\$LATEST},{ParameterName=BufferSizeInMBs,ParameterValue=1},{ParameterName=BufferIntervalInSeconds,ParameterValue=60}]}]}\"\n\n# no lambda for data transform\n# --s3-destination-configuration \"RoleARN=${role_arn},BucketARN=arn:aws:s3:::${bucket_name},Prefix=CentralizedAccountLogs/,ErrorOutputPrefix=CentralizedAccountLogs_failed/,BufferingHints={SizeInMBs=1,IntervalInSeconds=60},CompressionFormat=UNCOMPRESSED,EncryptionConfiguration={NoEncryptionConfig=NoEncryption},CloudWatchLoggingOptions={Enabled=true,LogGroupName=${role_name},LogStreamName=${role_name}}\"\n\nFIREHOSE_ARN=$(aws firehose describe-delivery-stream \\\n--delivery-stream-name ${FIREHOSE_NAME} \\\n--query \"DeliveryStreamDescription.DeliveryStreamARN\" --output text)\n\nwhile true ; do\n  FIREHOSE_STATUS=$(aws firehose describe-delivery-stream --delivery-stream-name ${FIREHOSE_NAME} --query \"DeliveryStreamDescription.DeliveryStreamStatus\" --output text)\n  echo ${FIREHOSE_STATUS}\n  if [[ ${FIREHOSE_STATUS} == \"ACTIVE\" ]]; then\n    break\n  fi\n  sleep 10\ndone\n</code></pre>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#cloudwatch","title":"cloudwatch","text":"<ul> <li>\u521b\u5efacwl\u6240\u9700\u89d2\u8272\u6765\u8bbf\u95eefirehose</li> </ul> <pre><code>CWL_ROLE_NAME=cwl-firehose-role-$UNIQ\necho \"AWS_REGION:\"${AWS_REGION} \"AWS_ACCOUNT_ID:\"${AWS_ACCOUNT_ID} \"ARN_PREFIX:\"${ARN_PREFIX}\n\nif [[ ${AWS_REGION%%-*} == \"cn\" ]]; then\n  DN_SUFFIX=\"com.cn\"\nelse\n  DN_SUFFIX=\"com\"\nfi\n\nenvsubst &gt; cwl-role-trust-policy.json &lt;&lt;-EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"logs.${AWS_REGION}.amazonaws.${DN_SUFFIX}\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOF\naws iam create-role --role-name ${CWL_ROLE_NAME} \\\n  --assume-role-policy-document file://cwl-role-trust-policy.json\n\nenvsubst &gt; cwl-role-policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"firehose:PutRecord\",\n                \"firehose:PutRecordBatch\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:${ARN_PREFIX}:firehose:${AWS_REGION}:${AWS_ACCOUNT_ID}:deliverystream/*\"\n        }\n    ]\n}\nEOF\nCWL_POLICY_ARN=$(aws iam create-policy \\\n--policy-name ${CWL_ROLE_NAME} \\\n--policy-document file://cwl-role-policy.json |jq -r '.Policy.Arn')\naws iam attach-role-policy --role-name ${CWL_ROLE_NAME} \\\n  --policy-arn ${CWL_POLICY_ARN}\naws iam list-attached-role-policies --role-name ${CWL_ROLE_NAME}\n\nCWL_ROLE_ARN=$(aws iam get-role --role-name ${CWL_ROLE_NAME} |jq -r '.Role.Arn')\n</code></pre> <ul> <li>\u6ce8\u518c firehose \u5230 eks \u96c6\u7fa4\u7684 log group \u4e0a</li> </ul> <pre><code>CLUSTER_NAME=ekscluster1\nLOG_GROUP_NAME=/aws/eks/${CLUSTER_NAME}/cluster\n\necho ${CWL_ROLE_ARN} ${FIREHOSE_ARN}\n\naws logs create-log-group \\\n--log-group-name ${LOG_GROUP_NAME}\n\naws logs put-subscription-filter \\\n--log-group-name ${LOG_GROUP_NAME} \\\n--filter-name \"to-firehose\" \\\n--filter-pattern \"\" \\\n--destination-arn ${FIREHOSE_ARN} \\\n--role-arn ${CWL_ROLE_ARN}\n</code></pre>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#glue","title":"glue","text":"<ul> <li>create database in glue catalog <code>testdb</code></li> <li>create crawler</li> </ul>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#using-cli","title":"using cli","text":"<pre><code>database_name=testdb\ns3_uri=\"${bucket_name}/${s3_prefix}/\"\n\ncrawler_role_name=AWSGlueServiceRole-$RANDOM\naws iam create-role --role-name ${crawler_role_name} --assume-role-policy-document '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"glue.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}'\naws iam attach-role-policy --role-name ${crawler_role_name} --policy-arn arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole\n\nenvsubst &gt; crawler-role-policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::${s3_uri}*\"\n            ]\n        }\n    ]\n}\nEOF\ncrawler_policy_arn=$(aws iam create-policy \\\n--policy-name ${crawler_role_name} \\\n--policy-document file://crawler-role-policy.json |jq -r '.Policy.Arn')\naws iam attach-role-policy --role-name ${crawler_role_name} \\\n  --policy-arn ${crawler_policy_arn}\ncrawler_role_arn=$(aws iam get-role --role-name ${crawler_role_name} |jq -r '.Role.Arn')\n\naws glue create-database \\\n    --database-input '{\"Name\":\"'\"${database_name}\"'\"}'\n\nsleep 10\ncrawler_name=c1-$RANDOM\naws glue create-crawler --name ${crawler_name} \\\n--role ${crawler_role_arn} \\\n--database-name ${database_name} \\\n--targets '{\n  \"S3Targets\": [\n    {\n      \"Path\": \"s3://'\"${s3_uri}\"'\"\n    }\n  ]\n}'\n\n# run crawler later\n# aws glue start-crawler --name ${crawler_name}\n</code></pre>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#using-ui","title":"using ui","text":"","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#databrew","title":"databrew","text":"","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#using-cli_1","title":"using cli","text":"<ul> <li>download recipe first<ul> <li>cwl-recipe.json <pre><code>databrew_name=cwl-$RANDOM\ndatabrew_output=parquet-$RANDOM\n\n# \"Json={MultiLine=false}\": json line, not json document\naws databrew create-dataset \\\n--name ${databrew_name} \\\n--format JSON \\\n--format-options \"Json={MultiLine=false}\" \\\n--input \"S3InputDefinition={Bucket=${bucket_name},Key=${s3_prefix}/}\"\n\n# wget -O cwl-recipe.json 'https://github.com/panlm/aws-labs/raw/main/eks-cloudwatch-log-firehose-s3/cwl-recipe.json'\naws databrew create-recipe \\\n--name ${databrew_name} \\\n--steps file://cwl-recipe.json\n\naws databrew publish-recipe \\\n--name ${databrew_name}\n\ndatabrew_role_name=AWSGlueDataBrewServiceRole-$RANDOM\naws iam create-role --role-name ${databrew_role_name} --assume-role-policy-document '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"databrew.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}'\naws iam attach-role-policy --role-name ${databrew_role_name} --policy-arn arn:aws:iam::aws:policy/service-role/AWSGlueDataBrewServiceRole\naws iam attach-role-policy --role-name ${databrew_role_name} --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess\ndatabrew_role_arn=$(aws iam get-role --role-name ${databrew_role_name} |jq -r '.Role.Arn')\n\nsleep 10\n# this command will failed when bucket is empty\n# aws s3 ls --recursive s3://${bucket_name}/${s3_prefix}/\naws databrew create-recipe-job \\\n--dataset-name ${databrew_name} \\\n--name ${databrew_name} \\\n--recipe-reference 'Name='\"${databrew_name}\"',RecipeVersion=1.0' \\\n--outputs \"Format=PARQUET,Location={Bucket=${bucket_name},Key=${databrew_output}/},Overwrite=true\" \\\n--role-arn ${databrew_role_arn}\n\naws databrew create-schedule \\\n--cron-expression 'Cron(*/15 * * * ? *)' \\\n--name per15min-${databrew_name} \\\n--job-names ${databrew_name}\n</code></pre></li> </ul> </li> </ul> <p>create another crawler and query with athena <pre><code>s3_uri_2=\"${bucket_name}/${databrew_output}/\"\n\ncrawler_role_name_2=AWSGlueServiceRole-$RANDOM\naws iam create-role --role-name ${crawler_role_name_2} --assume-role-policy-document '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"glue.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}'\naws iam attach-role-policy --role-name ${crawler_role_name_2} --policy-arn arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole\n\nenvsubst &gt; crawler-role-policy.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::${s3_uri_2}*\"\n            ]\n        }\n    ]\n}\nEOF\ncrawler_policy_arn_2=$(aws iam create-policy \\\n--policy-name ${crawler_role_name_2} \\\n--policy-document file://crawler-role-policy.json |jq -r '.Policy.Arn')\naws iam attach-role-policy --role-name ${crawler_role_name_2} \\\n  --policy-arn ${crawler_policy_arn_2}\ncrawler_role_arn_2=$(aws iam get-role --role-name ${crawler_role_name_2} |jq -r '.Role.Arn')\n\nsleep 10\ncrawler_name_2=parquet-${crawler_name}\naws glue create-crawler --name ${crawler_name_2} \\\n--role ${crawler_role_arn_2} \\\n--database-name ${database_name} \\\n--targets '{\n  \"S3Targets\": [\n    {\n      \"Path\": \"s3://'\"${s3_uri_2}\"'\"\n    }\n  ]\n}'\n\n# run crawler later\n# awtart-crawler --name ${crawler_name_2}\n</code></pre></p> <p>check databrew job status <pre><code>aws databrew start-job-run --name ${databrew_name}\naws databrew list-job-runs --name ${databrew_name}\n</code></pre></p> <p>if job status is <code>SUCCEEDED</code>, start crawler to create catalog in glue <pre><code>aws glue start-crawler --name ${crawler_name}\naws glue start-crawler --name ${crawler_name_2}\n</code></pre></p>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#using-ui_1","title":"using ui","text":"<ul> <li> <p>import recipe</p> <ul> <li>download </li> </ul> </li> <li> <p>create dataset from s3 or glue catalog </p> </li> <li> <p>create project from this dataset and using existed recipe </p> </li> </ul> <p></p> <ul> <li>create job as you need</li> </ul>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#athena","title":"athena","text":"<p>this table is created by firehose </p> <p>this table is created by databrew job </p>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#conclusion","title":"conclusion","text":"<p>\u6ee1\u8db3\u5ba2\u6237\u9700\u6c42\uff0c\u57fa\u4e8e\u76ee\u524ds3\u4e2d\u4fdd\u5b58\u7684\u539f\u59cb\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u5b57\u6bb5\u62c6\u5206\u7b49\u4e8c\u6b21\u5904\u7406\uff0c\u672a\u6765\u53ef\u4ee5\u4f7f\u7528aws databrew\u8fdb\u884c\u66f4\u590d\u6742\u7684\u5904\u7406</p>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#alternative","title":"alternative","text":"<ul> <li>export-cloudwatch-log-group-to-s3 </li> </ul>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/logging/stream-k8s-control-panel-logs-to-s3/#reference","title":"reference","text":"<ul> <li>https://aws.amazon.com/blogs/architecture/stream-amazon-cloudwatch-logs-to-a-centralized-account-for-audit-and-analysis/<ul> <li>https://github.com/aws-samples/amazon-cloudwatch-log-centralizer</li> </ul> </li> <li>https://aws.amazon.com/premiumsupport/knowledge-center/kinesis-firehose-cloudwatch-logs/</li> <li>https://www.chaossearch.io/blog/cloudwatch2s3-an-easy-way-to-get-your-logs-to-aws-s3</li> <li>eks-control-panel-log-cwl-firehose-opensearch</li> <li>cloudwatch-firehose-splunk</li> <li>eks-loggroup-description</li> <li>Subscription filters with Amazon Kinesis Data Firehose<ul> <li>https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/SubscriptionFilters.html#FirehoseExample</li> <li>https://docs.amazonaws.cn/en_us/AmazonCloudWatch/latest/logs/SubscriptionFilters.html#FirehoseExample</li> </ul> </li> <li>Validated IAM Service Principal List<ul> <li>https://gist.github.com/shortjared/4c1e3fe52bdfa47522cfe5b41e5d6f22</li> <li>https://github.com/henrysher/aws-china-iam-service-principal-list</li> <li>https://github.com/aws/aws-cdk/issues/1282#issuecomment-444513107</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/analytics/kinesis/firehose","aws/storage/s3","aws/analytics/glue/databrew"]},{"location":"EKS/solutions/monitor/eks-container-insights/","title":"EKS Container Insights","text":"","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/monitor/eks-container-insights/#install","title":"install","text":"","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/monitor/eks-container-insights/#using-managed-addon","title":"using managed addon","text":"<ul> <li>attached additional policy to node role (docs)<ul> <li>CloudWatchAgentServerPolicy</li> <li>AWSXrayWriteOnlyAccess</li> </ul> </li> <li>install cloudwatch observibility addon <pre><code>CLUSTER_NAME=\nADDON_DEFAULT_VERSION=$(aws eks describe-addon-versions --addon-name amazon-cloudwatch-observability --kubernetes-version \"1.30\" --query 'addons[].addonVersions[?compatibilities[?defaultVersion==`true`]].addonVersion' --output text)\naws eks create-addon --cluster-name ${CLUSTER_NAME} \\\n--addon-name amazon-cloudwatch-observability --addon-version ${ADDON_DEFAULT_VERSION} \\\n--resolve-conflicts OVERWRITE\n</code></pre></li> <li>it consists: <ul> <li>../../addons/aws-for-fluent-bit</li> <li>cloudwatch agent</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/monitor/eks-container-insights/#from-cli","title":"from CLI","text":"<ol> <li>replace 2 service accounts with CloudWatchAgentServerPolicy <pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=us-east-2\neksctl utils associate-iam-oidc-provider --cluster ${CLUSTER_NAME} --approve\n</code></pre></li> </ol> <pre><code>eksctl create iamserviceaccount \\\n    --name cloudwatch-agent \\\n    --namespace amazon-cloudwatch \\\n    --cluster ${CLUSTER_NAME} \\\n    --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n    --approve \\\n    --override-existing-serviceaccounts\n\neksctl create iamserviceaccount \\\n    --name fluent-bit \\\n    --namespace amazon-cloudwatch \\\n    --cluster ${CLUSTER_NAME} \\\n    --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n    --approve \\\n    --override-existing-serviceaccounts\n</code></pre> <ol> <li>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Container-Insights-setup-EKS-quickstart.html <pre><code>FluentBitHttpPort='2020'\nFluentBitReadFromHead='On'\n[[ ${FluentBitReadFromHead} = 'On' ]] &amp;&amp; FluentBitReadFromTail='Off'|| FluentBitReadFromTail='On'\n[[ -z ${FluentBitHttpPort} ]] &amp;&amp; FluentBitHttpServer='Off' || FluentBitHttpServer='On'\n\noutput=cwqs-1.yaml\ncurl -o $output https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/quickstart/cwagent-fluent-bit-quickstart.yaml \n\n# no more this line from 230819\n# sed -i 's;amazon/cloudwatch-agent;public.ecr.aws/cloudwatch-agent/cloudwatch-agent;' $output\n\n#sed -i 's;amazon/aws-for-fluent-bit:2.10.0;public.ecr.aws/aws-observability/aws-for-fluent-bit:2.28.0;' $output\n\ncat $output | sed 's/{{cluster_name}}/'${CLUSTER_NAME}'/;s/{{region_name}}/'${AWS_DEFAULT_REGION}'/;s/{{http_server_toggle}}/\"'${FluentBitHttpServer}'\"/;s/{{http_server_port}}/\"'${FluentBitHttpPort}'\"/;s/{{read_from_head}}/\"'${FluentBitReadFromHead}'\"/;s/{{read_from_tail}}/\"'${FluentBitReadFromTail}'\"/' | kubectl apply -f - \n\nk get po -n amazon-cloudwatch\n</code></pre></li> </ol> <p>if you do 2 before 1, than need</p> <ul> <li>delete pods which use these service account</li> <li>check cloudtrail for \u201cAccessDeny\u201d events</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/monitor/eks-container-insights/#check-pod-deployment-log","title":"check pod / deployment log","text":"<ul> <li>https://www.eksworkshop.com/intermediate/250_cloudwatch_container_insights/viewlogs/</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/monitor/eks-container-insights/#blog","title":"blog","text":"<ul> <li>https://aws.amazon.com/blogs/containers/diving-into-container-insights-cost-optimizations-for-amazon-eks/</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch"]},{"location":"EKS/solutions/monitor/enable-prometheus-in-cloudwatch/","title":"enable-prometheus-in-cloudwatch","text":"","tags":["aws/container/eks","aws/mgmt/cloudwatch","prometheus"]},{"location":"EKS/solutions/monitor/enable-prometheus-in-cloudwatch/#enable","title":"enable","text":"<pre><code>CLUSTER_NAME=ekscluster1\neksctl create iamserviceaccount \\\n  --cluster ${CLUSTER_NAME} \\\n  --namespace amazon-cloudwatch \\\n  --name cwagent-prometheus \\\n  --attach-policy-arn  arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n  --override-existing-serviceaccounts \\\n  --approve\n\noutput=prom.yaml\ncurl -o $output 'https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/service/cwagent-prometheus/prometheus-eks.yaml'\nsed -i 's;amazon/cloudwatch-agent;public.ecr.aws/cloudwatch-agent/cloudwatch-agent;' $output\nkubectl apply -f $output\n</code></pre>","tags":["aws/container/eks","aws/mgmt/cloudwatch","prometheus"]},{"location":"EKS/solutions/monitor/enable-prometheus-in-cloudwatch/#reference","title":"reference","text":"<ul> <li>https://www.eksworkshop.com/advanced/330_servicemesh_using_appmesh/add_nodegroup_fargate/cloudwatch_setup/#enable-prometheus-metrics-in-cloudwatch</li> </ul>","tags":["aws/container/eks","aws/mgmt/cloudwatch","prometheus"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/","title":"Install Grafana on Beanstalk","text":"","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/#summary","title":"summary","text":"<p>Grafana \u4f5c\u4e3a\u5f00\u6e90\u8f6f\u4ef6\u53ef\u4ee5\u81ea\u7531\u90e8\u7f72\uff0c1\uff09\u5728 ec2 \u4e2d\u624b\u52a8\u90e8\u7f72\uff0c\u9664\u4e86 OS \u548c\u8f6f\u4ef6\u5c42\u9762\u914d\u7f6e\u4e4b\u5916\uff0c\u4e0d\u53ef\u907f\u514d\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u5de5\u4f5c\uff0c\u5305\u62ec vpc \u3001 elb \u5b89\u5168\u7ec4\u7b49\uff1b2\uff09\u5f53\u7136\u4e5f\u6709\u4e9b\u89e3\u51b3\u65b9\u6848\u5c06 Grafana \u90e8\u7f72\u5728 eks \u96c6\u7fa4\u4e0a\u4ee5\u89e3\u51b3\u9ad8\u53ef\u7528\u6027\u95ee\u9898\uff0c\u4f46\u5982\u679c\u53ea\u662f\u5e0c\u671b\u7b80\u5355\u4f7f\u7528\u53ef\u80fd\u4f1a\u6709\u70b9\u6740\u9e21\u7528\u725b\u5200\u7684\u611f\u89c9\uff1b3\uff09\u672c\u6587\u63cf\u8ff0\u4e86\u7528 aws elastic beanstalk \u63d0\u4f9b\u4e00\u7ad9\u5f0f\u5feb\u901f\u90e8\u7f72 Grafana\uff0c\u5e76\u4e14\u4f7f\u7528 efs \u5b9e\u73b0 grafana\u5185\u90e8\u914d\u7f6e\u7684\u6301\u4e45\u5316</p>","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/#grafana-container-on-beanstalk","title":"grafana container on beanstalk","text":"<ul> <li> <p>need efs for storage persistent <pre><code>CLUSTER_NAME=efs0225\nAWS_REGION=us-east-2\n</code></pre></p> </li> <li> <p>create EFS</p> <ul> <li>refer: git/git-mkdocs/CLI/awscli/efs-cmd</li> </ul> </li> <li>mount nfs to instance (link)</li> </ul> <pre><code>echo ${FILESYSTEM_ID}\n</code></pre> <ul> <li> <p>install beanstalk (link) <pre><code>git clone https://github.com/aws/aws-elastic-beanstalk-cli-setup.git\npython ./aws-elastic-beanstalk-cli-setup/scripts/ebcli_installer.py\n# export env variable as instructions\n</code></pre></p> </li> <li> <p>deploy with prebuild image <pre><code>mkdir example-prebuild\ncd example-prebuild\ncat &gt;docker-compose.yml &lt;&lt;-EOF\nversion: \"3.8\"\n\nservices:\n  grafana:\n    image: grafana/grafana-oss\n    volumes:\n\n      - \"/efsmnt/grafana/var-lib-grafana:/var/lib/grafana\"\n      - \"/efsmnt/grafana/var-log-grafana:/var/log/grafana\"\n    ports:\n      - \"80:3000\"\n    restart: always\nEOF\n\nmkdir .ebextensions\n</code></pre> if you just use one pod, reference appendix</p> </li> <li> <p>customize config <code>.ebextensions/efs-mount.config</code> <pre><code>wget -O /tmp/efs-mount.config 'https://github.com/awsdocs/elastic-beanstalk-samples/raw/main/configuration-files/aws-provided/instance-configuration/storage-efs-mountfilesystem.config'\n# regexp different between egrep &amp; sed\n# using '\\s*' to instead will be better\ncat /tmp/efs-mount.config |egrep '^\\s+FILE_SYSTEM_ID: '\nsed -i '/^\\s\\+FILE_SYSTEM_ID: /s/:.*$/: '\"${FILESYSTEM_ID}\"'/' /tmp/efs-mount.config\ncp /tmp/efs-mount.config .ebextensions/\n</code></pre> another sample (link)</p> </li> <li> <p>prep elastic beanstalk <pre><code>APP_NAME=myapp$(date +%m%d)\nENV_NAME=${APP_NAME}-env$(date +%H%M)\neb init -p docker ${APP_NAME} --region ${AWS_REGION}\neb local run --port 3000\neb create ${ENV_NAME}\n\n## after modify config\n## create a new app version\neb appversion -c\n\n## deploy using new appver\neb create --version app-230224_123456789012 app2-env-3\n\n## swap ?\neb swap\n</code></pre></p> </li> <li> <p>others parameters <pre><code>cfg:default.paths.data=/var/lib/grafana cfg:default.paths.logs=/var/log/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins cfg:default.paths.provisioning=/etc/grafana/provisioning\n</code></pre></p> </li> </ul>","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/#grafana-in-ec2","title":"grafana in ec2","text":"<ul> <li> <p>install  <pre><code>cat &gt;/etc/yum.repos.d/grafana.repo &lt;&lt;-EOF\n[grafana]\nname=grafana\nbaseurl=https://rpm.grafana.com\nrepo_gpgcheck=1\nenabled=1\ngpgcheck=1\ngpgkey=https://rpm.grafana.com/gpg.key\nsslverify=1\nsslcacert=/etc/pki/tls/certs/ca-bundle.crt\nexclude=*beta*\nEOF\nsudo yum install -y grafana\nsudo systemctl status grafana-server\nsudo systemctl start grafana-server\n</code></pre></p> </li> <li> <p>prep elb</p> <ul> <li>alb + http3000 port </li> </ul> </li> </ul>","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/#grafana-on-eks","title":"grafana on eks","text":"<ul> <li>https://aws-quickstart.github.io/quickstart-eks-grafana/</li> </ul>","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/#helm","title":"helm","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\n</code></pre>","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-grafana-on-beanstalk/#appendix-single-pod-in-beanstalk","title":"appendix - single pod in beanstalk","text":"<pre><code>cat &gt;Dockerrun.aws.json &lt;&lt;-EOF\n{\n  \"AWSEBDockerrunVersion\": \"1\",\n  \"Image\": {\n    \"Name\": \"grafana/grafana-oss\"\n  },\n  \"Ports\": [\n    {\n      \"ContainerPort\": 3000,\n      \"HostPort\": 3000\n    }\n  ],\n  \"Logging\": \"/usr/local/glassfish5/glassfish/domains/domain1/logs\"\n}\nEOF\n</code></pre>","tags":["grafana"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/","title":"install-prometheus-operator","text":"","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#prep","title":"prep","text":"<ul> <li>../../addons/ebs-for-eks </li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#prefer-install-prometheus-operator","title":"(Prefer) install-prometheus-operator","text":"<ul> <li>https://blog.devgenius.io/step-by-step-guide-to-setting-up-prometheus-operator-in-your-kubernetes-cluster-7167a8228877</li> </ul> <pre><code>DEPLOY_NAME=prom-0225\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n\nNAMESPACE_NAME=prom\nhelm install ${DEPLOY_NAME} prometheus-community/kube-prometheus-stack --namespace ${NAMESPACE_NAME} --create-namespace\n\n# refer defualt value\n# helm show values prometheus-community/kube-prometheus-stack &gt; values_default.yaml\n</code></pre>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#forward-to-local","title":"forward to local","text":"<ul> <li> <p>port forward to cloud9 <pre><code>k get svc/${DEPLOY_NAME}-grafana\nk port-forward svc/${DEPLOY_NAME}-grafana 3000:80 --address='0.0.0.0'\n</code></pre></p> </li> <li> <p>access from your laptop <pre><code># you need AKSK environment variables\nINST_ID=&lt;cloud9_inst_id&gt;\naws ssm start-session --target ${INST_ID} --document-name AWS-StartPortForwardingSession --parameters '{\"localPortNumber\":[\"3000\"],\"portNumber\":[\"3000\"]}'\n\n###\n# access local 3000 with \n# admin / prom-operator\n###\n</code></pre></p> </li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#install-prom-operator-accept-remote-write","title":"install prom operator, accept remote write","text":"<ul> <li>enable remote write receiver: <code>enableRemoteWriteReceiver=true</code> prom.yaml<pre><code>grafana:\n  enabled: true\n  service:\n    type: LoadBalancer\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-type: \"external\"\n      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n  grafana.ini: \n    auth:\n      sigv4_auth_enabled: true \nprometheus:\n  enabled: true\n  service:\n    type: LoadBalancer\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-type: \"external\"\n      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n  prometheusSpec:\n    enableRemoteWriteReceiver: true\n    externalLabels: \n      cluster: \"ekscluster1\"\n      cluster_name: \"ekscluster1\"\n      origin_prometheus: \"ekscluster1\"\n</code></pre></li> </ul> <pre><code>helm install -f prom.yaml ${DEPLOY_NAME} prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace\n</code></pre>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#install-prometheus-only-without-grafana","title":"install prometheus only, without grafana","text":"<pre><code>CLUSTER_NAME=ekscluster4\nDEPLOY_NAME=prom-operator-${CLUSTER_NAME}\nNAMESPACE_NAME=monitoring\n\n# enable grafana and typical prometheus\nenvsubst &gt;values-${CLUSTER_NAME}-1.yaml &lt;&lt;-EOF\ngrafana:\n  enabled: false\nprometheus:\n  prometheusSpec:\n    additionalArgs: \n\n    - name: storage.tsdb.min-block-duration\n      value: 5m\n    - name: storage.tsdb.max-block-duration\n      value: 5m\n    replicas: 2\n    retention: 730h # one month\n    retentionSize: \"100GB\"\n    ruleSelectorNilUsesHelmValues: false\n    serviceMonitorSelectorNilUsesHelmValues: false\n    podMonitorSelectorNilUsesHelmValues: false\n    topologySpreadConstraints: \n    - maxSkew: 1\n      topologyKey: topology.kubernetes.io/zone\n      whenUnsatisfiable: DoNotSchedule\n      labelSelector:\n        matchLabels:\n          app: prometheus\n    # additionalScrapeConfigsSecret: \n    #   enabled: true\n    #   name: additional-scrape-configs\n    #   key: avalanche-additional.yaml\n    storageSpec: \n      volumeClaimTemplate:\n        spec:\n          storageClassName: ${STORAGECLASS_NAME}\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 200Gi\n        selector: {}\n    remoteWrite: \n    - url: http://k8s-thanos-thanosre-xxx.elb.us-west-2.amazonaws.com:19291/api/v1/receive\n    externalLabels: \n      cluster: \"${CLUSTER_NAME}\"\n      cluster_name: \"${CLUSTER_NAME}\"\n      origin_prometheus: \"${CLUSTER_NAME}\"\nEOF\n\nhelm upgrade -i -f values-${CLUSTER_NAME}-1.yaml ${DEPLOY_NAME} prometheus-community/kube-prometheus-stack --namespace ${NAMESPACE_NAME} --create-namespace\n</code></pre> <ul> <li>https://github.com/prometheus-operator/prometheus-operator/issues/2918 External labels are only attached when data is communicated to the outside so you will see them in:</li> <li>Outgoing alerts (although we do automatically drop the \u201cprometheus_replica\u201d label, so alerts are unique and can be deduplicated by Alertmanager)</li> <li>Remote-read endpoint</li> <li>Remote-write</li> <li>/federate endpoint</li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#install-with-thanos","title":"install with thanos","text":"<ul> <li>refer: TC-prometheus-ha-architect-with-thanos.zh</li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#do-not-use-install-prometheus-from-github","title":"(DO NOT USE) install prometheus from github","text":"<p>https://github.com/prometheus-operator/kube-prometheus <pre><code>kubectl apply --server-side -f manifests/setup\nkubectl wait \\\n    --for condition=Established \\\n    --all CustomResourceDefinition \\\n    --namespace=monitoring\nkubectl apply -f manifests/\n</code></pre></p> <ul> <li>it uses prometheus-adapter as metrics.k8s.io APIService instead of metrics-server.</li> <li>maybe it has some performance metrics accuracy issue, when you have limit/request settings in POD and resources breach.</li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#optional-install-prometheus-and-grafana","title":"(Optional) install prometheus and grafana","text":"<ul> <li> <p>install prometheus <pre><code>kubectl create namespace prometheus\n\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\n\nhelm install prometheus prometheus-community/prometheus \\\n    --namespace prometheus \\\n    --set alertmanager.persistentVolume.storageClass=\"gp2\" \\\n    --set server.persistentVolume.storageClass=\"gp2\"\n\nkubectl get all -n prometheus\n</code></pre></p> </li> <li> <p>install grafana <pre><code>cat &gt; ./grafana.yaml &lt;&lt;-EOF\ndatasources:\n  datasources.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Prometheus\n      type: prometheus\n      url: http://prometheus-server.prometheus.svc.cluster.local\n      access: proxy\n      isDefault: true\nEOF\n\nhelm repo add grafana https://grafana.github.io/helm-charts\nkubectl create namespace grafana\nhelm install grafana grafana/grafana \\\n    --namespace grafana \\\n    --set persistence.storageClassName=\"gp2\" \\\n    --set persistence.enabled=true \\\n    --set adminPassword='EKS!sAWSome' \\\n    --values ./grafana.yaml \\\n    --set service.type=LoadBalancer\nkubectl get all -n grafana\n</code></pre></p> </li> <li> <p>dashboard</p> <ul> <li>cluster monitoring dashboard: 3119</li> <li>pod monitoring dashboard: 6417</li> <li>some other dashboard in grafana</li> </ul> </li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/install-prometheus-operator/#refer","title":"refer","text":"<ul> <li>https://archive.eksworkshop.com/intermediate/240_monitoring/prereqs/</li> <li>External labels are only attached when data is communicated to the outside, including Outgoing alerts, remote write, remote read endpoint, <code>/federate</code> endpoint, etc.<ul> <li>https://github.com/prometheus-operator/prometheus-operator/issues/2918</li> </ul> </li> </ul>","tags":["grafana","prometheus","aws/container/eks"]},{"location":"EKS/solutions/monitor/k8s-event-exporter/","title":"kubernetes events exporter","text":"<p>https://github.com/resmoio/kubernetes-event-exporter</p>","tags":["kubernetes","aws-containers-summit-2022q4","aws/container/eks"]},{"location":"EKS/solutions/monitor/k8s-event-exporter/#intro","title":"intro","text":"<ul> <li>event routing &amp; filter</li> <li>multiple receivers</li> <li>payload customization</li> </ul>","tags":["kubernetes","aws-containers-summit-2022q4","aws/container/eks"]},{"location":"EKS/solutions/monitor/k8s-event-exporter/#walkthrough","title":"walkthrough","text":"<ul> <li> <p>send log to loki <pre><code>--- a/deploy/01-config.yaml\n+++ b/deploy/01-config.yaml\n@@ -5,13 +5,20 @@ metadata:\n   namespace: monitoring\n data:\n   config.yaml: |\n-    logLevel: warn\n+    logLevel: info\n     logFormat: json\n     metricsNamePrefix: event_exporter_\n     route:\n       routes:\n         - match:\n             - receiver: \"dump\"\n+        - match:\n+            - receiver: \"loki\"\n     receivers:\n       - name: \"dump\"\n-        stdout: {}\n\\ No newline at end of file\n+        stdout: {}\n+      - name: \"loki\"\n+        loki:\n+          streamLabels:\n+            foo: bar\n+          url: http://loki-gateway.loki.svc.cluster.local/loki/api/v1/push\n\\ No newline at end of file\n</code></pre></p> </li> <li> <p>using grafana dashboard 17882</p> </li> <li>install using\u00a0Bitnami Chart and following values  <pre><code>...\nconfig:\n  logLevel: debug\n  logFormat: json # pretty\n  receivers:\n    - name: \"dump\"\n      file:\n        path: \"/dev/stdout\"\n        ## Example:\n        layout:\n          message: \"{{ .Message }}\"\n          reason: \"{{ .Reason }}\"\n          type: \"{{ .Type }}\"\n          count: \"{{ .Count }}\"\n          kind: \"{{ .InvolvedObject.Kind }}\"\n          name: \"{{ .InvolvedObject.Name }}\"\n          namespace: \"{{ .Namespace }}\"\n          component: \"{{ .Source.Component }}\"\n          host: \"{{ .Source.Host }}\"\n        ##\n        # layout: {}\n  route:\n    routes:\n      - match:\n          - receiver: \"dump\"\n...\n</code></pre></li> </ul>","tags":["kubernetes","aws-containers-summit-2022q4","aws/container/eks"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/","title":"\u6df1\u5165 EKS \u5b89\u5168\u7ec4","text":"","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#general","title":"general","text":"<p>eksctl \u662f\u4e00\u4e2a\u7528\u4e8e\u5728 Amazon EKS \u4e0a\u521b\u5efa\u548c\u7ba1\u7406 Kubernetes \u96c6\u7fa4\u7684\u7b80\u5355\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u3002</p> <ul> <li>https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html</li> <li>https://eksctl.io/introduction/</li> </ul> <p>\u4f7f\u7528 eksctl \u521b\u5efa EKS \u96c6\u7fa4\u540e\uff0c\u9700\u8981\u641e\u6e05\u695a\u4e0d\u540c\u5b89\u5168\u7ec4\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5c24\u5176\u662f\u5728private only\u96c6\u7fa4\u7684\u573a\u666f\u4e0b\uff0c\u4ee5\u4fbf\u672a\u6765\u5728\u66f4\u590d\u6742\u573a\u666f\u4e0b\u8bca\u65ad\u95ee\u9898\u63d0\u4f9b\u57fa\u7840\u3002\u6211\u4eec\u4eca\u5929\u5c31\u6765\u4e86\u89e3\u4e0b\u3002</p> <p>\u6211\u4eec\u5148\u628a\u6240\u6d89\u53ca\u5230\u7684\u76f8\u5173\u5b89\u5168\u7ec4\u4ee5\u529f\u80fd\u540d\u79f0\u53ef\u4ee5\u8fdb\u884c\u7ec6\u5206\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u7406\u89e3\u67b6\u6784\uff1a 1\uff09\u96c6\u7fa4\u5b89\u5168\u7ec4\uff08Cluster SG\uff09\u2013 \u53ef\u4ee5\u5728eks\u63a7\u5236\u53f0\u67e5\u770b\uff0c\u7531eks\u96c6\u7fa4\u521b\u5efa\uff1b 2\uff09\u9644\u52a0\u5b89\u5168\u7ec4\uff08Additional SG\uff09\u2013 \u53ef\u4ee5\u5728eks\u63a7\u5236\u53f0\u67e5\u770b\uff0c\u53ef\u4ee5\u5728\u96c6\u7fa4\u521b\u5efa\u4e4b\u524d\u521b\u5efa\u5e76\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165<code>securityGroup</code>\uff1b\u53e6\u5916\uff0cAdditional SG\u5728\u5b89\u5168\u7ec4\u540d\u79f0\u4e2d\u79f0\u4e3aControlPlaneSG\uff0c\u6ce8\u610f\u4e0d\u8981\u6df7\u6dc6\uff0c\u540e\u7eed\u63cf\u8ff0\u8be5SG\u4ee5\u63a7\u5236\u53f0\u4e0a\u540d\u79f0\u4e3a\u51c6\u3002 3\uff09\u5171\u4eab\u5b89\u5168\u7ec4\uff08Shared SG\uff09\u2013 \u521b\u5efa\u96c6\u7fa4\u65f6\u5982\u679c\u4e0d\u6307\u5b9a\uff0ceksctl\u4f1a\u81ea\u52a8\u521b\u5efa\uff1b\u4efb\u4f55\u5176\u4ed6\u9700\u8981\u8bbf\u95ee\u96c6\u7fa4\uff08\u4f8b\u5982\u8df3\u677f\u673a\uff09\u6216\u8005\u96c6\u7fa4\u9700\u8981\u8bbf\u95ee\u7684\u8d44\u6e90\uff08\u4f8b\u5982endpoint\uff09\u90fd\u4f1a\u7ed1\u5b9a\u8be5\u5b89\u5168\u7ec4\uff0c\u7b80\u5316\u5b89\u5168\u7ec4\u7ba1\u7406 4\uff09\u8282\u70b9\u7ec4\u5b89\u5168\u7ec4\uff08Nodegroup SG\uff09\u2013 \u81ea\u7ba1\u8282\u70b9\u7ec4\u521b\u5efa\u65f6\u521b\u5efa\uff1b</p> <p>\u9ed8\u8ba4\u521b\u5efa\u96c6\u7fa4\u540e\u5b89\u5168\u7ec4\u5206\u914d\u53ca\u5176\u5165\u7ad9\u89c4\u5219\u53ef\u4ee5\u53c2\u7167\u5982\u4e0b\u89c4\u5219\uff1a</p> <ul> <li>eks\u63a7\u5236\u5e73\u9762eni\u5c06\u5206\u914dCluster SG\u548cAdditional SG\uff1b</li> <li>\u6258\u7ba1\u8282\u70b9\u5c06\u5206\u914dCluster SG\uff0cfargate\u8282\u70b9\u5c06\u5206\u914dCluster SG\uff0cCluster SG\u4f1a\u6dfb\u52a0\u81ea\u8eab\u4f5c\u4e3a\u5165\u7ad9\u89c4\u5219\uff1b</li> <li>\u81ea\u7ba1\u8282\u70b9\u5c06\u5206\u914dNodegroup SG\u548cShared SG\uff0c\u4e14Nodegroup SG\u4e0eAdditional SG\u76f8\u4e92\u6dfb\u52a0\uff08\u7279\u5b9a\u7aef\u53e3\uff09\u4ee5\u5141\u8bb8\u8bbf\u95ee\uff1b</li> <li>\u6240\u6709\u5176\u4ed6\u9700\u8981\u4e0eeks\u96c6\u7fa4\u4e92\u8bbf\u7684\u8d44\u6e90\u90fd\u5c06\u5206\u914dShared SG\uff0c\u4e14Shared SG\u4e0eCluster SG\u76f8\u4e92\u6dfb\u52a0\u4ee5\u5141\u8bb8\u8bbf\u95ee\uff0cCluster SG\u4f1a\u6dfb\u52a0\u81ea\u8eab\u4f5c\u4e3a\u5165\u7ad9\u89c4\u5219\uff1b</li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#eks-api-server-endpoint-access-is-private-only","title":"EKS API server endpoint access is private only","text":"<p>\u5728\u4f7f\u7528private only\u96c6\u7fa4\u65f6\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u5728\u73b0\u6709\u89c4\u5212\u597d\u7684vpc\u4e2d\u521b\u5efa\uff0c\u5e76\u4e14\u4f7f\u7528\u4e00\u53f0\u8df3\u677f\u673a\u8bbf\u95ee\u96c6\u7fa4\uff0c\u56e0\u6b64\u9700\u8981\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u90e8\u7f72\uff1a</p> <ul> <li>\u521b\u5efavpc\u4ee5\u53ca\u76f8\u5173\u5b50\u7f51</li> <li>\u4f7f\u7528cloud9\u4f5c\u4e3a\u8df3\u677f\u673a</li> <li>\u521b\u5efaShared SG\uff0c\u5e76\u6302\u8f7d\u5230cloud9\u4fdd\u8bc1\u5176\u53ef\u4ee5\u8bbf\u95ee\u96c6\u7fa4\u63a7\u5236\u5e73\u9762</li> <li>\u6267\u884ceksctl\u521b\u5efaeks\u96c6\u7fa4</li> </ul> <p></p> <p>\u5f53\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a<code>privateCluster: true</code>\u548c<code>skipEndpointCreation: false</code>\u65f6\uff0c\u4e0b\u5217endpoint\u5c06\u88ab\u521b\u5efa\uff0c\u4e14\u5171\u4eab\u5b89\u5168\u7ec4\uff08Shared SG\uff09\u88ab\u5206\u914d\u5230endpoint\u4e0a\u3002 \u5982\u679c\u4f60\u7684\u5b50\u7f51\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u516c\u7f51\uff0c\u90a3\u4e48\u7edd\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f60\u53ef\u4ee5\u8df3\u8fc7\u521b\u5efa\u8fd9\u4e9bendpoint\uff0c\u5373<code>skipEndpointCreation: true</code>\u3002</p> <ul> <li>autoscaling (additional)</li> <li>logs (additional)</li> <li>cloudformation (additional)</li> <li>s3</li> <li>ecr dkr / ecr api</li> <li>ec2 / ec2messages</li> <li>sts</li> <li>elasticloadbalancing</li> <li>kms</li> <li>ssm / ssmmessages</li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#yaml","title":"yaml","text":"<pre><code>---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: ekscluster-privonly # MODIFY cluster name\n  region: \"us-east-2\" # MODIFY region\n  version: \"1.21\" # MODIFY version\n\n# full private cluster\nprivateCluster:\n  enabled: true \n  skipEndpointCreation: true\n  # additionalEndpointServices:\n  # - \"autoscaling\"\n  # - \"logs\"\n  # - \"cloudformation\"\n\n# REPLACE THIS CODE BLOCK\nvpc:\n  subnets:\n    private:\n      us-east-2a:\n        id: subnet-04b9\n      us-east-2b:\n        id: subnet-0337\n    public:\n      us-east-2a:\n        id: subnet-0196\n      us-east-2b:\n        id: subnet-0190\n  sharedNodeSecurityGroup: sg-07bb\n  # securityGroup: sg-0ba1457c2bb55a5ff\n\ncloudWatch:\n  clusterLogging:\n    enableTypes: [\"*\"]\n\n# secretsEncryption:\n#   keyARN: ${MASTER_ARN}\n\nmanagedNodeGroups:\n\n- name: managed-ng\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 1\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n</code></pre>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#eks-api-server-endpoint-access-is-public-and-private-or-public-only","title":"EKS API server endpoint access is public and private (or public only)","text":"<p>\u521b\u5efa\u53ef\u4ee5\u516c\u7f51\u8bbf\u95eeapi server\u7684eks\u96c6\u7fa4\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\uff0c\u9002\u5408\u7528\u4e8e\u6d4b\u8bd5\u6216\u8005\u5b9e\u9a8c\u73af\u5883\u3002\u5728\u914d\u7f6e\u4e2dvpc\u7ae0\u8282\uff0c\u4e0d\u6307\u5b9a\u5177\u4f53\u7684id\u4ee5\u53ca\u76f8\u5173\u5b50\u7f51\u4fe1\u606f\uff0ceksctl\u4f1a\u521b\u5efa\u5168\u65b0\u5b50\u7f51\u6765\u8fd0\u884ceks\u96c6\u7fa4\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u76f8\u5173\u5b89\u5168\u7ec4\u5206\u914d\u3001\u5165\u7ad9\u89c4\u5219\u7b49\u4e0eprivate only\u96c6\u7fa4\u76f8\u540c\u3002\u6211\u4eec\u6765\u770b\u4e0b\u5f53\u5e94\u7528\u53d1\u5e03\u65f6\u5bf9\u4e8e\u5b89\u5168\u7ec4\u53c8\u6709\u54ea\u4e9b\u66f4\u65b0\uff1a</p> <ul> <li>LB\u6258\u7ba1\u5b89\u5168\u7ec4\uff08Managed SG for LB\uff09\u2013 \u5b89\u5168\u7ec4\u540d\u79f0\u7c7b\u4f3c<code>k8s-ingressname-\u968f\u673a\u5b57\u7b26\u4e32</code>\uff0c\u5305\u542b\u5e94\u7528\u5bf9\u5916\u8bbf\u95ee\u7aef\u53e3\uff0c\u4f8b\u598280\uff0c443\uff1b</li> <li>LB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\uff08Shared Backend SG for LB\uff09\u2013 \u5b89\u5168\u7ec4\u540d\u79f0\u7c7b\u4f3c<code>k8s-traffic-eks\u96c6\u7fa4\u540d\u79f0-\u968f\u673a\u5b57\u7b26\u4e32</code></li> </ul> <p>\u6211\u4eec\u518d\u770b\u4e0b\u76f8\u5173SG\u5165\u7ad9\u89c4\u5219\u60c5\u51b5\uff08\u5305\u542b\u5b8c\u6574\u89c4\u5219\uff09</p> <ul> <li>Cluster SG<ul> <li>\u5141\u8bb8\u81ea\u8eab</li> <li>\u5141\u8bb8Shared SG</li> <li>\u5141\u8bb8LB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\uff0c\u4e14\u4f7f\u7528Nodeport\u7aef\u53e3(instance mode)\u6216\u8005Pod\u7aef\u53e3(ip mode)</li> </ul> </li> <li>Additional SG<ul> <li>\u5141\u8bb8Nodegroup SG 443\u7aef\u53e3 \uff08\u81ea\u7ba1\u8282\u70b9\u7ec4\u8bbf\u95ee\u96c6\u7fa4\u63a7\u5236\u5e73\u9762\uff09</li> </ul> </li> <li>Shared SG<ul> <li>\u5141\u8bb8\u81ea\u8eab</li> <li>\u5141\u8bb8Cluster SG</li> </ul> </li> <li>Nodegroup SG<ul> <li>\u5141\u8bb8Additional SG 443 \u7aef\u53e3 \uff08kube-proxy\uff09\u548c 1025-65535 \u7aef\u53e3 \uff08\u56de\u5305\u7aef\u53e3\uff09</li> <li>\u5141\u8bb8LB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\uff0c \u4e14\u4f7f\u7528Nodeport\u7aef\u53e3(instance mode)\u6216\u8005Pod\u7aef\u53e3(ip mode)</li> </ul> </li> </ul> <p>\u5982\u679c\u53d1\u5e03\u7684\u5e94\u7528\u81ea\u8eab\u4e0d\u5e26SG\uff0c\u5219\u4f7f\u7528\u8282\u70b9\u7ec4\u4e3bENI\u7684SG</p> <ul> <li>\u5982\u679cPod\u8fd0\u884c\u5728\u7ba1\u7406\u8282\u70b9\u7ec4\uff0cLB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230Cluster SG\uff08\u5982\u679celb\u7c7b\u578b\u4e3ainstance\uff0c\u6dfb\u52a0Nodeport Port\uff1b\u5982\u679celb\u7c7b\u578b\u4e3aip\uff0c\u6dfb\u52a0Pod Port\uff09</li> <li>\u5982\u679cPod\u8fd0\u884c\u5728\u81ea\u7ba1\u8282\u70b9\u7ec4\uff0cLB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230Nodegroup SG\uff08\u5982\u679celb\u7c7b\u578b\u4e3ainstance\uff0c\u6dfb\u52a0Nodeport Port\uff1b\u5982\u679celb\u7c7b\u578b\u4e3aip\uff0c\u6dfb\u52a0Pod Port\uff09</li> </ul> <p>\u5982\u679c\u53d1\u5e03\u7684\u5e94\u7528\u81ea\u8eab\u6709SG\uff0c\u5219\u4f1a\u4f7f\u7528\u5b83</p> <ul> <li>\u4e00\u822c\u6211\u4eec\u4f1a\u624b\u5de5\u6dfb\u52a0\u5e94\u7528\u81ea\u5e26SG\u4e14\u76ee\u7684\u7aef\u53e353\uff0c\u5230Cluster SG\u548cNodegroup SG\uff0c\u65b9\u4fbf\u5e94\u7528\u4e0ecoredns\u670d\u52a1\u901a\u8baf</li> <li>LB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u5e94\u7528\u81ea\u5e26SG\uff08\u5982\u679celb\u7c7b\u578b\u4e3aip\uff0c\u6dfb\u52a0Pod Port\uff09</li> <li>LB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230Cluster SG\uff08\u5982\u679celb\u7c7b\u578b\u4e3ainstance\uff0c\u6dfb\u52a0Nodeport Port\uff09</li> </ul> <p>\u8865\u5145\u5e94\u7528\u53d1\u5e03\u5728fargate\u4e0a\u7684\u573a\u666f</p> <ul> <li>\u5e94\u7528\u81ea\u8eab\u4e0d\u5e26SG<ul> <li>elb\u7c7b\u578b\u4e3ainstance\u65f6\uff0cLB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u5c06\u6dfb\u52a0Nodeport Port\u5230Cluster SG\u4e2d</li> <li>elb\u7c7b\u578b\u4e3aip\u65f6\uff0cLB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u5c06\u6dfb\u52a0Pod Port\u5230Cluster SG\u4e2d</li> </ul> </li> <li>\u5e94\u7528\u81ea\u8eab\u6709SG<ul> <li>elb\u7c7b\u578b\u4e3ainstance\u65f6\uff0cLB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u5c06\u6dfb\u52a0Nodeport Port\u5230Cluster SG\u4e2d</li> <li>elb\u7c7b\u578b\u4e3aip\u65f6\uff0cLB\u5171\u4eab\u540e\u7aef\u5b89\u5168\u7ec4\u5c06\u6dfb\u52a0Pod Port\u5230\u5e94\u7528\u81ea\u5e26SG\u4e2d</li> </ul> </li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#yaml_1","title":"yaml","text":"<pre><code>---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: ekscluster1 # MODIFY cluster name \n  region: \"us-east-1\" # MODIFY region\n  version: \"1.21\" # MODIFY version\n\nvpc:\n  clusterEndpoints:\n    privateAccess: true\n    publicAccess: true\n\ncloudWatch:\n  clusterLogging:\n    enableTypes: [\"*\"]\n\n# secretsEncryption:\n#   keyARN: ${MASTER_ARN}\n\nmanagedNodeGroups:\n\n- name: mng1\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 1\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n\nnodeGroups:\n\n- name: ng1\n  ami: ami-06a8\n  amiFamily: AmazonLinux2\n  minSize: 1\n  maxSize: 5\n  desiredCapacity: 1\n  instanceType: m5.large\n  ssh:\n    enableSsm: true\n  privateNetworking: true\n  overrideBootstrapCommand: |\n    #!/bin/bash\n    source /var/lib/cloud/scripts/eksctl/bootstrap.helper.sh\n    /etc/eks/bootstrap.sh ${CLUSTER_NAME} --container-runtime containerd --kubelet-extra-args \"--node-labels=${NODE_LABELS}\"\n</code></pre>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#refer","title":"refer","text":"<ul> <li>file:///Users/panlm/Documents/SA-Baseline-50-12/eks/security-group-in-eks-0614.drawio</li> <li>https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/examples/echo_server/</li> <li>enable-sg-on-pod</li> <li>git/git-mkdocs/EKS/cluster/eks-public-access-cluster</li> <li>git/git-mkdocs/EKS/cluster/eks-private-access-cluster</li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/TC-security-group-for-eks-deepdive/#todo","title":"TODO","text":"<ul> <li>endpoint for elb &amp; appmesh-envoy-management </li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/eks-custom-network/","title":"eks-custom-network-lab","text":"","tags":["aws/container/eks","kubernetes/cni"]},{"location":"EKS/solutions/network/eks-custom-network/#link","title":"link","text":"<ul> <li>https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/cni-custom-network.html</li> <li>Leveraging CNI custom networking alongside security groups for pods in Amazon EKS</li> <li> <p>Automating custom networking to solve IPv4 exhaustion in Amazon EKS</p> </li> <li> <p>There are a limited number of IP addresses available in a subnet. Using different subnets for pods allows you to increase the number of available IP addresses</p> </li> <li>For security reasons, your pods must use different security groups or subnets than the node\u2019s primary network interface.</li> <li>The nodes are configured in public subnets and you want the pods to be placed in private subnets using a NAT Gateway</li> </ul>","tags":["aws/container/eks","kubernetes/cni"]},{"location":"EKS/solutions/network/eks-custom-network/#custom-network","title":"\u90e8\u5206\u4f7f\u7528 custom network","text":"<ul> <li>\u624b\u52a8\u76f8\u5173 eniconfig \u5230\u8282\u70b9\uff0c\u8986\u76d6 default \u503c\uff08\u9ed8\u8ba4\u503c\u4f7f\u7528 secondary CIDR \u5b50\u7f51\uff09\uff0c\u53ef\u4ee5\u8ba9\u7279\u5b9a\u8282\u70b9\u5141\u8bb8 pod \u4f7f\u7528\u4e3b CIDR<ul> <li>https://repost.aws/knowledge-center/eks-custom-subnet-for-pod#:~:text=Manually%20associate%20ENIConfig%20objects%20with%20nodes</li> <li>https://github.com/aws/amazon-vpc-cni-k8s#eni_config_label_def</li> </ul> </li> <li>\u6216\u8005\u5c1d\u8bd5 https://docs.aws.amazon.com/eks/latest/userguide/cni-custom-network.html<ul> <li> <ol> <li>If a Pod\u2019s\u00a0<code>spec</code>\u00a0contains\u00a0<code>hostNetwork=true</code>, it\u2019s assigned the primary IP address of the node. It isn\u2019t assigned an address from the subnets that you added. By default, this value is set to\u00a0<code>false</code>. This value is set to\u00a0<code>true</code>\u00a0for the\u00a0<code>kube-proxy</code>\u00a0and Amazon VPC CNI plugin for Kubernetes (<code>aws-node</code>) Pods that run on your cluster. This is why the\u00a0<code>kube-proxy</code>\u00a0and the plugin\u2019s\u00a0<code>aws-node</code>\u00a0Pods aren\u2019t assigned\u00a0<code>192.168.1._x_</code>\u00a0addresses in the previous output. For more information about a Pod\u2019s\u00a0<code>hostNetwork</code>\u00a0setting, see\u00a0PodSpec v1 core\u00a0in the Kubernetes API reference.</li> </ol> </li> </ul> </li> </ul>","tags":["aws/container/eks","kubernetes/cni"]},{"location":"EKS/solutions/network/eks-custom-network/#lab-","title":"lab-","text":"<p>https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/cni-custom-network.html</p> <ul> <li> <p>prep cidr / subnet id  <pre><code>CLUSTER_NAME=ekscluster1\nAWS_REGION=us-east-2\nexport AWS_DEFAULT_REGION=${AWS_REGION}\n\nVPC_ID=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} --region ${AWS_REGION} \\\n  --query \"cluster.resourcesVpcConfig.vpcId\" --output text )\n\naws ec2 describe-subnets --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n  --query \"Subnets[].[AvailabilityZone,SubnetId]\" --output text\n\naws ec2 describe-subnets --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n--query 'Subnets[].{Name:Tags[?Key==`Name`].Value|[0],SubnetId:SubnetId,AZ:AvailabilityZone,CIDR:CidrBlock}' --output table\n\n# copy paste origin private subnet to following variables (10.x.x.x)\nsubnet_id_1=subnet-xxx\nsubnet_id_2=subnet-xxx\n# copy paste new private subnet to following variables (100.64.x.x)\nnew_subnet_id_1=subnet-xxx\nnew_subnet_id_2=subnet-xxx\n\nAZ_1=$(aws ec2 describe-subnets --subnet-ids $subnet_id_1 --query 'Subnets[*].AvailabilityZone' --output text)\nAZ_2=$(aws ec2 describe-subnets --subnet-ids $subnet_id_2 --query 'Subnets[*].AvailabilityZone' --output text)\n</code></pre></p> </li> <li> <p>enable CUSTOM NETWORK  <pre><code>kubectl describe ds aws-node -n kube-system |grep -e CUSTOM_NETWORK -e EXTERNALSNAT\n# AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\nkubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true\n# AWS_VPC_K8S_CNI_EXTERNALSNAT\nkubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_EXTERNALSNAT=true\n# need a default value for all NEW NODE in ANY nodegroup\nkubectl set env daemonset aws-node -n kube-system ENI_CONFIG_LABEL_DEF=topology.kubernetes.io/zone\n\nCLUSTER_SECURITY_GROUP_ID=$(aws eks describe-cluster --name ${CLUSTER_NAME} --query cluster.resourcesVpcConfig.clusterSecurityGroupId --output text)\n</code></pre></p> </li> <li> <p>ENIConfig <pre><code>envsubst &gt;${AZ_1}.yaml &lt;&lt;-EOF\napiVersion: crd.k8s.amazonaws.com/v1alpha1\nkind: ENIConfig\nmetadata: \n  name: ${AZ_1}\nspec: \n  securityGroups: \n    - ${CLUSTER_SECURITY_GROUP_ID}\n  subnet: ${new_subnet_id_1}\nEOF\n\ncat &gt;${AZ_2}.yaml &lt;&lt;EOF\napiVersion: crd.k8s.amazonaws.com/v1alpha1\nkind: ENIConfig\nmetadata: \n  name: ${AZ_2}\nspec: \n  securityGroups: \n\n    - ${CLUSTER_SECURITY_GROUP_ID}\n  subnet: ${new_subnet_id_2}\nEOF\n\nkubectl apply -f ${AZ_1}.yaml\nkubectl apply -f ${AZ_2}.yaml\nkubectl get ENIConfigs\n</code></pre></p> </li> <li> <p>create new node group or scale existed node group</p> </li> </ul>","tags":["aws/container/eks","kubernetes/cni"]},{"location":"EKS/solutions/network/eks-custom-network/#run-pod-on-specific-node","title":"run pod on specific node","text":"<pre><code>cat &gt;pod-ubuntu1.yaml &lt;&lt;EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-ubuntu1\nspec:\n  containers:\n\n  - name: ubuntu\n    image: ubuntu\n    command: [\"sh\", \"-c\", \"while true ; do sleep 10; done\"]\n  nodeSelector:\n    alpha.eksctl.io/nodegroup-name: mng1\n#    kubernetes.io/hostname: ip-10-x-x-x.us-east-2.compute.internal\nEOF\nkubectl apply -f pod-ubuntu1.yaml\n</code></pre> <p>^hennaq</p>","tags":["aws/container/eks","kubernetes/cni"]},{"location":"EKS/solutions/network/eks-prefix-assignment/","title":"prefix-assignment","text":"","tags":["aws/container/eks"]},{"location":"EKS/solutions/network/eks-prefix-assignment/#doc","title":"doc","text":"<p>https://docs.aws.amazon.com/eks/latest/userguide/cni-increase-ip-addresses.html</p> <p>When configured for prefix assignment, the CNI add-on can assign significantly more IP addresses to a network interface than it can when you assign individual IP addresses</p> <ul> <li>cni version 1.9.0 or over</li> <li>Enable the parameter to assign prefixes to network interfaces for the Amazon VPC CNI\u00a0<code>DaemonSet</code></li> </ul> <pre><code>kubectl describe ds aws-node -n kube-system |grep -i PREFIX\nkubectl set env daemonset aws-node -n kube-system ENABLE_PREFIX_DELEGATION=true\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/solutions/network/enable-sg-on-pod/","title":"enable-sg-on-pod","text":"","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/enable-sg-on-pod/#useful-env-sg-on-pod","title":"useful-env-sg-on-pod","text":"<p>considerations https://docs.amazonaws.cn/en_us/eks/latest/userguide/security-groups-for-pods.html</p> <p></p> <p>upgrade-vpc-cni</p> <p></p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u5141\u8bb8pod \u6302sg \u7b2c\u4e8c\u4e2a\u53c2\u6570\u5141\u8bb8\u6709sg\u7684pod\u540c\u65f6\u9075\u5b88network policy\u63a7\u5236 \u7b2c\u4e09\u4e2a\u53c2\u6570snat disable\uff0c\u5141\u8bb8\u8de8vpc\u4fdd\u7559pod ip\uff0c\u4e0d\u4f1a\u8f6c\u6210primary eni ip (../../addons/eks-external-snat)</p> <pre><code>kubectl -n kube-system set env daemonset aws-node ENABLE_POD_ENI=true\nkubectl -n kube-system set env daemonset aws-node POD_SECURITY_GROUP_ENFORCING_MODE=standard\nkubectl -n kube-system set env daemonset aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true\nkubectl -n kube-system rollout status ds aws-node\n</code></pre> <p>more explanation for ENV on vpc cni github</p> <ul> <li>https://github.com/aws/amazon-vpc-cni-k8s/blob/master/README.md#:~:text=recycle%20the%20instance.-,POD_SECURITY_GROUP_ENFORCING_MODE,-(v1.11.0%2B)</li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/enable-sg-on-pod/#workshop","title":"workshop","text":"<p>https://www.eksworkshop.com/beginner/115_sg-per-pod/</p> <ul> <li> <p>create SG <pre><code>CLUSTER_NAME=ekscluster1\n\nexport VPC_ID=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} \\\n  --query \"cluster.resourcesVpcConfig.vpcId\" \\\n  --output text)\n\n# create the POD security group\naws ec2 create-security-group \\\n    --description 'POD SG' \\\n    --group-name 'POD_SG' \\\n    --vpc-id ${VPC_ID}\n\n# save the security group ID for future use\nexport POD_SG=$(aws ec2 describe-security-groups \\\n    --filters Name=group-name,Values=POD_SG Name=vpc-id,Values=${VPC_ID} \\\n    --query \"SecurityGroups[0].GroupId\" --output text)\n\necho \"POD security group ID: ${POD_SG}\"\n</code></pre></p> </li> <li> <p>for managed node group, allow DNS ingress <pre><code>NODE_GROUP_SG=$(aws ec2 describe-security-groups \\\n  --filters Name=tag:Name,Values=eks-cluster-sg-${CLUSTER_NAME}-* Name=vpc-id,Values=${VPC_ID} \\\n  --query \"SecurityGroups[0].GroupId\" \\\n  --output text)\necho \"Node Group security group ID: ${NODE_GROUP_SG}\"\n\n# allow POD_SG to connect to NODE_GROUP_SG using TCP 53\naws ec2 authorize-security-group-ingress \\\n    --group-id ${NODE_GROUP_SG} \\\n    --protocol tcp \\\n    --port 53 \\\n    --source-group ${POD_SG}\n\n# allow POD_SG to connect to NODE_GROUP_SG using UDP 53\naws ec2 authorize-security-group-ingress \\\n    --group-id ${NODE_GROUP_SG} \\\n    --protocol udp \\\n    --port 53 \\\n    --source-group ${POD_SG}\n</code></pre></p> </li> <li> <p>for unmanaged node group created by <code>eksctl</code>, allow DNS ingress <pre><code># eksctl-ekscluster1-nodegroup-ng1-SG-1XX82XXXXXX5Y)\nUNMANAGED_NODE_GROUP_SG=$(aws ec2 describe-security-groups \\\n  --filters Name=tag:Name,Values=eksctl-${CLUSTER_NAME}-nodegroup-* Name=vpc-id,Values=${VPC_ID} \\\n  --query \"SecurityGroups[0].GroupId\" \\\n  --output text)\necho \"UNMANAGED Node Group security group ID: ${UNMANAGED_NODE_GROUP_SG}\"\n\n# allow POD_SG to connect to NODE_GROUP_SG using TCP 53\naws ec2 authorize-security-group-ingress \\\n    --group-id ${UNMANAGED_NODE_GROUP_SG} \\\n    --protocol tcp \\\n    --port 53 \\\n    --source-group ${POD_SG}\n\n# allow POD_SG to connect to NODE_GROUP_SG using UDP 53\naws ec2 authorize-security-group-ingress \\\n    --group-id ${UNMANAGED_NODE_GROUP_SG} \\\n    --protocol udp \\\n    --port 53 \\\n    --source-group ${POD_SG}\n</code></pre></p> </li> <li> <p>CNI config <pre><code># ensure cluster role has AmazonEKSVPCResourceController policy\nexport CLUSTER_ROLE=$(aws eks describe-cluster \\\n  --name ${CLUSTER_NAME} \\\n  --query \"cluster.roleArn\" \\\n  --output text)\n\naws iam list-attached-role-policies --role-name ${CLUSTER_ROLE##*/}\n</code></pre></p> </li> </ul> <pre><code>kubectl -n kube-system set env daemonset aws-node ENABLE_POD_ENI=true\nkubectl -n kube-system set env daemonset aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true\nkubectl -n kube-system set env daemonset aws-node POD_SECURITY_GROUP_ENFORCING_MODE=standard\nkubectl -n kube-system rollout status ds aws-node\n\nkubectl get nodes --show-labels\n# will see `vpc.amazonaws.com/has-trunk-attached=true`\n</code></pre> <ul> <li> <p>create resources (if you create resource on fargate, see below) <pre><code># check CRDs existed\nkubectl get crd securitygrouppolicies.vpcresources.k8s.aws\n\nenvsubst &gt; ./sg-policy.yaml &lt;&lt;-EoF\napiVersion: vpcresources.k8s.aws/v1beta1\nkind: SecurityGroupPolicy\nmetadata:\n  name: allow-rds-access\nspec:\n  podSelector:\n    matchLabels:\n      app: echoserver\n  securityGroups:\n    groupIds:\n\n      - ${POD_SG}\nEoF\n\nk create ns echo1\nk apply -f sg-policy.yaml -n echo1\nk apply -f deployment-service.yaml -n echo1\nk apply -f ingress1.yaml -n echo1\n\nk create ns echo2\nk apply -f sg-policy.yaml -n echo2\nk apply -f deployment-service.yaml -n echo2\nk apply -f ingress2.yaml -n echo2\n\nk create ns echo3\nk apply -f deployment-service.yaml -n echo3\nk apply -f ingress3.yaml -n echo3\n</code></pre></p> </li> <li> <p>echoserver deployment &amp; service <pre><code>cat &gt; ./deployment-service.yaml &lt;&lt;-EoF\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: echoserver\nspec:\n  selector:\n    matchLabels:\n      app: echoserver\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: echoserver\n    spec:\n      containers:\n      - image: k8s.gcr.io/e2e-test-images/echoserver:2.5\n        imagePullPolicy: Always\n        name: echoserver\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: echoserver\nspec:\n  ports:\n    - port: 80\n      targetPort: 8080\n      protocol: TCP\n  type: NodePort\n  selector:\n    app: echoserver\nEoF\n</code></pre></p> </li> <li> <p>echoserver ingress for echo1</p> </li> <li>echoserver ingress for echo2</li> <li> <p>echoserver ingress for echo3 refer awslbc-ingress-settings-ingress-group</p> </li> <li> <p>resource yaml for pod on fargate <pre><code>envsubst &gt; ./sg-policy.yaml &lt;&lt;-EoF\napiVersion: vpcresources.k8s.aws/v1beta1\nkind: SecurityGroupPolicy\nmetadata:\n  name: allow-rds-access\nspec:\n  podSelector:\n    matchLabels:\n      app: echoserver\n  securityGroups:\n    groupIds:\n      - ${POD_SG}\n      - ${NODE_GROUP_SG} # cluster SG\nEoF\n</code></pre></p> </li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/network/enable-sg-on-pod/#refer","title":"refer","text":"<ul> <li>eks-external-snat</li> </ul>","tags":["aws/container/eks","aws/network/security-group"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/","title":"IRSA \u4e2d\u7684 Token \u5256\u6790","text":"<p>\u672c\u6587\u6863\u603b\u7ed3\u4e86\u5c06 AWS IAM \u89d2\u8272\u6388\u4e88 AWS EKS \u96c6\u7fa4\u7684\u670d\u52a1\u8d26\u6237\u7684\u8fc7\u7a0b\u3002 \u8fd9\u4e9b\u529f\u80fd\u79f0\u4e3a IRSA\uff08\u670d\u52a1\u5e10\u6237\u7684 IAM \u89d2\u8272 - IAM Role for Service Account \uff09\u3002</p> <p>Projected SA Token \u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u7531 EKS \u96c6\u7fa4\u7684 OIDC Identity Provider \u9881\u53d1\uff0c\u800c\u662f\u7531 Kubernetes API Server \u9881\u53d1\uff0c\u662f Kubernetes API Server \u5728\u9881\u53d1\u65f6\u4f7f\u7528\u4e0e OIDC Identity Provider \u540c\u6837\u7684\u79c1\u94a5\u6765\u9881\u53d1 Projected SA Token\u3002\u88ab\u89c6\u4e3a\u7531\u96c6\u7fa4\u7684 OIDC Identity Provider \u9881\u53d1\u7684\u4ee4\u724c\u3002\u8fd9\u4e5f\u662f\u540e\u7eed AWS STS \u68c0\u67e5\u4ee4\u724c\u9881\u53d1\u8005\u5e76\u786e\u8ba4\u5b83\u662f\u53d7\u4fe1\u4efb\u7684\uff08\u8054\u5408\uff09OIDC Identity Provider \u7684\u539f\u56e0\u3002\u4f7f\u7528 OIDC Identity Provider \u7684\u516c\u94a5\u9a8c\u8bc1 Projected SA Token \uff0c\u5982\u679c\u786e\u5b9a\u5b83\u662f\u6709\u6548\u7684\uff0cAWS STS \u4f1a\u5c06\u51ed\u8bc1\u4f20\u8f93\u5230 Pod \u5185\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u83b7\u5f97\u4e00\u4e2a\u4f7f\u7528\u51ed\u8bc1\u7684 AWS IAM \u89d2\u8272\u5e76\u8bbf\u95ee AWS \u670d\u52a1\u3002</p> <p> [\u56fe 1] </p> <p>AWS EKS \u7248\u672c 1.14 \u6216\u66f4\u9ad8\u7248\u672c\u63d0\u4f9b\u5c06 AWS IAM \u89d2\u8272\u5206\u914d\u7ed9 EKS (K8S) \u96c6\u7fa4\u7684\u670d\u52a1\u8d26\u6237\u7684\u80fd\u529b\u3002\u901a\u8fc7\u6b64\u529f\u80fd\uff0c\u4f7f\u7528\u5df2\u6388\u4e88 AWS IAM \u89d2\u8272\u7684\u670d\u52a1\u8d26\u6237\u7684 Pod \u53ef\u4ee5\u4f7f\u7528 AWS \u670d\u52a1\u3002 [\u56fe 1] \u663e\u793a\u6b64\u8fc7\u7a0b\u5206\u4e3a 4 \u4e2a\u6b65\u9aa4\uff1aService Account \u521b\u5efa\u3001Pod \u521b\u5efa\u3001Service Account Token \u521b\u5efa/\u66ff\u6362\u548c Service Account Token \u4f7f\u7528\u3002 [\u56fe 1] \u7684\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\u5982\u4e0b\u3002</p> <ul> <li>AWS EKS OIDC Identity Provider\uff1a\u8868\u793a\u6bcf\u4e2a EKS \u96c6\u7fa4\u62e5\u6709\u7684\u4e13\u7528 OIDC \u8eab\u4efd\u63d0\u4f9b\u5546\u3002\u5b83\u5df2\u6ce8\u518c\uff08\u8054\u5408\uff09\u4e3a\u53d7 AWS IAM \u4fe1\u4efb\u7684 OIDC \u8eab\u4efd\u63d0\u4f9b\u5546\u3002</li> <li>\u79c1\u94a5/\u516c\u94a5\uff1aAWS EKS OIDC \u8eab\u4efd\u63d0\u4f9b\u5546\u548c Kubernetes API \u670d\u52a1\u5668\u5171\u4eab\u548c\u4f7f\u7528\u76f8\u540c\u7684\u79c1\u94a5/\u516c\u94a5\u3002</li> <li>Pod Identity Webhook\uff1a\u4ee3\u8868 Kubernetes API Server \u7684 Mutating Webhook\u3002\u5f53 Pod \u4f7f\u7528\u5206\u914d\u4e86 AWS IAM \u89d2\u8272\u7684\u670d\u52a1\u8d26\u6237\u65f6\uff0c\u5b83\u4f1a\u626e\u6f14\u66f4\u6539 Pod \u89c4\u8303\u7684\u89d2\u8272\uff0c\u4ee5\u4fbf\u6388\u4e88\u670d\u52a1\u8d26\u6237\u7684 AWS IAM \u89d2\u8272\u53ef\u4ee5\u5728 Pod \u5185\u90e8\u4f7f\u7528\u3002</li> <li>Projected SA Token\uff1a\u6307\u793a AWS IAM \u89d2\u8272\u88ab\u6388\u4e88\u7684\u670d\u52a1\u8d26\u6237\u7684\u4ee4\u724c\u3002\u5b83\u662f\u4e0e Kubernetes \u9ed8\u8ba4\u4f7f\u7528\u7684\u57fa\u672c\u670d\u52a1\u5e10\u6237\u4ee4\u724c\u4e0d\u540c\u7684\u4ee4\u724c\u3002\u4e0e\u57fa\u672c\u7684 Service Account Token \u4e0d\u540c\uff0c\u5b83\u8bbe\u7f6e\u4e86\u8fc7\u671f\u65f6\u95f4\u548c\u53d7\u4f17\uff0c\u5e76\u4e14\u5b9a\u671f\u66f4\u6362\u4e86 token\u3002\u5b83\u5177\u6709 JWT Token \u7684\u5f62\u5f0f\u3002</li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#_1","title":"\u521b\u5efa\u670d\u52a1\u5e10\u6237","text":"<p>\u8981\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u524d\uff0c\u786e\u4fdd\u4f60\u6709\u4e00\u4e2a\u53ef\u7528\u7684 EKS \u73af\u5883\uff0c\u6216\u8005\u53c2\u89c1\u53c2\u8003\u8d44\u6599 2 \u521b\u5efa\u73af\u5883\u3002</p> <p>\u5173\u8054 OIDC Identity Provider \u5e76\u4e14\u521b\u5efa Service Account \uff0c\u6267\u884c\uff1a <pre><code>cluster_name=eksworkshop-eksctl\nexport AWS_DEFAULT_REGION=us-east-2\n\neksctl utils associate-iam-oidc-provider \\\n  --cluster $cluster_name \\\n  --approve\n\nserviceaccount_name=adminaccess\nnamespace_name=default\npolicy_arn=arn:aws:iam::aws:policy/AdministratorAccess\n\neksctl create iamserviceaccount \\\n  --cluster=$cluster_name \\\n  --name=$serviceaccount_name \\\n  --namespace=$namespace_name \\\n  --attach-policy-arn=$policy_arn \\\n  --approve --override-existing-serviceaccounts\n</code></pre></p> <p>\u6267\u884c\uff1a <pre><code>kubectl get sa ${serviceaccount_name} -o=yaml\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/eksctl-eksworkshop-eksctl-addon-iamserviceac-Role1-xxxxxxxxxxxxxx\n  creationTimestamp: \"2022-11-02T07:22:41Z\"\n  labels:\n    app.kubernetes.io/managed-by: eksctl\n  name: adminaccess\n  namespace: default\n  resourceVersion: \"4209\"\n  uid: 7621dbcf-6c33-4c4d-881d-1f85d29b89ef\nsecrets:\n\n- name: adminaccess-token-4cc6n\n</code></pre> [\u6587\u672c 1]</p> <p>\u8981\u5c06 AWS IAM \u89d2\u8272\u5206\u914d\u7ed9\u670d\u52a1\u8d26\u6237\uff0c\u60a8\u5fc5\u987b\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u670d\u52a1\u8d26\u6237\u3002\u6b64\u65f6\uff0c\u5fc5\u987b\u6307\u5b9a\u8981\u5206\u914d\u7ed9 eks.amazonaws.com/role-arn \u6ce8\u89e3\u7684 AWS IAM \u89d2\u8272\u7684 ARN\u3002 [\u6587\u672c 1] \u663e\u793a\u670d\u52a1\u8d26\u6237\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u6b63\u5728\u5206\u914d\u89d2\u8272\u7684 ARN \u3002</p> <p>\u6267\u884c\uff1a <pre><code>role_arn=$(kubectl get sa ${serviceaccount_name} \\\n  -n ${namespace_name} -o json \\\n  |jq -r '.metadata.annotations.\"eks.amazonaws.com/role-arn\"')\naws iam get-role --role-name ${role_arn##*role/} --output json --query 'Role.AssumeRolePolicyDocument'\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Federated\": \"arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/D3488XXXXXXXXXXXXXXXXXXXXXA21CD3\"\n            },\n            \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"oidc.eks.us-east-2.amazonaws.com/id/D3488XXXXXXXXXXXXXXXXXXXXXA21CD3:aud\": \"sts.amazonaws.com\",\n                    \"oidc.eks.us-east-2.amazonaws.com/id/D3488XXXXXXXXXXXXXXXXXXXXXA21CD3:sub\": \"system:serviceaccount:default:adminaccess\"\n                }\n            }\n        }\n    ]\n}\n</code></pre> [\u6587\u672c 2]</p> <p>[\u6587\u672c 2] \u663e\u793a\u4e86 AWS IAM \u89d2\u8272\u6388\u4e88 [\u6587\u672c 1] \u4e2d\u670d\u52a1\u8d26\u6237\u7684\u4fe1\u4efb\u5173\u7cfb\u3002\u4fe1\u4efb\u5173\u7cfb\u8868\u793a\u4f7f\u7528 AWS IAM \u89d2\u8272\u7684\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6cd5\u548c\u6761\u4ef6\u3002 Principal \u9879\u6307\u793a\u9700\u8981\u5bf9\u8c01\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u624d\u80fd\u88ab\u6388\u4e88 AWS IAM \u89d2\u8272\u3002\u5728[\u6587\u672c 2]\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6307\u5b9a\u4e86 EKS Cluster \u7684 OIDC Identity Provider \u7684 URL\u3002\u56e0\u6b64\uff0c\u8fd9\u610f\u5473\u7740\u5728 EKS \u96c6\u7fa4\u5185\u8fd0\u884c\u7684 Pod \u5fc5\u987b\u901a\u8fc7 EKS \u96c6\u7fa4\u7684 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u7684\u8eab\u4efd\u9a8c\u8bc1\u624d\u80fd\u88ab\u6388\u4e88 AWS IAM \u89d2\u8272\u3002</p> <p>\u83b7\u53d6 AWS IAM Role \u7684\u65b9\u6cd5\u5728 Trust Relationship \u7684 Action \u4e2d\u6307\u5b9a\uff0cAssumeRoleWithWebIdentity \u5728 [\u6587\u672c 2] \u7684 Action \u9879\u4e2d\u6307\u5b9a\u3002 AssumeRoleWithWebIdentity \u8868\u793a\u901a\u8fc7 OIDC Identity Provider \u9881\u53d1\u7684 JWT Token \u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002 Condition \u8868\u793a JWT Token \u4e2d\u5fc5\u987b\u5305\u542b\u7684\u58f0\u660e\u6761\u4ef6\u3002 [\u6587\u672c 2] \u8868\u793a\u5e94\u5728 aud Claim \u4e2d\u6307\u5b9a\u201csts.amazonaws.com\u201d\uff0c\u5728 sub Claim \u4e2d\u6307\u5b9a\u201csystem:serviceaccount:default:adminaccess\u201d\u3002</p> <p>\u5728 IRSA \u8fc7\u7a0b\u4e2d\uff0cProjected SA Token \u7528\u4f5c JWT Token\uff0cProjected SA Token \u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u4f7f\u7528 Projected SA Token\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u548c\u4f7f\u7528\u5206\u914d\u7ed9\u670d\u52a1\u8d26\u6237\u7684 AWS IAM \u89d2\u8272\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#pod-sa","title":"\u521b\u5efa Pod \u5e76\u4f7f\u7528 SA","text":"<p>\u521b\u5efa\u4e00\u4e2a Pod \u5e76\u4e14\u6307\u5b9a\u4ee5\u4e4b\u524d\u521b\u5efa\u7684 Service Account \u8fd0\u884c\uff0c\u7136\u540e\u89c2\u5bdf\u5e76\u8fdb\u884c Token \u9a8c\u8bc1\u3002\u6267\u884c\uff1a <pre><code>cat &gt;sleep-pod.yaml &lt;&lt;-EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: sleep-pod\nspec:\n  serviceAccountName: adminaccess\n  containers:\n\n    - name: my-aws-cli\n      image: amazon/aws-cli:latest\n      command: ['sleep', '360000']\n  restartPolicy: Never\nEOF\n\nkubectl apply -f sleep-pod.yaml\n</code></pre></p> <p>\u6267\u884c\uff1a <pre><code>kubectl get pod sleep-pod -o yaml\n</code></pre></p> <p>\u8f93\u51fa\uff1a <pre><code>...\nspec:\n  containers:\n\n  - command:\n    - sleep\n    - \"360000\"\n    env:\n    - name: AWS_STS_REGIONAL_ENDPOINTS\n      value: regional\n    - name: AWS_DEFAULT_REGION\n      value: us-east-2\n    - name: AWS_REGION\n      value: us-east-2\n    - name: AWS_ROLE_ARN\n      value: arn:aws:iam::123456789012:role/eksctl-eksworkshop-eksctl-addon-iamserviceac-Role1-1JL3FI83YZ5ZN\n    - name: AWS_WEB_IDENTITY_TOKEN_FILE\n      value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token\n    image: amazon/aws-cli:latest\n    imagePullPolicy: Always\n    name: my-aws-cli\n    resources: {}\n    terminationMessagePath: /dev/termination-log\n    terminationMessagePolicy: File\n    volumeMounts:\n    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n      name: kube-api-access-srtw7\n      readOnly: true\n    - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount\n      name: aws-iam-token\n      readOnly: true\n...\n  volumes:\n  - name: aws-iam-token\n    projected:\n      defaultMode: 420\n      sources:\n      - serviceAccountToken:\n          audience: sts.amazonaws.com\n          expirationSeconds: 86400\n          path: token\n  - name: kube-api-access-srtw7\n    projected:\n      defaultMode: 420\n      sources:\n      - serviceAccountToken:\n          expirationSeconds: 3607\n          path: token\n      - configMap:\n          items:\n          - key: ca.crt\n            path: ca.crt\n          name: kube-root-ca.crt\n      - downwardAPI:\n          items:\n          - fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n            path: namespace\n...\n</code></pre> [\u6587\u672c 3]</p> <p>\u4e3a\u4e86\u5728 Pod \u5185\u6267\u884c AssumeRoleWithWebIdentity\uff0c\u9700\u8981 Pod \u8fd0\u884c\u6240\u5728\u7684 Kubernetes \u96c6\u7fa4\u533a\u57df\u3001\u8981\u6388\u4e88\u7684 AWS IAM \u89d2\u8272\u4ee5\u53ca JWT Token \u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\u8fd9\u4e9b\u5fc5\u8981\u7684\u4fe1\u606f\u88ab EKS \u63a7\u5236\u5e73\u9762\u4e2d\u5b58\u5728\u7684 Pod Identity Webhook \u5f3a\u884c\u6ce8\u5165\u5230 Pod \u4e2d\u3002\u5f53\u521b\u5efa\u4f7f\u7528\u5177\u6709 AWS IAM \u89d2\u8272\u7684\u670d\u52a1\u8d26\u6237\u7684 Pod \u65f6\uff0cPod Identity Webhook \u901a\u8fc7\u66f4\u6539\uff08\u53d8\u5f02\uff09Pod \u7684\u89c4\u8303\u6765\u6ce8\u5165\u4fe1\u606f\u3002 [\u6587\u672c 3] \u663e\u793a\u4e86\u7531\u4e8e Pod Identity Webhook \u800c\u66f4\u6539\u7684Pod\u3002</p> <p>Pod Identity Webhook \u521b\u5efa\u5e76\u6302\u8f7d\u4e00\u4e2a\u540d\u4e3a AWS_DEFAULT_REGION\u3001AWS_REGION\u3001AWS_ROLE_ARN\u3001AWS_WEB_IDENTITY_TOKEN_FILE \u73af\u5883\u53d8\u91cf\u548c <code>aws-iam-token</code> \u7684 Projected SA Token \u5377\u3002Projected SA Token \u5b58\u5728\u4e8e\u540d\u4e3a aws-iam-token \u7684 Projected SA Token \u5377\u4e2d\u3002\u60a8\u53ef\u4ee5\u770b\u5230 Projected SA Token \u5377\u8bbe\u7f6e\u5305\u62ec\u8fc7\u671f\u65f6\u95f4\u548c Audience \u8bbe\u7f6e\u3002</p> <p>Pod Identity Webhook \u6dfb\u52a0\u7684 \u201cAWS_*\u201d \u73af\u5883\u53d8\u91cf\u548c \u201caws-iam-token\u201d Token \u88ab AWS SDK \u4f7f\u7528\u3002 AWS SDK \u901a\u8fc7\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u4fe1\u606f\u6267\u884c AssumeRoleWithWebIdentity \u64cd\u4f5c\u3002\u5728 [\u6587\u672c 3] \u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u4e3a\u6bcf\u4e2a Pod \u5206\u914d\u7684\u9ed8\u8ba4 Service Account \u8bbe\u7f6e\u4ecd\u7136\u5b58\u5728\u3002</p> <p>\u6267\u884c\uff1a <pre><code>kubectl get mutatingwebhookconfiguration pod-identity-webhook -o yaml\n</code></pre> \u4e0a\u8ff0\u547d\u4ee4\u8f93\u51fa\u4e2d\u53ef\u4ee5\u770b\u5230\u5305\u542b <code>caBundle</code> \uff0c\u8be5\u8bc1\u4e66\u548c\u4ee5\u4e0b <code>configmap</code> \u4e2d\u7684\u8bc1\u4e66\u76f8\u540c</p> <p>\u6267\u884c\uff1a <pre><code>kubectl get cm kube-root-ca.crt -o yaml\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#_2","title":"\u670d\u52a1\u5e10\u6237\u4ee4\u724c\u521b\u5efa / \u66ff\u6362","text":"<p>\u4e3a\u4e86\u6267\u884c AssumeRoleWithWebIdentity \u64cd\u4f5c\uff0c\u5fc5\u987b\u4f7f\u7528 JWT \u5f62\u5f0f\u7684 ID Token\uff0c\u5176\u4e2d\u5305\u542b OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u9881\u53d1\u7684\u8eab\u4efd\u9a8c\u8bc1\u4fe1\u606f\u3002\u4f46\u662f Kubernetes API Server \u5e76\u6ca1\u6709\u6536\u5230 OIDC Identity Provider \u4e0b\u53d1\u7684 ID Token\uff0c\u800c\u662f\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a JWT Token \u6ce8\u5165\u5230 Pod \u4e2d\u3002\u4e3a\u4e86\u8ba9 Kubernetes API Server \u4ee3\u8868 OIDC Identity Provider \u751f\u6210 JWT Token\uff0cOIDC Identity Provider \u4f7f\u7528\u7684 Private/Public Key \u4e5f\u88ab API Server \u4f7f\u7528\u3002</p> <p>\u5728 Kubernetes API Server \u4e2d\uff0cJWT Token \u751f\u6210\u7684\u5fc5\u8981\u8bbe\u7f6e\u662f\u901a\u8fc7\u4ee5\u4e0b\u53c2\u6570\u8fdb\u884c\u7684\u3002</p> <ul> <li>service-account-signing-key-file \uff1a\u6307\u5b9a\u7528\u4e8e\u7b7e\u7f72\u670d\u52a1\u5e10\u6237\u4ee4\u724c\u7684\u5bc6\u94a5\u6587\u4ef6\u7684\u8def\u5f84\u3002\u671f\u671b\u6307\u5b9a EKS \u96c6\u7fa4\u7684 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u7684\u79c1\u94a5\u3002</li> <li>service-account-key-file \uff1a\u6307\u5b9a\u7528\u4e8e\u9a8c\u8bc1\u7b7e\u540d\u670d\u52a1\u5e10\u6237\u4ee4\u724c\u7684\u5bc6\u94a5\u6587\u4ef6\u7684\u8def\u5f84\u3002\u671f\u671b\u6307\u5b9a EKS \u96c6\u7fa4\u7684 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u7684\u516c\u94a5\u3002</li> <li>service-account-issuer \uff1a\u8bbe\u7f6e OIDC Identity Provider \u7684 URL\uff0c\u5373 Service Account Token \u7684\u9881\u53d1\u8005\u3002\u9884\u8ba1 EKS \u96c6\u7fa4\u7684 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005 URL \u8bbe\u7f6e\u5728 EKS \u7684 Kubernetes API \u670d\u52a1\u5668\u4e2d\u3002</li> </ul> <p>\u5728 cloudwatch log insight \u9875\u9762\u4e2d\u8fdb\u884c\u67e5\u8be2\uff0c\u9009\u4e2d\u4f60\u7684 eks \u63a7\u5236\u5e73\u9762\u7684\u65e5\u5fd7\u7ec4\uff0c\u5e76\u4e14\u9009\u62e9\u65e5\u671f\u8303\u56f4\u8986\u76d6\u96c6\u7fa4\u521b\u5efa\u65f6\u95f4\u70b9\u3002 <pre><code>fields @timestamp, @message\n| filter @message like /service-account/\n| sort @timestamp desc\n</code></pre></p> <p>\u67e5\u8be2\u7ed3\u679c\uff1a </p> <p>\u6267\u884c\u4e0b\u9762\u547d\u4ee4\uff0c\u5e76\u5c06\u8f93\u51fa\u590d\u5236\u5230 jwt.io  <pre><code>kubectl exec -it pod/sleep-pod -n ${namespace_name} -- cat /var/run/secrets/eks.amazonaws.com/serviceaccount/token \n# |jwt decode --json --iso8601 - |tee /tmp/$$.eks-token\n</code></pre></p> <p>jwt \u89e3\u6790\u8f93\u51fa\uff1a <pre><code>{\n  \"header\": {\n    \"alg\": \"RS256\",\n    \"kid\": \"5d46b7af567c7c87b2a87603c8b144855bae1fc7\"\n  },\n  \"payload\": {\n    \"aud\": [\n      \"sts.amazonaws.com\"\n    ],\n    \"exp\": \"2022-11-03T07:23:53+00:00\",\n    \"iat\": \"2022-11-02T07:23:53+00:00\",\n    \"iss\": \"https://oidc.eks.us-east-2.amazonaws.com/id/D3488XXXXXXXXXXXXXXXXXXXXXA21CD3\",\n    \"kubernetes.io\": {\n      \"namespace\": \"default\",\n      \"pod\": {\n        \"name\": \"sleep-pod\",\n        \"uid\": \"b6c05863-18b9-46f1-9155-0a300ab5ceee\"\n      },\n      \"serviceaccount\": {\n        \"name\": \"adminaccess\",\n        \"uid\": \"7621dbcf-6c33-4c4d-881d-1f85d29b89ef\"\n      }\n    },\n    \"nbf\": \"2022-11-02T07:23:53+00:00\",\n    \"sub\": \"system:serviceaccount:default:adminaccess\"\n  }\n}\n</code></pre> [\u6587\u672c 4]</p> <p>[\u6587\u672c 4] \u663e\u793a\u4e86\u5bf9 Pod \u7684 Projected SA \u4ee4\u724c\u6267\u884c JWT Deconding \u65f6\u7684\u5185\u5bb9\u3002 \u6839\u636e service-account-issuer \u53c2\u6570\uff0c\u5728 Issuer(iss) Claim \u4e2d\u8bbe\u7f6e\u4e86 EKS \u96c6\u7fa4\u7684 OIDC Identity Provider \u7684 URL\u3002 \u5728 [\u6587\u672c 3] \u4e2d\uff0c\u7531\u4e8e Audience \u4e2d\u8bbe\u7f6e\u4e86\u201csts.amazonaws.com\u201d\uff0cAudience(aud) Claim \u4e2d\u4e5f\u8bbe\u7f6e\u4e86\u201csts.amazonaws.com\u201d\u3002</p> <p>\u5728 Subject(sub) Claim \u4e2d\u8bbe\u7f6e\u4e86\u76f8\u5173\u5185\u5bb9\u3002 Expiration(exp) \u60a8\u8fd8\u53ef\u4ee5\u68c0\u67e5 Claim \u4e2d\u662f\u5426\u6709\u8fc7\u671f\u65f6\u95f4\u3002 \u53ef\u4ee5\u770b\u51fa [\u6587\u672c 3] \u4e2d Projected SA Token \u7684\u5185\u5bb9\u6ee1\u8db3 [\u6587\u672c 2] \u4e2d AWS IAM Role \u7684 Condition \u6761\u4ef6\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#_3","title":"\u4f7f\u7528\u670d\u52a1\u5e10\u6237\u4ee4\u724c","text":"<p>Pod \u5185\u7684 App \u901a\u8fc7 AssumeRoleWithWebIdentity \u64cd\u4f5c\u5411 AWS STS \u53d1\u9001 Projected SA Token \u4ee5\u83b7\u53d6 Credential\u3002\u6536\u5230 Projected SA \u4ee4\u724c\u540e\uff0cAWS STS \u68c0\u67e5\u4ee4\u724c\u9881\u53d1\u8005\u5e76\u786e\u8ba4\u5b83\u662f\u53d7\u4fe1\u4efb\u7684\uff08\u8054\u5408\uff09OIDC \u8eab\u4efd\u63d0\u4f9b\u5546\u3002\u5982\u679c\u786e\u8ba4 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u662f\u53ef\u4fe1\u7684\uff0c\u5219\u4f7f\u7528 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u7684\u516c\u94a5\u9a8c\u8bc1\u6295\u5f71 SA \u4ee4\u724c\u3002\u5982\u679c\u786e\u5b9a\u5b83\u662f\u6709\u6548\u7684 Projected SA \u4ee4\u724c\uff0cAWS STS \u4f1a\u5c06\u51ed\u8bc1\u4f20\u8f93\u5230 Pod \u5185\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u83b7\u5f97\u4e00\u4e2a\u4f7f\u7528\u51ed\u8bc1\u7684 AWS IAM \u89d2\u8272\u5e76\u8bbf\u95ee AWS \u670d\u52a1\u3002</p> <p>Projected SA Token \u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u7531 EKS \u96c6\u7fa4\u7684 OIDC Identity Provider \u9881\u53d1\uff0c\u800c\u662f\u7531 Kubernetes API Server \u9881\u53d1\uff0c\u800c\u662f Kubernetes API Server \u5728\u9881\u53d1\u65f6\u4f7f\u7528\u4e0e OIDC Identity Provider \u4e00\u8d77\u4f7f\u7528\u7684\u79c1\u94a5\u6765\u9881\u53d1 Projected SA Token\u3002\u88ab\u89c6\u4e3a\u7531\u96c6\u7fa4\u7684 OIDC \u8eab\u4efd\u63d0\u4f9b\u8005\u9881\u53d1\u7684\u4ee4\u724c\u3002</p> <p>\u4ee5\u4e0b\u6b65\u9aa4\u901a\u8fc7\u96c6\u7fa4 Endpoint \u624b\u5de5\u7533\u8bf7 Token \uff0c\u5e76\u4f7f\u7528 OIDC Identity Provider \u7684\u516c\u94a5\u8fdb\u884c\u7b7e\u540d\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u53ef\u4ee5\u8868\u660e\u8be5 Token \u4e2d\u5305\u542b\u7684\u7b7e\u540d\u662f\u7531 OIDC Identity Provider \u7684\u79c1\u94a5\u7b7e\u53d1\u7684\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#token","title":"\u624b\u5de5\u7533\u8bf7\u4e00\u4e2atoken","text":"<p>\u53ef\u4ee5\u624b\u5de5\u6267\u884c curl \u547d\u4ee4\uff0c\u4ece API Server \u83b7\u53d6\u4ee4\u724c\uff0c\u53c2\u7167\u5982\u4e0b\u4ee3\u7801\uff1a <pre><code>PAYLOAD=$(aws eks describe-cluster \\\n  --name ${cluster_name} \\\n  --query 'cluster.{CA: certificateAuthority.data,Endpoint: endpoint}')\necho $PAYLOAD | jq -rc .CA | base64 --decode &gt; /tmp/public_cert  \nENDPOINT=$(echo $PAYLOAD | jq -rc .Endpoint)\nTOKEN=$(aws eks get-token \\\n  --cluster-name ${cluster_name} | jq -rc .status.token)\n\ncurl -v -X \"POST\" --cacert /tmp/public_cert \\\n  -H 'Content-Type: application/json; charset=utf-8' \\\n  -H \"Authorization: Bearer \"${TOKEN} \\\n  -d $'{\"kind\":\"TokenRequest\",\"apiVersion\":\"authentication.k8s.io/v1\",\"spec\":{\"audiences\":[\"sts.amazonaws.com\"]}}' $ENDPOINT/api/v1/namespaces/${namespace_name}/serviceaccounts/${serviceaccount_name}/token &gt; /tmp/$$.out 2&gt; /tmp/$$.err\n\n# get your curl version\ncat /tmp/$$.err |grep user-agent\n\n# get your token\ncat /tmp/$$.out |jq -r '.status.token'\n</code></pre></p> <p>\u7533\u8bf7 Token \u6210\u529f\u6216\u8005\u5931\u8d25\u4fe1\u606f\u53ef\u4ee5\u4ece api server audit \u65e5\u5fd7\u4e2d\u83b7\u53d6\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ece\u4e4b\u524d\u547d\u4ee4\u4e2d\u83b7\u53d6 curl \u7248\u672c\u4fe1\u606f\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u67e5\u8be2 Log Insights\u3002 <pre><code>fields @timestamp, @message\n| filter userAgent = \"curl/7.79.1\"\n| sort @timestamp desc\n</code></pre></p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#token_1","title":"\u9a8c\u8bc1 token","text":"<ul> <li>\u6253\u5f00\u9875\u9762 jwt.io</li> <li>\u590d\u5236 Token \u5230 Encoded \u6846\u4e2d\uff0c\u5e76\u4e14\u5c06\u53f3\u4fa7 kid \u7684\u503c\u590d\u5236\u5230\u4e0b\u9762\u547d\u4ee4\u884c\u4e2d</li> <li>\u5c06\u5982\u4e0b\u547d\u4ee4\u7684 key \u8f93\u51fa (json format) \u590d\u5236\u5230\u53f3\u4fa7 VERIFY SIGNATURE \u4e2d</li> <li>\u5982\u679c\u63d0\u4f9b\u6b63\u786e\u7684\u516c\u94a5\uff0c\u5c06\u5728\u53f3\u4fa7\u51fa\u73b0\u84dd\u8272 <code>Signature Verified</code> \u5b57\u6837\u3002\u5426\u5219\u662f\u7ea2\u8272\u7684 <code>Invalid Signature</code></li> </ul> <p><pre><code>IDP=$(aws eks describe-cluster --name $cluster_name --query cluster.identity.oidc.issuer --output text)\n# kid=$(cat /tmp/$$.eks-token |jq -r '.header.kid')\nkid=&lt;copy-paste-kid-here&gt;\ncurl $(curl -s $IDP/.well-known/openid-configuration | jq -r '.jwks_uri') |jq -r '.keys[] | select (.kid==\"'\"${kid}\"'\")'\n</code></pre> [\u6587\u672c 6]</p> <p>[\u6587\u672c 6] \u4e2d\u4f7f\u7528\u7684 kid \u5728 [\u6587\u672c 4] \u4e2d\u4f7f\u7528 jwt \u547d\u4ee4\u8f93\u51fa\u65f6\u4e5f\u53ef\u4ee5\u770b\u5230\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#_4","title":"\u7ed3\u8bba","text":"<p>Projected SA Token \u5b9e\u9645\u4e0a\u662f\u7531 Kubernetes API Server \u9881\u53d1\uff0c\u4f7f\u7528\u4e0e OIDC Identity Provider \u540c\u6837\u7684\u79c1\u94a5\u6765\u9881\u53d1\u3002\u4f7f\u7528 OIDC Identity Provider \u7684\u516c\u94a5\u53ef\u4ee5\u9a8c\u8bc1 Projected SA Token \u7684\u6709\u6548\u6027\u3002</p>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/TC-eks-irsa-token-deep-dive-lab/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<ol> <li>https://ssup2.github.io/theory_analysis/AWS_EKS_Service_Account_IAM_Role/</li> <li>create eks lab environment<ul> <li>prepare your cloud9 (link), uncomment line to install <code>jwt-cli</code> </li> <li>create your eks (link), exclude <code>addons</code> and <code>iam</code> part from config file</li> </ul> </li> <li>verify-jwt-token-with-nodejs</li> <li>eks-request-jwt-token-manually</li> <li>https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/</li> <li>https://aws.amazon.com/blogs/containers/diving-into-iam-roles-for-service-accounts/</li> <li>https://github.com/aws/amazon-eks-pod-identity-webhook/blob/master/SELF_HOSTED_SETUP.md</li> <li>https://medium.com/dataseries/public-claims-and-how-to-validate-a-jwt-1d6c81823826</li> </ol>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/eks-access-api/","title":"EKS Access API","text":"<p>news: https://aws.amazon.com/about-aws/whats-new/2023/12/amazon-eks-controls-iam-cluster-access-management/ blog: https://aws.amazon.com/blogs/containers/a-deep-dive-into-simplified-amazon-eks-access-management-controls/</p>","tags":["aws/container/eks","aws/security/iam"]},{"location":"EKS/solutions/security/eks-access-api/#console-walkthrough","title":"console walkthrough","text":"<ul> <li>when use eksdemo, you use sts credential will cause failed after create cluster success. </li> <li>go <code>access</code> tab in eks cluster page</li> <li>add instance\u2019s role to it as <code>AmazonEKSClusterAdminPolicy</code></li> <li>switch back to instance to update kube-config and create node group using eksdemo </li> <li>add role to aws-auth config map</li> </ul>","tags":["aws/container/eks","aws/security/iam"]},{"location":"EKS/solutions/security/eks-access-api/#walkthrough","title":"walkthrough","text":"<pre><code>export AWS_DEFAULT_REGION=\nREGION_SUFFIX=$(echo ${AWS_DEFAULT_REGION} |egrep -q '^cn-' &amp;&amp; echo '-cn' || echo '')\nPRINCIPAL_ARN=arn:aws${REGION_SUFFIX}:iam::xxx:user/panlm\nCLUSTER_NAME=ekscluster1\n\n# default mode for new cluster\naws eks update-cluster-config \\\n   --name ${CLUSTER_NAME} \\\n   --access-config authenticationMode=API_AND_CONFIG_MAP\n\naws eks list-access-entries --cluster-name ${CLUSTER_NAME}\n\naws eks create-access-entry --cluster-name ${CLUSTER_NAME} \\\n  --principal-arn ${PRINCIPAL_ARN}\n\naws eks associate-access-policy --cluster-name ${CLUSTER_NAME} \\\n  --principal-arn  ${PRINCIPAL_ARN} \\\n  --policy-arn arn:aws${REGION_SUFFIX}:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy \\\n  --access-scope type=cluster\n</code></pre> <pre><code>aws eks delete-access-entry --cluster-name ${CLUSTER_NAME} \\\n  --principal-arn ${PRINCIPAL_ARN}\n</code></pre>","tags":["aws/container/eks","aws/security/iam"]},{"location":"EKS/solutions/security/eks-access-api/#available-in-china-region","title":"available in china region","text":"<ul> <li>available</li> </ul>","tags":["aws/container/eks","aws/security/iam"]},{"location":"EKS/solutions/security/eks-access-api/#alternative","title":"alternative","text":"<ul> <li>eks-aws-auth</li> </ul>","tags":["aws/container/eks","aws/security/iam"]},{"location":"EKS/solutions/security/eks-access-api/#refer","title":"refer","text":"<p>https://www.wiz.io/blog/new-attack-vectors-emerge-via-recent-eks-access-entries-and-pod-identity-features</p> <p></p>","tags":["aws/container/eks","aws/security/iam"]},{"location":"EKS/solutions/security/eks-aws-auth/","title":"AWS Auth","text":"<p>The Advantage of using Role to access the cluster instead of specifying directly IAM users is that it will be easier to manage: we won\u2019t have to update the ConfigMap each time we want to add or remove users, we will just need to add or remove users from the IAM Group and we just configure the ConfigMap to allow the IAM Role associated to the IAM Group.</p> <p>https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html</p> <pre><code>CLUSTER_NAME=ekscluster1\nexport AWS_DEFAULT_REGION=us-west-2\nAWS_ACCOUNT_ID=$(aws sts get-caller-identity --query \\\"Account\\\" --output text)\neksctl create iamidentitymapping --cluster ${CLUSTER_NAME} \\\n    --arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/WSParticipantRole --username admin --group system:masters \\\n    --no-duplicate-arns\n</code></pre> <ul> <li>eksctl </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/eks-aws-auth/#alternatives","title":"alternatives","text":"<ul> <li>if you use <code>eksdemo</code> to create cluster\u2019s nodegroup failed due to temporary credentials timeout in cloud9, you will find cluster create successfully but <code>aws-auth</code> does not exists, at this time you could not use <code>kubectl</code> to connect it.</li> <li>try to use temporary credential to add instance profile role to cluster following: eks-access-api</li> <li>then try to add node groups to cluster with <code>eksctl</code> (cannot assign security group in eksdemo cli)</li> <li>and add original role to aws-auth again </li> </ul>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/eks-aws-auth/#add-userrole-to-aws-auth-manually","title":"add user/role to aws-auth manually","text":"<pre><code>kubectl edit configmap aws-auth -n kube-system\n</code></pre> <pre><code>  mapUsers: |\n\n    - userarn: arn:aws:iam::XXXXXXXXXXXX:user/testuser\n      username: testuser\n      groups:\n      - system:masters\n</code></pre> <pre><code>  mapRoles: |\n\n    - rolearn: arn:aws:iam::XXXXXXXXXXXX:role/WSParticipantRole\n      username: system:role:adminrole\n      groups:\n      - system:masters\n</code></pre>","tags":["aws/container/eks"]},{"location":"EKS/solutions/security/eks-aws-auth/#more-specific-sample","title":"more specific sample","text":"<p>https://aws.amazon.com/premiumsupport/knowledge-center/eks-kubernetes-object-access-error/</p> <p>\u4ece\u8fd9\u4e2a\u7ae0\u8282\u201cCreate a cluster role and cluster role binding, or a role and role binding\u201d\uff0c\u7b2c\u4e00\u6b65\u6216\u8005\u7b2c\u4e8c\u6b65\u90fd\u53ef\u4ee5\u5b9e\u73b0\u67e5\u770bpod\u8d44\u6e90\uff0c\u533a\u522b\u5c31\u662f\u7b2c\u4e00\u6b65\u6743\u9650\u66f4\u5927\uff0c\u6bd4\u5982\u53ef\u4ee5\u67e5\u770bconfigmap secret\u4e4b\u7c7b\u7684\u3002</p> <p>\u53e6\u5916\u4e00\u4e2a\u7ae0\u8282\u201cView Kubernetes resources in a specific namespace\u201d\u53ef\u4ee5\u6309\u7167namespace\u8fdb\u884c\u533a\u5206\u5141\u8bb8\u7ec6\u7c92\u5ea6\u67e5\u770b\u8d44\u6e90\uff08\u7b2c\u4e00\u6b65\u6216\u8005\u7b2c\u4e8c\u6b65\uff09\u3002\u754c\u9762\u4e0a\u53ef\u80fd\u62a5\u9519\uff0c\u4f46\u662f\u9009\u5bf9namespace\u5c31\u53ef\u4ee5\u67e5\u770b\u4e0d\u4f1a\u62a5\u9519\u3002</p>","tags":["aws/container/eks"]},{"location":"GenAI/","title":"GenAI","text":"<p><pre><code>(path:git/git-mkdocs/GenAI file:.md)\n\n- ($frontmatter:last_modified) [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - (2025-04-21) MCP Server for Grafana: MCP Server for Grafana - (2025-04-21) MCP Server on EC2: \u5c06 MCP Server \u79fb\u52a8\u5230\u8fdc\u7aef\uff0c\u51cf\u5c11\u672c\u5730\u8d44\u6e90\u5360\u7528 - (2025-04-16) Configure SearxNG MCP Server in Cline: \u5728 Cline \u4e2d\u914d\u7f6e SearxNG MCP Server \u5b9e\u73b0\u641c\u7d22\u529f\u80fd - (2025-02-20) deepseek-poc: Deepseek POC - (2024-07-28) dify.ai: sample for dify - (2024-04-29) llm-llama3: llama info &lt;\u2013&gt;</p>"},{"location":"GenAI/build-mcp-server-on-ec2/","title":"MCP Server on EC2","text":"<pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\nuv python install 3.10\n</code></pre> <p>we will use mcp-proxy to move mcp server to ec2 and let client access mcp server through SSE</p> <pre><code>graph LR\n    A[\"LLM Client&lt;br&gt;Cline in VSCode\"] &lt;--&gt;|SSE| B1\n    A &lt;--&gt;|SSE| B2\n\n    subgraph EC2[\"EC2 Instance\"]\n        B1[\"mcp-proxy\"]\n        C1[\"Local MCP Server\"]\n        B1 &lt;--&gt;|stdio| C1\n        B2[\"mcp-proxy\"]\n        C2[\"Local MCP Server\"]\n        B2 &lt;--&gt;|stdio| C2\n\n    end\n\n    style A fill:#ffe6f9,stroke:#333,color:black,stroke-width:2px\n    style B1 fill:#e6e6ff,stroke:#333,color:black,stroke-width:2px\n    style C1 fill:#e6ffe6,stroke:#333,color:black,stroke-width:2px\n    style B2 fill:#e6e6ff,stroke:#333,color:black,stroke-width:2px\n    style C2 fill:#e6ffe6,stroke:#333,color:black,stroke-width:2px\n    style EC2 fill:#f0f0f0,stroke:#333,stroke-width:2px\n</code></pre> <ul> <li>start mcp-proxy  <pre><code>nohup mcp-proxy --sse-host=0.0.0.0 --sse-port=8808 uvx mcp-server-fetch 2&gt;&amp;1 1&gt;/tmp/mcp-proxy-8808.log &amp;\nnohup mcp-proxy --sse-host=0.0.0.0 --sse-port=8809 --env FASTMCP_LOG_LEVEL ERROR uvx awslabs.aws-documentation-mcp-server@latest 2&gt;&amp;1 1&gt;/tmp/mcp-proxy-8809.log &amp;\nnohup mcp-proxy --sse-host=0.0.0.0 --sse-port=8810 --env SEARXNG_URL https://searx.xxx -- docker run -i --rm -e SEARXNG_URL mcp-searxng:latest 2&gt;&amp;1 1&gt;/tmp/mcp-proxy-8810.log &amp;\n</code></pre></li> </ul>","tags":["draft","llm/mcp"]},{"location":"GenAI/build-mcp-server-on-ec2/#use-sse-to-mcp-server-in-vscode-cline","title":"Use SSE to MCP Server in VSCode Cline","text":"<ul> <li>mcp-server json sample <pre><code>    \"mcp-server-fetch-remote\": {\n      \"autoApprove\": [\n        \"fetch\"\n      ],\n      \"disabled\": false,\n      \"timeout\": 60,\n      \"url\": \"http://xxx:8808/sse\",\n      \"transportType\": \"sse\"\n    },\n    \"awslabs.aws-documentation-mcp-server-remote\": {\n      \"autoApprove\": [],\n      \"disabled\": false,\n      \"timeout\": 60,\n      \"url\": \"http://xxx:8809/sse\",\n      \"transportType\": \"sse\"\n    },\n    \"searxng-remote\": {\n      \"autoApprove\": [\n        \"searxng_web_search\",\n        \"web_url_read\"        \n      ],\n      \"disabled\": false,\n      \"timeout\": 60,\n      \"url\": \"http://xxx:8810/sse\",\n      \"transportType\": \"sse\"\n    },\n</code></pre></li> </ul>","tags":["draft","llm/mcp"]},{"location":"GenAI/build-mcp-server-on-ec2/#use-sse-to-mcp-server-in-dify","title":"Use SSE to MCP Server in Dify","text":"<ul> <li> <p>install MCP tools Via SSE plugin in Dify marketplace </p> </li> <li> <p>Set up authorization <pre><code>{\n  \"fetch\": {\n    \"url\": \"http://xxx:8808/sse\",\n    \"headers\": {},\n    \"timeout\": 60,\n    \"sse_read_timeout\": 300\n  },\n  \"aws-docs\": {\n    \"url\": \"http://xxx:8809/sse\",\n    \"headers\": {},\n    \"timeout\": 60,\n    \"sse_read_timeout\": 300\n  },\n  \"searxng\": {\n    \"url\": \"http://xxx:8810/sse\",\n    \"headers\": {},\n    \"timeout\": 60,\n    \"sse_read_timeout\": 300\n  }\n}\n</code></pre></p> </li> <li> <p>create a new agent in Dify Studio </p> </li> </ul>","tags":["draft","llm/mcp"]},{"location":"GenAI/deepseek-poc/","title":"deepseek-poc","text":"","tags":["llm/deepseek"]},{"location":"GenAI/deepseek-poc/#llamacpp","title":"llama.cpp","text":"<p>\u91cf\u5316\u7248\u672c on sagemaker https://github.com/aws-samples/llm_deploy_gcr/tree/main/sagemaker/DeepSeek-R1-671b_dynamic-quants</p>","tags":["llm/deepseek"]},{"location":"GenAI/deepseek-poc/#vllm","title":"vllm","text":"<p>refer: https://github.com/aws-samples/llm_deploy_gcr/tree/main/sagemaker/sagemaker_vllm edited version: deploy_and_test_vllm_djl.ipynb in chapter 3.3 <pre><code>endpoint_model_name = sagemaker.utils.name_from_base(model_name, short=True)\nlocal_code_path = endpoint_model_name\ns3_code_path = f\"s3://{default_bucket}/endpoint_code/vllm_byoc/{endpoint_model_name}.tar.gz\"\n\n%mkdir -p {local_code_path}\n\nprint(\"local_code_path:\", local_code_path)\n\nwith open(f\"{local_code_path}/start.sh\", \"w\") as f:\n    f.write(f\"\"\"\n#!/bin/bash\n\n# download model to local\ns5cmd sync --concurrency 64 \\\n    {s3_model_path}/* /temp/model_weight\n\n# the start script need to be adjust as you needed\n# port needs to be $SAGEMAKER_BIND_TO_PORT\n\npython3 -m vllm.entrypoints.openai.api_server \\\\\n    --port $SAGEMAKER_BIND_TO_PORT \\\\\n    --trust-remote-code \\\\\n    --tensor-parallel-size 1 --max-model-len 8192 --enable-chunked-prefill=False \\\\\n    --served-model-name {MODEL_ID} \\\\\n    --model /temp/model_weight\n\"\"\")\n\n# delete --enforce-eager\n# change model len 65536\n# parallel size from 4 to 1\n# no chunked prefill\n</code></pre></p>","tags":["llm/deepseek"]},{"location":"GenAI/deepseek-poc/#djl","title":"djl","text":"<p>same notebook with previous chapter  deploy_and_test_vllm_djl.ipynb <pre><code># import dotenv\nimport os\nimport sagemaker\nimport boto3\n\n# dotenv.load_dotenv(\".env\", override=True)\n\n# role_name = os.environ.get(\"role_name\")\n\nmodel_id=\"deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B\"\nendpoint_name = \"deepseek-15\"\n\n# model_id=\"llava-hf/llava-1.5-7b-hf\"\n\nsagemaker_session = sagemaker.session.Session()\nregion = sagemaker_session._region_name\n\n\ntry:\n    role = sagemaker.get_execution_role() # If you online sagemaker notebook\nexcept ValueError:\n    iam = boto3.client(\"iam\")\n    role = iam.get_role(RoleName=role_name)[\"Role\"][\"Arn\"]\n\n\nimage_uri = sagemaker.image_uris.retrieve(framework=\"djl-lmi\", version=\"0.28.0\", region=region)\ninstance_type = \"ml.g5.2xlarge\"\n\nrole_name, model_id, image_uri\n</code></pre></p> <pre><code>model = sagemaker.Model(\n  image_uri=image_uri,\n  role=role,\n  env={\n      \"HF_MODEL_ID\": model_id,\n      # \"OPTION_ROLLING_BATCH\": \"vllm\",\n      \"HF_MODEL_TRUST_REMOTE_CODE\": \"True\",\n      # \"GPU_MEMORY_UTILIZATION\": \"0.99\"\n  }\n)\n\nmodel.deploy(\n  instance_type=instance_type, \n  initial_instance_count=1, \n  endpoint_name=endpoint_name\n)\n</code></pre> <p>support BRConnector sagemaker-lmi provider https://aws-samples.github.io/sample-connector-for-bedrock/providers/sagemaker-lmi/</p>","tags":["llm/deepseek"]},{"location":"GenAI/dify-sample/","title":"dify.ai","text":"","tags":["llm"]},{"location":"GenAI/dify-sample/#self-hosting","title":"self-hosting","text":"<ul> <li>https://gaihub.awspsa.com/opensource/difyai/</li> <li>https://aws.amazon.com/cn/blogs/china/get-started-with-generative-ai-by-integrating-bedrock-claude3-with-dify/ <pre><code>sudo yum install docker\nsudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n</code></pre></li> </ul>","tags":["llm"]},{"location":"GenAI/dify-sample/#sample-workflow","title":"sample workflow","text":"<p>chatbot \u8f93\u5165\u95ee\u9898\uff0c\u76f4\u63a5 request \u5230 google CSE\uff0c\u8fd4\u56de\u4e00\u5806 json\uff0c\u7528 llm \u63d0\u793a\u8bcd\u8fdb\u884c\u5904\u7406\uff0c\u8fd4\u56detitle \u548clink\uff0c\u7136\u540e\u7528\u5927\u8bed\u8a00\u6a21\u578b\u8fd4\u56de</p> <p></p>","tags":["llm"]},{"location":"GenAI/dify-sample/#workshop","title":"workshop","text":"<ul> <li>Rapidly Build GenAI Apps with Dify</li> </ul>","tags":["llm"]},{"location":"GenAI/dify-sample/#dify-on-eks","title":"dify on eks","text":"<ul> <li>https://github.com/BorisPolonsky/dify-helm</li> </ul>","tags":["llm"]},{"location":"GenAI/grafana-mcp-server/","title":"grafana-mcp-server","text":"","tags":["llm/mcp"]},{"location":"GenAI/grafana-mcp-server/#create-token-from-grafana-ui","title":"create token from grafana UI","text":"<p>Administrator \u2013&gt; Users and access \u2013&gt; Service accounts \u2013&gt; Add service account \u2013&gt; Add service account token</p> <p></p> <p>verify your token <pre><code>curl -H \"Authorization: Bearer glsa_xxx\" https://grafana.domainname.com/api/dashboards/home\n</code></pre></p>","tags":["llm/mcp"]},{"location":"GenAI/grafana-mcp-server/#build-mcp-server","title":"build mcp server","text":"<ul> <li> <p>grafana mcp server: https://github.com/grafana/mcp-grafana <pre><code>GO=$(which go)\nGOBIN=${GO%/*} go install github.com/grafana/mcp-grafana/cmd/mcp-grafana@latest\n</code></pre></p> </li> <li> <p>sample for stdio <pre><code>{\n  \"mcpServers\": {\n    \"grafana\": {\n      \"command\": \"/home/ec2-user/.local/opt/go/bin/mcp-grafana\",\n      \"args\": [],\n      \"env\": {\n        \"GRAFANA_URL\": \"https://grafana.domainname.com\",\n        \"GRAFANA_API_KEY\": \"&lt;your service account token&gt;\"\n      }\n    }\n  }\n}\n</code></pre></p> </li> <li> <p>sample for sse <pre><code>nohup mcp-proxy --sse-host=0.0.0.0 --sse-port=${PORT} \\\n    --env GRAFANA_URL https://grafana.domainname.com \\\n    --env GRAFANA_API_KEY glsa_xxx \\\n    /home/ec2-user/.local/opt/go/bin/mcp-grafana 2&gt;&amp;1 1&gt;/tmp/mcp-proxy-${PORT}.log &amp;\n</code></pre></p> </li> <li> <p>connect to sse in Cline <pre><code>    \"grafana-mcp-server-remote\": {\n      \"autoApprove\": [\n        \"search_dashboards\",\n        \"get_dashboard_by_uid\",\n        \"query_prometheus\",\n        \"list_datasources\",\n        \"list_alert_rules\"\n      ],\n      \"disabled\": false,\n      \"timeout\": 60,\n      \"url\": \"http://sse-server:port/sse\",\n      \"transportType\": \"sse\"\n    }\n</code></pre></p> </li> </ul>","tags":["llm/mcp"]},{"location":"GenAI/llm-llama2-llama3/","title":"llm-llama3","text":"","tags":["aws/aiml/llm","aws/aiml/sagemaker"]},{"location":"GenAI/llm-llama2-llama3/#blog","title":"blog","text":"<ul> <li>https://aws.amazon.com/blogs/machine-learning/meta-llama-3-models-are-now-available-in-amazon-sagemaker-jumpstart/</li> <li>https://www.philschmid.de/sagemaker-llama3</li> </ul>","tags":["aws/aiml/llm","aws/aiml/sagemaker"]},{"location":"GenAI/llm-llama2-llama3/#llama2-fine-tunning","title":"llama2 fine tunning","text":"<ul> <li>https://github.com/aws/amazon-sagemaker-examples/blob/main/introduction_to_amazon_algorithms/jumpstart-foundation-models/aws-trainium-inferentia-finetuning-deployment/llama-2-trainium-inferentia-finetuning-deployment.ipynb</li> <li>https://github.com/aws/amazon-sagemaker-examples/blob/main/introduction_to_amazon_algorithms/jumpstart-foundation-models/llama-2-finetuning.ipynb</li> </ul>","tags":["aws/aiml/llm","aws/aiml/sagemaker"]},{"location":"GenAI/llm-llama2-llama3/#notebook","title":"notebook","text":"<ul> <li>https://github.com/xiaoqunnaws/Training_On_SageMaker?tab=readme-ov-file</li> </ul>","tags":["aws/aiml/llm","aws/aiml/sagemaker"]},{"location":"GenAI/llm-llama2-llama3/#hardware","title":"hardware","text":"Model Instance Type Quantization # of GPUs per replica Llama 8B (ml.)g5.2xlarge - 1 Llama 70B (ml.)g5.12xlarge gptq / awq 8 Llama 70B (ml.)g5.48xlarge - 8 Llama 70B (ml.)p4d.24xlarge - 8 <p>refer: https://www.philschmid.de/sagemaker-llama3</p>","tags":["aws/aiml/llm","aws/aiml/sagemaker"]},{"location":"GenAI/searxng-mcp-server-for-cline/","title":"SearxNG MCP Server for Cline","text":"","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#build-your-own-searxng","title":"Build your own SearxNG","text":"<ul> <li>Install docker &amp; docker-compose on your linux</li> <li>Clone https://github.com/searxng/searxng-docker</li> <li>Edit .env <pre><code>SEARXNG_HOSTNAME=www.hostname.domainname\nLETSENCRYPT_EMAIL=mailbox@example.com\n</code></pre></li> <li>Edit\u00a0searxng/settings.yml <pre><code># see https://docs.searxng.org/admin/settings/settings.html#settings-use-default-settings\nuse_default_settings: true\nserver:\n  # base_url is defined in the SEARXNG_BASE_URL environment variable, see .env and docker-compose.yml\n  secret_key: \"xxxx\"  # change this!\n  limiter: false  # can be disabled for a private instance\n  image_proxy: true\nui:\n  static_use_hash: true\nredis:\n  url: redis://redis:6379/0\nsearch:\n  # remove format to deny access, use lower case.\n  # formats: [html, csv, json, rss]\n  formats:\n    - html\n    - json # &lt;-- MCP need this format\n</code></pre></li> <li>First time to start containers, need change docker-compose.yaml <pre><code>searxng:\n  ...\n  # cap_drop:\n  #   - ALL\n  ...\n</code></pre></li> <li>Start docker for searxng, caddy, redis, etc. <pre><code>docker-compose up -d\n</code></pre></li> <li>Add A record in route53 to point the public ip of EC2<ul> <li>Open 80, 443 port for this EC2</li> </ul> </li> <li>Access your www.hostname.domainname</li> </ul>","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#mcp-for-searxng","title":"MCP for SearxNG","text":"<ul> <li>you need node 20/22 on you laptop (nodejs-cmd)</li> <li>clone https://github.com/ihor-sokoliuk/mcp-searxng</li> <li> <p>build it <pre><code>npm run build\nls ./dist/index.js\n</code></pre></p> </li> <li> <p>MCP settings in Cline <pre><code>{\n  \"mcpServers\": {\n    \"searxng\": {\n      \"timeout\": 60,\n      \"command\": \"node\",\n      \"args\": [\n        \"/full/path/to/dist/index.js\"\n      ],\n      \"env\": {\n        \"SEARXNG_URL\": \"https://www.hostname.domainname\"\n      },\n      \"transportType\": \"stdio\"\n    }\n  }\n}\n</code></pre></p> </li> </ul>","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#refer","title":"Refer","text":"<p>https://docs.searxng.org/admin/installation-searxng.html#configuration</p>","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#what-is-mcp","title":"what is mcp","text":"","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#compare-to-traditional","title":"compare to traditional","text":"","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#workflow","title":"workflow","text":"","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#another-sample","title":"another sample","text":"<pre><code>{\n  \"mcpServers\": {\n    \"searxng\": {\n      \"timeout\": 60,\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-searxng\"\n      ],\n      \"env\": {\n        \"SEARXNG_URL\": \"https://www.hostname.domainname\"\n      },\n      \"transportType\": \"stdio\"\n    }\n  }\n}\n</code></pre>","tags":["llm/mcp"]},{"location":"GenAI/searxng-mcp-server-for-cline/#blog","title":"blog","text":"<p>https://aws.amazon.com/blogs/machine-learning/harness-the-power-of-mcp-servers-with-amazon-bedrock-agents/</p>","tags":["llm/mcp"]},{"location":"cloud9/","title":"Cloud9","text":""},{"location":"cloud9/#1-quick-start","title":"1 Quick start","text":"<ul> <li>Quick Setup Cloud9: \u7b80\u5316\u521b\u5efa Cloud9 \u811a\u672c\uff0c\u4f18\u5148\u9009\u62e9\u4f7f\u7528 Terraform \u81ea\u52a8\u521d\u59cb\u5316\uff1b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u811a\u672c\u4ece CloudShell \u4e2d\u5b8c\u6210\u521d\u59cb\u5316<ul> <li>example_instancestack_ubuntu.yaml</li> <li>bootstrapping-python.py</li> </ul> </li> <li>Setup Cloud9 for EKS: \u4f7f\u7528\u811a\u672c\u5b8c\u6210\u5b9e\u9a8c\u73af\u5883\u521d\u59cb\u5316<ul> <li>script-prep-eks-env-part-one.sh<ul> <li>script-ubuntu-prep-eks-env-part-one.sh</li> </ul> </li> <li>script-prep-eks-env-part-two.sh <code>sh curl --location https://panlm.github.io/cloud9/script-prep-eks-env-part-two.sh |sh</code></li> <li>script-prep-eks-env-part-three.sh</li> </ul> </li> </ul>"},{"location":"cloud9/#2-others","title":"2 Others","text":"<ul> <li>create standard vpc for lab in china region: \u521b\u5efa\u5b9e\u9a8c\u73af\u5883\u6240\u9700\u8981\u7684 VPC \uff0c\u5e76\u4e14\u652f\u6301\u76f4\u63a5 attach \u5230 TGW \u65b9\u4fbf\u7f51\u7edc\u8bbf\u95ee</li> </ul>"},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/","title":"Create Standard VPC for Lab in China Region or Global Region","text":"","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#using-cloudformation-template-","title":"using-cloudformation-template-","text":"<ul> <li>download cloudformation template<ul> <li>https://panlm.github.io/EKS/cluster/aws-vpc.template.yaml</li> </ul> </li> <li>search <code>cloud9</code> in marketplace, and launch instance from it</li> <li>assign <code>AdministratorAccess</code> to instance profile</li> <li></li> </ul>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#prep-cfn-template-","title":"prep-cfn-template-","text":"<pre><code>AWS_REGION=cn-north-1\nexport AWS_DEFAULT_REGION=${AWS_REGION}\n</code></pre> <pre><code>UNIQ_STR=$(date +%Y%m%d-%H%M%S)\nBUCKET_NAME=$(aws s3 mb s3://panlm-${UNIQ_STR} |awk '{print $2}')\n\nwget -O aws-vpc.template.yaml https://panlm.github.io/EKS/cluster/aws-vpc.template.yaml\naws s3 cp aws-vpc.template.yaml s3://${BUCKET_NAME}/\n\n# first 2 AZs\n# separator `\\,` is necessary for ParameterValue in cloudformation\nTWOAZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text |xargs -n 1 |sed -n '1,2p' |xargs |sed 's/ /\\\\,/g'))\n</code></pre>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#using-tgw-or-not","title":"using tgw or not","text":"","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#option-1-if-you-create-vpc-in-china-region-you-could-put-your-existed-tgw-id-here-for-attach-automatically","title":"(option 1) if you create vpc in china region, you could put your existed tgw id here for attach automatically","text":"<pre><code># new vpc will connect with TGW, if TGW existed\nTGW_ID=tgw-0ec1b74b7d8dcea74\nTGW_NUMBER=$(aws ec2 describe-transit-gateways \\\n--filter Name=transit-gateway-id,Values=${TGW_ID} \\\n|jq -r '.TransitGateways | length')\nif [[ ${TGW_NUMBER} -eq 1 ]]; then\n  TGW_ATTACH=true\nelse\n  TGW_ATTACH=false\nfi\n# do not create public subnet &amp; igw\nCREATE_PUB_SUB=false\nCREATE_NAT=false\n</code></pre>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#option-2-you-could-create-vpc-without-tgw","title":"(option 2) you could create vpc without tgw","text":"<pre><code>TGW_ATTACH=false\nCREATE_PUB_SUB=true\nCREATE_NAT=true\n</code></pre>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#create-vpc-","title":"create-vpc-","text":"<p>create your vpc with specific CIDR <pre><code>echo ${CIDR:=10.130}\nexport AWS_PAGER=\"\"\n\nSTACK_NAME=aws-vpc-${CIDR##*.}-${UNIQ_STR}\n# global region: amazonaws.com\n# china region: amazonaws.com.cn\nif [[ ${AWS_REGION%%-*} == \"cn\" ]]; then\n  SUFFIX=\".cn\"\nelse\n  SUFFIX=\"\"\nfi\naws cloudformation create-stack --stack-name ${STACK_NAME} \\\n  --parameters ParameterKey=AvailabilityZones,ParameterValue=\"${TWOAZS}\" \\\n  ParameterKey=VPCCIDR,ParameterValue=\"${CIDR}.0.0/16\" \\\n  ParameterKey=NumberOfAZs,ParameterValue=2 \\\n  ParameterKey=PublicSubnet1CIDR,ParameterValue=\"${CIDR}.128.0/24\" \\\n  ParameterKey=PublicSubnet2CIDR,ParameterValue=\"${CIDR}.129.0/24\" \\\n  ParameterKey=PublicSubnet3CIDR,ParameterValue=\"${CIDR}.130.0/24\" \\\n  ParameterKey=PublicSubnet4CIDR,ParameterValue=\"${CIDR}.131.0/24\" \\\n  ParameterKey=PrivateSubnet1ACIDR,ParameterValue=\"${CIDR}.0.0/19\" \\\n  ParameterKey=PrivateSubnet2ACIDR,ParameterValue=\"${CIDR}.32.0/19\" \\\n  ParameterKey=PrivateSubnet3ACIDR,ParameterValue=\"${CIDR}.64.0/19\" \\\n  ParameterKey=PrivateSubnet4ACIDR,ParameterValue=\"${CIDR}.96.0/19\" \\\n  ParameterKey=CreateTgwSubnets,ParameterValue=\"true\" \\\n  ParameterKey=TgwSubnet1CIDR,ParameterValue=\"${CIDR}.132.0/24\" \\\n  ParameterKey=TgwSubnet2CIDR,ParameterValue=\"${CIDR}.133.0/24\" \\\n  ParameterKey=TgwSubnet3CIDR,ParameterValue=\"${CIDR}.134.0/24\" \\\n  ParameterKey=TgwSubnet4CIDR,ParameterValue=\"${CIDR}.135.0/24\" \\\n  ParameterKey=CreateTgwAttachment,ParameterValue=\"${TGW_ATTACH}\" \\\n  ParameterKey=TransitGatewayId,ParameterValue=\"${TGW_ID}\" \\\n  ParameterKey=CreatePublicSubnets,ParameterValue=\"${CREATE_PUB_SUB}\" \\\n  ParameterKey=CreatePrivateSubnets,ParameterValue=\"true\" \\\n  ParameterKey=CreateNATGateways,ParameterValue=\"${CREATE_NAT}\" \\\n  --template-url https://${BUCKET_NAME}.s3.${AWS_REGION}.amazonaws.com${SUFFIX}/aws-vpc.template.yaml \n\naws cloudformation wait stack-create-complete \\\n  --stack-name ${STACK_NAME}\n</code></pre></p>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#get-vpc-id-","title":"get-vpc-id-","text":"<pre><code>VPC_ID=$(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`VPCID`].OutputValue' --output text)\n\n# PublicSubnet1ID=$(aws cloudformation --region ${AWS_REGION} describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].Outputs[?OutputKey==`PublicSubnet1ID`].OutputValue' --output text)\n</code></pre>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#option-create-cloud9-in-target-subnet","title":"(option) create cloud9 in target subnet","text":"<ul> <li>refer: setup-cloud9-for-eks <pre><code># name=&lt;give your cloud9 a name&gt;\ndatestring=$(date +%Y%m%d-%H%M)\nname=${name:=cloud9-$datestring}\nexport AWS_DEFAULT_REGION=us-east-2 # need put each command\n\n# VPC_ID=&lt;your vpc id&gt; \n# ensure you have public subnet in it\nDEFAULT_VPC_ID=$(aws ec2 describe-vpcs \\\n  --filter Name=is-default,Values=true \\\n  --query 'Vpcs[0].VpcId' --output text \\\n  --region ${AWS_DEFAULT_REGION})\nVPC_ID=${VPC_ID:=$DEFAULT_VPC_ID}\n\nif [[ ! -z ${VPC_ID} ]]; then\n  FIRST_SUBNET=$(aws ec2 describe-subnets \\\n    --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n    --query 'Subnets[?(AvailabilityZone==`'\"${AWS_DEFAULT_REGION}a\"'` &amp;&amp; MapPublicIpOnLaunch==`true`)].SubnetId' \\\n    --output text \\\n    --region ${AWS_DEFAULT_REGION})\n  aws cloud9 create-environment-ec2 \\\n    --name ${name} \\\n    --image-id amazonlinux-2-x86_64 \\\n    --instance-type m5.xlarge \\\n    --subnet-id ${FIRST_SUBNET} \\\n    --automatic-stop-time-minutes 10080 \\\n    --region ${AWS_DEFAULT_REGION} |tee /tmp/$$\n  echo \"Open URL to access your Cloud9 Environment:\"\n  C9_ID=$(cat /tmp/$$ |jq -r '.environmentId')\n  echo \"https://${AWS_DEFAULT_REGION}.console.aws.amazon.com/cloud9/ide/${C9_ID}\"\nelse\n  echo \"you have no default vpc in $AWS_DEFAULT_REGION\"\nfi\n</code></pre></li> </ul>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#description-in-this-template","title":"description in this template","text":"<ul> <li>no s3 endpoint</li> <li>security group named eks-shared-sg (only it self)</li> <li>security group named normal-sg ( icmp/80/443 for all )</li> <li>tag subnet <ul> <li><code>kubernetes.io/role/internal-elb</code> = <code>1</code></li> <li><code>kubernetes.io/role/elb</code> = <code>1</code></li> <li>(option) <code>kubernetes.io/cluster/&lt;vpc_name&gt;</code> = <code>shared</code></li> </ul> </li> <li>verified in china region</li> <li>add tgw subnet and associate tgw route table with <code>0.0.0.0/0</code> to tgw</li> <li>add <code>10.0.0.0/8</code> route to public/private1A/private2A route table</li> </ul>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/create-standard-vpc-for-lab-in-china-region/#refer","title":"refer","text":"<ul> <li>../CLI/awscli/cloudformation-cmd </li> <li>quickstart-aws-vpc </li> </ul>","tags":["aws/network/vpc","aws/mgmt/cloudformation"]},{"location":"cloud9/quick-setup-cloud9/","title":"Quick Setup Cloud9","text":"<p>\u5728 setup-cloud9-for-eks \u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u7b80\u5316\u64cd\u4f5c\uff0c\u4f7f\u7528\u4e0d\u540c\u65b9\u6cd5\u5728 cloud9 \u4e2d\u5b8c\u6210\u6240\u6709\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5\u7b49\u521d\u59cb\u5316\u64cd\u4f5c\u3002\u63a8\u8350\uff1a</p> <ul> <li>\u4f7f\u7528 Option 1 \u4f7f\u7528 Cloudformation \u81ea\u52a8\u5316\u90e8\u7f72<ul> <li>\u652f\u6301 ubuntu \u548c amazon linux 2</li> </ul> </li> <li>\u6216\u8005\u4f7f\u7528 Option 2.1 \u5728 Cloudshell \u4e2d\u590d\u5236\u7c98\u8d34\u811a\u672c\u5373\u5b8c\u6210\u521d\u59cb\u5316<ul> <li>\u5728 ubuntu \u4e2d\uff0c<code>sudo</code> \u547d\u4ee4\u9700\u8981\u5305\u542b\u5728 <code>()</code> \u4e2d\uff0c\u5426\u5219\u53ef\u80fd\u590d\u5236\u7c98\u8d34\u540e\u65e0\u6cd5\u6267\u884c</li> </ul> </li> <li>\u53e6\u5916\u53ef\u4ee5\u4f7f\u7528 Option 2.2 \u5728 Cloudshell \u4e2d\u521b\u5efa Cloud9 \u5b9e\u4f8b\uff0c\u7136\u540e\u767b\u5f55 Cloud9 \u5b8c\u6210\u521d\u59cb\u5316\u90e8\u7f72</li> </ul>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#option-1-create-cloud9-with-cloudformation-template","title":"Option 1 - create cloud9 with cloudformation template","text":"<ul> <li>download example_instancestack_ubuntu.yaml </li> <li>\u5982\u679c role/panlm \u4e0d\u5b58\u5728\uff0c\u6307\u5b9a <code>ExampleC9EnvOwner</code> \u4e3a <code>current</code><ul> <li>C9 instance owner: role/WSParticipantRole (assumed-role/WSParticipantRole/Participant)</li> <li>AWS managed temporary credentials: Enabled</li> <li><code>aws sts get-caller-identity</code> in cloud9 is owner role</li> </ul> </li> <li>\u5982\u679c role/panlm \u5b58\u5728 (\u53c2\u8003\u8fd9\u91cc\u521b\u5efa)\uff0c\u53ef\u4ee5\u6307\u5b9a <code>ExampleC9EnvOwner</code> \u4e3a <code>3rdParty</code>  \u8bbe\u7f6e Owner \u4e3a role/panlm<ul> <li>C9 instance owner: role/panlm (assumed-role/panlm/granted)</li> <li>AWS managed temporary credentials: Disabled</li> <li><code>aws sts get-caller-identity</code> in cloud9 is EC2 instance role</li> </ul> </li> <li>\u5728 CloudShell \u4e2d\u6267\u884c\u4e0b\u9762\u811a\u672c <pre><code>curl https://panlm.github.io/CLI/functions/func-create-c9-from-cloudshell.sh |sh\n</code></pre></li> <li> <p>func-create-c9-from-cloudshell func-create-c9-from-cloudshell<pre><code># quick link: https://panlm.github.io/CLI/functions/func-create-c9-from-cloudshell.sh\n\naws configure list\nexport AWS_DEFAULT_REGION AWS_REGION\nexport AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query \"Account\" --output text)\n\n# check role/panlm exists or not\naws iam get-role --role-name panlm 2&gt;&amp;1 &gt;/dev/null\nif [[ $? -eq 0 ]]; then\n    echo \"role/panlm existed\"\n    PARAMETERS='--parameters ParameterKey=ExampleC9EnvOwner,ParameterValue=\"3rdParty\" ParameterKey=ExampleOwnerArn,ParameterValue=\"arn:aws:sts::'\"${AWS_ACCOUNT_ID}\"':assumed-role/panlm/granted\"'\nelse\n    echo \"role/panlm does not existed\"\n    PARAMETERS=''\nfi\n\nwget -O example_instancestack_ubuntu.yaml 'https://panlm.github.io/cloud9/example_instancestack_ubuntu.yaml'\n\nSTACK_NAME=cloud9-$(TZ=EAT-8 date +%m%d-%H%M)\naws cloudformation create-stack --stack-name ${STACK_NAME} \\\n    --template-body file://./example_instancestack_ubuntu.yaml \\\n    --capabilities CAPABILITY_IAM \\\n    --on-failure DO_NOTHING \\\n    ${PARAMETERS}\naws cloudformation wait stack-create-complete --stack-name ${STACK_NAME}\n\naws cloudformation describe-stacks --stack-name ${STACK_NAME} \\\n    --query 'Stacks[].Outputs[?OutputKey==`Cloud9IDE`].OutputValue' --output text\n</code></pre></p> </li> <li> <p>\u5982\u4f55 share cloud9 \u5b9e\u4f8b\uff0c\u53ef\u4ee5\u53c2\u8003 (git/git-mkdocs/CLI/awscli/cloud9-cmd)</p> </li> <li> <p>get C9_PID, and disable aws credential in Cloud9 instance. <pre><code>C9PID=$(aws cloudformation describe-stacks \\\n    --stack-name ${STACK_NAME} \\\n    --query 'Stacks[].Outputs[?OutputKey==`C9PID`].OutputValue' --output text)\naws cloud9 update-environment  --environment-id $C9_PID --managed-credentials-action DISABLE\n</code></pre></p> </li> </ul>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#option-2-spin-up-a-cloud9-instance-with-cloudshell","title":"Option 2 - spin up a cloud9 instance with Cloudshell","text":"<ul> <li>\u70b9\u51fb\u8fd9\u91cc \u8fd0\u884c cloudshell\uff0c\u6267\u884c\u4ee3\u7801\u5757\u521b\u5efa cloud9 \u6d4b\u8bd5\u73af\u5883 (open cloudshell, and then execute following code to create cloud9 environment)<ul> <li>\u901a\u8fc7 <code>name</code> \u81ea\u5b9a\u4e49 cloud9 \u7684\u540d\u79f0\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u5c06\u81ea\u52a8\u521b\u5efa</li> <li>cloud9 \u5c06\u521b\u5efa\u5728\u9ed8\u8ba4 vpc \u4e2d\u7b2c\u4e00\u4e2a\u516c\u6709\u5b50\u7f51\u4e2d</li> <li>\u7b49\u5f85\u5b9e\u4f8b\u521b\u5efa\u5b8c\u6210\u5e76\u83b7\u53d6\u5230 instance_id</li> </ul> </li> <li>ensure aws region is correct and walkthrough <pre><code>aws configure list\nexport AWS_DEFAULT_REGION AWS_REGION\n\n# name=&lt;give your cloud9 a name&gt;\ndatestring=$(TZ=CST-8 date +%Y%m%d-%H%M)\necho ${name:=cloud9-$datestring}\n\n# VPC_ID=&lt;your vpc id&gt; \n# ensure you have public subnet in it\nDEFAULT_VPC_ID=$(aws ec2 describe-vpcs \\\n    --filter Name=is-default,Values=true \\\n    --query 'Vpcs[0].VpcId' --output text \\\n    --region ${AWS_DEFAULT_REGION})\nVPC_ID=${VPC_ID:=$DEFAULT_VPC_ID}\n\nif [[ ! -z ${VPC_ID} ]]; then\n    FIRST_SUBNET=$(aws ec2 describe-subnets \\\n        --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n        --query 'Subnets[?(MapPublicIpOnLaunch==`true`)].SubnetId' \\\n        --output text \\\n        --region ${AWS_DEFAULT_REGION} |\\\n        xargs -n 1 |tail -n 1)\n    aws cloud9 create-environment-ec2 \\\n        --name ${name} \\\n        --image-id amazonlinux-2-x86_64 \\\n        --instance-type m5.large \\\n        --subnet-id ${FIRST_SUBNET%% *} \\\n        --automatic-stop-time-minutes 10080 \\\n        --region ${AWS_DEFAULT_REGION} |tee /tmp/$$\n    echo \"Open URL to access your Cloud9 Environment:\"\n    C9_ID=$(cat /tmp/$$ |jq -r '.environmentId')\n    echo \"https://${AWS_DEFAULT_REGION}.console.aws.amazon.com/cloud9/ide/${C9_ID}\"\nelse\n    echo \"you have no default vpc in ${AWS_DEFAULT_REGION}\"\nfi\n\n# wait instance could be see from ec2 :D\nwatch -g -n 2 aws ec2 describe-instances \\\n    --filters \"Name=tag:Name,Values=aws-cloud9-${name}-${C9_ID}\" \\\n    --query \"Reservations[].Instances[].InstanceId\" --output text\n\n( # needed on ubuntu when sudo\nsudo yum install -yq gettext\n)\n</code></pre></li> </ul>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#option-21-stay-in-cloudshell-to-initiate-cloud9-prefer","title":"Option 2.1 stay in cloudshell to initiate cloud9 (prefer)","text":"<ul> <li>\u4ee3\u7801\u5c06\u4ece GitHub \u4e0b\u8f7d\uff1a<ul> <li>https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/setup-cloud9-for-eks.md</li> </ul> </li> <li>\u4ee3\u7801\u5c06\u5b8c\u6210\uff1a<ul> <li>\u521b\u5efa\u89d2\u8272\u540d\u4e3a <code>ec2-admin-role-*</code>\uff0c\u6dfb\u52a0\u7ba1\u7406\u5458\u6743\u9650\uff0c\u4e14\u5141\u8bb8 4 \u4e2a\u5176\u4ed6\u89d2\u8272 assume</li> <li>\u5982\u679c cloud9 \u7684\u5b9e\u4f8b\u5df2\u7ecf\u6709\u5173\u8054\u7684 role\uff0c\u5219\u5c06 role \u6dfb\u52a0\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8d4b\u4e88\u65b0\u5efa\u7684\u89d2\u8272</li> <li>\u5141\u8bb8 cloud9 \u7684\u5b9e\u4f8b\u88ab\u5176\u4ed6 2 \u4e2a\u89d2\u8272\u4f7f\u7528</li> <li>\u91cd\u542f cloud9\uff0c\u7b49\u5f85 cloud9 \u53ef\u4ee5\u88ab ssm \u8bbf\u95ee</li> <li>\u68c0\u67e5\u811a\u672c\u5b58\u5728\uff0c\u5e76\u4e14\u521b\u5efa ssm \u521d\u59cb\u5316\u811a\u672c</li> <li>\u521b\u5efa\u65e5\u5fd7\u7ec4\uff0c\u5e76\u4f7f\u7528 ssm \u6267\u884c\u521d\u59cb\u5316\u811a\u672c</li> <li>\u663e\u793a\u767b\u5f55 cloud9 \u7684 URL <pre><code>echo ${C9_ID}\necho ${name}\n\nexport AWS_PAGER=\"\"\nC9_INST_ID=$(aws ec2 describe-instances \\\n  --filters \"Name=tag:Name,Values=aws-cloud9-${name}-${C9_ID}\" \\\n  --query \"Reservations[].Instances[].InstanceId\" --output text)\nMY_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\nROLE_NAME=ec2-admin-role-$(TZ=CST-8 date +%Y%m%d-%H%M%S)\n\n# build trust.json\ncat &gt; ec2.json &lt;&lt;-EOF\n{\n  \"Effect\": \"Allow\",\n  \"Principal\": {\n    \"Service\": \"ec2.amazonaws.com\"\n  },\n  \"Action\": \"sts:AssumeRole\"\n}\nEOF\nSTATEMENT_LIST=ec2.json\n\nfor i in WSParticipantRole WSOpsRole TeamRole OpsRole ; do\n  aws iam get-role --role-name $i &gt;/dev/null 2&gt;&amp;1\n  if [[ $? -eq 0 ]]; then\n    envsubst &gt;$i.json &lt;&lt;-EOF\n{\n  \"Effect\": \"Allow\",\n  \"Principal\": {\n    \"AWS\": \"arn:aws:iam::${MY_ACCOUNT_ID}:role/$i\"\n  },\n  \"Action\": \"sts:AssumeRole\"\n}\nEOF\n    STATEMENT_LIST=$(echo ${STATEMENT_LIST} \"$i.json\")\n  fi\ndone\n\njq -n '{Version: \"2012-10-17\", Statement: [inputs]}' ${STATEMENT_LIST} &gt; trust.json\necho ${STATEMENT_LIST}\nrm -f ${STATEMENT_LIST}\n\n# create role\naws iam create-role --role-name ${ROLE_NAME} \\\n  --assume-role-policy-document file://trust.json\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n  --policy-arn \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\"\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n  --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\n\ninstance_profile_arn=$(aws ec2 describe-iam-instance-profile-associations \\\n  --filter Name=instance-id,Values=$C9_INST_ID \\\n  --query IamInstanceProfileAssociations[0].IamInstanceProfile.Arn \\\n  --output text)\nif [[ ${instance_profile_arn} == \"None\" ]]; then\n  # create one\n  aws iam create-instance-profile --instance-profile-name ${ROLE_NAME} |tee /tmp/inst-profile-$$.1\n  sleep 10\n  # attach role to it\n  aws iam add-role-to-instance-profile --instance-profile-name ${ROLE_NAME} --role-name ${ROLE_NAME}\n  sleep 10\n  # attach instance profile to ec2\n  aws ec2 associate-iam-instance-profile \\\n    --iam-instance-profile Name=${ROLE_NAME} \\\n    --instance-id ${C9_INST_ID}\nelse\n  existed_role_name=$(aws iam get-instance-profile \\\n    --instance-profile-name ${instance_profile_arn##*/} \\\n    --query 'InstanceProfile.Roles[0].RoleName' \\\n    --output text)\n  aws iam attach-role-policy --role-name ${existed_role_name} \\\n    --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\nfi\n\n# share with other specific user\n# cannot use user-arn: arn:aws:iam::${MY_ACCOUNT_ID}:root to share everyone\n# cannot assign role to access cloud9, only root/user/assumed-role/federated-user\nfor i in WSOpsRole/Ops WSParticipantRole/Participant panlm/granted; do\n  aws cloud9 create-environment-membership \\\n    --environment-id ${C9_ID} \\\n    --user-arn arn:aws:sts::${MY_ACCOUNT_ID}:assumed-role/${i} \\\n    --permissions read-write\ndone\n\n# reboot instance, make role effective ASAP\naws ec2 reboot-instances --instance-ids ${C9_INST_ID}\n\n# wait ssm could connect to this instance \nwhile true ; do\n  sleep 60\n  CONN_STAT=$(aws ssm get-connection-status \\\n  --target ${C9_INST_ID} \\\n  --query \"Status\" --output text)\n  echo ${CONN_STAT}\n  if [[ ${CONN_STAT} == 'connected' ]]; then\n    break\n  fi\ndone\n\n# script source location:\n# https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/script-prep-eks-env-part-one.sh\n# check script existed or not\nRET_CODE=$(curl -sL -w '%{http_code}' -o /dev/null  https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/script-prep-eks-env-part-one.sh)\nif [[ ${RET_CODE} -ne 200 ]]; then\n  echo \"######\"\n  echo \"###### SCRIPT ONE NOT EXISTED\"\n  echo \"######\"\nfi\n\ncat &gt;$$.json &lt;&lt;-'EOF'\n{\n  \"workingDirectory\": [\n    \"\"\n  ],\n  \"executionTimeout\": [\n    \"3600\"\n  ],\n  \"commands\": [\n    \"\",\n    \"TMPFILE=$(mktemp)\",\n    \"curl --location -o ${TMPFILE}-ONE.sh https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/script-prep-eks-env-part-one.sh\",\n    \"chmod a+x ${TMPFILE}-ONE.sh\",\n    \"sudo -u ec2-user bash ${TMPFILE}-ONE.sh 2&gt;&amp;1\",\n    \"\",\n    \"curl --location -o ${TMPFILE}-TWO.sh https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/script-prep-eks-env-part-two.sh\",\n    \"chmod a+x ${TMPFILE}-TWO.sh\",\n    \"sudo -u ec2-user bash ${TMPFILE}-TWO.sh 2&gt;&amp;1\",\n    \"\"\n  ]\n}\nEOF\n\nLOGGROUP_NAME=ssm-runshellscript-log-$(TZ=CST-8 date +%Y%m%d-%H%M)\naws logs create-log-group \\\n  --log-group-name ${LOGGROUP_NAME}\n\naws ssm send-command \\\n  --document-name \"AWS-RunShellScript\" \\\n  --document-version \"1\" \\\n  --targets '[{\"Key\":\"InstanceIds\",\"Values\":[\"'${C9_INST_ID}'\"]}]' \\\n  --parameters file://$$.json \\\n  --timeout-seconds 600 \\\n  --max-concurrency \"50\" --max-errors \"0\"  \\\n  --cloud-watch-output-config CloudWatchLogGroupName=${LOGGROUP_NAME},CloudWatchOutputEnabled=true |tee ssm-$$.json\n# comment \"-a\" in tee 2023/11/20\n\n# wait to Success\nCOMMAND_ID=$(cat ssm-$$.json |jq -r '.Command.CommandId')\nwatch -g -n 10 aws ssm get-command-invocation --command-id ${COMMAND_ID} --instance-id ${C9_INST_ID} --query 'Status' --output text\n\n# disable managed credential and login cloud9\naws cloud9 update-environment  --environment-id $C9_ID --managed-credentials-action DISABLE\necho \"https://${AWS_DEFAULT_REGION}.console.aws.amazon.com/cloud9/ide/${C9_ID}\"\n</code></pre></li> </ul> </li> </ul>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#option-22-login-cloud9-to-initiate-alternative","title":"Option 2.2 login cloud9 to initiate (alternative)","text":"<ul> <li>\u4ee3\u7801\u5c06\u4ece GitHub \u4e0b\u8f7d\uff1a<ul> <li>https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/setup-cloud9-for-eks.md</li> </ul> </li> </ul>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#script-part-one-two","title":"script-part-one-two","text":"<ul> <li>\u4e0b\u9762\u4ee3\u7801\u5757\u5305\u542b\u4e00\u4e9b\u57fa\u672c\u8bbe\u7f6e\uff0c\u5305\u62ec\uff1a(execute this code block to install tools for your lab, and resize ebs of cloud9)<ul> <li>\u5b89\u88c5\u5e38\u7528\u7684\u8f6f\u4ef6</li> <li>\u4fee\u6539 cloud9 \u78c1\u76d8\u5927\u5c0f (docs)</li> </ul> </li> <li>\u5b89\u88c5 eks \u76f8\u5173\u7684\u5e38\u7528\u8f6f\u4ef6 (install some eks related tools)</li> </ul> <pre><code>TMPFILE=$(mktemp)\ncurl --location -o $TMPFILE https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/setup-cloud9-for-eks.md\nfor i in ONE TWO ; do\n  cat $TMPFILE |awk '/###-SCRIPT-PART-'\"${i}\"'-BEGIN-###/,/###-SCRIPT-PART-'\"${i}\"'-END-###/ {print}' &gt; $TMPFILE-$i.sh\n  chmod a+x $TMPFILE-$i.sh\n  sudo -u ec2-user bash $TMPFILE-$i.sh 2&gt;&amp;1\ndone\n</code></pre>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#script-part-three","title":"script-part-three","text":"<ul> <li>\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u4ee3\u7801\u5757\u53ef\u80fd\u9047\u5230\u6743\u9650\u4e0d\u591f\u7684\u544a\u8b66\uff0c\u9700\u8981\uff1a<ul> <li>\u5982\u679c\u4f60\u6709 workshop \u7684 Credentials \uff0c\u76f4\u63a5\u5148\u590d\u5236\u7c98\u8d34\u5230\u547d\u4ee4\u884c\uff0c\u518d\u6267\u884c\u4e0b\u5217\u6b65\u9aa4\uff1b(copy and paste your workshop\u2019s credential to CLI and then execute this code block)</li> <li>\u6216\u8005\uff0c\u5982\u679c\u81ea\u5df1\u8d26\u53f7\u7684 cloud9\uff0c\u5148\u7528\u73af\u5883\u53d8\u91cf\u65b9\u5f0f\uff08<code>AWS_ACCESS_KEY_ID</code> \u548c <code>AWS_SECRET_ACCESS_KEY</code>\uff09\u4fdd\u8bc1\u6709\u8db3\u591f\u6743\u9650\u6267\u884c (or using environment variables to export credential yourself)</li> <li>\u4e0b\u9762\u4ee3\u7801\u5757\u5305\u62ec\uff1a<ul> <li>\u7981\u7528 cloud9 \u4e2d\u7684 credential \u7ba1\u7406\uff0c\u4ece <code>~/.aws/credentials</code> \u4e2d\u5220\u9664 <code>aws_session_token=</code> \u884c</li> <li>\u5206\u914d\u7ba1\u7406\u5458\u6743\u9650 role \u5230 cloud9 instance</li> </ul> </li> </ul> </li> </ul> <pre><code>i=THREE\ncat $TMPFILE |awk \"/###-SCRIPT-PART-${i}-BEGIN-###/,/###-SCRIPT-PART-${i}-END-###/ {print}\" &gt; $TMPFILE-$i.sh\nchmod a+x $TMPFILE-$i.sh\nsudo -u ec2-user bash $TMPFILE-$i.sh 2&gt;&amp;1\n</code></pre>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#open-new-tab-for-verify","title":"open new tab for verify","text":"<ul> <li>\u5728 cloud9 \u4e2d\uff0c\u91cd\u65b0\u6253\u5f00\u4e00\u4e2a terminal \u7a97\u53e3\uff0c\u5e76\u9a8c\u8bc1\u6743\u9650\u7b26\u5408\u9884\u671f\u3002\u4e0a\u9762\u4ee3\u7801\u5757\u5c06\u521b\u5efa\u4e00\u4e2a instance profile \uff0c\u5e76\u5c06\u5173\u8054\u540d\u4e3a <code>adminrole-xxx</code> \u7684 role\uff0c\u6216\u8005\u5728 cloud9 \u73b0\u6709\u7684 role \u4e0a\u5173\u8054 <code>AdministratorAccess</code> role policy\u3002(open new tab to verify you have new role, <code>adminrole-xxx</code>, on your cloud9)</li> </ul> <pre><code>aws sts get-caller-identity\n</code></pre>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/quick-setup-cloud9/#refer","title":"refer","text":"<ul> <li>open console from local ../CLI/linux/granted-assume </li> </ul>","tags":["aws/cloud9","aws/container/eks"]},{"location":"cloud9/setup-cloud9-for-eks/","title":"Setup Cloud9 for EKS","text":"<p>\u5feb\u901f\u8bbe\u7f6e cloud9 \u7528\u4e8e\u65e5\u5e38\u6d4b\u8bd5\u73af\u5883\u642d\u5efa\uff0c\u5305\u542b\u4ece cloudshell \u4e2d\u521b\u5efa cloud9 instance\uff0c\u7136\u540e\u767b\u5f55 cloud9 instance \u8fdb\u884c\u57fa\u7840\u8f6f\u4ef6\u5b89\u88c5\u3001\u78c1\u76d8\u5927\u5c0f\u8c03\u6574\u548c\u5bb9\u5668\u73af\u5883\u76f8\u5173\u8f6f\u4ef6\u5b89\u88c5\u3002\u4e3a\u4e86\u66f4\u65b9\u4fbf\u914d\u7f6e\uff0c\u5728 quick-setup-cloud9 \u4e2d\uff0c\u76f4\u63a5\u53ef\u4ee5\u4ec5\u901a\u8fc7 cloudshell \u5373\u5b8c\u6210\u6240\u6709\u521d\u59cb\u5316\u52a8\u4f5c\uff0c\u767b\u5f55 cloud9 instance \u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u3002</p>","tags":["aws/container/eks","aws/cloud9"]},{"location":"cloud9/setup-cloud9-for-eks/#spin-up-a-cloud9-instance-in-your-region","title":"spin-up-a-cloud9-instance-in-your-region","text":"<ul> <li> <p>\u70b9\u51fb\u8fd9\u91cc \u8fd0\u884c cloudshell\uff0c\u6267\u884c\u4ee3\u7801\u5757\u521b\u5efa cloud9 \u6d4b\u8bd5\u73af\u5883 (open cloudshell, and then execute following code to create cloud9 environment) <pre><code># name=&lt;give your cloud9 a name&gt;\ndatestring=$(date +%Y%m%d-%H%M)\necho ${name:=cloud9-$datestring}\n\n# VPC_ID=&lt;your vpc id&gt; \n# ensure you have public subnet in it\nDEFAULT_VPC_ID=$(aws ec2 describe-vpcs \\\n  --filter Name=is-default,Values=true \\\n  --query 'Vpcs[0].VpcId' --output text \\\n  --region ${AWS_DEFAULT_REGION})\nVPC_ID=${VPC_ID:=$DEFAULT_VPC_ID}\n\nif [[ ! -z ${VPC_ID} ]]; then\n  FIRST_SUBNET=$(aws ec2 describe-subnets \\\n    --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n    --query 'Subnets[?(AvailabilityZone==`'\"${AWS_DEFAULT_REGION}a\"'` &amp;&amp; MapPublicIpOnLaunch==`true`)].SubnetId' \\\n    --output text \\\n    --region ${AWS_DEFAULT_REGION})\n  aws cloud9 create-environment-ec2 \\\n    --name ${name} \\\n    --image-id amazonlinux-2-x86_64 \\\n    --instance-type m5.large \\\n    --subnet-id ${FIRST_SUBNET%% *} \\\n    --automatic-stop-time-minutes 10080 \\\n    --region ${AWS_DEFAULT_REGION} |tee /tmp/$$\n  echo \"Open URL to access your Cloud9 Environment:\"\n  C9_ID=$(cat /tmp/$$ |jq -r '.environmentId')\n  echo \"https://${AWS_DEFAULT_REGION}.console.aws.amazon.com/cloud9/ide/${C9_ID}\"\nelse\n  echo \"you have no default vpc in $AWS_DEFAULT_REGION\"\nfi\n</code></pre></p> </li> <li> <p>\u70b9\u51fb\u8f93\u51fa\u7684 URL \u94fe\u63a5\uff0c\u6253\u5f00 cloud9 \u6d4b\u8bd5\u73af\u5883 (click the URL at the bottom to open cloud9 environment) </p> </li> </ul>","tags":["aws/container/eks","aws/cloud9"]},{"location":"cloud9/setup-cloud9-for-eks/#using-internal-proxy-or-not","title":"using internal proxy or not","text":"<ul> <li>\u5982\u679c\u4f60\u4e0d\u9700\u8981\u4f7f\u7528\u4ee3\u7406\u670d\u52a1\u5668\u4e0b\u8f7d\u8f6f\u4ef6\u5305\uff0c\u8df3\u8fc7\u6267\u884c\u4e0b\u9762\u4ee3\u7801 (skip this code block if you do not need proxy in your environment) <pre><code>cat &gt;&gt; ~/.bash_profile &lt;&lt;-EOF\nexport http_proxy=http://10.101.1.55:998\nexport https_proxy=http://10.101.1.55:998\nexport NO_PROXY=169.254.169.254,10.0.0.0/8,172.16.0.0/16,192.168.0.0/16\nEOF\nsource ~/.bash_profile\n</code></pre></li> </ul>","tags":["aws/container/eks","aws/cloud9"]},{"location":"cloud9/setup-cloud9-for-eks/#install-in-cloud9-","title":"install-in-cloud9-","text":"<ul> <li>\u4e0b\u9762\u4ee3\u7801\u5757\u5305\u542b\u4e00\u4e9b\u57fa\u672c\u8bbe\u7f6e\uff0c\u5305\u62ec\uff1a(execute this code block to install tools for your lab, and resize ebs of cloud9)<ul> <li>\u5b89\u88c5\u66f4\u65b0\u5e38\u7528\u7684\u8f6f\u4ef6</li> <li>\u4fee\u6539 cloud9 \u78c1\u76d8\u5927\u5c0f (link)</li> </ul> </li> </ul> AL2 ubuntu <ul> <li>script-prep-eks-env-part-one.sh </li> </ul> script-prep-eks-env-part-one.sh<pre><code>#!/bin/bash\n###-SCRIPT-PART-ONE-BEGIN-###\necho \"###\"\necho \"SCRIPT-PART-ONE-BEGIN\"\necho \"###\"\n# set size as your expectation, otherwize 100g as default volume size\n# size=200\n\n# default execute this script in EC2, not Cloud9\necho ${EXECUTE_IN_CLOUD9:=false}\n\n# install others\nsudo yum -y install jq gettext bash-completion wget argon2 # moreutils\n\n# install terraform \nsudo yum install -y yum-utils shadow-utils\nsudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\nsudo yum -y install terraform\n\n# install code-server\nIDE_PASSWORD=$(echo -n $(aws sts get-caller-identity --query \"Account\" --output text) | argon2 $(uuidgen) -e)\nmkdir -p ~/.config/code-server\ntee ~/.config/code-server/config.yaml &lt;&lt;-EOF\ncert: false\nauth: password\nhashed-password: \"$IDE_PASSWORD\"\nbind-addr: 0.0.0.0:8088\nEOF\nmkdir -p ~/.local/share/code-server/User\ntee ~/.local/share/code-server/User/settings.json &lt;&lt;-'EOF'\n{\n\"extensions.autoUpdate\": false,\n\"extensions.autoCheckUpdates\": false,\n\"terminal.integrated.cwd\": \"/home/ec2-user\",\n\"telemetry.telemetryLevel\": \"off\",\n\"security.workspace.trust.startupPrompt\": \"never\",\n\"security.workspace.trust.enabled\": false,\n\"security.workspace.trust.banner\": \"never\",\n\"security.workspace.trust.emptyWindow\": false,\n\"workbench.startupEditor\": \"terminal\",\n\"task.allowAutomaticTasks\": \"on\",\n\"editor.indentSize\": \"tabSize\",\n\"editor.tabSize\": 2,\n\"python.testing.pytestEnabled\": true,\n\"auto-run-command.rules\": [\n    {\n    \"command\": \"workbench.action.terminal.new\"\n    }\n],\n\"terminal.integrated.wordSeparators\": \" ()[]{}',\\\"`\u2500\u2018\u2019\u201c\u201d|=\"\n}\nEOF\n\nCODE_SERVER_VER=4.98.2\nwget -qO /tmp/code-server.rpm https://github.com/coder/code-server/releases/download/v${CODE_SERVER_VER}/code-server-${CODE_SERVER_VER}-amd64.rpm\nsudo yum install -y /tmp/code-server.rpm\nsudo systemctl enable --now code-server@ec2-user\nsudo systemctl restart code-server@ec2-user\n\n# install awscli v2\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o /tmp/awscliv2.zip\necho A |unzip /tmp/awscliv2.zip -d /tmp\nsudo /tmp/aws/install --update 2&gt;&amp;1 &gt;/tmp/awscli-install.log\nhash -r # refresh path cache\necho \"complete -C '/usr/local/bin/aws_completer' aws\" &gt;&gt; ~/.bash_profile\n\n# remove existed aws\nif [[ $? -eq 0 ]]; then\n  sudo yum remove -y awscli\n  source ~/.bash_profile\n  aws --version\nfi\n\n# install awscli v1\n# curl \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"awscli-bundle.zip\"\n# unzip awscli-bundle.zip\n# sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws\n\n# install ssm session plugin\ncurl \"https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm\" -o \"/tmp/session-manager-plugin.rpm\"\nsudo yum install -y /tmp/session-manager-plugin.rpm\n\n# your default region \nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\nexport AWS_DEFAULT_REGION=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n\n# change root volume size for cloud9\nif [[ ${EXECUTE_IN_CLOUD9} == \"true\" ]]; then\nif [[ -c /dev/nvme0 ]]; then\n  wget -qO- https://github.com/amazonlinux/amazon-ec2-utils/raw/main/ebsnvme-id &gt;/tmp/ebsnvme-id\n  VOLUME_ID=$(sudo python3 /tmp/ebsnvme-id -v /dev/nvme0 |awk '{print $NF}')\n  DEVICE_NAME=/dev/nvme0n1\nelse\n  C9_INST_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/instance-id)\n  VOLUME_ID=$(aws ec2 describe-volumes --filters Name=attachment.instance-id,Values=${C9_INST_ID} --query \"Volumes[0].VolumeId\" --output text)\n  DEVICE_NAME=/dev/xvda\nfi\n\naws ec2 modify-volume --volume-id ${VOLUME_ID} --size ${size:-100}\nsleep 10\nsudo growpart ${DEVICE_NAME} 1\nsudo xfs_growfs -d /\n\nif [[ $? -eq 1 ]]; then\n  ROOT_PART=$(df |grep -w / |awk '{print $1}')\n  sudo resize2fs ${ROOT_PART}\nfi\nfi\n\necho \"###\"\necho \"SCRIPT-PART-ONE-END\"\necho \"###\"\n###-SCRIPT-PART-ONE-END-###\n</code></pre> <ul> <li>script-ubuntu-prep-eks-env-part-one.sh </li> </ul> script-ubuntu-prep-eks-env-part-one.sh<pre><code>#!/bin/bash\n(###-SCRIPT-PART-ONE-BEGIN-###\necho \"###\"\necho \"SCRIPT-PART-ONE-BEGIN\"\necho \"###\"\n# set size as your expectation, otherwize 100g as default volume size\n# size=200\n\n# default execute this script in EC2, not Cloud9\necho ${EXECUTE_IN_CLOUD9:=false}\n\n# install others\nexport DEBIAN_FRONTEND=noninteractive\nsudo -E apt update\nsudo -E apt-get -yq install jq gettext bash-completion wget argon2 moreutils awscli\n\n# install terraform \nsudo rm -f /usr/share/keyrings/hashicorp-archive-keyring.gpg\nwget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo -E apt update\nsudo -E apt-get -yq install terraform=1.5.7-1\nsudo apt-mark hold terraform\n\n# install code-server\nIDE_PASSWORD=$(echo -n $(aws sts get-caller-identity --query \"Account\" --output text) | argon2 $(uuidgen) -e)\nmkdir -p ~/.config/code-server\ntee ~/.config/code-server/config.yaml &lt;&lt;-EOF\ncert: false\nauth: password\nhashed-password: \"${IDE_PASSWORD}\"\nbind-addr: 0.0.0.0:8088\nEOF\nmkdir -p ~/.local/share/code-server/User\ntee ~/.local/share/code-server/User/settings.json &lt;&lt;-'EOF'\n{\n\"extensions.autoUpdate\": false,\n\"extensions.autoCheckUpdates\": false,\n\"terminal.integrated.cwd\": \"/home/ubuntu\",\n\"telemetry.telemetryLevel\": \"off\",\n\"security.workspace.trust.startupPrompt\": \"never\",\n\"security.workspace.trust.enabled\": false,\n\"security.workspace.trust.banner\": \"never\",\n\"security.workspace.trust.emptyWindow\": false,\n\"workbench.startupEditor\": \"terminal\",\n\"task.allowAutomaticTasks\": \"on\",\n\"editor.indentSize\": \"tabSize\",\n\"editor.tabSize\": 2,\n\"python.testing.pytestEnabled\": true,\n\"auto-run-command.rules\": [\n    {\n    \"command\": \"workbench.action.terminal.new\"\n    }\n],\n\"terminal.integrated.wordSeparators\": \" ()[]{}',\\\"`\u2500\u2018\u2019\u201c\u201d|=\"\n}\nEOF\n\nCODE_SERVER_VER=4.98.2\nwget -qO /tmp/code-server.deb https://github.com/coder/code-server/releases/download/v${CODE_SERVER_VER}/code-server_${CODE_SERVER_VER}_amd64.deb\nsudo dpkg -i /tmp/code-server.deb\nsudo systemctl enable --now code-server@ubuntu\nsudo systemctl restart code-server@ubuntu\n\n# install awscli v2\nsudo -E apt-get -yq install unzip\nsudo apt remove -y awscli\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o /tmp/awscliv2.zip\necho A |unzip /tmp/awscliv2.zip -d /tmp\nsudo /tmp/aws/install --update 2&gt;&amp;1 &gt;/tmp/awscli-install.log\nhash -r # refresh path cache\necho \"complete -C '/usr/local/bin/aws_completer' aws\" &gt;&gt; ~/.bash_profile\n\n# install ssm session plugin\ncurl \"https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb\" -o \"/tmp/session-manager-plugin.deb\"\nsudo dpkg -i /tmp/session-manager-plugin.deb\n\n# your default region \nTOKEN=$(curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\")\nexport AWS_DEFAULT_REGION=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n\n# change root volume size in cloud9\nif [[ ${EXECUTE_IN_CLOUD9} == \"true\" ]]; then\nif [[ -c /dev/nvme0 ]]; then\n  wget -qO- https://github.com/amazonlinux/amazon-ec2-utils/raw/main/ebsnvme-id &gt;/tmp/ebsnvme-id\n  VOLUME_ID=$(sudo python3 /tmp/ebsnvme-id -v /dev/nvme0 |awk '{print $NF}')\n  DEVICE_NAME=/dev/nvme0n1\nelse\n  C9_INST_ID=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/instance-id)\n  VOLUME_ID=$(aws ec2 describe-volumes --filters Name=attachment.instance-id,Values=${C9_INST_ID} --query \"Volumes[0].VolumeId\" --output text)\n  DEVICE_NAME=/dev/xvda\nfi\n\naws ec2 modify-volume --volume-id ${VOLUME_ID} --size ${size:-100}\nsleep 10\nsudo growpart ${DEVICE_NAME} 1\nsudo xfs_growfs -d /\n\nif [[ $? -eq 1 ]]; then\n  ROOT_PART=$(df |grep -w / |awk '{print $1}')\n  sudo resize2fs ${ROOT_PART}\nfi\nfi\n\necho \"###\"\necho \"SCRIPT-PART-ONE-END\"\necho \"###\"\n###-SCRIPT-PART-ONE-END-###\n)\n</code></pre> <ul> <li>\u5b89\u88c5 eks \u76f8\u5173\u7684\u5e38\u7528\u8f6f\u4ef6 (install some eks related tools)</li> <li> <p>for AL2 &amp; ubuntu: script-prep-eks-env-part-two.sh script-prep-eks-env-part-two.sh<pre><code>#!/bin/bash\n# curl --location https://github.com/panlm/panlm.github.io/raw/main/docs/cloud9/script-prep-eks-env-part-two.sh |sh\n# curl --location https://panlm.github.io/cloud9/script-prep-eks-env-part-two.sh |sh\n\n###-SCRIPT-PART-TWO-BEGIN-###\necho \"###\"\necho \"SCRIPT-PART-TWO-BEGIN\"\necho \"###\"\n\nmv -f ~/.bash_completion ~/.bash_completion.$(date +%N)\n# install kubectl with +/- 1 cluster version 1.28.14 / 1.29.9 / 1.30.9 / 1.31.6\n# refer: https://kubernetes.io/releases/\n# sudo curl --location -o /usr/local/bin/kubectl \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nsudo curl --silent --location -o /usr/local/bin/kubectl \"https://storage.googleapis.com/kubernetes-release/release/v1.30.4/bin/linux/amd64/kubectl\"\nsudo chmod +x /usr/local/bin/kubectl\n\n/usr/local/bin/kubectl completion bash &gt;&gt;  ~/.bash_completion\n# source /etc/profile.d/bash_completion.sh\n# source ~/.bash_completion\nalias k=kubectl \ncomplete -F __start_kubectl k\necho \"alias k=kubectl\" &gt;&gt; ~/.bashrc\necho \"complete -F __start_kubectl k\" &gt;&gt; ~/.bashrc\n\n# install eksctl\n# consider install eksctl version 0.89.0\n# if you have older version yaml \n# https://eksctl.io/announcements/nodegroup-override-announcement/\ncurl -L \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp/\nsudo mv -v /tmp/eksctl /usr/local/bin\n/usr/local/bin/eksctl completion bash &gt;&gt; ~/.bash_completion\n# source /etc/profile.d/bash_completion.sh\n# source ~/.bash_completion\n\n# install kubectx\ncurl -L \"https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubectx_v0.9.5_linux_x86_64.tar.gz\" |tar xz -C /tmp/\nsudo mv -f /tmp/kubectx /usr/local/bin/\n# install kubens\ncurl -L \"https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubens_v0.9.5_linux_x86_64.tar.gz\" |tar xz -C /tmp/\nsudo mv -f /tmp/kubens /usr/local/bin/\n\n# install k9s\ncurl -L \"https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz\" |tar xz -C /tmp/\nsudo mv -f /tmp/k9s /usr/local/bin/\n\n# install eksdemo\ncurl -L \"https://github.com/awslabs/eksdemo/releases/latest/download/eksdemo_$(uname -s)_$(uname -p).tar.gz\" |tar xz -C /tmp/\nsudo mv -v /tmp/eksdemo /usr/local/bin\n/usr/local/bin/eksdemo completion bash &gt;&gt; ~/.bash_completion\n# source /etc/profile.d/bash_completion.sh\n# source ~/.bash_completion\n\n# helm newest version (3.15.4)\ncurl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n/usr/local/bin/helm version --short\n# helm 3.8.2 (helm 3.9.0 will have issue #10975)\n# wget https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz\n# tar xf helm-v3.8.2-linux-amd64.tar.gz\n# sudo mv linux-amd64/helm /usr/local/bin/helm\n\n# install aws-iam-authenticator 0.6.11 (2023/10) \nwget -O /tmp/aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.14/aws-iam-authenticator_0.6.14_linux_amd64\nchmod +x /tmp/aws-iam-authenticator\nsudo mv /tmp/aws-iam-authenticator /usr/local/bin/\n\n# install kube-no-trouble\nsh -c \"$(curl -sSL https://git.io/install-kubent)\"\n\n# install kubectl convert plugin\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl-convert\" --output-dir /tmp\ncurl -LO \"https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl-convert.sha256\" --output-dir /tmp\necho \"$(cat /tmp/kubectl-convert.sha256) /tmp/kubectl-convert\" | sha256sum --check\nsudo install -o root -g root -m 0755 /tmp/kubectl-convert /usr/local/bin/kubectl-convert\nrm /tmp/kubectl-convert /tmp/kubectl-convert.sha256\n\n# option install jwt-cli\n# https://github.com/mike-engel/jwt-cli/blob/main/README.md\n# sudo yum -y install cargo\n# cargo install jwt-cli\n# sudo ln -sf ~/.cargo/bin/jwt /usr/local/bin/jwt\n\n# install flux &amp; fluxctl\n# curl -s https://fluxcd.io/install.sh | sudo -E bash\n# /usr/local/bin/flux -v\n# source &lt;(/usr/local/bin/flux completion bash)\n\n# sudo wget -O /usr/local/bin/fluxctl $(curl https://api.github.com/repos/fluxcd/flux/releases/latest | jq -r \".assets[] | select(.name | test(\\\"linux_amd64\\\")) | .browser_download_url\")\n# sudo chmod 755 /usr/local/bin/fluxctl\n# fluxctl version\n# fluxctl identity --k8s-fwd-ns flux\n\necho \"###\"\necho \"SCRIPT-PART-TWO-END\"\necho \"###\"\n###-SCRIPT-PART-TWO-END-###\n</code></pre></p> </li> <li> <p>\u76f4\u63a5\u6267\u884c\u4e0b\u9762\u4ee3\u7801\u5757\u53ef\u80fd\u9047\u5230\u6743\u9650\u4e0d\u591f\u7684\u544a\u8b66\uff0c\u9700\u8981\uff1a</p> <ul> <li>\u5982\u679c\u4f60\u6709 workshop \u7684 Credentials \uff0c\u76f4\u63a5\u5148\u590d\u5236\u7c98\u8d34\u5230\u547d\u4ee4\u884c\uff0c\u518d\u6267\u884c\u4e0b\u5217\u6b65\u9aa4\uff1b(copy and paste your workshop\u2019s credential to CLI and then execute this code block)</li> <li>\u6216\u8005\uff0c\u5982\u679c\u81ea\u5df1\u8d26\u53f7\u7684 cloud9\uff0c\u5148\u7528\u73af\u5883\u53d8\u91cf\u65b9\u5f0f\uff08<code>AWS_ACCESS_KEY_ID</code> \u548c <code>AWS_SECRET_ACCESS_KEY</code>\uff09\u4fdd\u8bc1\u6709\u8db3\u591f\u6743\u9650\u6267\u884c (or using environment variables to export credential yourself)</li> <li>\u4e0b\u9762\u4ee3\u7801\u5757\u5305\u62ec\uff1a<ul> <li>\u7981\u7528 cloud9 \u4e2d\u7684 credential \u7ba1\u7406\uff0c\u4ece <code>~/.aws/credentials</code> \u4e2d\u5220\u9664 <code>aws_session_token=</code> \u884c</li> <li>\u5206\u914d\u7ba1\u7406\u5458\u6743\u9650 role \u5230 cloud9 instance</li> </ul> </li> </ul> </li> <li> <p>for AL2: script-prep-eks-env-part-three.sh script-prep-eks-env-part-three.sh<pre><code>#!/bin/bash\n###-SCRIPT-PART-THREE-BEGIN-###\necho \"###\"\necho \"SCRIPT-PART-THREE-BEGIN\"\necho \"###\"\n\naws cloud9 update-environment  --environment-id $C9_PID --managed-credentials-action DISABLE\nrm -vf ${HOME}/.aws/credentials\n\n# ---\nexport AWS_PAGER=\"\"\nexport AWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nC9_INST_ID=$(curl 169.254.169.254/latest/meta-data/instance-id)\nROLE_NAME=adminrole-$(TZ=CST-8 date +%Y%m%d-%H%M%S)\nMY_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)\n\ncat &gt; ec2.json &lt;&lt;-EOF\n{\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n    },\n    \"Action\": \"sts:AssumeRole\"\n}\nEOF\nSTATEMENT_LIST=ec2.json\n\nfor i in WSParticipantRole WSOpsRole TeamRole OpsRole ; do\n  aws iam get-role --role-name $i &gt;/dev/null 2&gt;&amp;1\n  if [[ $? -eq 0 ]]; then\n    envsubst &gt;$i.json &lt;&lt;-EOF\n{\n  \"Effect\": \"Allow\",\n  \"Principal\": {\n    \"AWS\": \"arn:aws:iam::${MY_ACCOUNT_ID}:role/$i\"\n  },\n  \"Action\": \"sts:AssumeRole\"\n}\nEOF\n    STATEMENT_LIST=$(echo ${STATEMENT_LIST} \"$i.json\")\n  fi\ndone\n\njq -n '{Version: \"2012-10-17\", Statement: [inputs]}' ${STATEMENT_LIST} &gt; trust.json\necho ${STATEMENT_LIST}\nrm -f ${STATEMENT_LIST}\n\n# create role\naws iam create-role --role-name ${ROLE_NAME} \\\n  --assume-role-policy-document file://trust.json\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n  --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\n\ninstance_profile_arn=$(aws ec2 describe-iam-instance-profile-associations \\\n  --filter Name=instance-id,Values=$C9_INST_ID \\\n  --query IamInstanceProfileAssociations[0].IamInstanceProfile.Arn \\\n  --output text)\nif [[ ${instance_profile_arn} == \"None\" ]]; then\n  # create one\n  aws iam create-instance-profile \\\n    --instance-profile-name ${ROLE_NAME}\n  sleep 10\n  # attach role to it\n  aws iam add-role-to-instance-profile \\\n    --instance-profile-name ${ROLE_NAME} \\\n    --role-name ${ROLE_NAME}\n  sleep 10\n  # attach instance profile to ec2\n  aws ec2 associate-iam-instance-profile \\\n    --iam-instance-profile Name=${ROLE_NAME} \\\n    --instance-id ${C9_INST_ID}\nelse\n  existed_role_name=$(aws iam get-instance-profile \\\n    --instance-profile-name ${instance_profile_arn##*/} \\\n    --query 'InstanceProfile.Roles[0].RoleName' \\\n    --output text)\n  aws iam attach-role-policy --role-name ${existed_role_name} \\\n    --policy-arn \"arn:aws:iam::aws:policy/AdministratorAccess\"\nfi\n\necho \"###\"\necho \"SCRIPT-PART-THREE-END\"\necho \"###\"\n###-SCRIPT-PART-THREE-END-###\n</code></pre></p> </li> <li> <p>\u5728 cloud9 \u4e2d\uff0c\u91cd\u65b0\u6253\u5f00\u4e00\u4e2a terminal \u7a97\u53e3\uff0c\u5e76\u9a8c\u8bc1\u6743\u9650\u7b26\u5408\u9884\u671f\u3002\u4e0a\u9762\u4ee3\u7801\u5757\u5c06\u521b\u5efa\u4e00\u4e2a instance profile \uff0c\u5e76\u5c06\u5173\u8054\u540d\u4e3a <code>adminrole-xxx</code> \u7684 role\uff0c\u6216\u8005\u5728 cloud9 \u73b0\u6709\u7684 role \u4e0a\u5173\u8054 <code>AdministratorAccess</code> role policy\u3002(open new tab to verify you have new role, <code>adminrole-xxx</code>, on your cloud9) <pre><code>aws sts get-caller-identity\n</code></pre></p> </li> </ul>","tags":["aws/container/eks","aws/cloud9"]},{"location":"cloud9/setup-cloud9-for-eks/#reference","title":"reference","text":"<ul> <li>https://docs.amazonaws.cn/en_us/eks/latest/userguide/install-aws-iam-authenticator.html</li> <li>switch-role-to-create-dedicate-cloud9</li> </ul>","tags":["aws/container/eks","aws/cloud9"]},{"location":"cloud9/vscode/","title":"vscode","text":"<p>https://github.com/coder/code-server</p>","tags":["draft"]},{"location":"cloud9/vscode/#cloudformation-template-for-deploy","title":"cloudformation template for deploy","text":"<ul> <li>deploy vscode on ec2 (example_instancestack_vscode.yaml)</li> <li>run command on cloudshell <pre><code># OS=amazonlinux2023\nwget -O example_instancestack_vscode.yaml https://panlm.github.io/cloud9/example_instancestack_vscode.yaml\naws configure list\nexport AWS_DEFAULT_REGION AWS_REGION\n# TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"`\n# export AWS_DEFAULT_REGION=$(curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\n# export AWS_REGION=${AWS_DEFAULT_REGION}\nDEFAULT_VPC_ID=$(aws ec2 describe-vpcs \\\n    --filter Name=is-default,Values=true \\\n    --query 'Vpcs[0].VpcId' --output text \\\n    --region ${AWS_DEFAULT_REGION})\nVPC_ID=${VPC_ID:=$DEFAULT_VPC_ID}\n\nif [[ ! -z ${VPC_ID} ]]; then\n    FIRST_SUBNET=$(aws ec2 describe-subnets \\\n        --filters \"Name=vpc-id,Values=${VPC_ID}\" \\\n        --query 'Subnets[?(MapPublicIpOnLaunch==`true`)].SubnetId' \\\n        --output text \\\n        --region ${AWS_DEFAULT_REGION} |\\\n        xargs -n 1 |tail -n 1)\n    STACK_NAME=vscode-$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\n    aws cloudformation create-stack --stack-name ${STACK_NAME} \\\n        --parameters ParameterKey=VpcId,ParameterValue=\"${VPC_ID}\" \\\n                     ParameterKey=PublicSubnetId,ParameterValue=\"${FIRST_SUBNET}\" \\\n                     ParameterKey=EC2InstanceOS,ParameterValue=\"${OS:-ubuntu22}\" \\\n                     ParameterKey=EC2InstanceType,ParameterValue=\"m5.large\" \\\n        --capabilities CAPABILITY_IAM --region ${AWS_DEFAULT_REGION} \\\n        --template-body file://./example_instancestack_vscode.yaml\nelse\n    echo \"you have no default vpc in ${AWS_DEFAULT_REGION}\"\nfi\n\naws cloudformation wait stack-create-complete --stack-name ${STACK_NAME}\naws cloudformation describe-stacks --stack-name ${STACK_NAME} \\\n    --query 'Stacks[0].Outputs[?OutputKey==`AccessURL` || OutputKey==`Password`].OutputValue'\n</code></pre></li> </ul>","tags":["draft"]},{"location":"cloud9/vscode/#deploy-on-al2023","title":"deploy on al2023","text":"<ul> <li>ec2-user user <pre><code>codeServerVersion=4.92.2\ncurl -fsSL https://code-server.dev/install.sh | sh -s -- --version ${codeServerVersion}\nsudo systemctl enable --now code-server@$USER\n\nIDE_PASSWORD=$(uuidgen)\nmkdir -p ~/.config/code-server\ntouch ~/.config/code-server/config.yaml\ntee ~/.config/code-server/config.yaml &lt;&lt;EOF\ncert: true \nauth: password\npassword: \"$IDE_PASSWORD\"\nbind-addr: 0.0.0.0:9090\nEOF\n\nsudo systemctl restart code-server@$USER\n</code></pre></li> </ul>","tags":["draft"]},{"location":"cloud9/vscode/#extension","title":"extension","text":"","tags":["draft"]},{"location":"cloud9/vscode/#continue","title":"continue","text":"<p>integrate with brconnector (link)</p>","tags":["draft"]},{"location":"cloud9/vscode/#install-on-ubuntu","title":"install on ubuntu","text":"<ul> <li>https://code.visualstudio.com/docs/setup/linux <pre><code>wget -O '/tmp/linux-deb-x64.deb'  'https://code.visualstudio.com/sha/download?build=stable&amp;os=linux-deb-x64'\nsudo apt update\nsudo apt install /tmp/linux-deb-x64.deb -f\n</code></pre></li> </ul>","tags":["draft"]},{"location":"cloud9/vscode/#systemctl","title":"systemctl","text":"<pre><code>sudo tee /etc/systemd/system/code-server.service &lt;&lt;EOF\n[Unit]\nDescription=Start code server\n\n[Service]\nExecStart=/usr/bin/code serve-web --port 8080 --host 127.0.0.1 --without-connection-token\n#ExecStart=/usr/bin/code serve-web --port 8080 --host 0.0.0.0 --connection-token token-string \nRestart=always\nType=simple\nUser=ubuntu\n\n[Install]\nWantedBy = multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable --now code-server\nsudo systemctl restart code-server\n</code></pre>","tags":["draft"]},{"location":"cloud9/vscode/#access-web-ui-with-token","title":"access web ui with token","text":"<pre><code>http://public-ip-address:8080/?tkn=token-string\n</code></pre>","tags":["draft"]},{"location":"cloud9/vscode/#add-basic-auth","title":"add basic auth","text":"<ul> <li>refer: basic auth</li> </ul>","tags":["draft"]},{"location":"data-analytics/","title":"Data and Analytics","text":"<pre><code>(path:git/git-mkdocs/data-analytics file:.md)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> <ul> <li>Enable Quicksight with Identity Center: \u4e2d\u56fd\u533a\u57df\u542f\u7528 Quicksight \u5e76\u4e14\u96c6\u6210 Microsoft Entra</li> <li>rds-mysql-replica-cross-region-cross-account: \u7528\u4e8e 1) \u8de8\u8d26\u53f7\u590d\u5236 RDS \u6570\u636e\u5e93; 2) \u6216\u8005\u5c06\u6570\u636e\u5e93\u8f6c\u6362\u6210\u52a0\u5bc6\u5b58\u50a8</li> <li>redshift-data-api-lab: Amazon Redshift \u6570\u636e API \u4f7f\u60a8\u80fd\u591f\u4f7f\u7528\u6240\u6709\u7c7b\u578b\u7684\u4f20\u7edf\u3001\u4e91\u539f\u751f\u548c\u5bb9\u5668\u5316\u3001\u57fa\u4e8e Web \u670d\u52a1\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u548c\u4e8b\u4ef6\u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\u8f7b\u677e\u8bbf\u95ee\u6765\u81ea Amazon Redshift \u7684\u6570\u636e</li> <li>Using MWAA in Private Network: \u5728\u4e2d\u56fd\u533a\u79c1\u6709\u7f51\u7edc\u4e2d\u542f\u7528 mwaa \u670d\u52a1 &lt;\u2013&gt;</li> </ul>"},{"location":"data-analytics/aos-migration/","title":"aos-migration","text":"","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/aos-migration/#snapshot","title":"snapshot","text":"<ul> <li>create role-a aos-mig-role, see detail in refer chapter</li> <li>ad <code>iam:PassRole</code> to role-b</li> <li>(only for kibana) add role-b (using by awscurl) to opensearch \u2013&gt; security \u2013&gt; role \u2013&gt; all_access \u2013&gt; mapped users</li> <li>\u589e\u91cf\u505a\u5feb\u7167\uff0c\u6062\u590d\u65f6\u5019\u6307\u5b9a\u6700\u65b0\u5feb\u7167\u540d\uff0c\u5168\u91cf\u6062\u590d</li> <li>refer: https://docs.amazonaws.cn/opensearch-service/latest/developerguide/managedomains-snapshots.html</li> </ul>","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/aos-migration/#es-710-snapshot","title":"es 7.10 snapshot","text":"<ul> <li>\u589e\u91cf\u5feb\u7167</li> <li>only could use iam role in cli to execute awscurl </li> <li> <p>create snapshot repo <pre><code>DOMAIN_NAME=vpc-src2-xxx.ap-southeast-1.es.amazonaws.com\nawscurl -XPUT --service es --region ap-southeast-1 https://${DOMAIN_NAME}/_snapshot/snapshot-repo-1 -H 'Content-Type: application/json' -d ' \n{\n  \"type\": \"s3\",\n  \"settings\": {\n    \"bucket\": \"aos-mig-20241226\",\n    \"base_path\": \"snapshot\",\n    \"region\": \"ap-southeast-1\",\n    \"role_arn\": \"arn:aws:iam::123456789012:role/aos-mig-role\"\n  }\n}'\n</code></pre></p> </li> <li> <p>do snapshot <pre><code>awscurl -XPUT --service es --region ap-southeast-1 https://${DOMAIN_NAME}/_snapshot/snapshot-repo-1/snapshot-1\n</code></pre></p> </li> <li> <p>get snapshot <pre><code>awscurl -XGET --service es --region ap-southeast-1 https://${DOMAIN_NAME}/_snapshot/_status\n\nawscurl -XGET --service es --region ap-southeast-1 https://${DOMAIN_NAME}/_snapshot/snapshot-repo-1/_all?pretty\n</code></pre></p> </li> </ul>","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/aos-migration/#es-710-restore","title":"es 7.10 restore","text":"<ul> <li>\u5168\u91cf\u6062\u590d</li> <li>(option) put role/user to all_access</li> <li> <p>create repo <pre><code>DOMAIN_NAME=vpc-target2-xxx.ap-southeast-1.es.amazonaws.com\nawscurl -XPUT --service es --region ap-southeast-1 https://${DOMAIN_NAME}/_snapshot/snapshot-repo-1 -H 'Content-Type: application/json' -d ' \n{\n  \"type\": \"s3\",\n  \"settings\": {\n    \"bucket\": \"aos-mig-20241226\",\n    \"base_path\": \"snapshot\",\n    \"region\": \"ap-southeast-1\",\n    \"role_arn\": \"arn:aws:iam::123456789012:role/aos-mig-role\"\n  }\n}'\n\nawscurl -XGET --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/_snapshot/snapshot-repo-1/_all?pretty\"\n\nawscurl -XGET --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/_snapshot?pretty\"\n</code></pre></p> </li> <li> <p>get all indice and delete one of them <pre><code># get all indice\nawscurl -XGET --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/_all\"\n# delete one of them \nawscurl -XDELETE --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/.kibana_1\"\n</code></pre></p> </li> <li> <p>restore <pre><code>awscurl -XPOST --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/_snapshot/snapshot-repo-1/snapshot-1/_restore\" \\\n-d '{\"indices\": \"-.kibana_1\"}' \\\n-H 'Content-Type: application/json'\n</code></pre></p> </li> </ul>","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/aos-migration/#es-68-snapshot","title":"es 6.8 snapshot","text":"<ul> <li>could use iam role / user in cli to execute awscurl </li> <li>follow steps in es 7.10 <pre><code>DOMAIN_NAME=vpc-src1-xxx.ap-southeast-1.es.amazonaws.com\n\nawscurl -XPUT --service es --region ap-southeast-1 http://${DOMAIN_NAME}/_snapshot/snapshot-repo-1 -H 'Content-Type: application/json' -d ' \n{\n  \"type\": \"s3\",\n  \"settings\": {\n    \"bucket\": \"aos-mig-20241226\",\n    \"base_path\": \"snapshot-src1\",\n    \"region\": \"ap-southeast-1\",\n    \"role_arn\": \"arn:aws:iam::123456789012:role/aos-mig-role\"\n  }\n}'\n</code></pre></li> </ul>","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/aos-migration/#error","title":"error","text":"<ul> <li> <p>\u521b\u5efa opensearch repo \u53ea\u80fd\u4f7f\u7528\u672c region \u7684 s3 \u6876</p> </li> <li> <p>\u4f7f\u7528 curl \u7528 admin \u767b\u5f55\uff0c\u53ea\u80fd\u505a\u67e5\u8be2\uff0c\u65e0\u6cd5\u521b\u5efa repo\uff0c\u9700\u8981\u4f7f\u7528 awscurl <pre><code>{\"Message\":\"User: anonymous is not authorized to perform: iam:PassRole on resource: arn:aws:iam::123456789012:role/aos-mig-role because no resource-based policy allows the iam:PassRole action\"}\n</code></pre></p> </li> <li> <p>iam user could not access ES cluster 7.10 directly, assume to another iam role  <pre><code>{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"security_exception\",\n        \"reason\" : \"no permissions for [cluster:admin/repository/get] and User [name=arn:aws:iam::123456789012:user/panlm, backend_roles=[], requestedTenant=null]\"\n      }\n    ],\n    \"type\" : \"security_exception\",\n    \"reason\" : \"no permissions for [cluster:admin/repository/get] and User [name=arn:aws:iam::123456789012:user/panlm, backend_roles=[], requestedTenant=null]\"\n  },\n  \"status\" : 403\n}\n</code></pre></p> </li> </ul>","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/aos-migration/#replication","title":"replication","text":"<ul> <li>refer: https://docs.aws.amazon.com/opensearch-service/latest/developerguide/replication.html</li> <li>\u589e\u91cf\u590d\u5236</li> <li>create connection from target, approve connection in source</li> </ul> <pre><code>DOMAIN_NAME=\nINDEX_NAME=leader-99\nCONNECTION_NAME=src2-target-test\nawscurl -XPUT --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/_plugins/_replication/${INDEX_NAME}/_start\" -H 'Content-Type: application/json' -d ' \n{\n  \"leader_alias\": \"'\"${CONNECTION_NAME}\"'\",\n  \"leader_index\": \"'\"${INDEX_NAME}\"'\",\n  \"use_roles\":{\n    \"leader_cluster_role\": \"all_access\",\n    \"follower_cluster_role\": \"all_access\"\n  }\n}'\n\nawscurl -XGET --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/_plugins/_replication/${INDEX_NAME}/_status?pretty\"\n\nawscurl -XGET --service es --region ap-southeast-1 \"https://${DOMAIN_NAME}/${INDEX_NAME}/_search?pretty\"\n</code></pre>","tags":["aws/analytics/opensearch"]},{"location":"data-analytics/datahub/","title":"datahub","text":"<p>https://github.com/aws-samples/deploy-datahub-using-aws-managed-services-ingest-metadata/pull/3</p>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#walkthrough","title":"walkthrough","text":"<ul> <li>https://aws.amazon.com/blogs/big-data/part-1-deploy-datahub-using-aws-managed-services-and-ingest-metadata-from-aws-glue-and-amazon-redshift/</li> <li> <p>https://aws.amazon.com/blogs/big-data/part-2-deploy-datahub-using-aws-managed-services-and-ingest-metadata-from-aws-glue-and-amazon-redshift/</p> </li> <li> <p>updated github repo: https://github.com/panlm/deploy-datahub-using-aws-managed-services-ingest-metadata/tree/datahub-v0.13.2</p> </li> </ul> <pre><code>changes:\n\n- update rds instance family from r4 to r5 in rds_stack.py\n- update eks version to 1.29 in cdk.json\n- comment out release_version in eks_stack.py to choose newest ami for node group, comment out eks_node_ami_version in cdk.json\n- update values yaml to support newest datahub helm deployment\n- add comment to glue_data_lineage.py, need download Dependent JAR: acryl-spark-lineage instead of datahub-spark-lineage\n</code></pre>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#deploy-infra","title":"deploy infra","text":"<ul> <li> <p>cdk.json diff <pre><code>--- a/cdk.json\n+++ b/cdk.json\n@@ -5,8 +5,8 @@\n     \"@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021\": false,\n     \"@aws-cdk/aws-rds:lowercaseDbIdentifier\": false,\n     \"@aws-cdk/core:stackRelativeExports\": false,\n-    \"ACCOUNT_ID\" : \"&lt;ACCOUNT_ID&gt;\",\n-    \"REGION\" : \"&lt;REGION&gt;\",\n+    \"ACCOUNT_ID\" : \"012345678901\",\n+    \"REGION\" : \"us-west-2\",\n     \"create_new_cluster_admin_role\": \"True\",\n     \"existing_admin_role_arn\": \"\",\n     \"create_new_vpc\": \"True\",\n@@ -14,14 +14,14 @@\n     \"vpc_cidr_mask_public\": 26,\n     \"vpc_cidr_mask_private\": 24,\n     \"existing_vpc_name\": \"VPC\",\n-    \"eks_version\": \"1.21\",\n+    \"eks_version\": \"1.29\",\n     \"eks_deploy_managed_nodegroup\": \"True\",\n     \"eks_node_quantity\": 2,\n     \"eks_node_max_quantity\": 5,\n     \"eks_node_min_quantity\": 1,\n     \"eks_node_disk_size\": 20,\n     \"eks_node_instance_type\": \"m5.large,m5a.large\",\n-    \"eks_node_ami_version\": \"1.21.5-20220123\",\n+    // \"eks_node_ami_version\": \"1.23-20240703\",\n     \"eks_node_spot\": \"False\",\n     \"create_cluster_exports\": \"True\",\n     \"deploy_aws_lb_controller\": \"True\",\n</code></pre></p> </li> <li> <p>datahub_aws/eks_stack.py diff <pre><code>--- a/datahub_aws/eks_stack.py\n+++ b/datahub_aws/eks_stack.py\n@@ -128,8 +128,7 @@ class EKSClusterStack(Stack):\n                     # The default in CDK is to force upgrades through even if they violate - it is safer to not do that\n                     force_update=False,\n                     instance_types=instance_types,\n-                    release_version=self.node.try_get_context(\n-                        \"eks_node_ami_version\")\n+                    # release_version=self.node.try_get_context(\"eks_node_ami_version\")\n                 )\n                 eks_node_group.role.add_managed_policy(\n                     iam.ManagedPolicy.from_aws_managed_policy_name(\"AmazonSSMManagedInstanceCore\"))\n@@ -164,4 +163,4 @@ class EKSClusterStack(Stack):\n                 export_name=\"EKSSGID\"\n             )\n             self.security_grp =  self.eks_cluster.kubectl_security_group\n</code></pre></p> </li> <li> <p>datahub_aws/rds_stack.py diff <pre><code>--- a/datahub_aws/rds_stack.py\n+++ b/datahub_aws/rds_stack.py\n@@ -28,10 +28,10 @@ class MySql(Stack):\n         )\n\n         if not instance_type:\n\n-            instance_type = ec2.InstanceType.of(ec2.InstanceClass.MEMORY4, ec2.InstanceSize.LARGE)\n+            instance_type = ec2.InstanceType.of(ec2.InstanceClass.MEMORY5, ec2.InstanceSize.LARGE)\n\n         if not engine_version:\n\n-            engine_version = rds.MysqlEngineVersion.VER_8_0_26\n+            engine_version = rds.MysqlEngineVersion.VER_8_0_35\n\n\n         #db_cluster_identifier\n</code></pre></p> </li> <li> <p>follow blog to install infra resources</p> </li> </ul>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#helm-datahub","title":"helm datahub","text":"<ul> <li>get newest values yaml (link)</li> <li>helm install datahub newest version (v0.13.2 works) <pre><code>helm install prerequisites datahub/datahub-prerequisites --values ./charts/prerequisites/values-new.yaml\nhelm install datahub datahub/datahub --values ./charts/datahub/values-new.yaml\n</code></pre></li> </ul>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#ingestion","title":"ingestion","text":"","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#glue","title":"glue","text":"<ul> <li>\u4e0d\u9700\u8981 <code>table_pattern</code> <pre><code>source:\n    type: glue\n    config:\n        aws_region: us-west-2\n        database_pattern:\n            allow:\n                - clidb\n</code></pre></li> </ul>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#lineage","title":"lineage","text":"","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#glue-job","title":"glue job","text":"<p>script: download Dependent JAR (acryl-spark-lineage): download</p> <p></p>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#redshift","title":"redshift","text":"<ul> <li>create table <pre><code>CREATE TABLE new_table AS\nSELECT t1.eventid, t1.starttime, t2.holiday\nFROM event t1\nJOIN date t2\nON t1.dateid = t2.dateid;\n</code></pre> </li> </ul>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#refer","title":"refer","text":"","tags":["aws/analytics","datahub"]},{"location":"data-analytics/datahub/#error-message","title":"error message","text":"<ul> <li> <p><code>externalJar/datahub-spark-lineage-0.11.0-5.jar</code> and lower version is supported in glue jobs, others you will got error <pre><code>An error occurred while calling None.org.apache.spark.api.java.JavaSparkContext. datahub/spark/DatahubSparkListener has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0. Note: This run was executed with Flex execution. Check the logs if run failed due to executor termination.\n</code></pre></p> </li> <li> <p>using io.acryl:acryl-spark-lineage:0.2.16 to instead of datahub-spark-lineage</p> </li> </ul>","tags":["aws/analytics","datahub"]},{"location":"data-analytics/enable-quicksight-with-identity-center/","title":"Enable Quicksight with Identity Center","text":"","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/enable-quicksight-with-identity-center/#using-microsoft-entra-as-external-idp","title":"Using Microsoft Entra as External IdP","text":"<p>In BJS region, QS does not support SAML Authentication Method (refer Appendix chapter). If you try to integration with existing SSO, for example Microsoft Entra ID, you need enable Amazon IAM Identity Center (short for AWS-SSO) with SAML support to carry out (saml-2.0)</p>","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/enable-quicksight-with-identity-center/#walkthrough","title":"Walkthrough","text":"<ul> <li>One Microsoft Entra tenant, at least <code>Microsoft Entra ID P1</code>  license  (link)</li> <li>Enable AWS-SSO account instance in this lab<ul> <li>If your account joined AWS Organizations, you could choose enable AWS-SSO with organization instance (link)</li> <li>refer this blog for AWS-SSO deployment pattern (link)</li> </ul> </li> <li>Using SAML IdP for AWS-SSO, integration with existing Microsoft Entra tenant <ul> <li>Following this link </li> <li>Complete <code>Step 1</code>, and<ul> <li>New a Microsoft 365 Group for Quicksight and assign user to this group</li> <li>assign group to SSO application in Microsoft Entra directly (P1 license needed)</li> <li>verify sign in URL: (account portal &amp; app portal)</li> <li>Dont forgot firstName and lastName. If missing these properties will cause SCIM sync failure</li> </ul> </li> <li>Complete <code>Step 2.2</code> (Other steps is only for AWS-SSO organization instance)</li> <li>Complete <code>Step 3</code> and <code>Step 4</code></li> </ul> </li> <li>Enable Quicksight  </li> <li>assign group to reader/author/admin role in Quicksight</li> <li>create vpc connection</li> <li>create redshift vpc endpoint</li> <li>Quicksight will use this role: <code>aws-quicksight-service-role-v0</code> to access aws resources</li> <li>Open Quicksight</li> </ul>","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/enable-quicksight-with-identity-center/#another-sample-use-okta-as-idp-for-aws-sso-to-login-quicksight","title":"Another sample - use Okta as IdP for AWS-SSO to login Quicksight","text":"<p>In this sample, use Okta as IdP for AWS-SSO. Just like our lab using Microsoft Entra ID instead of. Put sign-in process here for your reference.</p> <ul> <li>blog: Simplify business intelligence identity management with Amazon QuickSight and AWS IAM Identity Center (link)</li> <li>QuickSight service provider (SP) initiated sign-in </li> <li>External IdP initiated sign-in </li> </ul>","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/enable-quicksight-with-identity-center/#using-identity-center-local-directory","title":"Using Identity Center local directory","text":"<p>Using AWS-SSO local directory as identity source. This mode works both in global region and BJS region. No AWS Organizations needed.</p>","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/enable-quicksight-with-identity-center/#walkthrough_1","title":"Walkthrough","text":"<ul> <li>create user <code>abcdeabcdeab</code> in identity center (length need 12+)</li> <li>create group with any name</li> <li>enable Quicksight in account level with user name and group name<ul> <li>default Quicksight role works (role policy &amp; trust)</li> </ul> </li> </ul>","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/enable-quicksight-with-identity-center/#appendix","title":"Appendix","text":"<ul> <li>Supported Authentication Method for Quicksight in global region (link)<ul> <li>Use IAM federated identities &amp; QuickSight-managed users</li> <li>Use AWS IAM Identity Center</li> <li>Use IAM federated identities only</li> <li>Use Active Directory</li> </ul> </li> <li>Supported Authentication Method for Quicksight in China region (until Jun 2024)<ul> <li>Use Amazon IAM Identity Center</li> <li>Use Active Directory</li> </ul> </li> <li>Other refer<ul> <li>https://docs.amazonaws.cn/aws/latest/userguide/iam-identity-center.html</li> <li>https://learn.microsoft.com/en-us/entra/identity/saas-apps/aws-single-sign-on-tutorial</li> </ul> </li> </ul>","tags":["aws/analytics/quicksight","aws/security/identity-center","azure"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/","title":"rds-mysql-replica-cross-region-cross-account","text":"","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u5730 RDS-A \uff0c\u5e0c\u671b\u80fd\u521b\u5efa\u4e00\u4e2a\u8de8\u8d26\u53f7\u7684 RDS-B \u4f5c\u4e3a\u8bfb\u526f\u672c</p> <ul> <li>\u5148\u521b\u5efa RDS-A</li> <li>\u521b\u5efa\u672c\u5730 Replica</li> <li>\u5feb\u7167\u8be5 Replica</li> <li>\u5171\u4eab\u5feb\u7167\u5230\u53e6\u4e00\u4e2a\u8d26\u53f7</li> <li>\u5728\u53e6\u4e00\u4e2a\u8d26\u53f7\u4e2d\u5c06\u5feb\u7167\u590d\u5236\u4e00\u4efd<ul> <li>\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528kms\uff0c\u5982\u679c\u6e90\u5e93\u6ca1\u6709\u52a0\u5bc6</li> </ul> </li> <li>\u4ece\u590d\u5236\u51fa\u6765\u7684\u5feb\u7167\u6062\u590d\u6570\u636e\u5e93</li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#_2","title":"\u573a\u666f","text":"<ul> <li>\u8de8\u8d26\u53f7\u521b\u5efa\u8bfb\u526f\u672c\u7684 rds \u6570\u636e\u5e93</li> <li>\u5c06\u672a\u52a0\u5bc6\u6570\u636e\u5e93\u8f6c\u6362\u6210\u52a0\u5bc6\u5b58\u50a8</li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#create-rds-mysql","title":"create rds mysql","text":"","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#prep-","title":"prep-","text":"<ul> <li>\u51c6\u5907\u6d4b\u8bd5\u73af\u5883\uff0c\u5efa\u8bae\u4f7f\u7528 cloud9 \u8fdb\u884c\u64cd\u4f5c\uff0c\u5e76\u4e14\u5b89\u88c5\u4e0b\u9762\u8f6f\u4ef6</li> <li>\u5982\u679c\u8de8\u8d26\u53f7\u590d\u5236\u7684\u6d4b\u8bd5\u73af\u5883\uff0c\u4f60\u9700\u8981\u540c\u6837\u7684 cloud9 \u5728\u53e6\u4e00\u4e2a\u73af\u5883\u4e2d\uff0c\u5e76\u4e14\u5b89\u88c5\u4e0b\u9762\u8f6f\u4ef6 <pre><code>sudo yum install -y jq \nsudo rpm -Uvh https://repo.mysql.com/mysql80-community-release-el7.rpm # for amazon linux 2, mysql80-community-release-el9.rpm for amazon linux 2023\nsudo yum install -y mysql-community-client --enablerepo=mysql80-community\n\nexport AWS_PAGER=\"\"\n</code></pre></li> </ul> <p>^z60dbq</p> <ul> <li>\u83b7\u53d6 cloud9 \u6240\u5728\u5b50\u7f51\uff0c\u6d4b\u8bd5\u4f1a\u4f7f\u7528\u8be5\u7f51\u7edc <pre><code># cloud 9 subnet\nRDS_NAME=db1\nINST_ID=$(curl http://169.254.169.254/1.0/meta-data/instance-id 2&gt;/dev/null)\nVPC_ID=$(aws ec2 describe-instances --instance-ids ${INST_ID} --query 'Reservations[0].Instances[0].VpcId' --output text)\nAWS_REGION=$(curl 2&gt;/dev/null http://169.254.169.254/latest/dynamic/instance-identity/document |jq -r '.region')\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#subnet-group-","title":"subnet-group-","text":"<ul> <li>\u5982\u679c\u8de8\u8d26\u53f7\u590d\u5236\u7684\u6d4b\u8bd5\u73af\u5883\uff0c\u8be5\u6b65\u9aa4\u9700\u8981\u5728\u53e6\u4e00\u4e2a\u8d26\u53f7\u4e2d\u88ab\u91cd\u590d\u6267\u884c <pre><code>SG_NAME=${RDS_NAME}-${RANDOM}\naws ec2 create-security-group  \\\n  --description ${SG_NAME}     \\\n  --group-name ${SG_NAME}      \\\n  --vpc-id ${VPC_ID}\n\nRDS_SG=$(aws ec2 describe-security-groups      \\\n  --filters Name=group-name,Values=${SG_NAME}         \\\n            Name=vpc-id,Values=${VPC_ID}              \\\n  --query \"SecurityGroups[0].GroupId\" --output text)\n\necho \"RDS security group ID: ${RDS_SG}\"\n\naws ec2 authorize-security-group-ingress  \\\n  --group-id ${RDS_SG}                    \\\n  --protocol tcp                          \\\n  --port 3306                             \\\n  --cidr '0.0.0.0/0'\n\nPUBLIC_SUBNETS_ID=$(aws ec2 describe-subnets        \\\n  --filters \"Name=vpc-id,Values=$VPC_ID\"                   \\\n  --query 'Subnets[?MapPublicIpOnLaunch==`true`].SubnetId' \\\n  --output json | jq -c .)\n\n# create a db subnet group\naws rds create-db-subnet-group               \\\n  --db-subnet-group-name ${RDS_NAME}         \\\n  --db-subnet-group-description ${RDS_NAME}  \\\n  --subnet-ids ${PUBLIC_SUBNETS_ID} \n</code></pre></li> </ul> <p>^rav4er</p>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#create-rds-mysql-cont","title":"create rds mysql (cont.)","text":"<ul> <li>\u521b\u5efa rds \u6570\u636e\u5e93</li> <li>\u5bc6\u7801\u4fdd\u5b58\u5728 <code>~/rds_password</code> \u4e2d <pre><code># generate a password for RDS\nexport RDS_PASSWORD=\"$(date | md5sum  |cut -f1 -d' ')\"\necho ${RDS_PASSWORD}  &gt; ~/rds_password\n\n# install supported oldest mysql version \nENGINE_VER=$(aws rds describe-db-engine-versions --engine mysql --query \"DBEngineVersions[].EngineVersion\" |grep -Eo '5\\.7\\.[0-9]+' |sort |head -n 1)\n\n# create RDS MySQL instance\n# INSTANCE_TYPE=db.m5.xlarge\n# STORAGE_SIZE=5000\naws rds create-db-instance                          \\\n  --db-instance-identifier ${RDS_NAME}              \\\n  --db-name ${RDS_NAME}                             \\\n  --db-instance-class ${INSTANCE_TYPE:-db.m5.large} \\\n  --engine mysql                                    \\\n  --engine-version ${ENGINE_VER}                    \\\n  --db-subnet-group-name ${RDS_NAME}                \\\n  --vpc-security-group-ids ${RDS_SG}                \\\n  --master-username ${RDS_NAME}                     \\\n  --publicly-accessible                             \\\n  --master-user-password ${RDS_PASSWORD}            \\\n  --backup-retention-period 1                       \\\n  --allocated-storage ${STORAGE_SIZE:-50} \n\n# --storage-encrypted\n\n# get rds status util `available`\nstatus=\"\"\nuntil [[ ${status} == \"available\" ]]; do\nstatus=$(aws rds describe-db-instances       \\\n  --db-instance-identifier ${RDS_NAME}       \\\n  --query \"DBInstances[].DBInstanceStatus\"   \\\n  --output text)\necho ${status}\nsleep 60\ndone\n\nRDS_HOSTNAME=$(aws rds describe-db-instances    \\\n  --db-instance-identifier ${RDS_NAME}     \\\n  --query \"DBInstances[].Endpoint.Address\"    \\\n  --output text)\n\nRDS_ARN=$(aws rds describe-db-instances    \\\n  --db-instance-identifier ${RDS_NAME}     \\\n  --query \"DBInstances[].DBInstanceArn\"    \\\n  --output text)\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#create-read-replica","title":"create read replica","text":"<ul> <li>\u521b\u5efa\u8bfb\u526f\u672c <pre><code>RDS_REP1_NAME=${RDS_NAME}-rep1 \n\n# # enable auto backup if you miss it in creation\n# aws rds modify-db-instance \\\n#   --db-instance-identifier ${RDS_NAME} \\\n#   --backup-retention-period 1  \\\n#   --apply-immediately\n\n# create read replica\naws rds create-db-instance-read-replica \\\n  --db-instance-identifier ${RDS_REP1_NAME} \\\n  --region ${AWS_REGION} \\\n  --source-region ${AWS_REGION} \\\n  --source-db-instance-identifier ${RDS_ARN}\n\n# get rds status util `available`\nstatus=\"\"\nuntil [[ ${status} == \"available\" ]]; do\nstatus=$(aws rds describe-db-instances            \\\n  --db-instance-identifier ${RDS_REP1_NAME}       \\\n  --query \"DBInstances[].DBInstanceStatus\"        \\\n  --output text)\necho ${status}\nsleep 60\ndone\n\nRDS_REP1_HOSTNAME=$(aws rds describe-db-instances    \\\n  --db-instance-identifier ${RDS_REP1_NAME}     \\\n  --query \"DBInstances[].Endpoint.Address\"    \\\n  --output text)\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#on-master","title":"on master","text":"<ul> <li>\u5728\u4e3b\u5e93\u4e2d\u521b\u5efa\u590d\u5236\u7528\u6237</li> <li>\u914d\u7f6e binlog \u7684\u4fdd\u7559\u5468\u671f\uff0c\u9700\u8981\u5728\u6b64\u671f\u95f4\u5b8c\u6210\u8fdc\u7a0b\u8bfb\u526f\u672c\u521b\u5efa\u5e76\u4e14\u6062\u590d\u590d\u5236 <pre><code>echo mysql -h${RDS_HOSTNAME} -u${RDS_NAME} -p${RDS_PASSWORD}\n</code></pre></li> </ul> <pre><code>call mysql.rds_set_configuration('binlog retention hours', 24);\nCREATE USER 'repl_user'@'%' IDENTIFIED BY 'repl_password';\nGRANT REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'repl_user'@'%';\n</code></pre> <p>^gycsd4</p>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#on-slave","title":"on slave","text":"<pre><code>echo mysql -h${RDS_REP1_HOSTNAME} -u${RDS_NAME} -p${RDS_PASSWORD}\n</code></pre> <ul> <li> <p>\u68c0\u67e5\u590d\u5236\u72b6\u6001 <pre><code>SHOW SLAVE STATUS\\G\n</code></pre></p> </li> <li> <p>\u5f53\u4e0b\u9762\u503c\u4e3a 0 \u65f6\uff0c\u53ef\u4ee5\u4e2d\u65ad\u590d\u5236</p> <p>Seconds_Behind_Master: 0</p> </li> </ul> <pre><code>call mysql.rds_stop_replication();\nSHOW SLAVE STATUS\\G\n</code></pre> <ul> <li>\u4e2d\u65ad\u590d\u5236\uff0c\u5e76\u4e14\u8bb0\u5f55\u65ad\u70b9\uff0c\u5728\u540e\u7eed\u6062\u590d\u590d\u5236\u65f6\u4f7f\u7528</li> </ul> <p>Relay_Master_Log_File: mysql-bin-changelog.000009 Exec_Master_Log_Pos: 154</p> <p>^gjmipb</p>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#create-snapshot-on-replica","title":"create snapshot on replica","text":"<ul> <li>\u521b\u5efa\u5feb\u7167 <pre><code>RDS_REP1_SNAP_NAME=${RDS_REP1_NAME}-snap-1\naws rds create-db-snapshot \\\n--db-snapshot-identifier ${RDS_REP1_SNAP_NAME} \\\n--db-instance-identifier ${RDS_REP1_NAME}\n\nSHARED_SNAP_ARN=$(aws rds describe-db-snapshots \\\n--db-snapshot-identifier ${RDS_REP1_SNAP_NAME} \\\n--query 'DBSnapshots[].DBSnapshotArn' \\\n--output text)\n\necho \"SHARED_SNAP_ARN=${SHARED_SNAP_ARN}\"\n\n# get snapshot status util `available`\nwhile true ; do\nstatus=$(aws rds describe-db-snapshots \\\n--db-snapshot-identifier ${RDS_REP1_SNAP_NAME} \\\n--query 'DBSnapshots[].Status' \\\n--output text)\necho $status\nif [[ $status == \"available\" ]]; then\n  break\nfi\nsleep 60\ndone\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#share-snapshot","title":"share snapshot","text":"<ul> <li>\u8de8\u8d26\u53f7\u5171\u4eab\u5feb\u7167</li> <li>\u8f93\u5165\u76ee\u6807\u8d26\u53f7 ID <pre><code>aws rds modify-db-snapshot-attribute \\\n    --db-snapshot-identifier ${RDS_REP1_SNAP_NAME} \\\n    --attribute-name restore \\\n    --values-to-add &lt;target_account_id&gt;\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#copy-snapshot-local","title":"copy snapshot local","text":"<ul> <li>\u5982\u679c\u662f\u8de8\u8d26\u53f7\u590d\u5236\uff0c\u5219\u8be5\u6b65\u9aa4\u6267\u884c\u5728\u53e6\u4e00\u4e2a\u8d26\u53f7\u4e2d\uff0c\u9700\u8981\u5148\u8fdb\u884c\u4e00\u4e9b\u73af\u5883\u51c6\u5907\u5de5\u4f5c </li> </ul> <p>refer: git/git-mkdocs/data-analytics/rds-mysql-replica-cross-region-cross-account</p>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#check-snapshot","title":"check snapshot","text":"<ul> <li>\u5c06\u6e90\u8d26\u53f7\u7684\u73af\u5883\u53d8\u91cf\u590d\u5236\u5230\u73b0\u6709\u8d26\u53f7\u7684\u547d\u4ee4\u884c\u7a97\u53e3\u65b9\u4fbf\u6267\u884c\u540e\u7eed\u64cd\u4f5c <pre><code>SHARED_SNAP_ARN=???\nLOCAL_SNAP_NAME=local-snap-$RANDOM\n\n# get shared snapshot\naws rds describe-db-snapshots --include-shared \\\n--db-snapshot-identifier ${SHARED_SNAP_ARN}\n\n# ensure `SnapshotType` is `shared`\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#copy-without-kms","title":"copy without kms","text":"<ul> <li>\u590d\u5236\u5feb\u7167\u5230\u672c\u8d26\u53f7\uff0c\u4e14\u4e0d\u4fee\u6539\u539f\u6709\u6570\u636e\u5e93\u672a\u52a0\u5bc6\u72b6\u6001 <pre><code>aws rds copy-db-snapshot \\\n--source-db-snapshot-identifier ${SHARED_SNAP_ARN} \\\n--target-db-snapshot-identifier ${LOCAL_SNAP_NAME}\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#copy-with-kms-option","title":"copy with kms (option)","text":"<ul> <li>\uff08\u53ef\u9009\uff09\u590d\u5236\u5feb\u7167\u5230\u672c\u8d26\u53f7\uff0c\u4e14\u4fee\u6539\u539f\u6709\u6570\u636e\u5e93\u672a\u52a0\u5bc6\u72b6\u6001\u4e3a\u52a0\u5bc6\u72b6\u6001</li> <li>\u63d0\u524d\u521b\u5efa\u6240\u9700\u8981\u7684CMK\uff0c\u6216\u8005\u6307\u5b9aKMS <pre><code># KEY_ARN=???\nKEY_ARN=$(aws kms create-key |jq -r '.KeyMetadata.Arn')\n\naws rds copy-db-snapshot \\\n--source-db-snapshot-identifier ${SHARED_SNAP_ARN} \\\n--target-db-snapshot-identifier ${LOCAL_SNAP_NAME}\n--kms-key-id ${KEY_ARN}\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#wait-snapshot-complete","title":"wait snapshot complete","text":"<ul> <li>\u7b49\u5f85\u590d\u5236\u5feb\u7167\u64cd\u4f5c\u5b8c\u6210 <pre><code># get snapshot status util `available`\nstatus=\"\"\nuntil [[ ${status} == \"available\" ]]; do\nstatus=$(aws rds describe-db-snapshots        \\\n  --db-snapshot-identifier ${LOCAL_SNAP_NAME} \\\n  --query 'DBSnapshots[].Status'              \\\n  --output text)\necho ${status}\nsleep 60\ndone\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#restore","title":"restore","text":"","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#prep","title":"prep","text":"<pre><code>VPC_ID=vpc-0c6e8c75ad4af1ee5\nRDS_NAME=db1-restore\n</code></pre>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#subnet-group","title":"subnet group","text":"<ul> <li>\u5982\u679c\u662f\u8de8\u8d26\u53f7\uff0c\u9700\u8981\u91cd\u65b0\u521b\u5efa subnet group </li> </ul> <p>refer: git/git-mkdocs/data-analytics/rds-mysql-replica-cross-region-cross-account</p>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#restore-db","title":"restore db","text":"<ul> <li>\u4ece\u590d\u5236\u7684\u5feb\u7167\u6062\u590d\u6570\u636e\u5e93 <pre><code># restore RDS MySQL instance\naws rds restore-db-instance-from-db-snapshot \\\n  --db-snapshot-identifier ${LOCAL_SNAP_NAME} \\\n  --db-instance-identifier ${RDS_NAME}     \\\n  --db-instance-class db.t3.micro          \\\n  --engine mysql                           \\\n  --db-subnet-group-name ${RDS_NAME}       \\\n  --vpc-security-group-ids ${RDS_SG}       \\\n  --publicly-accessible   \n\n# get rds status util `available`\nstatus=\"\"\nuntil [[ ${status} == \"available\" ]]; do\nstatus=$(aws rds describe-db-instances       \\\n  --db-instance-identifier ${RDS_NAME}       \\\n  --query \"DBInstances[].DBInstanceStatus\"   \\\n  --output text)\necho ${status}\nsleep 60\ndone\n\nTARGET_RDS_HOSTNAME=$(aws rds describe-db-instances    \\\n  --db-instance-identifier ${RDS_NAME}     \\\n  --query \"DBInstances[].Endpoint.Address\"    \\\n  --output text)\n</code></pre></li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#on-target","title":"on target","text":"<ul> <li> <p>\u8fde\u63a5\u5230\u6062\u590d\u540e\u7684 rds \u6570\u636e\u5e93\uff0c\u6ce8\u610f\u7528\u6237\u540d\u4e3a\u6e90\u8d26\u53f7\u4e3b\u5e93\uff0c\u5bc6\u7801\u5728\u6e90\u8d26\u53f7 <code>~/rds_password</code> \u4e2d <pre><code># user should be origin db1 \n# pass should be saved in ~/rds_password\necho mysql -h${TARGET_RDS_HOSTNAME} -u${RDS_NAME} -p${RDS_PASSWORD}\n</code></pre></p> </li> <li> <p>\u4fee\u6539\u4e0b\u9762\u8bed\u53e5\uff0c\u5e76\u4e14\u6267\u884c</p> </li> <li>\u6e90\u8d26\u53f7\u4e3b\u5e93dns</li> <li>\u786e\u8ba4\u590d\u5236\u7528\u6237\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801 (^gycsd4)</li> <li> <p>\u786e\u8ba4\u4e4b\u524d\u8bb0\u5f55\u7684\u65ad\u70b9 (^gjmipb)  <pre><code>CALL mysql.rds_set_external_master (\n  'db1.ckzqxxxxxxrg.us-east-2.rds.amazonaws.com'\n  , 3306\n  , 'repl_user'\n  , 'repl_password'\n  , 'mysql-bin-changelog.000009'\n  , 154\n  , 0\n  );\n</code></pre></p> </li> <li> <p>\u786e\u8ba4\u6062\u590d\u590d\u5236\u64cd\u4f5c\u6210\u529f <pre><code>CALL mysql.rds_start_replication();\n\nSHOW SLAVE STATUS\\G\n</code></pre></p> </li> <li> <p>\u5982\u679c\u6062\u590d\u590d\u5236\u64cd\u4f5c\u6210\u529f\u5c06\u51fa\u73b0\u4e0b\u9762\u8f93\u51fa <pre><code>+-------------------------+\n| Message                 |\n+-------------------------+\n| Slave running normally. |\n+-------------------------+\n1 row in set (1.01 sec)\n</code></pre></p> </li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#refer","title":"refer","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/rds-mysql-cross-region-replica/</li> <li>https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql_rds_set_external_master.html</li> <li>https://aws.amazon.com/premiumsupport/knowledge-center/share-encrypted-rds-snapshot-kms-key/</li> </ul>","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#issue","title":"issue","text":"","tags":["aws/database/rds"]},{"location":"data-analytics/rds-mysql-replica-cross-region-cross-account/#host-error-in-mysqluser","title":"host error in mysql.user","text":"<pre><code>mysql&gt; select user,host from mysql.user;\n+------------------+-----------+\n| user             | host      |\n+------------------+-----------+\n| rdsrepladmin     | %         |\n| rdsworkshop      | %         |\n| repl_user        | *         |\n| mysql.infoschema | localhost |\n| mysql.session    | localhost |\n| mysql.sys        | localhost |\n| rdsadmin         | localhost |\n+------------------+-----------+\n7 rows in set (0.00 sec)\n\nmysql&gt; update mysql.user set host='%' where user='repl_user';\nQuery OK, 1 row affected (0.01 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql&gt; flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; \n</code></pre>","tags":["aws/database/rds"]},{"location":"data-analytics/redshift-data-api-lab/","title":"redshift-data-api-lab","text":"","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#_1","title":"\u4f7f\u7528\u573a\u666f","text":"<p>Amazon Redshift \u6570\u636e API \u4f7f\u60a8\u80fd\u591f\u4f7f\u7528\u6240\u6709\u7c7b\u578b\u7684\u4f20\u7edf\u3001\u4e91\u539f\u751f\u548c\u5bb9\u5668\u5316\u3001\u57fa\u4e8e Web \u670d\u52a1\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u548c\u4e8b\u4ef6\u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\u8f7b\u677e\u8bbf\u95ee\u6765\u81ea Amazon Redshift \u7684\u6570\u636e\u3002</p> <p></p> <p>Amazon Redshift Data API \u4e0d\u80fd\u66ff\u4ee3 JDBC \u548c ODBC \u9a71\u52a8\u7a0b\u5e8f\uff0c\u9002\u7528\u4e8e\u4e0d\u9700\u8981\u4e0e\u96c6\u7fa4\u5efa\u7acb\u6301\u4e45\u8fde\u63a5\u7684\u7528\u4f8b\u3002\u5b83\u9002\u7528\u4e8e\u4ee5\u4e0b\u7528\u4f8b\uff1a</p> <ul> <li>\u4f7f\u7528 AWS \u5f00\u53d1\u5de5\u5177\u5305\u652f\u6301\u7684\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u4ece\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee Amazon Redshift\u3002\u8fd9\u4f7f\u60a8\u80fd\u591f\u96c6\u6210\u57fa\u4e8e Web \u670d\u52a1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4f7f\u7528 API \u8bbf\u95ee\u6765\u81ea Amazon Redshift \u7684\u6570\u636e\u4ee5\u8fd0\u884c SQL \u8bed\u53e5\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4ece JavaScript \u8fd0\u884c SQL\u3002</li> <li>\u6784\u5efa\u65e0\u670d\u52a1\u5668\u6570\u636e\u5904\u7406\u5de5\u4f5c\u6d41\u7a0b\u3002</li> <li>\u8bbe\u8ba1\u5f02\u6b65 Web \u4eea\u8868\u677f\uff0c\u56e0\u4e3a Data API \u5141\u8bb8\u60a8\u8fd0\u884c\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u67e5\u8be2\uff0c\u800c\u65e0\u9700\u7b49\u5f85\u5b83\u5b8c\u6210\u3002</li> <li>\u8fd0\u884c\u4e00\u6b21\u67e5\u8be2\u5e76\u591a\u6b21\u68c0\u7d22\u7ed3\u679c\uff0c\u800c\u65e0\u9700\u5728 24 \u5c0f\u65f6\u5185\u518d\u6b21\u8fd0\u884c\u67e5\u8be2\u3002</li> <li>\u4f7f\u7528 AWS Step Functions\u3001Lambda \u548c\u5b58\u50a8\u8fc7\u7a0b\u6784\u5efa\u60a8\u7684 ETL \u7ba1\u9053\u3002</li> <li>\u7b80\u5316\u4e86\u4ece Amazon SageMaker \u548c Jupyter \u7b14\u8bb0\u672c\u5bf9 Amazon Redshift \u7684\u8bbf\u95ee\u3002</li> <li>\u4f7f\u7528 Amazon EventBridge \u548c Lambda \u6784\u5efa\u4e8b\u4ef6\u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u8c03\u5ea6 SQL \u811a\u672c\u4ee5\u7b80\u5316\u7269\u5316\u89c6\u56fe\u7684\u6570\u636e\u52a0\u8f7d\u3001\u5378\u8f7d\u548c\u5237\u65b0\u3002</li> </ul>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#-redshift-","title":"\u521d\u59cb\u5316-redshift-\u96c6\u7fa4-","text":"<ul> <li>\u521b\u5efa redshift \u96c6\u7fa4 (link), or open this cloudformation template directly<ul> <li>\u521b\u5efa vpc \u52a0 2 \u4e2a\u516c\u6709\u5b50\u7f51\uff0c\u5e76\u4e14\u521b\u5efa public access \u7684 redshift \u96c6\u7fa4</li> <li>InboundTraffic \u2013&gt; <code>0.0.0.0/0</code></li> <li>EETeamRoleArn \u2013&gt; <code>arn:aws:iam::xxxxxxxxxxxx:role/TeamRole</code></li> <li>MasterUserPassword \u2013&gt; default</li> <li>DataLoadingPrimaryCluster \u2013&gt; Yes <ul> <li>check cloudwatch for more detail</li> <li>data loading need more 10 mins after cloudformation completed</li> </ul> </li> </ul> </li> <li>(option) \u7136\u540e\u4ece\u8fd9\u91cc\u52a0\u8f7d\u6570\u636e (link)</li> </ul>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#rest-api-lab","title":"rest-api lab","text":"<ul> <li>postman example</li> </ul>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#list-database","title":"list database","text":"<p>post url: <code>https://redshift-data.us-east-2.amazonaws.com/</code></p> <p>head: <code>x-amz-target</code>: <code>RedshiftData.ListDatabases</code> <code>Content-Type</code>: <code>application/x-amz-json-1.1</code></p> <p>body: <pre><code>{\n    \"ClusterIdentifier\": \"redshift-cluster-1\",\n    \"Database\": \"dev\",\n    \"DbUser\": \"awsuser\"\n}\n</code></pre></p>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#list-tables","title":"list tables","text":"<p>head: <code>x-amz-target</code>: <code>RedshiftData.ListTables</code></p>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#execute-statement","title":"execute statement","text":"<p>head: <code>x-amz-target</code>: <code>RedshiftData.ExecuteStatement</code></p> <p>body: <pre><code>{\n    \"ClusterIdentifier\": \"redshift-cluster-1\",\n    \"Database\": \"dev\",\n    \"DbUser\": \"awsuser\",\n    \"Sql\": \"SELECT * FROM \\\"dev\\\".\\\"public\\\".\\\"event\\\";\"\n}\n</code></pre></p>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#command-line-lab","title":"command line lab","text":"<ul> <li>shell/python example</li> </ul> <pre><code>aws redshift-data list-tables  --database dev \\\n    --db-user admin \\\n    --cluster-identifier redshift-cluster-us \\\n    --region us-east-1  \\\n    --table-pattern \"prod%\" \\\n    --schema-pattern \"rs%\"\n</code></pre> <pre><code>{\n    \"Tables\": [\n        {\n            \"name\": \"event\",\n            \"schema\": \"public\",\n            \"type\": \"TABLE\"\n        }\n    ]\n}\n</code></pre>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#reference","title":"reference","text":"<ul> <li>Get started with the Amazon Redshift Data API</li> <li>Using the Amazon Redshift Data API to interact with Amazon Redshift clusters</li> </ul>","tags":["aws/database/redshift"]},{"location":"data-analytics/redshift-data-api-lab/#broken","title":"broken","text":"<ul> <li>Build a REST API to enable data consumption from Amazon Redshift</li> </ul> <p>us-east-1 only</p> <p>post data: <pre><code>{\n    \"createdate\": \"03/01/2022\",\n    \"productname\": \"Flower\",\n    \"sku\": \"FLOWER123\",\n    \"requesttype\": \"Product\"\n}\n</code></pre></p>","tags":["aws/database/redshift"]},{"location":"data-analytics/using-mwaa-in-private-network/","title":"Using MWAA in Private Network","text":"","tags":["aws/analytics"]},{"location":"data-analytics/using-mwaa-in-private-network/#prepare-endpoint-for-your-private-network-","title":"prepare-endpoint-for-your-private-network-","text":"<p>\u4e2d\u56fd\u533a mwaa \u670d\u52a1\u521a\u4e0a\u7ebf\uff0c\u7531\u4e8e\u6587\u6863\u8fd8\u672a\u6309\u7167\u4e2d\u56fd\u533a\u7279\u6b8a\u6027\u8fdb\u884c\u63cf\u8ff0\uff0c\u56e0\u6b64\u4f1a\u5bfc\u81f4\u5ba2\u6237\u7591\u60d1\uff08\u6587\u6863\u94fe\u63a5link\uff09\u3002\u672c\u6587\u63d0\u4f9b\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6ee1\u8db3\u521b\u5efa mwaa \u7684\u7f51\u7edc\u6761\u4ef6</p>","tags":["aws/analytics"]},{"location":"data-analytics/using-mwaa-in-private-network/#_1","title":"\u547d\u4ee4\u884c","text":"<p>\u4ece\u672c\u5730\u547d\u4ee4\u884c\u5bf9\u4e8e\u76ee\u6807 vpc \u8fdb\u884c\u5b9a\u5236\uff0c\u9996\u5148\u786e\u4fdd\u4f60\u6709\u5b89\u88c5\u6700\u65b0\u7248\u672c awscli\uff0c\u53e6\u5916\uff0c\u9700\u8981\u6709 credential \u914d\u7f6e\u5728\u547d\u4ee4\u884c</p> <pre><code>VPC_ID=vpc-0ab3bxxxx\nPRIV_SUBNET_STRING=\"subnet-0b314xxx1 subnet-0bddxxxf61\"\n\nexport AWS_PAGER=\"\"\nexport AWS_REGION=cn-northwest-1\nexport AWS_DEFAULT_REGION=${AWS_REGION}\nexport AWS_PROFILE=panlmcn\n\nROUTE_TABLE_STRING=$(for i in ${PRIV_SUBNET_STRING}; do\naws ec2 describe-route-tables \\\n--filter Name=association.subnet-id,Values=$i \\\n--query RouteTables[].RouteTableId \\\n--output text\ndone |sort -u |xargs)\n\n# create security group\nSECURITY_GROUP_NAME=mwaa-endp-$RANDOM\nSECURITY_GROUP_ID=$(aws ec2 create-security-group \\\n  --description ${SECURITY_GROUP_NAME} \\\n  --group-name ${SECURITY_GROUP_NAME} \\\n  --vpc-id ${VPC_ID} \\\n  --query 'GroupId' --output text )\n# self traffic allowed\naws ec2 authorize-security-group-ingress \\\n  --group-id ${SECURITY_GROUP_ID} \\\n  --protocol -1 \\\n  --port -1 \\\n  --source-group ${SECURITY_GROUP_ID}\n\n# china region endpoint services needed by mwaa in private env\nCN_SERVICE_LIST=\"\ncn.com.amazonaws.${AWS_REGION}.monitoring\ncn.com.amazonaws.${AWS_REGION}.ecr.dkr\ncn.com.amazonaws.${AWS_REGION}.ecr.api\ncom.amazonaws.${AWS_REGION}.logs\ncn.com.amazonaws.${AWS_REGION}.sqs\ncom.amazonaws.${AWS_REGION}.kms\ncn.com.amazonaws.${AWS_REGION}.airflow.api  \ncn.com.amazonaws.${AWS_REGION}.airflow.env  \n\"\n\n# global region endpoint services needed by mwaa in private env\nSERVICE_LIST=\"\ncom.amazonaws.${AWS_REGION}.monitoring\ncom.amazonaws.${AWS_REGION}.ecr.dkr\ncom.amazonaws.${AWS_REGION}.ecr.api\ncom.amazonaws.${AWS_REGION}.logs\ncom.amazonaws.${AWS_REGION}.sqs\ncom.amazonaws.${AWS_REGION}.kms\ncom.amazonaws.${AWS_REGION}.airflow.api\ncom.amazonaws.${AWS_REGION}.airflow.env\ncom.amazonaws.${AWS_REGION}.airflow.ops\n\"\n\necho ${AWS_REGION} |egrep -q '^cn-'\nif [[ $? -eq 0 ]]; then\n    SERVICE_LIST=${CN_SERVICE_LIST}\nfi\n\n# create interface endpoint\nfor i in ${SERVICE_LIST}; do\naws ec2 create-vpc-endpoint \\\n    --vpc-id ${VPC_ID} \\\n    --vpc-endpoint-type Interface \\\n    --service-name $i \\\n    --subnet-id ${PRIV_SUBNET_STRING} \\\n    --security-group-id ${SECURITY_GROUP_ID}\ndone\n\nenvsubst &gt;s3-gw-endpoint-policy.json &lt;&lt;-EOF\n{\n  \"Statement\": [\n    {\n      \"Principal\": \"*\",\n      \"Action\": \"*\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\nEOF\n\n# create s3 gateway endpoint\naws ec2 create-vpc-endpoint --vpc-id ${VPC_ID} \\\n--service-name com.amazonaws.${AWS_REGION}.s3 \\\n--route-table-ids ${ROUTE_TABLE_STRING} \\\n--vpc-endpoint-type Gateway \\\n--policy-document file://s3-gw-endpoint-policy.json\n</code></pre>","tags":["aws/analytics"]},{"location":"data-analytics/using-mwaa-in-private-network/#cloudformation","title":"cloudformation \u6a21\u7248","text":"<ul> <li>\u4f7f\u7528\u8fd9\u4e2a\u6a21\u7248\uff08download\uff09\u521b\u5efa\u4e13\u7528\u4e8e mwaa \u7684 vpc \u73af\u5883</li> </ul>","tags":["aws/analytics"]},{"location":"data-analytics/using-mwaa-in-private-network/#create-mwaa-environment","title":"create mwaa environment","text":"<ul> <li> <p>\u9009\u62e9\u4e4b\u524d\u547d\u4ee4\u884c\u4e2d\u6307\u5b9a\u7684 vpc \u548c \u5b50\u7f51 </p> </li> <li> <p>\u4f7f\u7528\u79c1\u6709\u7f51\u7edc\u66b4\u9732 web \u670d\u52a1\u5668\uff0c\u540e\u7eed\u53ef\u4ee5\u901a\u8fc7 ssh tunnel \u6216\u8005 ssm tunnel \u65b9\u5f0f\u8fdc\u7a0b\u8bbf\u95ee </p> </li> <li> <p>\u540c\u65f6\u9009\u62e9 \u201c\u521b\u5efa\u65b0\u5b89\u5168\u7ec4\u201d \u548c \u201c\u4e4b\u524d\u547d\u4ee4\u884c\u521b\u5efa\u7684\u5b89\u5168\u7ec4\uff08\u7528\u4e8e interface endpoint\uff09\u201d </p> </li> </ul>","tags":["aws/analytics"]},{"location":"git-attachment/Building%20a%20Solution%20for%20China%20Cross-Border%20VPC%20Connection/","title":"Building a Solution for China Cross-Border VPC Connection","text":"<p>https://aws.amazon.com/blogs/apn/building-a-solution-for-china-cross-border-vpc-connection/</p> <p></p>","tags":["aws/network/direct-connect","aws/china"]},{"location":"git-attachment/Extend%20Your%20Web%20Application%20Deployment%20to%20the%20China%20Region%20Using%20AWS%20Direct%20Connect/","title":"Extend Your Web Application Deployment to the China Region Using AWS Direct Connect","text":"<p>https://aws.amazon.com/blogs/architecture/field-notes-extend-your-web-application-deployment-to-the-china-region-using-aws-direct-connect/</p> <p></p>","tags":["aws/network/direct-connect","aws/china"]},{"location":"git-attachment/Securely%20share%20your%20data%20across%20AWS%20accounts%20using%20AWS%20Lake%20Formation/","title":"Securely share your data across AWS accounts using AWS Lake Formation | AWS Big Data Blog","text":"<p>https://aws.amazon.com/blogs/big-data/securely-share-your-data-across-aws-accounts-using-aws-lake-formation/</p>","tags":["aws/analytics/lake-formation"]},{"location":"git-attachment/Securely%20share%20your%20data%20across%20AWS%20accounts%20using%20AWS%20Lake%20Formation/#overview-of-tag-based-access-control","title":"Overview of tag-based access control","text":"<p>Lake Formation tag-based access control is an authorization strategy that defines permissions based on attributes. In Lake Formation, these attributes are called\u00a0LF-tags. You can attach LF-tags to Data Catalog resources and Lake Formation principals. Data lake administrators can assign and revoke permissions on Lake Formation resources using these LF-tags. For more details about tag-based access control, refer to\u00a0Easily manage your data lake at scale using AWS Lake Formation Tag-based access control.</p> <p>The following diagram illustrates the architecture of this method. </p> <p>We recommend tag-based access control for the following use cases:</p> <ul> <li>You have a large number of tables and principals that the data lake administrator has to grant access to</li> <li>You want to classify your data based on an ontology and grant permissions based on classification</li> <li>The data lake administrator wants to assign permissions dynamically, in a loosely coupled way</li> </ul> <p>You can also use tag-based access control to share Data Catalog resources (databases, tables, and columns) with external AWS accounts.</p>","tags":["aws/analytics/lake-formation"]},{"location":"git-attachment/Securely%20share%20your%20data%20across%20AWS%20accounts%20using%20AWS%20Lake%20Formation/#overview-of-named-resources","title":"Overview of named resources","text":"<p>The Lake Formation named resource method is an authorization strategy that defines permissions for resources. Resources include databases, tables, and columns. Data lake administrators can assign and revoke permissions on Lake Formation resources. See Cross-Account Access: How It Works for details.</p> <p>The following diagram illustrates the architecture for this method. </p> <p>We recommend using named resources if the data lake administrator prefers granting permissions explicitly to individual resources.</p> <p>When you use the named resource method to grant Lake Formation permissions on a Data Catalog resource to an external account, Lake Formation uses\u00a0AWS Resource Access Manager\u00a0(AWS RAM) to share the resource.</p> <p>Now, let\u2019s take a closer look at how to configure cross-account access with these two options. We refer to the account that has the source table as the producer account, and refer to the account that needs access to the source table as consumer account.</p>","tags":["aws/analytics/lake-formation"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/","title":"Design your firewall deployment for Internet ingress traffic flows","text":"<p>https://aws.amazon.com/cn/blogs/networking-and-content-delivery/design-your-firewall-deployment-for-internet-ingress-traffic-flows/</p> <p>Exposing Internet-facing applications requires careful consideration of what security controls are needed to protect against external threats and unwanted access. These security controls can vary depending on the type of application, size of the environment, operational constraints, or required inspection depth. For some scenarios, running Network Access Control Lists (NACL) and Security Groups (SG) can provide sufficient protection, and for others, additional firewall components might be required.</p> <p>Going beyond NACLs and SGs, you can deploy\u00a0AWS Web Application Firewall\u00a0(AWS WAF) or even bring third-party security appliances into your AWS network. The addition of new services like\u00a0AWS Network Firewall\u00a0and\u00a0AWS Gateway Load Balancer\u00a0has created even more flexibility in designing your firewall architectures on AWS.</p> <p>We covered the various architecture options for each service in the following past blog posts:\u00a0Network Firewall Deployments Models,\u00a0Centralized Inspection Architectures with AWS Gateway Load Balancers,\u00a0Defense-in-depth with AWS WAF. We\u2019ve also published a\u00a0white paper\u00a0covering best practices for DDoS resiliency.</p> <p>In this blog post, I share network architectures for these various firewalling options to protect inbound traffic to your internet-facing applications. The post is focusing on the ingress flow from Internet (i.e., Internet to VPC) as it requires the most consideration and the related network deployment options can vary significantly depending on the requirements. Egress flow (i.e. VPC to the Internet) and East/West (i.e. VPC to VPC or VPC to on-premises) inspection patterns are well established and covered in-depth in the previous blog posts linked above.</p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/#architectures-for-distributed-deployment-orange","title":"Architectures for distributed deployment (Orange)","text":"<p>\u5206\u5e03\u5f0f\u5165\u53e3\u67b6\u6784\u4f9d\u8d56\u4e8e\u6bcf\u4e2a VPC \u901a\u8fc7\u4e13\u7528 Internet \u7f51\u5173 (IGW) \u62e5\u6709\u81ea\u5df1\u7684\u8fdb\u51fa Internet \u7684\u8def\u5f84\u3002\u8fd9\u610f\u5473\u7740\u65e0\u8bba\u60a8\u62e5\u6709\u4e00\u4e2a\u8fd8\u662f\u591a\u4e2a VPC\uff0c\u6bcf\u4e2a VPC \u7684\u5165\u53e3\u6d41\u91cf\u7684\u6570\u636e\u8def\u5f84\u770b\u8d77\u6765\u90fd\u76f8\u540c\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7ba1\u7406\u66f4\u5bb9\u6613\u3001\u7206\u70b8\u534a\u5f84\u51cf\u5c0f\u5e76\u7b80\u5316\u4e86\u6545\u969c\u6392\u9664\u3002</p> <p>\u5206\u914d\u4f60\u7684\u5165\u53e3\u6d41\u91cf\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u4e5f\u9700\u8981\u5206\u914d\u4f60\u7684\u51fa\u53e3\u6d41\u91cf\u3002\u60a8\u53ef\u4ee5\u72ec\u7acb\u5904\u7406\u8fd9\u4e9b\u6d41\u3002\u901a\u8fc7\u5f39\u6027\u8d1f\u8f7d\u5747\u8861\uff08\u7279\u522b\u662f\u7f51\u7edc\u3001\u7ecf\u5178\u548c\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8f7d\u5747\u8861\u5668\uff09\u8fdb\u5165\u60a8\u7684\u73af\u5883\u7684\u6d41\u91cf\u5c06\u59cb\u7ec8\u901a\u8fc7\u8be5\u8d1f\u8f7d\u5747\u8861\u5668\u8fd4\u56de\u3002\u4ece VPC \u5230 Internet \u7684\u6d41\u91cf\u53ef\u4ee5\u9075\u5faa\u5355\u72ec\u7684\u8def\u5f84\u3002</p> <p>\u4ee5\u4e0b\u90e8\u5206\u5c06\u4ecb\u7ecd\u5404\u79cd\u9632\u706b\u5899\u89e3\u51b3\u65b9\u6848\u7684\u5206\u5e03\u5f0f\u67b6\u6784\u2014\u2014\u672c\u5730\u548c\u7b2c\u4e09\u65b9\u3002\u5b83\u4eec\u8fd8\u5c06\u6db5\u76d6\u9009\u9879\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\uff0c\u4f8b\u5982\u5982\u4f55\u5c06\u6d41\u91cf\u5f15\u5165\u9632\u706b\u5899\u670d\u52a1\u3001\u5982\u4f55\u8de8\u591a\u4e2a VPC \u6269\u5c55\u4ee5\u53ca\u6e90\u5ba2\u6237\u7aef IP \u5730\u5740\u7684\u53ef\u89c1\u6027\u3002\u6bcf\u4e2a\u67b6\u6784\u90fd\u663e\u793a\u4e86\u4ece Internet \u5230 VPC \u4e2d\u6258\u7ba1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6d41\u91cf\u3002</p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/#architectures-for-centralized-deployment-blue","title":"Architectures for centralized deployment (Blue)","text":"<p>\u5728\u60a8\u65e0\u6cd5\u4f7f\u7528\u5206\u5e03\u5f0f\u67b6\u6784\u7684\u573a\u666f\u4e2d\uff08\u4f8b\u5982\uff0c\u60a8\u7684\u7b56\u7565\u4e0d\u5141\u8bb8\u5728\u5e94\u7528\u7a0b\u5e8f VPC \u4e0a\u4f7f\u7528 IGW\uff09\uff0c\u60a8\u53ef\u4ee5\u63a2\u7d22\u96c6\u4e2d\u5f0f\u67b6\u6784\u3002\u8bf7\u6ce8\u610f\uff0c\u901a\u8fc7\u521b\u5efa\u96c6\u4e2d\u5f0f\u6d41\u7a0b\uff0c\u60a8\u4f1a\u4f7f\u67b6\u6784\u66f4\u52a0\u590d\u6742\u5e76\u589e\u52a0\u7206\u70b8\u534a\u5f84\uff08\u5373\uff0c\u96c6\u4e2d\u5f0f ELB \u4e0a\u7684\u9519\u8bef\u914d\u7f6e\u53ef\u80fd\u4f1a\u5f71\u54cd\u591a\u4e2a\u540e\u7aef\u5e94\u7528\u7a0b\u5e8f\uff09\u3002</p> <p>\u8fdb\u5165\u60a8\u7684 AWS \u7f51\u7edc\u7684\u6240\u6709\u6d41\u91cf\u90fd\u6765\u81ea\u5728\u6b64\u6a21\u578b\u4e2d\u6258\u7ba1\u60a8\u7684\u5b89\u5168\u5806\u6808\u7684\u8fb9\u7f18 VPC\u3002\u4ece\u90a3\u91cc\uff0c\u5b83\u901a\u8fc7 Transit Gateway \u6216 PrivateLink \u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a VPC \u4e2d\u7684\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u5f53 ELB \u5411\u53e6\u4e00\u4e2a VPC \u4e2d\u7684\u8fdc\u7a0b\u76ee\u6807\u53d1\u9001\u6d41\u91cf\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528 IP \u4f5c\u4e3a\u76ee\u6807\u7c7b\u578b\u3002 NLB \u548c PrivateLink \u7aef\u70b9\u90fd\u6709\u9759\u6001 IP \u5730\u5740\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4efb\u4f55 ELB \u7684\u76ee\u6807\u3002</p> <p>\u5982\u679c\u60a8\u5728 ALB \u4e0a\u6258\u7ba1\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u5176 IP \u5730\u5740\u53ef\u80fd\u4f1a\u66f4\u6539\u3002\u8981\u5728 ALB \u4e0a\u83b7\u53d6\u9759\u6001 IP \u5730\u5740\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u653e\u5728 NLB \u540e\u9762\u3002\u8fd9\u7bc7\u535a\u6587(LINK)\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u8be5\u8bbe\u7f6e\u3002</p> <p>\u4e0b\u9762\u7684\u67b6\u6784\u4e0e\u6211\u5728\u5206\u5e03\u5f0f\u90e8\u7f72\u90e8\u5206\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u7684\u76f8\u540c\u8003\u8651\u56e0\u7d20\u4e00\u81f4\u3002\u4ed6\u4eec\u6269\u5c55\u4e86\u4e4b\u524d\u7684\u90e8\u7f72\uff0c\u5c55\u793a\u4e86\u5982\u679c\u8bbe\u7f6e\u662f\u96c6\u4e2d\u5f0f\u7684\uff0c\u6765\u81ea Internet \u7684\u6d41\u91cf\u5c06\u5982\u4f55\u6d41\u52a8\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528 Transit Gateway \u6216 PrivateLink \u6a21\u578b\u4e4b\u95f4\u4f1a\u6709\u6027\u80fd\u548c\u6269\u5c55\u6027\u5dee\u5f02\u3002\u8bf7\u53c2\u9605\u7279\u5b9a\u4e8e\u670d\u52a1\u7684\u6587\u6863\u4ee5\u4e86\u89e3\u60a8\u6b63\u5728\u8003\u8651\u7684\u6bcf\u9879\u670d\u52a1\u7684\u914d\u989d\u3002</p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/#aws-waf","title":"AWS WAF","text":"<p>distributed  </p> <p>centralized </p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/#aws-network-firewall","title":"AWS Network Firewall","text":"<p>distributed  </p> <p>centralized </p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/#gateway-load-balancer","title":"Gateway Load Balancer","text":"<p>distributed  </p> <p>centralized </p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"git-attachment/blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows/#elb-sandwich","title":"ELB sandwich","text":"<p>distributed   The client IP preservation depends on the type of internet-facing ELB you use. NLB can preserve the client IP.\u00a0This document\u00a0goes into detail on what\u2019s required to achieve that. In the case of ALB, it doesn\u2019t preserve the client IP in the packet. The ALB adds it to an X-Forwarded-For HTTP header.</p> <p>centralized </p>","tags":["aws/network/nfw","aws/network/gwlb","aws/security/waf","aws/network/elb"]},{"location":"others/","title":"Others","text":""},{"location":"others/#1-network","title":"1 network","text":"<p><pre><code>(path:git/git-mkdocs/others/network file:.md)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - caddy: a fast, multi-platform web server with automatic HTTPS. - Cross Region Reverse Proxy with NLB and Cloudfront: \u8de8\u533a\u57df\u7684 Layer 4 \u53cd\u5411\u4ee3\u7406\uff0c\u5e76\u4f7f\u7528 nlb + cloudfront\uff0c\u8003\u5bdf\u8bc1\u4e66\u4f7f\u7528\u9700\u6c42 - aws-nfw-network-firewall: AWS Network Firewall - openswan-s2svpn-tgw-lab: connect to global aws using site-2-site vpn service, for example access global bedrock service &lt;\u2013&gt;</p>"},{"location":"others/#2-well-architected","title":"2 well-architected","text":"<p><pre><code>(path:git/git-mkdocs/others/well-architected file:.md)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - WA-\u5353\u8d8a\u8fd0\u8425-Operational-Excellence-202310-Summary:  - WA-\u53ef\u6301\u7eed\u6027-Sustainability-202310-Summary:  - WA-\u53ef\u9760\u6027-Reliability-202310-Summary:  - WA-\u5b89\u5168-Security-202310-Summary:  - WA-\u6027\u80fd\u6548\u7387-Performance-Efficiency-202310-Summary:  - WA-\u6210\u672c\u4f18\u5316-Cost-Optimization-202310-Summary:  &lt;\u2013&gt;</p>"},{"location":"others/#3-others","title":"3 others","text":"<p><pre><code>(file:.md path:git/git-mkdocs/others -path:git/git-mkdocs/others/windows -path:git/git-mkdocs/others/network -path:git/git-mkdocs/others/well-architected)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - Storage File Gateway: create file storage gateway from cli - github-page-howto: github-page-howto - Using Global SSO to Login China AWS Accounts: \u4f7f\u7528 global sso \u767b\u5f55\u4e2d\u56fd\u533a\u57df aws \u8d26\u53f7 - create-dashboard-for-instance-cpu-matrics: \u5feb\u901f\u521b\u5efa cloudwatch dashboard - Obsidian Tips: obsidian \u4f7f\u7528\u70b9\u6ef4 - Migrating Filezilla to AWS Transfer Family: \u8fc1\u79fb Filezilla \u5230 Transfer Family - Prometheus With Thanos Manually: POC-prometheus-with-thanos-manually - Quick Deploy BRConnector using Cloudformation: \u4f7f\u7528 Cloudformation \u5feb\u901f\u90e8\u7f72 BRConnector - Rescue EC2 Instance: \u6062\u590d EC2 \u5b9e\u4f8b\u6b65\u9aa4 - script-api-resource-method: \u6bcf\u4e2a api \u7684\u6bcf\u4e2a resource \u7684\u6bcf\u4e2a method \u90fd\u9700\u8981\u5355\u72ec\u901a\u8fc7\u547d\u4ee4\u884c\u542f\u7528\u201ctlsConfig/insecureSkipVerification\u201d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u811a\u672c\u7b80\u5316\u5de5\u4f5c - script-convert-mp3-to-text: script-convert-mp3-to-text - self-signed-certificates: \u4f7f\u7528\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u7528\u6839\u8bc1\u4e66\u7b7e\u53d1\u6216\u8005\u4e2d\u95f4\u8bc1\u4e66\u7b7e\u53d1\u7528\u4e8e api gateway &lt;\u2013&gt;</p>"},{"location":"others/#4-dataview-script","title":"4 dataview script","text":"<pre><code>LIST\nFROM (\"git/git-mkdocs/others\") \nand  (!\"git/git-mkdocs/others/network\") \nand  (!\"git/git-mkdocs/others/well-architected\") \nand  (!\"git/git-mkdocs/others/windows\")\n</code></pre>"},{"location":"others/POC-mig-filezilla-to-transfer-family/","title":"Migrating Filezilla to AWS Transfer Family","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#requirement","title":"requirement","text":"<ul> <li>same domain for both sftp and ftps server</li> <li>BU manage users themselves</li> <li>password and public key access</li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#diagram","title":"diagram","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#walkthrough","title":"walkthrough","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#directory-service","title":"directory-service","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#create-ad-","title":"create-AD-","text":"<ul> <li>create managed directory service on aws <pre><code>AD=corp2.aws.panlm.xyz\nPASS=${PASS:-passworD.1}\n\nexport AWS_DEFAULT_REGION=us-east-1\nexport AWS_PAGER=\"\"\nVPC=$(aws ec2 describe-vpcs \\\n    --filters \"Name=isDefault,Values=true\" \\\n    --query \"Vpcs[0].VpcId\" \\\n    --output text)\n\n# SUBNETS=$(aws ec2 describe-subnets \\\n#     --filters \"Name=vpc-id,Values=${VPC}\" \"Name=map-public-ip-on-launch,Values=true\" \\\n#     --query \"Subnets[].SubnetId\" \\\n#     --output text |awk 'BEGIN{OFS=\",\"} {print $1,$2}')\n\n# sort by AZ name and get first 2 subnets\n# sometimes will failed in us-west-2 if dont sort output\nSUBNETS=$(aws ec2 describe-subnets \\\n    --filters \"Name=vpc-id,Values=${VPC}\" \\\n        \"Name=map-public-ip-on-launch,Values=true\" |\\\n    jq -r '.Subnets | sort_by(.AvailabilityZone) | .[].SubnetId' |\\\n    xargs |awk 'BEGIN{OFS=\",\"} {print $1,$2}')\n\naws ds create-microsoft-ad \\\n    --name ${AD} \\\n    --short-name ${AD%%.*} \\\n    --password ${PASS} \\\n    --edition Standard \\\n    --vpc-settings VpcId=${VPC},SubnetIds=${SUBNETS} |tee /tmp/ds-$$.1\nMSDS_ID=$(cat /tmp/ds-$$.1 |jq -r '.DirectoryId')\n\n# until \"Requested\" - \"Creating\" - \"Active\"\nwatch -g -n 60 aws ds describe-directories \\\n    --directory-ids ${MSDS_ID} \\\n    --query DirectoryDescriptions[0].Stage \\\n    --output text\n\nMSDS_IP=($(aws ds describe-directories \\\n    --directory-ids ${MSDS_ID} \\\n    --query DirectoryDescriptions[0].DnsIpAddrs \\\n    --output text))\n</code></pre></li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#create-instance-and-join-domain","title":"create instance and join domain","text":"<ul> <li>launch instance and join domain seamlessly (link)</li> <li> <p>create role for joining domain instance <pre><code>ROLE_NAME=ec2-msds-role-$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\ncat &gt; trust.json &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"Service\": \"ec2.amazonaws.com\"\n            },\n            \"Action\": \"sts:AssumeRole\"\n        }\n    ]\n}\nEOF\naws iam create-role --role-name ${ROLE_NAME} \\\n    --assume-role-policy-document file://trust.json\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n    --policy-arn \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\"\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n    --policy-arn \"arn:aws:iam::aws:policy/AmazonSSMDirectoryServiceAccess\"\naws iam attach-role-policy --role-name ${ROLE_NAME} \\\n    --policy-arn \"arn:aws:iam::aws:policy/AWSOpsWorksCloudWatchLogs\"\naws iam create-instance-profile --instance-profile-name ${ROLE_NAME} |tee /tmp/inst-profile-$$.1\naws iam add-role-to-instance-profile --instance-profile-name ${ROLE_NAME} --role-name ${ROLE_NAME}\nINSTANCE_PROFILE_ARN=$(cat /tmp/inst-profile-$$.1 |jq -r '.InstanceProfile.Arn')\n</code></pre></p> </li> <li> <p>create key - git/git-mkdocs/CLI/awscli/ec2-cmd</p> </li> <li>create instance <pre><code># IMAGE_ID=ami-06fe4639440b3ab22 # windows 2019 base\n# IMAGE_ID=ami-0dd478adda4cc704d # windows 2016\necho ${INSTANCE_PROFILE_ARN}\n\nIMAGE_ID=$(aws ssm get-parameters \\\n    --names \"/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base\" --query 'Parameters[].Value' --output text )\n\n# SUBNET_PARAMETER=\"--subnet-id subnet-0d568921201a89751\"\n\nKEY_NAME=aws-key\nSTR=$(TZ=EAT-8 date +%H%M)\naws ec2 run-instances \\\n    ${SUBNET_PARAMETER} \\\n    --key-name ${KEY_NAME} \\\n    --image-id ${IMAGE_ID} --instance-type m5.large \\\n    --iam-instance-profile Arn=${INSTANCE_PROFILE_ARN} \\\n    --associate-public-ip-address \\\n    --private-dns-name-options \"HostnameType=ip-name,EnableResourceNameDnsARecord=true,EnableResourceNameDnsAAAARecord=false\" \\\n    --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=win-'\"${STR}\"'},{Key=os,Value=windows}]' |tee /tmp/instance-$$.1\nINST_ID=$(cat /tmp/instance-$$.1 |jq -r '.Instances[0].InstanceId')\n# private dns name option is important for join domain\n# false/false will run ssm document failed\n# true/false will run ssm document successful\n\nwhile true ; do\n    RESULT=$(aws ec2 describe-instance-status \\\n        --instance-ids ${INST_ID} \\\n        --query 'InstanceStatuses[?(InstanceStatus.Status==`ok` &amp;&amp; SystemStatus.Status==`ok`)].InstanceId' \\\n        --output text)\n    if [[ $RESULT == \"${INST_ID}\" ]]; then\n        break\n    else\n        sleep 60\n    fi\ndone\n</code></pre></li> </ul> <p>^goacm2</p>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#join-domain-","title":"join-domain-","text":"<ul> <li>(option) logon windows instance once at least </li> <li> <p>execute ssm document to join domain <pre><code>echo ${AD}\necho ${MSDS_ID}\necho ${INST_ID}\necho ${MSDS_IP[@]}\n\naws ssm send-command \\\n    --document-name \"AWS-JoinDirectoryServiceDomain\" \\\n    --document-version \"1\" \\\n    --targets '[{\"Key\":\"InstanceIds\",\"Values\":[\"'\"${INST_ID}\"'\"]}]' \\\n    --parameters '{\"directoryOU\":[\"\"],\"directoryId\":[\"'\"${MSDS_ID}\"'\"],\"directoryName\":[\"'\"${AD}\"'\"],\"dnsIpAddresses\":[\"'\"${MSDS_IP[0]}\"'\",\"'\"${MSDS_IP[1]}\"'\"]}' \\\n    --timeout-seconds 600 \\\n    --max-concurrency \"50\" \\\n    --max-errors \"0\" \\\n    --cloud-watch-output-config '{\"CloudWatchOutputEnabled\":true,\"CloudWatchLogGroupName\":\"ssm-powershell-log-2024\"}' |tee /tmp/ssm-$$.json\n\n# wait to Success\nCOMMAND_ID=$(cat /tmp/ssm-$$.json |jq -r '.Command.CommandId')\nwatch -g -n 10 aws ssm get-command-invocation --command-id ${COMMAND_ID} --instance-id ${INST_ID} --query 'Status' --output text\n</code></pre></p> </li> <li> <p>check join domain successfully or not, see <code>Domain:</code> in output <pre><code>aws ssm send-command \\\n--document-name \"AWS-RunPowerShellScript\" \\\n--document-version \"1\" \\\n--targets '[{\"Key\":\"InstanceIds\",\"Values\":[\"'\"${INST_ID}\"'\"]}]' \\\n--parameters '{\"workingDirectory\":[\"\"],\"executionTimeout\":[\"3600\"],\"commands\":[\"systeminfo\"]}' \\\n--timeout-seconds 600 --max-concurrency \"50\" --max-errors \"0\" \\\n--cloud-watch-output-config '{\"CloudWatchOutputEnabled\":true,\"CloudWatchLogGroupName\":\"ssm-powershell-log-2024\"}' \n</code></pre></p> </li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#install-some-tool-to-manage-ad-","title":"install-some-tool-to-manage-ad-","text":"<ul> <li> <p>install <code>Remote Server Administration Tools</code> from powershell <pre><code>Install-WindowsFeature RSAT-ADDS-Tools\nInstall-WindowsFeature -Name \"RSAT-AD-PowerShell\" -IncludeAllSubFeature\n</code></pre></p> </li> <li> <p>login instance with domain admin <code>admin@your.domain.com</code></p> </li> <li>create group for sftp access <code>testgroup1</code></li> <li>create user belong this group <code>testuser1</code></li> <li>get sid of ad group (link) <pre><code>Get-ADGroup -Filter {samAccountName -like \"testgroup1*\"} -Properties * | Select SamAccountName,ObjectSid\n</code></pre></li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#transfer-family","title":"transfer family","text":"<ul> <li>allocate at least one elastic ip in your vpc</li> <li>request a certificate <code>ftp.your.domain.com</code> in acm</li> <li>create role to access s3, using transfer service as trust entity <code>access-s3-role</code></li> <li> <p>add directory service permissions to current user/role who will create ftp server (link)</p> </li> <li> <p>create server with sftp and ftps protocol</p> </li> <li>select <code>aws directory service</code> as IdP</li> <li>select <code>vpc hosted</code> as endpoint type, using <code>internet facing</code> access</li> <li>select public subnet and elastic ip</li> <li>modify or create security group for ports: <code>22,21,8192-8200</code> </li> <li>s3 as backend</li> <li> <p>select <code>enable</code> in <code>TLS session resumption</code> (link)</p> </li> <li> <p>after server created, add sid to <code>accesses</code>, mapping to role <code>access-s3-role</code></p> </li> <li>test user</li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#route53","title":"route53","text":"<ul> <li>create cname record <code>ftp.your.domain.com</code> to ftp server\u2019s endpoint, or alias to vpce public dns name</li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#access-ftp-server","title":"access ftp server","text":"<pre><code>sftp testuser1@your.domain.com@ftp.your.domain.com\n# or\nlftp -d ftp://ftp.your.domain.com \\\n-u 'testuser1@your.domain.com,PASSWORD'\n</code></pre>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#conclusion","title":"conclusion","text":"<p>meeting requirement</p>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#refer","title":"refer","text":"<ul> <li>https://aws.amazon.com/blogs/aws/new-aws-transfer-for-ftp-and-ftps-in-addition-to-existing-sftp/</li> <li>https://aws.amazon.com/blogs/storage/announcing-the-open-source-release-of-web-client-for-aws-transfer-family/</li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#screenshots","title":"screenshots","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#ftp-client-configuration","title":"ftp client configuration","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#upload-and-download-using-ftp-client","title":"upload and download using ftp client","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#s3-bucket","title":"s3 bucket","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#transfer-family_1","title":"transfer family","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#directory-service_1","title":"directory service","text":"","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-mig-filezilla-to-transfer-family/#refer_1","title":"refer","text":"<ul> <li>https://repost.aws/knowledge-center/manage-ad-directory-from-ec2-windows</li> </ul>","tags":["aws/storage/transfer-family","aws/mgmt/directory-service"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/","title":"Prometheus With Thanos Manually","text":"<p>[!WARNING] just backup copy  no more update here refer: TC-prometheus-ha-architect-with-thanos.zh</p>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#prometheus-with-thanos-manually","title":"Prometheus With Thanos Manually","text":"","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#_1","title":"\u67b6\u6784\u63cf\u8ff0","text":"<p>Prometheus \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u76d1\u63a7\u548c\u62a5\u8b66\u5de5\u5177\uff0c\u4e13\u4e3a\u5bb9\u5668\u5316\u548c\u4e91\u539f\u751f\u67b6\u6784\u7684\u8bbe\u8ba1\uff0c\u901a\u8fc7\u57fa\u4e8e HTTP \u7684 Pull \u6a21\u5f0f\u91c7\u96c6\u65f6\u5e8f\u6570\u636e\uff0c\u63d0\u4f9b\u529f\u80fd\u5f3a\u5927\u7684\u67e5\u8be2\u8bed\u8a00 PromQL\uff0c\u5e76\u53ef\u89c6\u5316\u5448\u73b0\u76d1\u63a7\u6307\u6807\u4e0e\u751f\u6210\u62a5\u8b66\u4fe1\u606f\u3002\u5ba2\u6237\u666e\u904d\u91c7\u7528\u5176\u7528\u4e8e Kubernetes \u7684\u76d1\u63a7\u4f53\u7cfb\u5efa\u8bbe\u3002Amazon \u4e5f\u5728 2021 \u5e74 9 \u6708\u6b63\u5f0f\u53d1\u5e03\u4e86\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\uff08Amazon Managed Service for Prometheus\uff09\u7b80\u5316\u5ba2\u6237\u90e8\u7f72\u548c\u4f7f\u7528\u3002\u5e76\u4e14\u5728 2023 \u5e74 11 \u6708\u9488\u5bf9 EKS \u53d1\u5e03\u4e86\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\u7684\u65e0\u4ee3\u7406\u91c7\u96c6\u529f\u80fd\uff08\u65b0\u95fb\u7a3f\uff09\uff0c\u8fdb\u4e00\u6b65\u65b9\u4fbf\u5ba2\u6237\u65e0\u9700\u63d0\u524d\u89c4\u5212\uff0c\u4ece\u800c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u7684\u4f7f\u7528 Prometheus \u7684\u76f8\u5173\u7ec4\u4ef6\u3002</p> <p>\u622a\u6b62\u672c\u6587\u53d1\u5e03\u4e4b\u65e5\uff0c\u5728\u4e9a\u9a6c\u900a\u4e2d\u56fd\u533a\u57df\u6682\u65f6\u6ca1\u6709\u53d1\u5e03\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\u3002\u56e0\u6b64\u9488\u5bf9\u4e2d\u56fd\u5ba2\u6237\u5982\u4f55\u90e8\u7f72\u4e00\u5957 Prometheus \u76d1\u63a7\u5e73\u53f0\u7684\u6700\u4f73\u5b9e\u8df5\u6307\u5bfc\u53ef\u4ee5\u5e2e\u52a9\u5ba2\u6237\u5feb\u901f\u4f7f\u7528 Prometheus\uff0c\u4ece\u800c\u5c06\u7cbe\u529b\u4e13\u6ce8\u4e8e\u4e1a\u52a1\u9700\u6c42\u3002</p> <p>\u72ec\u7acb Kubernetes \u96c6\u7fa4\u901a\u5e38\u4f7f\u7528 Prometheus Operator \u90e8\u7f72\u6240\u6709\u76f8\u5173\u7ec4\u4ef6\u5305\u62ec Alert Manager\u3001Grafana \u7b49\u3002\u8fd9\u79cd\u72ec\u7acb\u90e8\u7f72\u7684\u76d1\u63a7\u67b6\u6784\u4f18\u70b9\u662f\u90e8\u7f72\u65b9\u4fbf\uff0c\u6570\u636e\u6301\u4e45\u5316\u4f7f\u7528 EBS \u4e5f\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u4e0b\u67e5\u8be2\u6027\u80fd\u7684\u8981\u6c42\uff0c\u4f46\u7f3a\u70b9\u4e5f\u663e\u800c\u6613\u89c1\uff0c\u5373\u65e0\u6cd5\u4fdd\u5b58\u592a\u957f\u65f6\u95f4\u7684\u5386\u53f2\u6570\u636e\u3002\u800c\u4e14\u5f53\u5ba2\u6237\u73af\u5883\u4e2d\u96c6\u7fa4\u6570\u91cf\u8f83\u591a\uff0c\u76d1\u63a7\u5e73\u53f0\u81ea\u8eab\u7684\u53ef\u7528\u6027\u548c\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\uff0c\u540c\u65f6\u5e0c\u671b\u63d0\u4f9b\u5168\u5c40\u67e5\u8be2\u65f6\uff0c\u7ba1\u7406\u548c\u7ef4\u62a4\u7684\u5de5\u4f5c\u91cf\u4e5f\u968f\u4e4b\u589e\u52a0\u3002</p> <p>Thanos\u662f\u4e00\u5957\u5f00\u6e90\u7ec4\u4ef6\uff0c\u6784\u5efa\u5728 Prometheus \u4e4b\u4e0a\uff0c\u7528\u4ee5\u89e3\u51b3 Prometheus \u5728\u591a\u96c6\u7fa4\u5927\u89c4\u6a21\u73af\u5883\u4e0b\u7684\u9ad8\u53ef\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u9650\u5236\u3002\u5f53\u9700\u8981\u505a\u5386\u53f2\u6027\u80fd\u6570\u636e\u5206\u6790\uff0c\u6216\u8005\u4f7f\u7528 Prometheus \u8fdb\u884c\u6210\u672c\u5206\u6790\u7684\u573a\u666f\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u8f83\u957f\u65f6\u95f4\u7684\u5386\u53f2\u6570\u636e\u3002Thanos \u4e3b\u8981\u901a\u8fc7\u63a5\u6536\u5e76\u5b58\u50a8 Prometheus \u7684\u591a\u96c6\u7fa4\u6570\u636e\u526f\u672c\uff0c\u5e76\u63d0\u4f9b\u5168\u5c40\u67e5\u8be2\u548c\u4e00\u81f4\u6027\u6570\u636e\u8bbf\u95ee\u63a5\u53e3\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u4e86\u5bf9\u4e8e Prometheus \u7684\u53ef\u9760\u6027\u3001\u4e00\u81f4\u6027\u548c\u53ef\u7528\u6027\u4fdd\u969c\uff0c\u4ece\u800c\u89e3\u51b3\u4e86 Prometheus \u5355\u96c6\u7fa4\u5728\u5b58\u50a8\u3001\u67e5\u8be2\u5386\u53f2\u6570\u636e\u548c\u5907\u4efd\u7b49\u65b9\u9762\u7684\u6269\u5c55\u6027\u6311\u6218\u3002</p> <p>\u5728\u8ba8\u8bba\u57fa\u4e8e Thanos \u7684\u5404\u79cd Prometheus \u76d1\u63a7\u67b6\u6784\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b Thanos \u53ca\u5176\u5e38\u7528\u7684\u7ec4\u4ef6\uff0c\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003 thanos.io \u3002</p> <ul> <li>Sidecar\uff08\u8fb9\u8f66\uff09\uff1a\u8fd0\u884c\u5728 Prometheus \u7684 Pod \u4e2d\uff0c\u8bfb\u53d6\u5176\u6570\u636e\u4ee5\u4f9b\u67e5\u8be2\u548c/\u6216\u4e0a\u4f20\u5230\u4e91\u5b58\u50a8\u3002</li> <li>Store\uff08\u5b58\u50a8\u7f51\u5173\uff09\uff1a\u7528\u4e8e\u4ece\u5bf9\u8c61\u5b58\u50a8\u6876\uff08\u4f8b\u5982\uff1aAWS S3\uff09\u4e0a\u67e5\u8be2\u6570\u636e\u3002</li> <li>Compactor\uff08\u538b\u7f29\u5668)\uff1a\u5bf9\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u6876\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u3001\u805a\u5408\u5386\u53f2\u6570\u636e\u4ee5\u51cf\u5c0f\u91c7\u6837\u7cbe\u5ea6\u5e76\u957f\u4e45\u4fdd\u7559\u3002</li> <li>Receive\uff08\u63a5\u6536\u5668\uff09\uff1a\u63a5\u6536\u6765\u81ea Prometheus \u8fdc\u7a0b\u5199\u5165\u65e5\u5fd7\u7684\u6570\u636e\uff0c\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u3002</li> <li>Ruler\uff08\u89c4\u5219\u5668\uff09\uff1a\u9488\u5bf9 Thanos \u4e2d\u7684\u6570\u636e\u8bc4\u4f30\u8bb0\u5f55\u548c\u8b66\u62a5\u89c4\u5219\u3002</li> <li>Query\uff08\u67e5\u8be2\u5668\uff09\uff1a\u5b9e\u73b0 Prometheus \u7684 v1 API\uff0c\u67e5\u8be2\u5e76\u6c47\u603b\u6765\u81ea\u5e95\u5c42\u7ec4\u4ef6\u7684\u6570\u636e\u3002\u5c06\u6240\u6709\u6570\u636e\u6e90\u6dfb\u52a0\u4e3a Query \u7684 Endpoint\uff0c\u5305\u62ec Sidecar\u3001 Store\u3001 Receive \u7b49\u3002</li> <li>Query Frontend\uff08\u67e5\u8be2\u524d\u7aef\uff09\uff1a\u5b9e\u73b0 Prometheus \u7684 v1 API\uff0c\u5c06\u5176\u4ee3\u7406\u7ed9\u67e5\u8be2\u5668\uff0c\u540c\u65f6\u7f13\u5b58\u54cd\u5e94\uff0c\u5e76\u53ef\u4ee5\u62c6\u5206\u67e5\u8be2\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002</li> </ul> <p>\u7b2c\u4e00\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0b\u56fe\u84dd\u8272\u548c\u7eff\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a</p> <ul> <li>\u88ab\u76d1\u63a7\u96c6\u7fa4\uff08Observee\uff09\u90e8\u7f72 Prometheus \u4e14\u542f\u7528 Thanos \u7684 Sidecar \u65b9\u5f0f\u5c06\u76d1\u63a7\u7684\u5386\u53f2\u6570\u636e\u5b9a\u671f\u5f52\u6863\u5230 S3\uff0c\u901a\u8fc7\u90e8\u7f72 Thanos Store \u7ec4\u4ef6\u67e5\u8be2\u5386\u53f2\u6570\u636e\uff08\u4e0b\u56fe\u4e2d Store \u7ec4\u4ef6\u90e8\u7f72\u5728\u76d1\u63a7\u96c6\u7fa4\u4e2d\uff09\uff0c\u88ab\u76d1\u63a7\u96c6\u7fa4\u4e2d\u4e0d\u542f\u7528 Grafana \u7ec4\u4ef6\uff1b</li> <li>\u76d1\u63a7\u96c6\u7fa4\uff08Observer\uff09\u9664\u4e86\u90e8\u7f72 Prometheus \u4e4b\u5916\uff0c\u5c06\u7edf\u4e00\u90e8\u7f72 Grafana \u4f5c\u4e3a Dashboard \u5c55\u793a\u3002</li> </ul> <p>\u7b2c\u4e8c\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0b\u56fe\u7ea2\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09:</p> <ul> <li>\u88ab\u76d1\u63a7\u96c6\u7fa4\uff08Observee\uff09\u9664\u4e86\u542f\u7528 Thanos Sidecar \u4e4b\u5916\uff0c\u8fd8\u542f\u7528\u4e86 Prometheus \u7684 Remote Write \u529f\u80fd\uff0c\u5c06\u672a\u5f52\u6863\u7684\u6570\u636e\u4ee5 WAL \u65b9\u5f0f\u8fdc\u7a0b\u4f20\u8f93\u5230\u90e8\u7f72\u5728\u76d1\u63a7\u96c6\u7fa4\uff08Observer\uff09\u4e0a\u7684 Thanos Receive\uff0c\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u5197\u4f59\u5ea6\u3002 Thanos Receive \u540c\u6837\u53ef\u4ee5\u5c06\u5386\u53f2\u76d1\u63a7\u6570\u636e\u5f52\u6863\u5230 S3 \u4e0a\uff0c\u4e14\u652f\u6301\u88ab Thanos Query \u76f4\u63a5\u67e5\u8be2\uff0c\u540c\u65f6\u907f\u514d\u76f4\u63a5\u67e5\u8be2 Sidecar \u800c\u7ed9\u88ab\u76d1\u63a7\u96c6\u7fa4\u5e26\u6765\u989d\u5916\u7684\u6027\u80fd\u635f\u8017\u3002</li> </ul> <p>\u7b2c\u4e09\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0b\u56fe\u9ec4\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a</p> <ul> <li>\u5728\u591a\u96c6\u7fa4\u76d1\u63a7\u573a\u666f\u4e0b\uff0c\u4e00\u822c\u4f1a\u5728\u6bcf\u4e2a\u96c6\u7fa4\u90e8\u7f72\u72ec\u7acb\u7684 Prometheus \u7ec4\u4ef6\u3002Prometheus \u63d0\u4f9b Agent Mode \u9488\u5bf9\u8fd9\u6837\u7684\u573a\u666f\u53ef\u4ee5\u6700\u5c0f\u5316\u8d44\u6e90\u5360\u7528\uff0c\u76f4\u63a5\u542f\u7528 Remote Write \u529f\u80fd\u5c06\u76d1\u63a7\u6570\u636e\u96c6\u4e2d\u4fdd\u5b58 \uff08\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a Prometheus \u96c6\u7fa4\uff0c\u6216\u8005 Thanos Receive \u7ec4\u4ef6\uff09\u3002\u5728 AWS \u4e0a\u53ef\u4ee5\u4f7f\u7528\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\u4f5c\u4e3a\u96c6\u4e2d\u76d1\u63a7\u6570\u636e\u6301\u4e45\u5316\uff0c\u63d0\u4f9b\u6700\u597d\u7684\u6027\u80fd\u548c\u6700\u4f4e\u7684\u7ef4\u62a4\u6210\u672c\u3002</li> </ul> <p></p> <p>\u4ee5\u4e0b\u603b\u7ed3\u4e86\u57fa\u4e8e Thanos \u7684\u5404\u79cd Prometheus \u76d1\u63a7\u67b6\u6784\u6240\u9002\u5408\u7684\u573a\u666f\uff1a \u7b2c\u4e00\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u84dd\u8272\u548c\u7eff\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a\u9002\u5408\u7edd\u5927\u90e8\u5206\u751f\u4ea7\u73af\u5883\uff0c\u5c24\u5176\u5728\u4e9a\u9a6c\u900a\u4e2d\u56fd\u533a\u57df\u6ca1\u6709\u6258\u7ba1 Prometheus \u670d\u52a1\uff0c\u6b64\u7c7b\u67b6\u6784\u4e5f\u662f\u5ba2\u6237\u9996\u9009\u3002</p> <ul> <li>\u4f18\u70b9<ul> <li>\u67b6\u6784\u7b80\u5355</li> <li>\u53ea\u6709\u4e00\u4efd\u76d1\u63a7\u6570\u636e\uff0c\u6700\u5c0f\u5316\u5b58\u50a8\u6210\u672c\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500</li> </ul> </li> <li>\u7f3a\u70b9 <ul> <li>\u901a\u8fc7 Sidecar \u67e5\u8be2\u5b9e\u65f6\u76d1\u63a7\u6570\u636e\u65f6\uff0c\u5c06\u7ed9\u88ab\u76d1\u63a7\u96c6\u7fa4\u5e26\u6765\u989d\u5916\u6027\u80fd\u635f\u8017</li> </ul> </li> </ul> <p>\u7b2c\u4e8c\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u7ea2\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a\u5728 Thanos 0.19 \u7248\u672c\u4e4b\u524d\uff0cSidecar \u8fd8\u6ca1\u6709\u5b9e\u73b0 StoreAPI \u65f6\uff0c\u53ea\u80fd\u901a\u8fc7 Receive \u67e5\u8be2\u6700\u65b0\u7684\u6027\u80fd\u6570\u636e\u3002\u9002\u5408\u9700\u8981\u591a\u526f\u672c\u76d1\u63a7\u6570\u636e\u7684\u7279\u6b8a\u573a\u666f\u3002</p> <ul> <li>\u4f18\u70b9<ul> <li>\u76d1\u63a7\u6570\u636e\u5197\u4f59\uff0c\u53ef\u4ee5\u4f7f\u7528 Compactor \u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29\u3001\u805a\u5408\u5386\u53f2\u6570\u636e\u4ee5\u51cf\u5c11\u5b58\u50a8\u6210\u672c</li> <li>\u76f4\u63a5\u4ece Thanos Receive \u67e5\u8be2\u5b9e\u65f6\u6027\u80fd\u6570\u636e\uff0c\u5bf9\u88ab\u76d1\u63a7\u96c6\u7fa4\u6ca1\u6709\u989d\u5916\u6027\u80fd\u635f\u8017</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u67b6\u6784\u590d\u6742\uff0c\u6bcf\u4e2a\u96c6\u7fa4\u5bf9\u5e94\u4e00\u7ec4 Thanos Receive\uff0c\u5efa\u8bae\u914d\u7f6e\u526f\u672c\u6570\u91cf\u548c\u8d44\u6e90\u7b49\u4e0e\u6e90\u96c6\u7fa4\u7684 Prometheus \u526f\u672c\u6570\u91cf\u548c\u8d44\u6e90\u76f8\u540c</li> </ul> </li> </ul> <p>\u7b2c\u4e09\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u9ec4\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a\u6700\u5927\u7a0b\u5ea6\u51cf\u5c11\u5bf9\u4e8e\u88ab\u76d1\u63a7\u96c6\u7fa4\u7684\u8d44\u6e90\u5360\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 Prometheus \u7684 Agent Mode\uff1a</p> <ul> <li>\u4f18\u70b9<ul> <li>\u67b6\u6784\u7b80\u5355\uff0c\u4f7f\u7528 Agent Mode \u51e0\u4e4e\u65e0\u72b6\u6001\uff0c\u53ef\u4ee5\u4f7f\u7528\u9664 Stateful \u4e4b\u5916\u7684\u5176\u4ed6 Deployment\uff0c\u672c\u5730\u5b58\u50a8\u9700\u6c42\u4f4e\uff08\u9664\u975e\u8fdc\u7a0b Endpoint \u4e0d\u53ef\u7528\u65f6\uff0c\u672c\u5730\u7f13\u5b58\u6570\u636e\u4ee5\u91cd\u8bd5\uff09</li> <li>\u53ef\u5b9e\u73b0\u96c6\u4e2d\u544a\u8b66 - \u544a\u8b66\u5c06\u901a\u8fc7 Thanos Ruler \u5b9a\u4e49\uff0c\u901a\u8fc7 Thanos Query \u67e5\u8be2 Receive \u5e76\u53d1\u9001\u5230\u76d1\u63a7\u96c6\u7fa4\u7684 Alert Manager \u5b9e\u73b0</li> </ul> </li> <li>\u7f3a\u70b9 <ul> <li>\u65e0\u76d1\u63a7\u6570\u636e\u5197\u4f59\uff0c\u67d0\u4e9b\u7ec4\u4ef6\u5c06\u65e0\u6cd5\u5728 Agent Mode \u4e0b\u542f\u7528\uff0c\u4f8b\u5982\uff1aSidecar\u3001Alert\u3001Rules \uff08\u53c2\u89c1\u6587\u6863\uff09</li> </ul> </li> </ul> <p>\u5728\u652f\u6301\u6258\u7ba1 Prometheus \u670d\u52a1\u7684\u4e9a\u9a6c\u900a\u533a\u57df\uff08\u6587\u6863\uff09\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6258\u7ba1\u670d\u52a1\u66ff\u4ee3\u7b2c\u4e09\u79cd\u76d1\u63a7\u67b6\u6784\uff0c\u5b9e\u73b0\u5b8c\u5168\u5f00\u7bb1\u5373\u7528\uff0c\u540c\u65f6\u907f\u514d\u7ba1\u7406 Thanos \u7ec4\u4ef6\uff0c\u53ea\u9700\u8981\u90e8\u7f72 Grafana \u5373\u53ef\u3002</p>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#walkthrough","title":"walkthrough","text":"<p>Prometheus Operator \u63d0\u4f9b Kubernetes \u539f\u751f\u90e8\u7f72\u548c\u7ba1\u7406 Prometheus \u53ca\u76f8\u5173\u76d1\u63a7\u7ec4\u4ef6\u7684\u529f\u80fd\u3002\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u7b80\u5316\u548c\u81ea\u52a8\u914d\u7f6e Kubernetes \u96c6\u7fa4\u57fa\u4e8e Prometheus \u7684\u76d1\u63a7\u5806\u6808\u3002\u672c\u5b9e\u9a8c\u57fa\u4e8e Prometheus Operator \u90e8\u7f72\u4f5c\u4e3a\u57fa\u7840\uff0c\u5e76\u901a\u8fc7 values.yaml \u53c2\u6570\u6587\u4ef6\u5b9a\u5236\uff0c\u8be6\u7ec6\u4fe1\u606f\u53c2\u89c1\uff08Github\uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u521b\u5efa 3 \u4e2a EKS \u96c6\u7fa4\uff0c\u5206\u522b\u5bf9\u5e94\u4e0a\u56fe\u4e2d\u7684\u84dd\u8272\u3001\u7ea2\u8272\u3001\u9ec4\u8272\u96c6\u7fa4\u9a8c\u8bc1 Thanos \u76f8\u5173\u914d\u7f6e\u3002 </p> <p>\u672c\u5b9e\u9a8c\u4e2d\u5c06\u4f7f\u7528 Terraform \u5feb\u901f\u521b\u5efa EKS \u96c6\u7fa4\uff0c\u5e76\u4e14\u81ea\u52a8\u90e8\u7f72\u4e0a\u56fe\u4e2d\u76f8\u5173\u7684 Prometheus \u76d1\u63a7\u67b6\u6784\uff08Github\uff09\uff0c\u548cThanos \u76f8\u5173\u7ec4\u4ef6\uff08Github\uff09\uff0c\u5e26\u5927\u5bb6\u4e86\u89e3 Thanos \u7684\u914d\u7f6e\u548c\u5de5\u4f5c\u539f\u7406\u3002</p>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#prometheus","title":"prometheus","text":"<ul> <li>we will create 3 clusters, <code>ekscluster1</code> for observer, <code>ekscluster2</code> and <code>ekscluster3</code> for observee (../EKS/cluster/eks-cluster-with-terraform)</li> <li>following addons will be included in each cluster<ul> <li>argocd</li> <li>aws load balancer controller </li> <li>ebs csi </li> <li>externaldns-for-route53 </li> <li>metrics-server</li> <li>cluster-autoscaler</li> <li><code>DOMAIN_NAME</code> should be <code>environment_name.hosted_zone_name</code>, for example <code>thanos.eks1217.aws.panlm.xyz</code>. Use it in following lab.</li> </ul> </li> <li>get sample yaml  <pre><code>git clone https://github.com/panlm/thanos-example.git\ncd thanos-example\n</code></pre></li> <li> <p>following<code>README.md</code> to build your version yaml files <pre><code>CLUSTER_NAME_1=ekscluster1\nCLUSTER_NAME_2=ekscluster2\nCLUSTER_NAME_3=ekscluster3\nDOMAIN_NAME=thanos.eks1217.aws.panlm.xyz\nTHANOS_BUCKET_NAME=thanos-store-eks1217\nAWS_DEFAULT_REGION=us-east-2\nexport CLUSTER_NAME_1 CLUSTER_NAME_2 CLUSTER_NAME_3 DOMAIN_NAME THANOS_BUCKET_NAME AWS_DEFAULT_REGION\n\nmkdir POC\ncd POC-template\nfind ./ -type d -name \"[a-z]*\" -exec mkdir ../POC/{} \\;\n\nfind ./ -type f -name \"*\" |while read filename ; do\n  cat $filename |envsubst &gt; ../POC/$filename\ndone\n\ncd ../POC/\n</code></pre></p> </li> <li> <p>prepare to install thanos with helm <pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n\nhelm show values prometheus-community/kube-prometheus-stack &gt; values_default.yaml\ncat values_default.yaml |grep adminPassword\n</code></pre></p> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#observer-cluster","title":"observer cluster","text":"<ul> <li>switch to observer (ekscluster1) <pre><code>kubectx ekscluster1\n</code></pre></li> <li> <p>create s3 config file for thanos sidecar <pre><code>DEPLOY_NAME_1=prom-operator-${CLUSTER_NAME_1}\nNAMESPACE_NAME=monitoring\n\nkubectl create ns ${NAMESPACE_NAME}\nkubectl create secret generic thanos-s3-config-${CLUSTER_NAME_1} --from-file=thanos-s3-config-${CLUSTER_NAME_1}=s3-config/thanos-s3-config-${CLUSTER_NAME_1}.yaml --namespace ${NAMESPACE_NAME} \n</code></pre></p> </li> <li> <p>deploy Prometheus with Thanos and Grafana <pre><code>echo ${CLUSTER_NAME_1} ${DEPLOY_NAME_1} ${NAMESPACE_NAME}\nhelm upgrade -i -f prometheus/values-${CLUSTER_NAME_1}-1.yaml -f prometheus/values-${CLUSTER_NAME_1}-2.yaml ${DEPLOY_NAME_1} prometheus-community/kube-prometheus-stack --namespace ${NAMESPACE_NAME}\n</code></pre></p> </li> <li> <p>create irsa in monitoring namespace for thanos (git/git-mkdocs/CLI/linux/eksctl) <pre><code>echo ${DEPLOY_NAME_1}\necho ${CLUSTER_NAME_1}\nSA_NAME=${DEPLOY_NAME_1}-prometheus\ncreate-iamserviceaccount -s ${SA_NAME} -c ${CLUSTER_NAME_1} -n monitoring -r 0\n</code></pre></p> </li> <li> <p>rollout statefulset (or using k9s to delete pod and make it restart to use new SA) <pre><code>kubectl rollout restart sts prometheus-prom-operator-${CLUSTER_NAME_1}-prometheus -n monitoring\n</code></pre></p> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#observee-cluster-","title":"observee-cluster-","text":"<ul> <li>switch to observee cluster (ekscluster2) <pre><code>kubectx ekscluster2\n</code></pre></li> <li> <p>on observee cluster (ekscluster2) <pre><code>DEPLOY_NAME_2=prom-operator-${CLUSTER_NAME_2}\nNAMESPACE_NAME=monitoring\n\nkubectl create ns ${NAMESPACE_NAME}\nkubectl create secret generic thanos-s3-config-${CLUSTER_NAME_2} --from-file=thanos-s3-config-${CLUSTER_NAME_2}=s3-config/thanos-s3-config-${CLUSTER_NAME_2}.yaml --namespace ${NAMESPACE_NAME}\n</code></pre></p> </li> <li> <p>deploy Prometheus with remote write and Thanos Sidecar, no Grafana <pre><code>echo ${CLUSTER_NAME_2} ${DEPLOY_NAME_2} ${NAMESPACE_NAME}\nhelm upgrade -i -f prometheus/values-${CLUSTER_NAME_2}-1.yaml -f prometheus/values-${CLUSTER_NAME_2}-2.yaml ${DEPLOY_NAME_2} prometheus-community/kube-prometheus-stack --namespace ${NAMESPACE_NAME}\n</code></pre></p> </li> <li> <p>using remote write, WAL log will be transfer to receive pod, you could query real time data from thanos receive.</p> </li> <li> <p>create irsa in monitoring namespace for thanos (git/git-mkdocs/CLI/linux/eksctl) <pre><code>echo ${DEPLOY_NAME_2}\necho ${CLUSTER_NAME_2}\nSA_NAME=${DEPLOY_NAME_2}-prometheus\ncreate-iamserviceaccount -s ${SA_NAME} -c ${CLUSTER_NAME_2} -n monitoring -r 0\n</code></pre></p> </li> <li> <p>rollout statefulset (or using k9s to delete pod and make it restart to use new SA) <pre><code>kubectl rollout restart sts prometheus-prom-operator-${CLUSTER_NAME_2}-prometheus -n monitoring\n</code></pre></p> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#observee-cluster-with-prometheus-agent-mode","title":"observee cluster with prometheus agent mode","text":"<ul> <li>switch to observee cluster (ekscluster3) <pre><code>kubectx ekscluster3\n</code></pre></li> <li> <p>on observee cluster (ekscluster3) <pre><code>DEPLOY_NAME_3=prom-operator-${CLUSTER_NAME_3}\nNAMESPACE_NAME=monitoring\n\nkubectl create ns ${NAMESPACE_NAME}\nkubectl create secret generic thanos-s3-config-${CLUSTER_NAME_3} --from-file=thanos-s3-config-${CLUSTER_NAME_3}=s3-config/thanos-s3-config-${CLUSTER_NAME_3}.yaml --namespace ${NAMESPACE_NAME}\n</code></pre></p> </li> <li> <p>deploy prometheus in agent mode with remote write <pre><code>echo ${CLUSTER_NAME_3} ${DEPLOY_NAME_3} ${NAMESPACE_NAME}\nhelm upgrade -i -f prometheus/values-${CLUSTER_NAME_3}-1.yaml ${DEPLOY_NAME_3} prometheus-community/kube-prometheus-stack --namespace ${NAMESPACE_NAME}\n</code></pre></p> </li> <li> <p>create irsa in monitoring namespace for thanos (git/git-mkdocs/CLI/linux/eksctl) <pre><code>echo ${DEPLOY_NAME_3}\necho ${CLUSTER_NAME_3}\nSA_NAME=${DEPLOY_NAME_3}-prometheus\ncreate-iamserviceaccount -s ${SA_NAME} -c ${CLUSTER_NAME_3} -n monitoring -r 0\n</code></pre></p> </li> <li> <p>rollout statefulset (need to delete pod and make it restart to use new SA) <pre><code>kubectl rollout restart sts prometheus-prom-operator-${CLUSTER_NAME_3}-prometheus -n monitoring\n</code></pre></p> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#thanos","title":"thanos","text":"<ul> <li>switch to observer cluster (ekscluster1), we will install all Thanos components on Observer cluster <pre><code>kubectx ekscluster1\n</code></pre></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#store","title":"store","text":"<ul> <li>reuse 3 cluster s3 config file for thanos store on observer <pre><code>kubectl create ns thanos\nfor CLUSTER_NAME in ekscluster1 ekscluster2 ekscluster3 ; do\n    kubectl create secret generic thanos-s3-config-${CLUSTER_NAME} --from-file=thanos-s3-config-${CLUSTER_NAME}=./s3-config/thanos-s3-config-${CLUSTER_NAME}.yaml -n thanos\ndone\n</code></pre></li> <li>create thanos store for history data query <pre><code>kubectl apply -f store/\n</code></pre></li> <li>create role for sa (git/git-mkdocs/CLI/linux/eksctl) and annotate to existed sa <pre><code>for SA_NAME in thanos-store-cluster1 thanos-store-cluster2 thanos-store-cluster3 ; do\n    create-iamserviceaccount -s ${SA_NAME} -c ${CLUSTER_NAME_1} -n thanos -r 0\ndone\n</code></pre></li> <li>rollout 2 stores (or using k9s to delete pod and make it restart to use new SA) <pre><code>for i in thanos-store-cluster1 thanos-store-cluster2 thanos-store-cluster3 ; do\n    kubectl rollout restart sts $i -n thanos\ndone\n</code></pre></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#query-and-query-frontend-","title":"query-and-query-frontend-","text":"<ul> <li>In query deployment yaml file, all endpoints we needed in this POC will be added to container\u2019s args, including sidecar, receive, store, etc.</li> <li>In query frontend service yaml file, it will bind domain name</li> <li>In query frontend deployment yaml file, using split parameters to improve query performance  <pre><code>        - --query-range.split-interval=1h\n        - --labels.split-interval=1h\n</code></pre></li> <li>deploy <pre><code>kubectl apply -f query/\n</code></pre></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#receive","title":"receive","text":"<ul> <li>use existed s3 config file in secret</li> <li>deploy 2 receives, one for ekscluster2 and another for ekscluster3 <pre><code>kubectl apply -f receive/\n</code></pre></li> <li>create irsa in thanos namespace for receive (git/git-mkdocs/CLI/linux/eksctl) <pre><code>for SA_NAME in thanos-receive-cluster2 thanos-receive-cluster3 ; do\n    create-iamserviceaccount -s ${SA_NAME} -c ${CLUSTER_NAME_1} -n thanos -r 0\ndone\n</code></pre></li> <li>rollout 2 receives (or using k9s to delete pod and make it restart to use new SA) <pre><code>for i in thanos-receive-cluster2 thanos-receive-cluster3 ; do\n    kubectl rollout restart sts ${i} -n thanos\ndone\n</code></pre></li> <li>(option) get receive svc domain name to: <ul> <li>add it to prometheus remote write in ekscluster2 and ekscluster3 (../EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos.zh)</li> <li>add it to query deployment yaml (../EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos.zh)</li> </ul> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#grafana","title":"Grafana","text":"<p>\u4f7f\u7528 Prometheus Operator \u90e8\u7f72 Grafana \u5c06\u81ea\u5e26\u4e00\u4e9b\u5e38\u7528\u7684 Dashboard\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u7b80\u5355\u914d\u7f6e\u5b9e\u73b0\u591a\u96c6\u7fa4\u6570\u636e\u67e5\u8be2\u3002\u6b64\u5904\u63d0\u4f9b\u4e00\u4e2a sample \u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u4f7f\u7528\u3002</p>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#query-history-metrics","title":"query history metrics","text":"<ul> <li>\u8bbf\u95ee Grafana \u57df\u540d\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>thanos-example/POC/prometheus/values-ekscluster1-1.yaml</code> \u4e2d\u67e5\u770b</li> <li>\u4fee\u6539 Grafana \u9ed8\u8ba4\u5bc6\u7801 </li> <li>\u6dfb\u52a0 Thanos Query Frontend \u4f5c\u4e3a Prometheus  \u7c7b\u578b\u7684\u6570\u636e\u6e90<ul> <li>\u76f4\u63a5\u4f7f\u7528 Kubernetes \u5185\u90e8\u57df\u540d: http://thanos-query-frontend.thanos.svc.cluster.local:9090</li> <li>\u6216\u8005\u4e0a\u6587\u63d0\u5230\u7684 Query Frontend Service \u7ed1\u5b9a\u7684\u57df\u540d\u8bbf\u95ee</li> </ul> </li> <li>go this dashboard <code>Kubernetes / Networking / Namespace (Pods)</code> </li> <li>we have history data, but no latest 2 hour metrics</li> <li>go to query deployment to add thanos sidecar svc (<code>xxx-kub-thanos-external</code>) to endpoint list with port <code>10901</code></li> <li>query again from grafana, we will get full metrics</li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#query-by-label-cluster-prefer","title":"query by label cluster (prefer)","text":"<ul> <li>modify existed variable to use cluster label<ul> <li>no need to change dashboard definitions  </li> </ul> </li> <li>we already label data in prometheus yaml and receive yaml with <code>cluster=my_cluster_name</code></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#query-by-externallabels-alternative","title":"query by externalLabels (alternative)","text":"<ul> <li>custom dashboard </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#others","title":"others","text":"<ul> <li>\u5237\u65b0 receive \u6570\u636e\u65f6\u6296\u52a8\u4e25\u91cd<ul> <li>\u68c0\u67e5\u662f\u5426\u591a\u526f\u672c receive sts\uff0c\u4e14\u672a\u505a\u6570\u636e replica</li> </ul> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#thanos-frontend","title":"thanos frontend","text":"<ul> <li>open svc of thanos frontend: <code>thanos-query-frontend.${DOMAIN_NAME}</code><ul> <li>min time in receive table: means prometheus remote write has valid and data has been received by thanos receive</li> <li>min time in sidecar table: data in thanos local before duration, 2 hr will write data from WAL to duration, if &lt; 2hrs \u201c-\u201d will display. if over 2hrs, oldest data in local will be display</li> <li>min time in store table: data has been store to s3, check labelset to identify data was written by receive or sidecar</li> </ul> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#refer","title":"refer","text":"","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#prometheus-tsdb-block-duration","title":"prometheus tsdb block duration","text":"<ul> <li>change block-duration, will cause prometheus statefulset cannot be start<ul> <li>https://github.com/prometheus-operator/prometheus-operator/issues/4414 <pre><code>  prometheusSpec:\n    additionalArgs: \n    - name: storage.tsdb.min-block-duration\n      value: 30m\n    - name: storage.tsdb.max-block-duration\n      value: 30m\n</code></pre></li> </ul> </li> <li>if using Thanos sidecar, <code>max-block-duration</code> will be <code>2h</code></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#samples","title":"samples","text":"","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#thanos-config-sample-in-this-poc","title":"thanos config sample in this POC","text":"<ul> <li>https://github.com/panlm/thanos-example</li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#grafana-ingress-with-alb-sample","title":"grafana ingress with alb sample","text":"<ul> <li><code>DOMAIN_NAME</code> should be <code>environment_name.hosted_zone_name</code>, for example <code>thanos.eks1217.aws.panlm.xyz</code> <pre><code>grafana:\n  enabled: true\n  deploymentStrategy:\n    type: Recreate\n  service:\n    type: NodePort\n  ingress:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: alb\n      alb.ingress.kubernetes.io/scheme: internet-facing\n    hosts:\n      - grafana-${DOMAIN_NAME%%.*}.${DOMAIN_NAME}\n</code></pre></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#grafana-ingress-with-nginx-sample","title":"grafana ingress with nginx sample","text":"<pre><code>envsubst &gt;${TMP}-1.yaml &lt;&lt;-EOF\ngrafana:\n  deploymentStrategy:\n    type: Recreate\n  ingress:\n    enabled: true\n    annotations:\n      kubernetes.io/ingress.class: nginx\n      cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\n    hosts:\n\n      - grafana.${DOMAIN_NAME}\n    tls:\n      - secretName: grafana.${DOMAIN_NAME}\n        hosts:\n          - grafana.${DOMAIN_NAME}\n  persistence:\n    enabled: true\n    storageClassName: gp2\n    accessModes:\n      - ReadWriteOnce\n    size: 1Gi\nprometheus:\n  prometheusSpec:\n    replicas: 2\n    retention: 12h\n    retentionSize: \"10GB\"\n    ruleSelectorNilUsesHelmValues: false\n    serviceMonitorSelectorNilUsesHelmValues: false\n    podMonitorSelectorNilUsesHelmValues: false\n    storageSpec:\n      volumeClaimTemplate:\n        spec:\n          storageClassName: gp2\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 10Gi\nEOF\n</code></pre>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#thanos-ingress-with-nginx-sample","title":"thanos ingress with nginx sample","text":"<pre><code># enable prometheus with thanos\nenvsubst &gt;${TMP##*.}-1-1.yaml &lt;&lt;-EOF\nprometheus:\n  thanosService:\n    enabled: true\n  thanosServiceMonitor:\n    enabled: true\n  thanosServiceExternal:\n    enabled: true\n    type: LoadBalancer\n  thanosIngress:\n    enabled: true\n    ingressClassName: nginx\n    hosts: \n\n    - thanos-gateway.${DOMAIN_NAME}\n    paths: []\n    # - /\n    pathType: ImplementationSpecific\n    tls: \n    - secretName: thanos-gateway-tls\n      hosts:\n      - thanos-gateway.${DOMAIN_NAME}\n  prometheusSpec:\n    thanos: \n      objectStorageConfig:\n        existingSecret: {}\n          key: thanos.yaml\n          name: thanos-s3-config\nEOF\n</code></pre>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#enable-sigv4-in-grafana-data-source-for-amp","title":"enable sigv4 in grafana data source for AMP","text":"<ul> <li>add following lines to values.yaml <pre><code>grafana:\n  grafana.ini: \n    auth:\n      sigv4_auth_enabled: true \n</code></pre></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#other-samples","title":"other samples","text":"<ul> <li>https://github.com/thanos-io/kube-thanos/tree/main/examples</li> <li>https://github.com/infracloudio/thanos-receiver-demo/tree/main/manifests</li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#receive-controller","title":"receive controller","text":"<ul> <li>https://github.com/observatorium/thanos-receive-controller/tree/main</li> <li>receive controller does not included in this POC, it could based on header in remote write traffic to forward data to specific receive, refer (https://www.infracloud.io/blogs/multi-tenancy-monitoring-thanos-receiver/)</li> <li>In this POC we use dedicate receive. you could use receive route with receive controller project. refer (https://thanos.io/tip/proposals-accepted/202012-receive-split.md/)</li> <li>download  attachments/POC-prometheus-ha-architect-with-thanos-manually/receive-controller.gz </li> <li>create receive controller in thanos namespace <pre><code>kubectx $c1\nk apply -f receive-controller/\n</code></pre></li> <li>receive controller will generate <code>thanos-receive-generated</code> configmap with endpoint for receive route scenarios, include this file as hashring-config</li> <li>create default s3 config <pre><code>CLUSTER_NAME=default\nNAMESPACE=thanos\n</code></pre></li> </ul> <pre><code>DEPLOY_NAME_1=prom-operator-${CLUSTER_NAME_1}\nNAMESPACE_NAME=monitoring\nkubectl create ns ${NAMESPACE_NAME}\nkubectl create secret generic thanos-s3-config-${CLUSTER_NAME_1} --\nfrom-file=thanos-s3-config-${CLUSTER_NAME_1}=s3-config/thanos-s3-\nconfig-${CLUSTER_NAME_1}.yaml --namespace ${NAMESPACE_NAME}\n</code></pre> <ul> <li>create sa <pre><code>SA_NAME=thanos-receive-default\nCLUSTER_NAME=ekscluster1\ncreate-iamserviceaccount ${SA_NAME} ${CLUSTER_NAME} thanos 1\n</code></pre></li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#todo","title":"todo","text":"<ul> <li>thanos receive router</li> <li>thanos compact component, and crash issue</li> <li>configmap in prometheus </li> <li>store hpa and query hpa<ul> <li>store startup speed for large history data</li> </ul> </li> </ul>","tags":["prometheus"]},{"location":"others/POC-prometheus-ha-architect-with-thanos-manually/#_2","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>https://observability.thomasriley.co.uk/prometheus/using-thanos/high-availability/</li> <li>https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/high-availability.md</li> <li>https://medium.com/@kakashiliu/deploy-prometheus-operator-with-thanos-60210eff172b</li> <li>https://particule.io/en/blog/thanos-monitoring/</li> <li>https://blog.csdn.net/kingu_crimson/article/details/123840099</li> <li>thanos </li> <li>prometheus</li> <li>prometheus</li> <li>https://github.com/terraform-aws-modules/terraform-aws-eks/issues/2009</li> <li>prometheus-agent</li> <li>https://p8s.io/docs/operator/install/</li> </ul>","tags":["prometheus"]},{"location":"others/file-storage-gateway-lab/","title":"Storage File Gateway","text":"","tags":["aws/storage/storage-gateway"]},{"location":"others/file-storage-gateway-lab/#prepare","title":"prepare","text":"<ul> <li>create a cloud9 desktop for this lab</li> <li>ensure you have enough privilege to create resources</li> </ul>","tags":["aws/storage/storage-gateway"]},{"location":"others/file-storage-gateway-lab/#create-s3-bucket","title":"create s3 bucket","text":"<pre><code>AWS_REGION=us-east-1\nBUCKET_NAME=fgwlab-$RANDOM\nPREFIX_NAME=fgw\naws s3 mb s3://${BUCKET_NAME}\naws s3api put-object --bucket ${BUCKET_NAME} \\\n  --key ${PREFIX_NAME}/\n</code></pre>","tags":["aws/storage/storage-gateway"]},{"location":"others/file-storage-gateway-lab/#create-fgw-instance","title":"create fgw instance","text":"<pre><code># ensure this key existed\nKEY_NAME=awskey\n\nIMAGE_ID=$(aws ec2 describe-images --region ${AWS_REGION}  \\\n  --filters Name=name,Values='aws-storage-gateway-*'  \\\n  --query 'Images[*].[ImageId,CreationDate,Name]' --output text \\\n  |sort -k2 -r |head -n 1 |awk '{print $1}')\n# another way to get IMAGE_ID\n# aws ssm get-parameter --name /aws/service/storagegateway/ami/FILE_S3/latest\n\n# cloud 9 subnet\nINST_ID=$(curl http://169.254.169.254/1.0/meta-data/instance-id 2&gt;/dev/null)\nSUBNET_ID=$(aws ec2 describe-instances --instance-ids ${INST_ID} --query 'Reservations[0].Instances[0].SubnetId' --output text)\n\n# create sg\nFGW_SG_NAME=fgw-sg-$RANDOM\nVPC_ID=$(aws ec2 describe-instances --instance-ids ${INST_ID} --query 'Reservations[0].Instances[0].VpcId' --output text)\nFGW_SG_ID=$(aws ec2 create-security-group \\\n  --description ${FGW_SG_NAME} \\\n  --group-name ${FGW_SG_NAME} \\\n  --vpc-id ${VPC_ID} \\\n  --query 'GroupId' --output text )\n# all traffic allowed\naws ec2 authorize-security-group-ingress \\\n  --group-name ${FGW_SG_NAME} \\\n  --protocol -1 \\\n  --port -1 \\\n  --cidr 0.0.0.0/0\n\nFGW_INST_ID=$(aws ec2 run-instances --region ${AWS_REGION} --key-name ${KEY_NAME} \\\n  --image-id ${IMAGE_ID} --instance-type m5.xlarge \\\n  --block-device-mappings 'DeviceName=/dev/sdb,Ebs={VolumeSize=200}' \\\n  --subnet-id ${SUBNET_ID} --security-group-ids ${FGW_SG_ID} \\\n  --query Instances[*].InstanceId --output text )\n\n# wait instance spin up\ntmpfile=/tmp/instance-status-$$\nwhile true ; do\n  aws ec2 describe-instance-status \\\n  --instance-ids ${FGW_INST_ID} |tee ${tmpfile}\n  inst_stat=$(cat $tmpfile |jq -r '.InstanceStatuses[0].InstanceStatus.Status')\n  sys_stat=$(cat $tmpfile |jq -r '.InstanceStatuses[0].SystemStatus.Status')\n  if [[ ${inst_stat} == \"ok\" &amp;&amp;  ${sys_stat} == \"ok\" ]]; then\n    break\n  else\n    sleep 30\n  fi\ndone\n\n# get instance ip\nINST_IP=$(aws ec2 describe-instances --instance-ids ${FGW_INST_ID} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)\nINST_PRIV_IP=$(aws ec2 describe-instances --instance-ids ${FGW_INST_ID} --query 'Reservations[0].Instances[0].PrivateIpAddress' --output text)\n\nACTIVATION_KEY=$(wget \"${INST_IP}/?activationRegion=${AWS_REGION}\" 2&gt;&amp;1 | \\\ngrep -i location | \\\ngrep -oE 'activationKey=[A-Z0-9-]+' | \\\ncut -f2 -d=)\n\nFGW_ARN=$(aws storagegateway activate-gateway \\\n--gateway-name FGW-$RANDOM \\\n--gateway-timezone \"GMT+8:00\" \\\n--gateway-region ${AWS_REGION} \\\n--gateway-type FILE_S3 \\\n--activation-key  ${ACTIVATION_KEY} \\\n--query 'GatewayARN' --output text)\n\n# aws storagegateway list-gateways --query 'Gateways[?GatewayARN==`'${FGW_ARN}'`].GatewayOperationalState' --output text\n\n# HostEnvironment --&gt; EC2\naws storagegateway list-gateways --query 'Gateways[?GatewayARN==`'${FGW_ARN}'`]' --output json\n\nwhile true ; do\n    aws storagegateway describe-gateway-information \\\n    --gateway-arn ${FGW_ARN}\n    if [[ $? -eq 0 ]]; then\n        break\n    else\n        sleep 30\n    fi\ndone\n\nDISK_IDS=$(aws storagegateway list-local-disks \\\n--gateway-arn ${FGW_ARN} \\\n--query 'Disks[*].DiskId' --output text)\n\naws storagegateway add-cache \\\n--gateway-arn ${FGW_ARN} \\\n--disk-ids ${DISK_IDS}\n</code></pre>","tags":["aws/storage/storage-gateway"]},{"location":"others/file-storage-gateway-lab/#create-nfs-share-","title":"create-nfs-share-","text":"<ul> <li> <p>create iam role <pre><code>account_id=$(aws sts get-caller-identity --query \"Account\" --output text)\nfgw_role_name=StorageGatewayBucketAccessRole-$RANDOM.$RANDOM\naws iam create-role --role-name ${fgw_role_name} --assume-role-policy-document '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"storagegateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{\"StringEquals\":{\"aws:SourceAccount\":\"'\"${account_id}\"'\",\"aws:SourceArn\":\"'\"${FGW_ARN}\"'\"}}}]}'\nenvsubst &gt; ${fgw_role_name}-policy.yaml &lt;&lt;-EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"s3:GetAccelerateConfiguration\",\n                \"s3:GetBucketLocation\",\n                \"s3:GetBucketVersioning\",\n                \"s3:ListBucket\",\n                \"s3:ListBucketVersions\",\n                \"s3:ListBucketMultipartUploads\"\n            ],\n            \"Resource\": \"arn:aws:s3:::${BUCKET_NAME}\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:DeleteObjectVersion\",\n                \"s3:GetObject\",\n                \"s3:GetObjectAcl\",\n                \"s3:GetObjectVersion\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\",\n                \"s3:PutObjectAcl\"\n            ],\n            \"Resource\": \"arn:aws:s3:::${BUCKET_NAME}/*\",\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\nEOF\naws iam put-role-policy --role-name ${fgw_role_name} --policy-name ${fgw_role_name}-policy --policy-document \"file://./${fgw_role_name}-policy.yaml\"\nfgw_role_arn=$(aws iam get-role --role-name ${fgw_role_name} --query 'Role.Arn' --output text)\n</code></pre></p> </li> <li> <p>create file share <pre><code># ensure client list is correct\nclient_token=$(echo $RANDOM |md5sum |tr -d ' -')\naws storagegateway create-nfs-file-share \\\n--client-token ${client_token} \\\n--gateway-arn ${FGW_ARN} \\\n--role ${fgw_role_arn} \\\n--location-arn \"arn:aws:s3:::${BUCKET_NAME}/${PREFIX_NAME}/\" \\\n--file-share-name ${BUCKET_NAME}-${PREFIX_NAME} \\\n--client-list \"172.31.0.0/16\" \\\n--cache-attributes \"CacheStaleTimeoutInSeconds=300\" \\\n--squash NoSquash \\\n--bucket-region ${AWS_REGION}\n\nfs_arn=$(aws storagegateway list-file-shares --gateway-arn ${FGW_ARN} \\\n--query 'FileShareInfoList[0].FileShareARN' \\\n--output text)\n\necho \"On Linux:\"\necho \"mount -t nfs -o nolock,hard ${INST_PRIV_IP}:/${BUCKET_NAME}-${PREFIX_NAME} /mnt_point \"\n</code></pre></p> </li> </ul>","tags":["aws/storage/storage-gateway"]},{"location":"others/file-storage-gateway-lab/#more","title":"more","text":"<ul> <li>https://aws.amazon.com/blogs/storage/mounting-amazon-s3-to-an-amazon-ec2-instance-using-a-private-connection-to-s3-file-gateway/</li> <li>using s3 gateway endpoint to enhance security of data transferring<ul> <li>https://aws.amazon.com/blogs/architecture/connect-amazon-s3-file-gateway-using-aws-privatelink-for-amazon-s3/</li> </ul> </li> </ul>","tags":["aws/storage/storage-gateway"]},{"location":"others/github-page-howto/","title":"how to put workshop on github","text":"","tags":["github"]},{"location":"others/github-page-howto/#obsidian-tips","title":"obsidian tips","text":"<ul> <li>obsidian</li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#material-for-mkdocs","title":"Material for mkdocs","text":"<p>https://github.com/squidfunk/mkdocs-material</p>","tags":["github"]},{"location":"others/github-page-howto/#review-local","title":"review local","text":"<pre><code>mkdocs serve\n</code></pre>","tags":["github"]},{"location":"others/github-page-howto/#status-in-front-matter","title":"status in front matter","text":"<ul> <li>get icons: https://pictogrammers.com/library/mdi/</li> <li> <p>copy paste to extra.css</p> </li> <li> <p>emoji and icons, search from here</p> <ul> <li>https://squidfunk.github.io/mkdocs-material/reference/icons-emojis/#using-emojis</li> </ul> </li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#plugins-for-mkdocs","title":"plugins for mkdocs","text":"<ul> <li>https://github.com/mkdocs/catalog</li> <li>For full documentation visit mkdocs.org</li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#enable-discussion","title":"enable discussion","text":"<ul> <li>start from this page (link)</li> <li>generate config file (link)</li> <li>add <code>comment: true</code> to all pages (link)</li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#awesome-pages-plugin","title":"awesome pages plugin","text":"<ul> <li>https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin</li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#highlight-block","title":"highlight block","text":"","tags":["github"]},{"location":"others/github-page-howto/#in-material-for-mkdocs","title":"in material for mkdocs","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/admonitions/ <pre><code>!!! warning \"This is a github note\"\n??? note \"right-click &amp; open-in-new-tab: \"\n</code></pre></li> <li>sample</li> </ul> <p>This is a github note</p>","tags":["github"]},{"location":"others/github-page-howto/#in-hosted-on-github","title":"in hosted on github","text":"<p>[!WARNING]  This is a github note</p> <p>[!IMPORTANT] Crucial information necessary for users to succeed.</p> <p>[!NOTE] Critical content demanding immediate user attention due to potential risks.</p> <p>[!example] </p>","tags":["github"]},{"location":"others/github-page-howto/#remove-custom-domain","title":"remove custom domain","text":"<ul> <li>remove <code>static/CNAME</code> file<ul> <li>this file include line: <code>aws-labs.panlm.xyz</code></li> </ul> </li> <li>remove custom domain from github <code>Pages</code> page</li> <li>rename repo name to <code>git-ghpages</code></li> <li>change in <code>config.toml</code><ul> <li><code>baseURL</code> \u2013&gt; <code>https://panlm.github.io/git-ghpages/</code></li> </ul> </li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#hosted-on-github-page","title":"hosted on github page","text":"<ul> <li>https://gohugo.io/hosting-and-deployment/hosting-on-github/</li> </ul>","tags":["github"]},{"location":"others/github-page-howto/#build-local","title":"build local","text":"<ul> <li>https://aws-samples.github.io/aws-modernization-workshop-sample/20_build/1_setup/</li> </ul> <pre><code>git submodule init\ngit submodule update\n</code></pre>","tags":["github"]},{"location":"others/github-page-howto/#other","title":"other","text":"","tags":["github"]},{"location":"others/global-sso-and-china-aws-accounts/","title":"Using Global SSO to Login China AWS Accounts","text":"<p>\u4f7f\u7528 global sso \u767b\u5f55\u4e2d\u56fd\u533a aws \u8d26\u53f7\uff0c\u540c\u65f6\u5b9e\u73b0\u4f7f\u7528\u547d\u4ee4\u884c\u64cd\u4f5c\u3002</p>","tags":["aws/security/identity-center"]},{"location":"others/global-sso-and-china-aws-accounts/#walkthrough","title":"walkthrough","text":"","tags":["aws/security/identity-center"]},{"location":"others/global-sso-and-china-aws-accounts/#use-identity-center-directory-as-identity-source","title":"use identity center directory as identity source","text":"<ul> <li>create application <code>External AWS Account Application</code> from sso <code>Applications</code> </li> <li> <p>download <code>IAM Identity Center SAML metadata file</code> </p> </li> <li> <p>create identity provider in aws china account </p> </li> <li> <p>create role for <code>SAML 2.0 federation</code> in aws china account, and assign policy to it </p> </li> <li> <p>back to create application page, review application metadata</p> <ul> <li>using <code>https://signin.amazonaws.cn/saml</code></li> <li>original is <code>https://signin.aws.amazon.com/saml</code> </li> </ul> </li> <li> <p>create application</p> </li> <li>edit <code>attribute mappings</code> for this application, ensure following two field existed</li> </ul> Field Value Format <code>https://aws.amazon.com/SAML/Attributes/Role</code> arn:aws:iam::ACCOUNTID:saml-provider/SAMLPROVIDERNAME,arn:aws:iam::ACCOUNTID:role/ROLENAME unspecified <code>https://aws.amazon.com/SAML/Attributes/RoleSessionName</code>  must match [a-zA-Z_0-9+=,.@-]{2,64} unspecified <p></p> <ul> <li>assign user to application and login<ul> <li>find login url from sso dashboard or reset user\u2019s password </li> </ul> </li> </ul>","tags":["aws/security/identity-center"]},{"location":"others/global-sso-and-china-aws-accounts/#use-managed-ad-as-identity-source","title":"use managed AD as identity source","text":"<ul> <li> <p>configure attribute mapping in <code>manage sync</code> in <code>settings</code> </p> </li> <li> <p>others steps are same </p> </li> </ul>","tags":["aws/security/identity-center"]},{"location":"others/global-sso-and-china-aws-accounts/#use-external-idp-as-identity-source","title":"use external IdP as identity source","text":"<ul> <li>todo</li> </ul>","tags":["aws/security/identity-center"]},{"location":"others/global-sso-and-china-aws-accounts/#in-same-organization-user-and-role","title":"in same organization user and role","text":"<ul> <li>in multi-account permissions, choose account, and assign user/group to it, assign permission set to it.</li> <li>assume from CLI <pre><code>assume \nassume --sso --sso-start-url https://xxx.awsapps.com/start \\\n    --sso-region ap-southeast-1 \\\n    --account-id xxx\u00a0\\\n    --role-name AWSAdministratorAccess \\\n    --verbose\n</code></pre></li> </ul>","tags":["aws/security/identity-center"]},{"location":"others/global-sso-and-china-aws-accounts/#refer","title":"refer","text":"<ul> <li>https://static.global.sso.amazonaws.com/app-4a24b6fe5e450fa2/instructions/index.htm</li> <li>https://aws.amazon.com/cn/blogs/china/use-amazon-cloud-technology-single-sign-on-service-for-amazon-cloud-technology-china/</li> <li>https://static.global.sso.amazonaws.com/app-4a24b6fe5e450fa2/instructions/index.htm</li> </ul>","tags":["aws/security/identity-center"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/","title":"create-dashboard-for-instance-cpu-matrics","text":"","tags":["aws/mgmt/cloudwatch"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/#permission","title":"permission","text":"<ul> <li><code>describe-instances</code></li> <li><code>put-dashboard</code></li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/#each-metrics-with-anomaly-detection","title":"each metrics with anomaly detection","text":"<pre><code>#!/bin/bash \n\nif [[ $# -eq 0 ]]; then\n    echo 'Usage: $0 i-xxxx1 i-xxxx2'\n    exit 9\nfi\n\nexport AWS_DEFAULT_REGION=cn-northwest-1\n\naws sts get-caller-identity 2&gt;&amp;1 &gt;/dev/null\nif [[ $? -ne 0 ]]; then\n    export AWSCLI=0\nelse\n    export AWSCLI=1\nfi\n\nDASHBOARD_FILE=dash1.json\nDASHBOARD_FILE_TEMP=dash1-$$.json\n\ncat &gt; ${DASHBOARD_FILE} &lt;&lt;-EOF\n{\n    \"widgets\": [\n    ]\n}\nEOF\n\nTEMPLATE_FILE=temp1.json\necho '\n        {\n            \"type\": \"metric\",\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 8,\n            \"height\": 5,\n            \"properties\": {\n                \"metrics\": [\n                    [ \"AWS/EC2\", \"CPUUtilization\", \"InstanceId\", \"${INSTANCE_ID}\", { \"id\": \"m1\", \"stat\": \"Maximum\" } ],\n                    [ { \"expression\": \"ANOMALY_DETECTION_BAND(m1, 2)\", \"label\": \"${INSTANCE_ID} (${INSTANCE_NAME}) (expected)\", \"id\": \"ad1\", \"color\": \"#95A5A6\", \"region\": \"${AWS_DEFAULT_REGION}\" } ]\n                ],\n                \"view\": \"timeSeries\",\n                \"stacked\": false,\n                \"region\": \"${AWS_DEFAULT_REGION}\",\n                \"title\": \"CPUUtilization-${INSTANCE_NAME}\",\n                \"period\": 300,\n                \"yAxis\": {\n                    \"left\": {\n                        \"min\": 0,\n                        \"max\": 30\n                    }\n                }                \n            }\n        }\n' |base64 &gt; ${TEMPLATE_FILE}.b64\n\nif [[ ${AWSCLI} -eq 1 ]]; then\n    aws ec2 describe-instances &gt; /tmp/all-instances.out\n    INSTANCE_NUMBER=$(cat /tmp/all-instances.out |jq -r '.Reservations | length')\necho \"total instance number: ${INSTANCE_NUMBER}\"\nfi\n\nTMP=/tmp/tmp-$$\nfor i in $@ ; do\n    export INSTANCE_ID=${i}\n    export INSTANCE_NAME=$(cat /tmp/all-instances.out |jq -r '.Reservations[] | select (.Instances[0].InstanceId == \"'\"${INSTANCE_ID}\"'\") | .Instances[] |  (del((.Tags[]|select(.Key!=\"Name\")))|.Tags[]|.Value|tostring)')\n    cat ${TEMPLATE_FILE}.b64 |base64 --decode |envsubst &gt;${TMP}\n    jq --argjson groupInfo \"$(&lt;$TMP)\" '.widgets += [$groupInfo]' ${DASHBOARD_FILE} &gt; ${DASHBOARD_FILE_TEMP}\n    mv ${DASHBOARD_FILE_TEMP} ${DASHBOARD_FILE}\ndone\n\nif [[ ${AWSCLI} -eq 1 ]]; then\n    DASHBOARD_NAME=dash-$(date +%Y%m%d%H%M%S) \n    aws cloudwatch put-dashboard --dashboard-name ${DASHBOARD_NAME} --dashboard-body file://${DASHBOARD_FILE} &gt;/dev/null\n    echo \"please access dashboard: ${DASHBOARD_NAME}\"\nfi\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/#sample","title":"sample","text":"","tags":["aws/mgmt/cloudwatch"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/#all-metrics","title":"all metrics","text":"<pre><code>#!/bin/bash \n\nif [[ $# -eq 0 ]]; then\n    echo 'Usage: $0 i-xxxx1 i-xxxx2'\n    exit 9\nfi\n\nexport AWS_DEFAULT_REGION=cn-north-1\n\naws sts get-caller-identity 2&gt;&amp;1 &gt;/dev/null\nif [[ $? -ne 0 ]]; then\n    export AWSCLI=0\nelse\n    export AWSCLI=1\nfi\n\nDASHBOARD_FILE=dash1.json\nDASHBOARD_FILE_TEMP=dash1-$$.json\n\ncat &gt; ${DASHBOARD_FILE} &lt;&lt;-EOF\n{\n    \"widgets\": [\n        {\n            \"type\": \"metric\",\n            \"x\": 0,\n            \"y\": 0,\n            \"width\": 16,\n            \"height\": 12,\n            \"properties\": {\n                \"metrics\": [\n                ],\n                \"view\": \"timeSeries\",\n                \"stacked\": false,\n                \"region\": \"${AWS_DEFAULT_REGION}\",\n                \"title\": \"CPUUtilization\",\n                \"period\": 300\n            }\n        }\n    ]\n}\nEOF\n\nTEMPLATE_FILE=temp1.json\necho '\n                    [ \"AWS/EC2\", \"CPUUtilization\", \"InstanceId\", \"${INSTANCE_ID}\", { \"id\": \"m${num}\", \"stat\": \"Maximum\" } ]\n' |base64 &gt; ${TEMPLATE_FILE}.b64\n\nif [[ ${AWSCLI} -eq 1 ]]; then\n    aws ec2 describe-instances &gt; /tmp/all-instances.out\n    INSTANCE_NUMBER=$(cat /tmp/all-instances.out |jq -r '.Reservations | length')\necho \"total instance number: ${INSTANCE_NUMBER}\"\nfi\n\nexport num=1\nTMP=/tmp/tmp-$$\nfor i in $@ ; do\n    export INSTANCE_ID=${i}\n    export INSTANCE_NAME=$(cat /tmp/all-instances.out |jq -r '.Reservations[] | select (.Instances[0].InstanceId == \"'\"${INSTANCE_ID}\"'\") | .Instances[] |  (del((.Tags[]|select(.Key!=\"Name\")))|.Tags[]|.Value|tostring)')\n    cat ${TEMPLATE_FILE}.b64 |base64 --decode |envsubst &gt;${TMP}\n    jq --argjson groupInfo \"$(&lt;$TMP)\" '.widgets[0].properties.metrics += [$groupInfo]' ${DASHBOARD_FILE} &gt; ${DASHBOARD_FILE_TEMP}\n    mv ${DASHBOARD_FILE_TEMP} ${DASHBOARD_FILE}\n    export num=$((num+1))\ndone\n\nexit\n\nif [[ ${AWSCLI} -eq 1 ]]; then\n    DASHBOARD_NAME=dash-$(date +%Y%m%d%H%M%S) \n    aws cloudwatch put-dashboard --dashboard-name ${DASHBOARD_NAME} --dashboard-body file://${DASHBOARD_FILE} &gt;/dev/null\n    echo \"please access dashboard: ${DASHBOARD_NAME}\"\nfi\n</code></pre>","tags":["aws/mgmt/cloudwatch"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/#sample_1","title":"sample","text":"<ul> <li>\u4e8c\u5341\u4e2a\u6307\u6807\u540e\uff0c\u989c\u8272\u5f00\u59cb\u91cd\u590d</li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"others/lab-create-cloudwatch-dashboard-cpu-metric/#followup","title":"followup","text":"<ul> <li>aws-amg-managed-grafana</li> </ul>","tags":["aws/mgmt/cloudwatch"]},{"location":"others/obsidian/","title":"Obsidian Tips","text":"<p>\u6587\u672c\u7b14\u8bb0 \u7b2c\u4e8c\u5927\u8111 https://obsidian.md/</p>","tags":["obsidian"]},{"location":"others/obsidian/#useful-plugins","title":"useful plugins","text":"","tags":["obsidian"]},{"location":"others/obsidian/#obsidian-attachment-management","title":"Obsidian Attachment Management","text":"<p>https://github.com/trganda/obsidian-attachment-management</p> <p>\u63a8\u8350\u914d\u7f6e</p> <ul> <li>attachment \u548c\u6587\u6863\u5728\u540c\u4e00\u7236\u8def\u5f84\u4e0b\uff0c\u4f46\u662f\u72ec\u7acb\u76ee\u5f55</li> <li>\u6587\u6863\u56fe\u7247\u4ee5\u6587\u4ef6\u540d\u547d\u540d</li> <li>\u4e0d\u8981\u5305\u542b\u975e\u56fe\u7247\u6269\u5c55\u540d\uff0c\u975e\u56fe\u7247\u6269\u5c55\u540d\u7684\u6587\u4ef6\u5c06\u4fdd\u5b58\u5728\u7cfb\u7edf attachment \u76ee\u5f55\u4e0b</li> <li>exclude \u7279\u5b9a\u76ee\u5f55\uff0c\u6bd4\u5982 template </li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#colorful-note-borders","title":"Colorful Note Borders","text":"<p>https://github.com/rusi/obsidian-colorful-note-borders \u589e\u52a0\u7b14\u8bb0\u8fb9\u6846\u65b9\u4fbf\u533a\u522b\u654f\u611f\u7b14\u8bb0\u548c\u5176\u4ed6\u7b14\u8bb0\uff0c\u5f53\u4f60\u7ecf\u5e38\u8bb2\u7b14\u8bb0 publish \u5230 github \u4e0a\u65f6\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u81ea\u5df1\u7684\u63d0\u9192</p> <p>\u63a8\u8350\u914d\u7f6e</p> <ul> <li>git \u8def\u5f84\u4e0b\u7b14\u8bb0\u6dfb\u52a0\u7ea2\u8272\u6846\uff0c\u63d0\u9192\u8fd9\u4e2a\u7b14\u8bb0\u5c06\u6dfb\u52a0\u5230 github \u4e0a</li> <li>gitlab \u8def\u5f84\u4e0b\u7b14\u8bb0\u6dfb\u52a0\u7eff\u8272\u6846\uff0c\u63d0\u9192\u8fd9\u4e2a\u7b14\u8bb0\u5c06\u6dfb\u52a0\u5230\u516c\u53f8\u5185\u7f51 gitlab \u4e0a </li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#file-path-to-uri","title":"File path to URI","text":"<p>https://github.com/MichalBures/obsidian-file-path-to-uri</p> <p>hold <code>ctl</code> click filename, choose <code>copy</code>, paste in obsidian \u76f4\u63a5\u5c06\u6587\u4ef6\u4ee5\u9644\u4ef6\u5f62\u5f0f\u63d2\u5165 obsidian\uff0c\u7531\u4e8e\u9644\u4ef6\u540d\u4e0d\u662f\u56fe\u7247\uff0c\u56e0\u6b64\u4f1a\u4fdd\u7559\u5728\u7cfb\u7edf\u7684 attachment \u76ee\u5f55\u4e0b</p> <p>right click file, then hold <code>option</code>, click <code>copy xxx as Pathname</code> (link), and using this plugin <code>File path to URI</code>,  \u76f4\u63a5\u5c06\u6587\u4ef6\u4ee5\u94fe\u63a5\u5f62\u5f0f\u63d2\u5165 obsidian\uff0c\u76f4\u63a5\u53ef\u4ee5\u70b9\u51fb\u540e\uff0c\u7528\u7b2c\u4e09\u65b9\u6253\u5f00</p>","tags":["obsidian"]},{"location":"others/obsidian/#tasks-plugin","title":"Tasks Plugin","text":"<ul> <li>https://github.com/obsidian-tasks-group/obsidian-tasks/discussions/442#discussioncomment-4215151</li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#text-format","title":"Text Format","text":"<p>https://github.com/Benature/obsidian-text-format</p> <p>\u5feb\u901f\u5207\u6362\u6587\u672c\u683c\u5f0f\uff0c\u5c24\u5176\u662f\u53ef\u4ee5\u5207\u6362 <code>title with space</code> \u5230 <code>title-with-space</code> (slugify \u683c\u5f0f)\uff0c\u65b9\u4fbf\u8de8\u6587\u6863\u5f15\u7528\uff0c\u4ee5\u53ca\u751f\u6210\u66f4\u53cb\u597d\u7684 github URL</p>","tags":["obsidian"]},{"location":"others/obsidian/#text-expander","title":"Text expander","text":"<p>https://github.com/mrjackphil/obsidian-text-expand</p> <p>\u8de8\u6587\u6863\u5e94\u7528\uff0c\u4e3b\u8981\u7528\u4e8e\uff1a</p> <ul> <li>\u5728\u5355\u4e2a\u9879\u76ee\u6587\u6863\u4e2d\u8bb0\u5f55 weekly report</li> <li>\u5728\u5468\u62a5\u6587\u6863\u4e2d\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22\u5e76\u63d0\u53d6\u672c\u5468\u66f4\u65b0\u5230\u5f53\u524d\u4f4d\u7f6e</li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#highlightr-plugin","title":"Highlightr Plugin","text":"<p>https://github.com/chetachiezikeuzor/Highlightr-Plugin</p> <p>\u901a\u8fc7\u4e0d\u540c\u989c\u8272\u9ad8\u4eae\u6587\u672c</p>","tags":["obsidian"]},{"location":"others/obsidian/#share-notes","title":"share notes","text":"<p>https://docs.note.sx/running-your-own-server</p>","tags":["obsidian"]},{"location":"others/obsidian/#php","title":"php","text":"<p>https://github.com/note-sx/server</p> <ul> <li>request apikey first, and put apikey to data.json <pre><code>curl -L 'https://xxxxxx.aws.panlm.click/v1/account/get-key?id=12341234'\n</code></pre></li> <li>shared notes will be in <code>db</code> folder, this folder will be keep in folder which run <code>docker-compose up -d</code> from</li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#python","title":"python","text":"<p>https://github.com/tannercollin/sharenote-py</p> <ul> <li> <p>sample settings <pre><code>{\n  \"server\": \"https://xxxxx.aws.panlm.click\",\n  \"uid\": \"13241234\",\n  \"apiKey\": \"ba29b4e8fc\",\n  \"yamlField\": \"share\",\n  \"noteWidth\": \"100\",\n  \"theme\": \"Minimal\",\n  \"themeMode\": 0,\n  \"titleSource\": 0,\n  \"removeYaml\": true,\n  \"removeBacklinksFooter\": true,\n  \"expiry\": \"2 days\",\n  \"clipboard\": true,\n  \"shareUnencrypted\": true,\n  \"authRedirect\": \"share\",\n  \"debug\": 0\n}\n</code></pre></p> </li> <li> <p>shared notes will be in <code>static</code> folder</p> </li> <li>seems not stable when upload same note twice </li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#others","title":"others","text":"<ul> <li>Quiet Outline</li> <li>dataview doc</li> <li>Better PDF Plugin</li> <li>admonition</li> <li>ob-export-util-obsidianhtml</li> <li>ob-quip-upload</li> </ul>","tags":["obsidian"]},{"location":"others/obsidian/#tips","title":"Tips","text":"","tags":["obsidian"]},{"location":"others/obsidian/#files-and-links","title":"files and links","text":"","tags":["obsidian"]},{"location":"others/obsidian/#input-emoji","title":"input emoji","text":"<ul> <li>press Control + Command + SPACE</li> </ul>","tags":["obsidian"]},{"location":"others/quick-build-brconnector/","title":"Quick Deploy BRConnector using Cloudformation","text":"<p>https://github.com/aws-samples/sample-connector-for-bedrock/blob/main/cloudformation/README.md</p>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#todo","title":"TODO","text":"<p>- enhance security: control cloudfront access lambda url only using prefix list: com.amazonaws.global.cloudfront.origin-facing  </p>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#supported-region","title":"Supported Region","text":"<p>Cloudformation template are verified in following regions:</p> <ul> <li>us-east-1</li> <li>us-west-2</li> </ul>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#prerequisites","title":"Prerequisites","text":"<p>Enable Claude 3 Sonnet or Haiku in your region - If you are new to using Anthropic models, go to the\u00a0Amazon Bedrock console\u00a0and choose\u00a0Model access\u00a0on the bottom left pane. Request access separately for Claude 3 Sonnet or Haiku.</p>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#components","title":"Components","text":"<p>Following key components will be included in this Cloudformation template: </p> <ul> <li>Cloudfront</li> <li>BRConnector on Lambda or EC2</li> <li>RDS PostgreSQL or PostgreSQL container on EC2</li> <li>ECR with pull through cache enabled</li> </ul>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#deploy-guide","title":"Deploy Guide","text":"<ul> <li>Download quick-build-brconnector.yaml and upload to Cloudformation console or click this button to launch directly</li> </ul> <ul> <li>VPC parameters<ul> <li>Choose to create a new VPC or a existing VPC </li> <li>Choose one PUBLIC subnet for EC2 and two PRIVATE subnets for Lambda and RDS (subnet group need 2 AZ at least)</li> </ul> </li> </ul> <ul> <li>Compute parameters<ul> <li>Choose ComputeType for BRConnector, Lambda or EC2</li> <li>For EC2 settings<ul> <li>Now only support Amazon Linux 2023</li> <li>You could choose to create PostgreSQL as container in same EC2 (<code>StandaloneDB</code> to false), or create standalone RDS PostgreSQL as backend (<code>StandaloneDB</code> to true)</li> </ul> </li> <li>For Lambda settings<ul> <li>PUBLIC Function URL will be used. Please ensure this security setting is acceptable</li> <li>Define your private repository name prefix string</li> <li>Always create RDS PostgreSQL (<code>StandaloneDB</code> to true)</li> </ul> </li> </ul> </li> </ul> <ul> <li>PostgreSQL parameters<ul> <li>Default PostgreSQL password is <code>mysecretpassword</code></li> <li>If you choose <code>StandaloneDB</code> to false, PostgreSQL will running on EC2 as container. RDS PostgreSQL will be create if this option is true.</li> <li>Keep others as default</li> </ul> </li> </ul> <ul> <li>Debugging parameters<ul> <li>If you choose Lambda as ComputeType, you could choose to delete EC2 after all resources deploy successfully. This EC2 is used for compiling and building BRConnector container temporarily. </li> <li>Don\u2019t delete EC2 if you choose EC2 as ComputeType</li> <li>If you set <code>true</code> to AutoUpdateBRConnector, one script will be add to codebuild and scheduled everyday</li> </ul> </li> </ul> <ul> <li>Until deploy successfully, go to output page and copy Cloudfront URL and first user key to your bedrock client settings page.</li> </ul> <ul> <li>Also you could connect to <code>BRConnector</code> EC2 instance with SSM Session Manager (docs)</li> </ul>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#update-brconnector","title":"Update BRConnector","text":"","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#ecr-with-pull-through-cache-enabled","title":"ECR with pull through cache enabled","text":"<ul> <li>Check your ECR settings, if has rules in pull through cache page, you have enabled this feature to update ECR image with upstream repo automatically.</li> <li>Go to codebuild page, one project will be triggered to build regularly to update your lambda image </li> </ul>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#ecr-without-pull-through-cache-enabled","title":"ECR without pull through cache enabled","text":"<ul> <li>Currently, we use ECR pull through cache to update ECR image with upstream automatically</li> <li> <p>following this script to update image manually if you do not enable ECR pull through cache <pre><code>export AWS_DEFAULT_REGION=us-west-2\nexport ACCOUNT_ID=123456789012\nexport PrivateECRRepository=your_private_repo_name\n\naws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\n\n# pull/tag/push arm64 image for lambda\ndocker pull --platform=linux/arm64 cloudbeer/sample-connector-for-bedrock-lambda\ndocker tag cloudbeer/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64\ndocker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64\n\n# pull/tag/push amd64 image for lambda\ndocker pull --platform=linux/amd64 cloudbeer/sample-connector-for-bedrock-lambda\ndocker tag cloudbeer/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\ndocker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\n\n# create/push manifest file\ndocker manifest create ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64 --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\ndocker manifest annotate ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64 --os linux --arch arm64\ndocker manifest annotate ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64 --os linux --arch amd64\ndocker manifest push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest\n</code></pre></p> </li> <li> <p>update lambda image with correct architecture</p> </li> <li>or login to ec2 to update local image and restart brconnector container</li> </ul>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/quick-build-brconnector/#migrating-to-new-rds-postgresql-database","title":"Migrating to new RDS PostgreSQL database","text":"<p>working \u2026</p>","tags":["aws/mgmt/cloudformation","aws/compute/ec2","aws/network/cloudfront"]},{"location":"others/rescue-ec2-instance/","title":"Rescue EC2 Instance","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/ec2-instance-boot-issues/</li> </ul>","tags":["aws/compute/ec2"]},{"location":"others/rescue-ec2-instance/#ssh-to-rescue","title":"ssh to rescue","text":"<pre><code>sudo su -\n\nlsblk\nrescuedev=/dev/xvdf1\n\nrescuemnt=/mnt\nmkdir -p $rescuemnt\nmount $rescuedev $rescuemnt\nfor i in proc sys dev run; do mount --bind /$i $rescuemnt/$i ; done\nchroot $rescuemnt\n</code></pre> <ul> <li>refer: ../CLI/linux/linux-cmd</li> </ul>","tags":["aws/compute/ec2"]},{"location":"others/rescue-ec2-instance/#umount","title":"umount","text":"<pre><code>exit\n\numount $rescuemnt/{proc,sys,dev,run,}\n</code></pre>","tags":["aws/compute/ec2"]},{"location":"others/rescue-ec2-instance/#refer","title":"refer","text":"<p>automation runbook</p> <ul> <li>https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-ec2rescue.html</li> </ul>","tags":["aws/compute/ec2"]},{"location":"others/script-api-resource-method/","title":"script-api-resource-method","text":"<p>This pages has been obseleted.</p> <p>newest version is here</p>","tags":["aws/serverless/api-gateway"]},{"location":"others/script-api-resource-method/#script-api-resource-method","title":"script-api-resource-method","text":"<ul> <li>\u6bcf\u4e2a api \u7684\u6bcf\u4e2a resource \u7684\u6bcf\u4e2a method \u90fd\u9700\u8981\u5355\u72ec\u901a\u8fc7\u547d\u4ee4\u884c\u542f\u7528\u201ctlsConfig/insecureSkipVerification\u201d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u811a\u672c\u7b80\u5316\u5de5\u4f5c</li> </ul> <pre><code>#!/bin/bash\n\nif [[ $# -ne 1 ]]; then\n  echo \"$0 API_ID\"\n  exit 99\nfi\n\nexport AWS_PAGER=\"\"\n\nAPI_ID=$1\n\nRESOURCE_FILE=/tmp/${API_ID}.json\naws apigateway get-resources --rest-api-id ${API_ID} &gt;${RESOURCE_FILE}\nif [[ $? -ne 0 ]]; then\n  echo \"api id error\"\n  exit 99\nfi\n\n# get resource ids\nRESOURCE_ID=$(cat ${RESOURCE_FILE} |jq -r '.items[].id' |xargs)\nfor i in ${RESOURCE_ID}; do\n  # get method\n  METHOD=$(cat ${RESOURCE_FILE} |jq -r '.items[] | select (.id==\"'$i'\") | .resourceMethods|keys[]' |xargs)\n  for j in ${METHOD}; do\n    METHOD_FILE=${API_ID}-$i-$j.json\n    # save all resource/method json\n    aws apigateway get-method --rest-api-id ${API_ID} --resource-id $i --http-method $j &gt; ${METHOD_FILE}\n    # if file has specific string, print aws cli to enable tlsConfig\n    egrep -ql 'connectionType.*VPC_LINK' ${METHOD_FILE}\n    if [[ $? -eq 0 ]]; then\n      echo \"aws apigateway update-integration --rest-api-id ${API_ID} --resource-id $i --http-method $j --patch-operations \\\"op='replace',path='/tlsConfig/insecureSkipVerification',value=true\\\"\"\n    fi\n  done\ndone\n</code></pre>","tags":["aws/serverless/api-gateway"]},{"location":"others/script-api-resource-method/#refer","title":"refer","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/api-gateway-ssl-certificate-errors/</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"others/script-convert-mp3-to-text/","title":"script-convert-mp3-to-text","text":"<p>i wrote this script several years ago. I have chance to use it in real life today and update to here</p>","tags":["aws/aiml/transcribe","aws/cmd"]},{"location":"others/script-convert-mp3-to-text/#updated-version","title":"updated version","text":"<ul> <li>ensure you have export the <code>AWS_DEFAULT_REGION</code></li> <li>download (convert-mp3-to-text.sh and conv-srt.py) <pre><code>#!/bin/bash\n# \n\nOPTIND=1\nOPTSTRING=\"h?f:\"\nfilename=\"\"\nwhile getopts ${OPTSTRING} opt; do\n    case \"${opt}\" in\n        f) filename=${OPTARG} ;;\n        h|\\?) \n            echo \"format: $0 -f filename.mp3\"\n            return 9\n        ;;\n    esac\ndone\n: ${filename:?Missing -f}\n\nstring=`TZ=EAT-8 date +%Y%m%d%H%M%S`\nmp3file=mp3-${string}.mp3\njobname=job-${string}\ntranscriptfile=${filename%.*}-${string}.txt\nsrtfile=${filename%.*}-${string}.en.srt\nbucket_name=temp-${string}-$(uuidgen |tr 'A-Z' 'a-z')\n\naws s3 mb s3://${bucket_name}\nif [[ $? -ne 0 ]]; then\n  echo \"create bucket failed\"\nfi\n\naws s3 cp $filename s3://${bucket_name}/$mp3file\n#aws transcribe start-transcription-job --transcription-job-name $jobname \\\n# --language-code en-US --media MediaFileUri=s3://$bucket_name/$mp3file\naws transcribe start-transcription-job --transcription-job-name $jobname \\\n  --identify-language \\\n  --media MediaFileUri=s3://$bucket_name/$mp3file\n\nif [[ $? -ne 0 ]]; then\n  exit \nfi\n\noutput=/tmp/$$.output\necho \"status file: $output\"\nwhile true ; do\n  aws transcribe get-transcription-job --transcription-job-name $jobname &gt; $output\n  status=$(cat $output |jq -r '.TranscriptionJob.TranscriptionJobStatus')\n  if [[ $status == \"COMPLETED\" ]]; then\n    echo\n    break\n  else\n    echo -e '.\\c'\n  fi\n  sleep 60\ndone\n\ncat $output |jq -r '.TranscriptionJob.Transcript.TranscriptFileUri' |xargs -J {} wget -O $output.wget '{}'\ncat $output.wget |jq -r '.results.transcripts[0].transcript' &gt; $transcriptfile\nif [[ -f ./conv-srt.py ]]; then\n  python3 ./conv-srt.py $output.wget &gt; $srtfile\nfi\n\n#clean\naws s3 rm s3://$bucket_name/$mp3file\n</code></pre></li> </ul>","tags":["aws/aiml/transcribe","aws/cmd"]},{"location":"others/script-convert-mp3-to-text/#refer","title":"refer","text":"<ul> <li>https://github.com/panlm/NTNX/blob/master/scripts/translate/speechtext-aws.sh</li> </ul>","tags":["aws/aiml/transcribe","aws/cmd"]},{"location":"others/self-signed-certificates/","title":"self-signed-certificates","text":"","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#1-has-certificate-chain","title":"1 has certificate chain","text":"","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#11-has-certificate-chain-with-intermediate","title":"1.1 has certificate chain (with intermediate)","text":"<ul> <li>works for api gateway and alb</li> <li>http endpoint in integration request need this kind certificate, and also set <code>insecureSkipVerification</code> to <code>true</code></li> </ul> <pre><code>mkdir myrootca\ncd myrootca/\ngit clone https://github.com/OpenVPN/easy-rsa.git\n# create root ca and no password\n./easy-rsa/easyrsa3/easyrsa init-pki\n./easy-rsa/easyrsa3/easyrsa build-ca nopass\ncd ..\n</code></pre> <pre><code>mkdir myinterca\ncd myinterca/\nln -sf ../myrootca/easy-rsa\n# create intermedia ca and no password\n./easy-rsa/easyrsa3/easyrsa init-pki\n./easy-rsa/easyrsa3/easyrsa build-ca subca nopass\n\n# sign intermedia ca\ncd ../myrootca/\n./easy-rsa/easyrsa3/easyrsa import-req ../myinterca/pki/reqs/ca.req myinterca\n./easy-rsa/easyrsa3/easyrsa sign-req ca myinterca\ncp -i pki/issued/myinterca.crt ../myinterca/pki/ca.crt\ncd ..\n</code></pre> <pre><code>mkdir mycert\ncd mycert\nln -sf ../myrootca/easy-rsa/\n# create certificate req and no password\n./easy-rsa/easyrsa3/easyrsa init-pki\n./easy-rsa/easyrsa3/easyrsa gen-req mycert nopass\n# Common Name --&gt; poc.aws.panlm.xyz\n\n# sign certificate\ncd ../myinterca/\n./easy-rsa/easyrsa3/easyrsa import-req ../mycert/pki/reqs/mycert.req mycert\n./easy-rsa/easyrsa3/easyrsa sign-req server mycert\ncp ./pki/issued/mycert.crt ../mycert/\ncd ..\n</code></pre> <pre><code>cd mycert\nopenssl x509 -inform PEM -in mycert.crt &gt;mycert.pem\nopenssl rsa -in ./pki/private/mycert.key &gt;mycert-key.pem\nopenssl x509 -inform PEM -in ../myinterca/pki/ca.crt &gt;mycert-chain-interca.pem\nopenssl x509 -inform PEM -in ../myrootca/pki/ca.crt &gt;mycert-chain-root.pem\n# first pem is certificate body \n# second pem is certificate private key\n# rest of pems are certificate chain (last one should be root ca)\n</code></pre>","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#refer","title":"refer","text":"<ul> <li>https://wavecn.com/content.php?id=334</li> <li>https://docs.aws.amazon.com/acm/latest/userguide/import-certificate-format.html</li> </ul>","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#12-has-certificate-chain-root-only","title":"1.2 has certificate chain (root only)","text":"<ul> <li>works for api gateway and alb</li> <li>http endpoint in integration request need this kind certificate, and also set <code>insecureSkipVerification</code> to <code>true</code></li> </ul> <pre><code>mkdir mycert\ncd mycert\ngit clone https://github.com/OpenVPN/easy-rsa.git\n\n# create root ca and no password\n./easy-rsa/easyrsa3/easyrsa init-pki\n./easy-rsa/easyrsa3/easyrsa build-ca nopass\n# return directly\n\n# create cert req\nopenssl genrsa -out my-server.key\nopenssl req -new -key my-server.key -out my-server.req\n# Common Name --&gt; *.aws.panlm.xyz\n# display. if you want to modify, check the first link below\nopenssl req -in my-server.req -noout -subject\n\n# sign cert\n./easy-rsa/easyrsa3/easyrsa import-req my-server.req my-server\n./easy-rsa/easyrsa3/easyrsa sign-req server my-server\n# need root ca password\n# input YES\n\n# convert to pem\nopenssl x509 -inform PEM -in pki/issued/my-server.crt &gt;my-server.pem\nopenssl rsa -in my-server.key  &gt; my-server-key.pem\nopenssl x509 -inform PEM -in pki/ca.crt &gt;my-server-chain.pem\n# 3 pems for certificate body / certificate private key / certificate chain\n</code></pre>","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#refer_1","title":"refer","text":"<ul> <li>How To Set Up and Configure a Certificate Authority (CA) On Ubuntu 20.04 | DigitalOcean</li> <li>https://github.com/OpenVPN/easy-rsa/blob/master/README.quickstart.md</li> </ul>","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#2-no-certificate-chain-","title":"2-no-certificate-chain-","text":"<ul> <li>works for alb, not for api gateway</li> </ul> <ol> <li> <p>create self-signed certificate <pre><code>openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.crt\n\n# ... need input Common Name at least\n\nopenssl rsa -in privateKey.key -check\nopenssl x509 -in certificate.crt -text -noout\nopenssl rsa -in privateKey.key -text &gt; private.pem\nopenssl x509 -inform PEM -in certificate.crt &gt; public.pem\n</code></pre></p> </li> <li> <p>import certificate (2 pem files) to ACM in your region</p> </li> <li>add following to ingress yaml and apply it <pre><code>alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\": 443}]'\nalb.ingress.kubernetes.io/ssl-redirect: '443'\nalb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:xxxxxx:certificate/xxxxxx\n</code></pre></li> <li>add certificate to local keychain (1 crt file) / just type <code>thisisunsafe</code></li> <li>access URL</li> </ol>","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/self-signed-certificates/#refer_2","title":"refer","text":"<ul> <li>works for api gateway and alb</li> <li>acm-issue-certificates</li> <li>aws_signing_helper</li> </ul>","tags":["aws/security/acm","aws/container/eks"]},{"location":"others/network/aws-nfw-network-firewall/","title":"AWS Network Firewall","text":"","tags":["aws/network/nfw"]},{"location":"others/network/aws-nfw-network-firewall/#stateless-vs-stateful-","title":"stateless-vs-stateful-","text":"<p>AWS Network Firewall\u652f\u6301\u6709\u72b6\u6001\u7684\u89c4\u5219\uff08\u6700\u5927\u89c4\u5219\u7ec4\u5bb9\u91cf50,000\uff09\uff0c\u4e5f\u652f\u6301\u65e0\u72b6\u6001\u7684\u89c4\u5219\uff08\u6700\u5927\u89c4\u5219\u7ec4\u5bb9\u91cf10,000\uff09</p> <ul> <li>\u65e0\u72b6\u6001\u89c4\u5219\u4f18\u5148\u4e8e\u6709\u72b6\u6001\u89c4\u5219\u6267\u884c\uff0c\u4e14\u6309\u914d\u7f6e\u7684\u987a\u5e8f\u6267\u884c\uff0c\u652f\u6301pass\uff0cdrop\u548cforward\u5230\u6709\u72b6\u6001\u7684\u89c4\u5219\u4e09\u79cd\u5904\u7406\u65b9\u5f0f\uff1b</li> <li>\u5047\u5982\u65e0\u72b6\u6001\u89c4\u5219\u914d\u7f6e\u6709\u51b2\u7a81\uff0c\u6309\u4f18\u5148\u7ea7\u5339\u914d\u6267\u884c\uff1b</li> <li>\u6709\u72b6\u6001\u7684\u89c4\u5219\u5982\u679c\u6709\u51b2\u7a81<ul> <li>Action Order\uff1a\uff08\u4f8b\u5982\u67d0\u4e2a\u89c4\u5219\u8bbe\u7f6e\u4e86\u5141\u8bb8ssh\uff0c\u53e6\u5916\u4e00\u4e2a\u89c4\u5219\u8bbe\u7f6e\u4e86\u7981\u6b62ssh\uff09\uff0c\u5b83\u662f\u5408\u5e76\u540e\u518d\u7edf\u4e00\u5339\u914d\u6267\u884c\uff0c\u4f18\u5148\u7ea7\u4e3apass &gt; drop &gt; alert\uff0c\u6240\u4ee5\u53ea\u8981\u6709\u4e00\u4e2apass\u7684\u8bbe\u7f6e\uff0c\u5176\u4ed6\u7684\u975epass\u8bbe\u7f6e\u5168\u90e8\u4f1a\u5931\u6548\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8bbe\u7f6e\u89c4\u5219\u65f6\u8981\u660e\u786e\u5177\u4f53\u3002</li> <li>\u63a8\u8350 Strict order\uff0c\u6309\u987a\u5e8f\u6267\u884c</li> </ul> </li> </ul> <p></p> <ul> <li>https://docs.aws.amazon.com/network-firewall/latest/developerguide/firewall-rules-engines.html</li> <li>https://aws.amazon.com/cn/blogs/china/effective-protection-of-ns-resources-and-services-through-aws-network-firewall/</li> </ul>","tags":["aws/network/nfw"]},{"location":"others/network/aws-nfw-network-firewall/#available-in-china","title":"available in china","text":"<ul> <li>from  2024/2<ul> <li>https://www.amazonaws.cn/en/new/2024/amazon-network-firewall-is-available-in-amazon-web-services-china-regions/</li> </ul> </li> <li>increase to 50k stateful rules<ul> <li>https://www.amazonaws.cn/new/2024/amazon-network-firewall-increases-quota-for-stateful-rules/</li> </ul> </li> </ul>","tags":["aws/network/nfw"]},{"location":"others/network/aws-nfw-network-firewall/#workshop","title":"workshop","text":"<ul> <li>../../../../ws-aws-network-firewall-workshop </li> <li>../../../../ws-hands-on-network-firewall-workshop </li> <li>../../../../ws-aws-network-firewall-for-ingress-egress-traffic </li> <li>../../../../ws-approaches-to-layered-security-for-amazon-vpc </li> </ul>","tags":["aws/network/nfw"]},{"location":"others/network/aws-nfw-network-firewall/#blog","title":"blog","text":"<ul> <li>https://aws.amazon.com/cn/blogs/security/how-to-deploy-aws-network-firewall-to-help-protect-your-network-from-malware/</li> <li>different pattern: blog-design-your-firewall-deployment-for-internet-ingress-traffic-flows </li> <li>blog-design-your-firewall-deployments-to-protect-your-internet-applications-nis30 </li> <li>blog-deployment-models-for-aws-network-firewall</li> </ul>","tags":["aws/network/nfw"]},{"location":"others/network/aws-nfw-network-firewall/#refer","title":"refer","text":"<ul> <li>aws-nfw-network-firewall-internal</li> </ul>","tags":["aws/network/nfw"]},{"location":"others/network/caddy/","title":"caddy","text":"","tags":["draft"]},{"location":"others/network/caddy/#install","title":"install","text":"<p>homepage: https://webinstall.dev/caddy/ refer: https://github.com/ollama/ollama/issues/849#issuecomment-1773697189 <pre><code>curl https://webi.sh/caddy | sh\n</code></pre></p> <ul> <li>or <pre><code>brew install caddy\n</code></pre></li> </ul>","tags":["draft"]},{"location":"others/network/caddy/#sample","title":"sample","text":"","tags":["draft"]},{"location":"others/network/caddy/#tls-and-acme_server","title":"tls and acme_server","text":"<ul> <li> <p>cannot work (if certificate error): client \u2013https\u2013&gt; caddy server \u2013http\u2013&gt; service</p> </li> <li> <p>Caddyfile <pre><code>{\n    default_sni api.panlm.xyz\n    debug\n    admin off\n    auto_https on\n    pki {\n        ca home {\n            name \"My Home CA\"\n        }\n    }\n}\n\napi.panlm.xyz {\n    acme_server {\n        ca home\n    }\n    tls {\n        issuer internal {\n            ca home\n        }\n    }\n    handle {\n        basic_auth {\n            apitoken $214$ccccc\n        }\n        reverse_proxy localhost:11434\n    }\n}\n</code></pre></p> </li> </ul>","tags":["draft"]},{"location":"others/network/caddy/#basic-http-auth-","title":"basic-http-auth-","text":"<ul> <li>works: client \u2013http\u2013&gt; caddy server \u2013http\u2013&gt; service</li> <li> <p>save your plain text password in password.txt <pre><code>caddy hash-password &lt; ./password.txt\n</code></pre></p> </li> <li> <p>forward <pre><code>{\n    debug\n    admin off\n    auto_https off\n}\n:4040 {\n    handle {\n        basic_auth {\n            apitoken $214$ccccc\n        }\n        reverse_proxy localhost:11434\n    }\n}\n</code></pre></p> </li> </ul>","tags":["draft"]},{"location":"others/network/caddy/#plugins","title":"plugins","text":"<ul> <li>build with plugins: caddy-build</li> <li>caddy-route53-plugin</li> </ul>","tags":["draft"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/","title":"Cross Region Reverse Proxy with NLB and Cloudfront","text":"<p>\u4f7f\u7528 4 \u5c42\u53cd\u5411\u4ee3\u7406\u8bbf\u95ee global \u5e94\u7528\u65f6\uff0c\u5728 IPtables \u4e2d\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u6d41\u91cf\u5206\u53d1\u5230\u4e0b\u6e38 NLB \u7684\u591a\u4e2a\u516c\u7f51\u5730\u5740\u3002\u89e3\u51b3\u53cd\u5411\u4ee3\u7406\u7684\u9ad8\u53ef\u7528\u6027\u95ee\u9898\u3002\u5982\u679c\u5728\u4e2d\u56fd\u533a\u57df\u4e0d\u4f7f\u7528 cloudfront \u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8bc1\u4e66\u3002</p>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#diagram","title":"diagram","text":"<ul> <li>original region in global on right hand side</li> <li>china region on left hand side </li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#prepare-application-on-eks","title":"prepare application on eks","text":"","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#host-zone","title":"host zone","text":"<ul> <li>2 host zones, one for each region <pre><code>DOMAIN_NAME=poc1009.aws.panlm.xyz # for original region \nAWS_REGION=us-east-2 # for original region\nCN_DOMAIN_NAME=poc1010.aws.panlm.xyz # for china region\n</code></pre></li> </ul> right-click &amp; open-in-new-tab:","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#eks-cluster","title":"eks cluster","text":"<ul> <li>create eks cluster (refer: ../../CLI/linux/eksdemo)</li> <li>install addons (refer: ../../CLI/linux/eksdemo)<ul> <li>externaldns</li> <li>aws load balancer controller</li> <li>certificate</li> </ul> </li> <li>httpbin app</li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#httpbin","title":"httpbin","text":"<ul> <li>TC-private-apigw-dataflow (github)</li> <li>ingress setting with multiple certificates and host wildcard <pre><code>metadata:\n  annotations:\n    alb.ingress.kubernetes.io/certificate-arn: arn_cert1,arn_cert2\nspec:\n  ingressClassName: alb\n  rules:\n    - host: '*.${DOMAIN_NAME#*.}' # match DOMAIN_NAME and CN_DOMAIN_NAME\n</code></pre></li> <li>ensure <code>*.domain_name</code> existed in both host zones, any domains could access to ALB directly, for example <code>httpbin.${DOMAIN_NAME}</code> <pre><code>curl https://httpbin.${DOMAIN_NAME}/anything\n</code></pre></li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#prep-nlb-1-in-front-of-alb","title":"prep NLB-1 in front of ALB","text":"<ul> <li>ALB type target group to tcp 80/443 (ALB \u7c7b\u578b TG \u53ea\u80fd\u9009 TCP\uff0c\u6ca1\u6709 TLS)</li> <li>create NLB-1 with 2 listeners, 80/443 (TCP only, no TLS)</li> <li>on route53, add DNS record alias to NLB-1, called <code>nlbtoalb.${DOMAIN_NAME}</code> <pre><code>curl https://nlbtoalb.${DOMAIN_NAME}/anything\ncurl -L http://nlbtoalb.${DOMAIN_NAME}/anything\n</code></pre></li> <li>both could access application successfully</li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#reverse-proxy-in-china-region-","title":"reverse-proxy-in-china-region-","text":"<ul> <li>setup 2 EC2 instances fake-waf-on-ec2-forwarding-https (github)</li> <li> <p>forward request to NLB-1\u2019s public IP addresses. </p> <ul> <li>We have 2 destination IPs, using probability 50% in first rule and keep 2nd rule always been hit.</li> <li>If your have 3 destination IPs, using 0.33/0.5 in first 2 rules and keep last one always been hit. <pre><code>instance_ip=172.31.17.223 # instance internal ip address\nnext_ip=3.115.136.123 # one ip address of vpce domain name\nnext_ip2=3.241.89.18\n\n# get alb/nlb internal ip addresses\nfor i in 172.31.20.112 172.31.33.21; do\n    iptables -t nat -A PREROUTING -p tcp -s $i -d $instance_ip --dport 443 \\\n        -m statistic --mode random --probability 0.5 \\\n        -i eth0 -j DNAT --to-destination $next_ip:443;\n    iptables -t nat -A PREROUTING -p tcp -s $i -d $instance_ip --dport 443 \\\n        -i eth0 -j DNAT --to-destination $next_ip2:443;\ndone\n\niptables -t nat -A POSTROUTING -p tcp --dport 443 -s 172.31.0.0/16 -d $next_ip -o eth0 -j MASQUERADE;\n</code></pre></li> </ul> </li> <li> <p>NLB-2 in front of these EC2 instances</p> </li> <li>on route53, add dedicate host zone for this region and add DNS record CNAME to NLB-2, called <code>test.${CN_DOMAIN_NAME}</code></li> <li>\u8bf7\u6c42\u5c06\u83b7\u53d6\u5230 reverse proxy \u516c\u7f51\u5730\u5740 <pre><code>curl https://test.${CN_DOMAIN_NAME}/ip\n</code></pre></li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#cloudfront-in-front-of-nlb-2","title":"cloudfront in front of NLB-2","text":"<ul> <li>create certificate for cn domain name for cloudfront<ul> <li>\u5982\u679c\u4e0d\u4f7f\u7528 cloudfront \u5219\u4e0d\u9700\u8981\u521b\u5efa\u8bc1\u4e66</li> </ul> </li> <li>create origin to NLB-2 <ul> <li>using aws default domain name </li> <li>or NLB-2\u2019s domain name (<code>test.${CN_DOMAIN_NAME}</code>)</li> </ul> </li> <li>create route53, add DNS record CNAME to cloudfront, called <code>abc.${CN_DOMAIN_NAME}</code> <pre><code>curl https://abc.${CN_DOMAIN_NAME}/ip\n</code></pre></li> </ul> <ul> <li>no CORS needed</li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#more","title":"more","text":"<ul> <li>iptables DNAT will exhaust ports or not ?<ul> <li>No. refer link</li> </ul> </li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/cross-region-reverse-proxy-with-nlb-cloudfront/#refer","title":"refer","text":"<ul> <li>../../CLI/linux/iptables</li> <li>fake-waf-on-ec2-forwarding-https<ul> <li>github </li> </ul> </li> <li>using alb + nginx as reverse proxy <ul> <li>../../git-attachment/Extend Your Web Application Deployment to the China Region Using AWS Direct Connect</li> </ul> </li> <li>https://scalingo.com/blog/iptables</li> <li>../../git-attachment/Building a Solution for China Cross-Border VPC Connection</li> </ul>","tags":["aws/network/nlb","aws/network/cloudfront","aws/china"]},{"location":"others/network/openswan-s2svpn-tgw/","title":"openswan-s2svpn-tgw","text":"<p>\u9700\u6c42\uff1a</p> <ul> <li>\u4ece\u4e2d\u56fd\u533a\u57df\u8bbf\u95ee aws global \u670d\u52a1\u7684\u57df\u540d\uff08\u4f8b\u5982\uff0cbedrock\uff09\uff0c\u5e0c\u671b\u6d41\u91cf\u4fdd\u7559\u5728 aws \u9aa8\u5e72\u7f51\u5185\u90e8</li> <li>\u5e0c\u671b\u90e8\u7f72\u524d\u7aef\u5728\u4e2d\u56fd\u533a\u57df\uff08\u4f8b\u5982\uff0cbrconnector\u3001GenBI\uff09</li> </ul> <p>\u4f18\u70b9</p> <ul> <li>Traffic \u4e0d\u8d70\u516c\u7f51</li> </ul> <p>\u7f3a\u70b9</p> <ul> <li>\u53ea\u80fd\u901a\u8fc7 AKSK \u8bbf\u95ee global \u670d\u52a1</li> </ul> <p></p> <p>refer: bedrock-runtime-endpoint</p>","tags":["openswan","aws/network/tgw","aws/network/vpn"]},{"location":"others/network/openswan-s2svpn-tgw/#sample-1-aws-commercial-region-peering","title":"sample 1 - aws commercial region peering","text":"<ul> <li>create customer gateway (CGW) with your public ip address in your china region</li> <li>create TGW</li> <li>create attachment for your existed vpc</li> <li>create s2svpn connection<ul> <li>choose TGW</li> <li>choose CGW</li> <li>choose static routing (NO dynamic)</li> <li>keep default for others </li> </ul> </li> <li>download VPN configuration<ul> <li>vendor: generic (or openswan)</li> <li>platform: generic (or openswan)</li> <li>ikev1</li> </ul> </li> <li>you need understand how to setup route tables</li> </ul> <p>LEFT IP is public ip of your openswan RIGHT IP is vpn public ip in your vpn configuration SECRET in your vpn configuration</p>","tags":["openswan","aws/network/tgw","aws/network/vpn"]},{"location":"others/network/openswan-s2svpn-tgw/#sample-2-china-region-to-commercial-region-peering","title":"sample 2 - china region to commercial region peering","text":"<ul> <li>spin up instance to install openswan (refer: ../../../../notes/openswan)</li> <li>\u4e2d\u56fd\u533a\u57df\u5bf9\u4e8e vpn \u7aef\u53e3\u6709\u9650\u5236\uff0c\u5efa\u8bae\u4f7f\u7528global \u533a\u57df\u6a21\u62df</li> <li> <p>openswan \u53c2\u8003\u914d\u7f6e</p> <ul> <li><code>/etc/ipsec.d/aws.conf</code> <pre><code>#\nconn Tunnel1\n    authby=secret\n    auto=start\n    type=tunnel\n    ikelifetime=8h\n    keylife=1h\n    phase2alg=aes128-sha1;modp1024\n    ike=aes128-sha1;modp1024\n    keyingtries=%forever\n    keyexchange=ike\n    left=%defaultroute\n    leftid=&lt;local public ip address&gt;\n    leftsubnet=172.31.0.0/16\n    right=&lt;vpn public ip address&gt;\n    rightsubnet=10.200.0.0/16\n    dpddelay=10\n    dpdtimeout=30\n    dpdaction=restart_by_peer\n</code></pre></li> <li><code>/etc/ipsec.d/aws.secrets</code> <pre><code>&lt;local public ip address&gt;  &lt;vpn public ip address&gt; : PSK \"sharedkey\"\n</code></pre></li> </ul> </li> <li> <p>check status  <pre><code>systemctl enable ipsec\nsystemctl restart ipsec\nipsec status\n</code></pre></p> </li> <li>need iptables for masq (refer iptables-MASQUERADE)</li> </ul>","tags":["openswan","aws/network/tgw","aws/network/vpn"]},{"location":"others/network/openswan-s2svpn-tgw/#refer","title":"refer","text":"<ul> <li>https://ly.lv/129</li> <li>https://kloudvm.medium.com/aws-site-to-site-vpn-using-openswan-ipsec-step-by-step-tutorial-c525a97487a3</li> <li>https://aws.amazon.com/blogs/networking-and-content-delivery/centralize-access-using-vpc-interface-endpoints/</li> </ul>","tags":["openswan","aws/network/tgw","aws/network/vpn"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/","title":"WA-\u5353\u8d8a\u8fd0\u8425-Operational-Excellence-202310-Summary","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_1","title":"\u8bbe\u8ba1\u539f\u5219","text":"<pre><code>collapse: close\nicon: battery-0\ntitle:  \u4ee5\u4ee3\u7801\u5f62\u5f0f\u6267\u884c\u64cd\u4f5c\n\n\u5728\u4e91\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u76f8\u540c\u5de5\u7a0b\u89c4\u5219\u5e94\u7528\u4e8e\u6574\u4e2a\u73af\u5883\u3002 \u60a8\u53ef\u4ee5\u5c06\u6574\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\uff08\u5e94\u7528\u7a0b\u5e8f\u3001\u57fa\u7840\u8bbe\u65bd\u7b49\uff09\u5b9a\u4e49\u4e3a\u4ee3\u7801\u5e76\u7528\u4ee3\u7801\u66f4\u65b0\u3002 \u60a8\u53ef\u4ee5\u7f16\u5199\u64cd\u4f5c\u8fc7\u7a0b\u7684\u811a\u672c\uff0c\u5e76\u901a\u8fc7\u542f\u52a8\u5b83\u4eec\u6765\u54cd\u5e94\u4e8b\u4ef6\u6765\u81ea\u52a8\u5316\u5176\u8fc7\u7a0b\u3002 \u901a\u8fc7\u5c06\u64cd\u4f5c\u4f5c\u4e3a\u4ee3\u7801\u6267\u884c\uff0c\u60a8\u53ef\u4ee5\u9650\u5236\u4eba\u4e3a\u9519\u8bef\u5e76\u521b\u5efa\u5bf9\u4e8b\u4ef6\u7684\u4e00\u81f4\u54cd\u5e94\u3002\n</code></pre> <pre><code>collapse: close\nicon: battery-25\ntitle:  \u8fdb\u884c\u9891\u7e41\u3001\u5c0f\u7684\u3001\u53ef\u9006\u7684\u66f4\u6539\n\n\u8bbe\u8ba1\u53ef\u6269\u5c55\u4e14\u677e\u6563\u8026\u5408\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ee5\u5141\u8bb8\u5b9a\u671f\u66f4\u65b0\u7ec4\u4ef6\u3002 \u81ea\u52a8\u5316\u90e8\u7f72\u6280\u672f\u4e0e\u8f83\u5c0f\u7684\u589e\u91cf\u66f4\u6539\u4e00\u8d77\u51cf\u5c11\u4e86\u7206\u70b8\u534a\u5f84\uff0c\u5e76\u5728\u53d1\u751f\u6545\u969c\u65f6\u5b9e\u73b0\u66f4\u5feb\u7684\u9006\u8f6c\u3002 \u8fd9\u589e\u5f3a\u4e86\u60a8\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u6709\u76ca\u6539\u53d8\u7684\u4fe1\u5fc3\uff0c\u540c\u65f6\u4fdd\u6301\u8d28\u91cf\u5e76\u5feb\u901f\u9002\u5e94\u5e02\u573a\u6761\u4ef6\u7684\u53d8\u5316\u3002\n</code></pre> <pre><code>collapse: close\nicon: battery-50\ntitle:  \u7ecf\u5e38\u6539\u8fdb\u64cd\u4f5c\u6d41\u7a0b\n\n\u968f\u7740\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53d1\u5c55\uff0c\u9002\u5f53\u5730\u6539\u8fdb\u64cd\u4f5c\u3002 \u5f53\u60a8\u4f7f\u7528\u64cd\u4f5c\u7a0b\u5e8f\u65f6\uff0c\u5bfb\u627e\u6539\u8fdb\u5b83\u4eec\u7684\u673a\u4f1a\u3002 \u5b9a\u671f\u8fdb\u884c\u5ba1\u67e5\u5e76\u9a8c\u8bc1\u6240\u6709\u7a0b\u5e8f\u662f\u5426\u6709\u6548\u5e76\u4e14\u56e2\u961f\u662f\u5426\u719f\u6089\u5b83\u4eec\u3002 \u5982\u679c\u53d1\u73b0\u5dee\u8ddd\uff0c\u5219\u76f8\u5e94\u5730\u66f4\u65b0\u7a0b\u5e8f\u3002 \u5411\u6240\u6709\u5229\u76ca\u76f8\u5173\u8005\u548c\u56e2\u961f\u4f20\u8fbe\u7a0b\u5e8f\u66f4\u65b0\u3002 \u5c06\u60a8\u7684\u8fd0\u8425\u6e38\u620f\u5316\uff0c\u4ee5\u5206\u4eab\u6700\u4f73\u5b9e\u8df5\u5e76\u6559\u80b2\u56e2\u961f\u3002\n</code></pre> <pre><code>collapse: close\nicon: battery-75\ntitle:  \u9884\u6d4b\u6545\u969c\n\n\u6267\u884c\u201c\u4e8b\u524d\u5256\u6790\u201d\u7ec3\u4e60\u6765\u8bc6\u522b\u6f5c\u5728\u7684\u6545\u969c\u6e90\uff0c\u4ee5\u4fbf\u6d88\u9664\u6216\u51cf\u8f7b\u6545\u969c\u3002 \u6d4b\u8bd5\u60a8\u7684\u6545\u969c\u573a\u666f\u5e76\u9a8c\u8bc1\u60a8\u5bf9\u5176\u5f71\u54cd\u7684\u7406\u89e3\u3002 \u6d4b\u8bd5\u60a8\u7684\u54cd\u5e94\u7a0b\u5e8f\u4ee5\u786e\u4fdd\u5176\u6709\u6548\u5e76\u4e14\u56e2\u961f\u719f\u6089\u5176\u6d41\u7a0b\u3002 \u8bbe\u7f6e\u5b9a\u671f\u6bd4\u8d5b\u65e5\u6765\u6d4b\u8bd5\u5de5\u4f5c\u91cf\u548c\u56e2\u961f\u5bf9\u6a21\u62df\u4e8b\u4ef6\u7684\u53cd\u5e94\u3002\n</code></pre> <pre><code>collapse: close\nicon: battery-100\ntitle:  \u4ece\u6240\u6709\u8fd0\u8425\u5931\u8d25\u4e2d\u5438\u53d6\u6559\u8bad\n\n\u901a\u8fc7\u4ece\u6240\u6709\u8fd0\u8425\u4e8b\u4ef6\u548c\u5931\u8d25\u4e2d\u5438\u53d6\u7684\u7ecf\u9a8c\u6559\u8bad\u6765\u63a8\u52a8\u6539\u8fdb\u3002 \u5206\u4eab\u8de8\u56e2\u961f\u548c\u6574\u4e2a\u7ec4\u7ec7\u5b66\u5230\u7684\u77e5\u8bc6\u3002\n</code></pre> <pre><code>collapse: close\nicon: battery-100\ntitle:  \u4f7f\u7528\u6258\u7ba1\u670d\u52a1\n\n\u5c3d\u53ef\u80fd\u4f7f\u7528 AWS \u6258\u7ba1\u670d\u52a1\u6765\u51cf\u8f7b\u8fd0\u8425\u8d1f\u62c5\u3002 \u56f4\u7ed5\u4e0e\u8fd9\u4e9b\u670d\u52a1\u7684\u4ea4\u4e92\u6784\u5efa\u64cd\u4f5c\u7a0b\u5e8f\u3002\n</code></pre> <pre><code>collapse: close\nicon: battery-100\ntitle:  \u5b9e\u65bd\u53ef\u89c2\u5bdf\u6027\u4ee5\u83b7\u5f97\u53ef\u884c\u7684\u89c1\u89e3\n\n\u5168\u9762\u4e86\u89e3\u5de5\u4f5c\u8d1f\u8f7d\u884c\u4e3a\u3001\u6027\u80fd\u3001\u53ef\u9760\u6027\u3001\u6210\u672c\u548c\u8fd0\u884c\u72b6\u51b5\u3002 \u5efa\u7acb\u5173\u952e\u7ee9\u6548\u6307\u6807 (KPI) \u5e76\u5229\u7528\u53ef\u89c2\u6d4b\u6027\u9065\u6d4b\u6280\u672f\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\uff0c\u5e76\u5728\u4e1a\u52a1\u6210\u679c\u9762\u4e34\u98ce\u9669\u65f6\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\u3002 \u6839\u636e\u53ef\u64cd\u4f5c\u7684\u53ef\u89c2\u6d4b\u6570\u636e\u4e3b\u52a8\u63d0\u9ad8\u6027\u80fd\u3001\u53ef\u9760\u6027\u548c\u6210\u672c\u3002\n</code></pre>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_2","title":"\u95ee\u9898\u548c\u5b9a\u4e49","text":"<p>\u7ec4\u7ec7     OPS 1 \u60a8\u5982\u4f55\u786e\u5b9a\u81ea\u5df1\u7684\u91cd\u70b9\uff1f     OPS 2 \u5982\u4f55\u6784\u5efa\u7ec4\u7ec7\u7ed3\u6784\u6765\u4e3a\u4e1a\u52a1\u6210\u679c\u63d0\u4f9b\u652f\u6301\uff1f     OPS 3 \u7ec4\u7ec7\u6587\u5316\u5982\u4f55\u4e3a\u4e1a\u52a1\u6210\u679c\u63d0\u4f9b\u652f\u6301\uff1f \u51c6\u5907     OPS 4 \u5982\u4f55\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u5b9e\u73b0\u53ef\u89c2\u6d4b\u6027\uff1f     OPS 5 \u5982\u4f55\u51cf\u5c11\u7f3a\u9677\u3001\u7b80\u5316\u4fee\u590d\u548c\u6539\u8fdb\u751f\u4ea7\u6d41\u7a0b\uff1f     OPS 6 \u60a8\u5982\u4f55\u7f13\u89e3\u90e8\u7f72\u98ce\u9669\uff1f     OPS 7 \u5982\u4f55\u77e5\u9053\u60a8\u5df2\u7ecf\u51c6\u5907\u597d\u652f\u6301\u67d0\u79cd\u5de5\u4f5c\u8d1f\u8f7d\uff1f \u8fd0\u8425     OPS 8 \u5982\u4f55\u5728\u7ec4\u7ec7\u4e2d\u5229\u7528\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u89c2\u6d4b\u6027\uff1f     OPS 9 \u60a8\u5982\u4f55\u4e86\u89e3\u81ea\u5df1\u7684\u8fd0\u8425\u72b6\u51b5\uff1f     OPS 10 \u60a8\u5982\u4f55\u5e94\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u4e8b\u4ef6\u548c\u8fd0\u8425\u4e8b\u4ef6\uff1f \u53d1\u5c55     OPS 11 \u5982\u4f55\u6539\u8fdb\u8fd0\u8425\uff1f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_3","title":"\u6700\u4f73\u5b9e\u8df5","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_4","title":"\u7ec4\u7ec7","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-1","title":"OPS 1 \u60a8\u5982\u4f55\u786e\u5b9a\u81ea\u5df1\u7684\u91cd\u70b9\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_5","title":"\u8bc4\u4f30\u5916\u90e8\u5ba2\u6237\u9700\u6c42","text":"<p>\u8ba9\u5305\u62ec\u4e1a\u52a1\u3001\u5f00\u53d1\u548c\u8fd0\u8425\u56e2\u961f\u5728\u5185\u7684\u4e3b\u8981\u5229\u76ca\u76f8\u5173\u65b9\u53c2\u4e0e\u8fdb\u6765\uff0c\u4ee5\u4fbf\u786e\u5b9a\u600e\u6837\u5c06\u5de5\u4f5c\u91cd\u5fc3\u653e\u5728\u5916\u90e8\u5ba2\u6237\u7684\u9700\u6c42\u4e0a\u3002\u8fd9\u53ef\u4ee5\u786e\u4fdd\u60a8\u5145\u5206\u4e86\u89e3\u5b9e\u73b0\u60a8\u671f\u671b\u7684\u4e1a\u52a1\u6210\u679c\u6240\u9700\u7684\u8fd0\u8425\u652f\u6301\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_6","title":"\u8bc4\u4f30\u5185\u90e8\u5ba2\u6237\u9700\u6c42","text":"<p>\u8ba9\u5305\u62ec\u4e1a\u52a1\u3001\u5f00\u53d1\u548c\u8fd0\u8425\u56e2\u961f\u5728\u5185\u7684\u4e3b\u8981\u5229\u76ca\u76f8\u5173\u65b9\u53c2\u4e0e\u8fdb\u6765\uff0c\u4ee5\u4fbf\u786e\u5b9a\u600e\u6837\u5c06\u5de5\u4f5c\u91cd\u5fc3\u653e\u5728\u5185\u90e8\u5ba2\u6237\u7684\u9700\u6c42\u4e0a\u3002\u8fd9\u53ef\u4ee5\u786e\u4fdd\u60a8\u5145\u5206\u4e86\u89e3\u5b9e\u73b0\u4e1a\u52a1\u6210\u679c\u6240\u9700\u7684\u8fd0\u8425\u652f\u6301\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_7","title":"\u8bc4\u4f30\u76d1\u7ba1\u8981\u6c42","text":"<p>\u6cbb\u7406\u662f\u516c\u53f8\u7528\u6765\u5b9e\u73b0\u5176\u4e1a\u52a1\u76ee\u6807\u7684\u4e00\u7cfb\u5217\u7b56\u7565\u3001\u89c4\u5219\u6216\u6846\u67b6\u3002\u4ece\u7ec4\u7ec7\u5185\u90e8\u751f\u6210\u6cbb\u7406\u8981\u6c42\u3002\u5b83\u4eec\u4f1a\u5f71\u54cd\u60a8\u9009\u62e9\u7684\u6280\u672f\u7c7b\u578b\u6216\u5f71\u54cd\u60a8\u8fd0\u8425\u5de5\u4f5c\u8d1f\u8f7d\u7684\u65b9\u5f0f\u3002\u5c06\u7ec4\u7ec7\u6cbb\u7406\u8981\u6c42\u7eb3\u5165\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u3002\u5408\u89c4\u662f\u8bc1\u660e\u60a8\u5df2\u5b9e\u65bd\u6cbb\u7406\u8981\u6c42\u7684\u80fd\u529b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_8","title":"\u8bc4\u4f30\u5408\u89c4\u6027\u8981\u6c42","text":"<p>\u76d1\u7ba1\u3001\u884c\u4e1a\u548c\u5185\u90e8\u5408\u89c4\u6027\u8981\u6c42\u662f\u5b9a\u4e49\u7ec4\u7ec7\u4f18\u5148\u7ea7\u7684\u91cd\u8981\u9a71\u52a8\u56e0\u7d20\u3002\u60a8\u7684\u5408\u89c4\u6027\u6846\u67b6\u53ef\u80fd\u4f1a\u963b\u6b62\u60a8\u4f7f\u7528\u7279\u5b9a\u6280\u672f\u6216\u5730\u7406\u4f4d\u7f6e\u3002\u5982\u679c\u672a\u786e\u5b9a\u5916\u90e8\u5408\u89c4\u6846\u67b6\uff0c\u5219\u8fdb\u884c\u5c3d\u804c\u8c03\u67e5\u3002\u751f\u6210\u9a8c\u8bc1\u5408\u89c4\u6027\u7684\u5ba1\u8ba1\u6216\u62a5\u544a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_9","title":"\u8bc4\u4f30\u5a01\u80c1\u5f62\u52bf","text":"<p>\u8bc4\u4f30\u5bf9\u4e1a\u52a1\u7684\u5a01\u80c1\uff08\u4f8b\u5982\u7ade\u4e89\u3001\u4e1a\u52a1\u98ce\u9669\u548c\u8d1f\u503a\u3001\u8fd0\u8425\u98ce\u9669\u548c\u4fe1\u606f\u5b89\u5168\u5a01\u80c1\uff09\uff0c\u5e76\u5728\u98ce\u9669\u6ce8\u518c\u8868\u4e2d\u7ef4\u62a4\u5f53\u524d\u4fe1\u606f\u3002\u5728\u786e\u5b9a\u5de5\u4f5c\u91cd\u5fc3\u65f6\uff0c\u5c06\u98ce\u9669\u7684\u5f71\u54cd\u8003\u8651\u5728\u5185\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_10","title":"\u8bc4\u4f30\u6743\u8861","text":"<p>\u5728\u6709\u51b2\u7a81\u7684\u5229\u76ca\u6216\u66ff\u4ee3\u65b9\u6cd5\u4e4b\u95f4\u505a\u51fa\u6743\u8861\u5e76\u8bc4\u4f30\u5176\u5f71\u54cd\uff0c\u4ee5\u4fbf\u5728\u786e\u5b9a\u5de5\u4f5c\u91cd\u5fc3\u6216\u9009\u62e9\u884c\u52a8\u65b9\u6848\u65f6\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\u3002\u4f8b\u5982\uff0c\u52a0\u5feb\u65b0\u529f\u80fd\u4e0a\u5e02\u7684\u901f\u5ea6\u53ef\u80fd\u4f1a\u6bd4\u6210\u672c\u4f18\u5316\u66f4\u91cd\u8981\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4e3a\u975e\u5173\u7cfb\u6570\u636e\u9009\u62e9\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u4ee5\u7b80\u5316\u8fc1\u79fb\u7cfb\u7edf\u7684\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u8fc1\u79fb\u5230\u9488\u5bf9\u60a8\u7684\u6570\u636e\u7c7b\u578b\u4f18\u5316\u7684\u6570\u636e\u5e93\u548c\u66f4\u65b0\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_11","title":"\u7ba1\u7406\u6536\u76ca\u548c\u98ce\u9669","text":"<p>\u7ba1\u7406\u6536\u76ca\u548c\u98ce\u9669\uff0c\u4ee5\u4fbf\u5728\u786e\u5b9a\u5de5\u4f5c\u91cd\u5fc3\u65f6\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u5411\u5ba2\u6237\u63d0\u4f9b\u91cd\u8981\u7684\u65b0\u529f\u80fd\uff0c\u90e8\u7f72\u4ecd\u5b58\u5728\u672a\u51b3\u95ee\u9898\u7684\u5de5\u4f5c\u8d1f\u8f7d\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u8fd9\u53ef\u80fd\u4f1a\u964d\u4f4e\u76f8\u5173\u98ce\u9669\uff0c\u6216\u8005\u5141\u8bb8\u98ce\u9669\u7ee7\u7eed\u5b58\u5728\u53ef\u80fd\u4f1a\u4ee4\u4eba\u65e0\u6cd5\u63a5\u53d7\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5c06\u91c7\u53d6\u63aa\u65bd\u6765\u5316\u89e3\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-2","title":"OPS 2 \u5982\u4f55\u6784\u5efa\u7ec4\u7ec7\u7ed3\u6784\u6765\u4e3a\u4e1a\u52a1\u6210\u679c\u63d0\u4f9b\u652f\u6301\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_12","title":"\u786e\u5b9a\u8d44\u6e90\u6240\u6709\u8005","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8d44\u6e90\u5fc5\u987b\u5177\u6709\u5df2\u786e\u5b9a\u7684\u6240\u6709\u8005\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u53d8\u66f4\u63a7\u5236\u3001\u6545\u969c\u6392\u9664\u548c\u5176\u4ed6\u529f\u80fd\u3002\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u3001\u8d26\u6237\u3001\u57fa\u7840\u8bbe\u65bd\u3001\u5e73\u53f0\u548c\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u6240\u6709\u8005\u3002\u4f7f\u7528\u96c6\u4e2d\u767b\u8bb0\u518c\u6216\u9644\u52a0\u5230\u8d44\u6e90\u7684\u5143\u6570\u636e\u7b49\u5de5\u5177\u8bb0\u5f55\u6240\u6709\u6743\u3002\u7ec4\u4ef6\u7684\u5546\u4e1a\u4ef7\u503c\u6307\u660e\u5e94\u7528\u4e8e\u5b83\u4eec\u7684\u6d41\u7a0b\u548c\u7a0b\u5e8f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_13","title":"\u786e\u5b9a\u6d41\u7a0b\u548c\u7a0b\u5e8f\u6240\u6709\u8005","text":"<p>\u4e86\u89e3\u8c01\u5bf9\u5404\u4e2a\u6d41\u7a0b\u548c\u7a0b\u5e8f\u7684\u5b9a\u4e49\u62e5\u6709\u6240\u6709\u6743\u3001\u4e3a\u4f55\u4f7f\u7528\u8fd9\u4e9b\u7279\u5b9a\u7684\u6d41\u7a0b\u548c\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b58\u5728\u8fd9\u79cd\u6240\u6709\u6743\u3002\u4e86\u89e3\u4f7f\u7528\u7279\u5b9a\u6d41\u7a0b\u548c\u7a0b\u5e8f\u7684\u539f\u56e0\u5c06\u6709\u52a9\u4e8e\u53d1\u73b0\u6539\u8fdb\u673a\u4f1a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_14","title":"\u786e\u5b9a\u5bf9\u8fd0\u8425\u6d3b\u52a8\u7ee9\u6548\u8d1f\u8d23\u7684\u6240\u6709\u8005","text":"<p>\u4e86\u89e3\u8c01\u8d1f\u8d23\u9488\u5bf9\u5b9a\u4e49\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6267\u884c\u7279\u5b9a\u6d3b\u52a8\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8d1f\u8d23\u3002\u4e86\u89e3\u8c01\u8d1f\u8d23\u6267\u884c\u6d3b\u52a8\u53ef\u8ba9\u6211\u4eec\u77e5\u6653\u8c01\u6765\u5f00\u5c55\u6d3b\u52a8\u3001\u9a8c\u8bc1\u7ed3\u679c\u5e76\u5411\u6d3b\u52a8\u6240\u6709\u8005\u63d0\u4f9b\u53cd\u9988\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_15","title":"\u56e2\u961f\u6210\u5458\u77e5\u9053\u81ea\u5df1\u7684\u8d23\u4efb","text":"<p>\u4e86\u89e3\u60a8\u7684\u89d2\u8272\u5177\u6709\u54ea\u4e9b\u8d23\u4efb\u4ee5\u53ca\u5982\u4f55\u4e3a\u4e1a\u52a1\u6210\u679c\u505a\u51fa\u8d21\u732e\u53ef\u5e2e\u52a9\u60a8\u786e\u5b9a\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4ee5\u53ca\u81ea\u8eab\u89d2\u8272\u7684\u91cd\u8981\u6027\u3002\u8fd9\u4f7f\u56e2\u961f\u6210\u5458\u80fd\u591f\u4e86\u89e3\u9700\u6c42\u5e76\u505a\u51fa\u9002\u5f53\u54cd\u5e94\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_16","title":"\u5236\u5b9a\u7528\u4e8e\u786e\u5b9a\u8d23\u4efb\u548c\u6240\u6709\u6743\u7684\u673a\u5236","text":"<p>\u5728\u672a\u786e\u5b9a\u4e2a\u4eba\u6216\u56e2\u961f\u65f6\uff0c\u8981\u4e3a\u6709\u6743\u5206\u914d\u6240\u6709\u6743\u6216\u8ba1\u5212\u6ee1\u8db3\u8be5\u9700\u6c42\u7684\u4eba\u5b9a\u4e49\u5347\u7ea7\u8def\u5f84\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_17","title":"\u5236\u5b9a\u7528\u4e8e\u8bf7\u6c42\u6dfb\u52a0\u3001\u66f4\u6539\u548c\u4f8b\u5916\u7684\u673a\u5236","text":"<p>\u60a8\u53ef\u4ee5\u5411\u6d41\u7a0b\u3001\u7a0b\u5e8f\u548c\u8d44\u6e90\u7684\u6240\u6709\u8005\u63d0\u51fa\u8bf7\u6c42\u3002\u8bf7\u6c42\u5305\u62ec\u6dfb\u52a0\u3001\u66f4\u6539\u548c\u4f8b\u5916\u3002\u8fd9\u4e9b\u8bf7\u6c42\u90fd\u8981\u7ecf\u8fc7\u53d8\u66f4\u7ba1\u7406\u6d41\u7a0b\u3002\u5bf9\u6536\u76ca\u548c\u98ce\u9669\u8fdb\u884c\u8bc4\u4f30\u4e4b\u540e\uff0c\u505a\u51fa\u660e\u667a\u7684\u51b3\u5b9a\uff0c\u6279\u51c6\u53ef\u884c\u548c\u786e\u8ba4\u5408\u9002\u7684\u8bf7\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_18","title":"\u9884\u5148\u5b9a\u4e49\u6216\u534f\u5546\u56e2\u961f\u95f4\u7684\u804c\u8d23","text":"<p>\u56e2\u961f\u4e4b\u95f4\u5177\u6709\u660e\u786e\u6216\u534f\u5546\u597d\u7684\u534f\u8bae\uff0c\u89c4\u5b9a\u4e86\u56e2\u961f\u4e4b\u95f4\u7684\u5408\u4f5c\u548c\u76f8\u4e92\u652f\u6301\u65b9\u5f0f\uff08\u4f8b\u5982\u54cd\u5e94\u65f6\u95f4\u3001\u670d\u52a1\u7ea7\u522b\u76ee\u6807\u6216\u670d\u52a1\u7b49\u7ea7\u534f\u8bae\uff09\u3002\u8bb0\u5f55\u56e2\u961f\u95f4\u6c9f\u901a\u6e20\u9053\u3002\u4e86\u89e3\u56e2\u961f\u5de5\u4f5c\u5bf9\u4e1a\u52a1\u6210\u679c\u4ee5\u53ca\u5176\u4ed6\u56e2\u961f\u548c\u7ec4\u7ec7\u7684\u6210\u679c\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u786e\u5b9a\u5176\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\uff0c\u5e76\u5e2e\u52a9\u4ed6\u4eec\u505a\u51fa\u9002\u5f53\u7684\u54cd\u5e94\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-3","title":"OPS 3 \u7ec4\u7ec7\u6587\u5316\u5982\u4f55\u4e3a\u4e1a\u52a1\u6210\u679c\u63d0\u4f9b\u652f\u6301\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_19","title":"\u9ad8\u7ba1\u652f\u6301","text":"<p>\u9ad8\u5c42\u9886\u5bfc\u660e\u786e\u4e3a\u7ec4\u7ec7\u8bbe\u5b9a\u671f\u671b\u5e76\u8bc4\u4f30\u662f\u5426\u6210\u529f\u3002\u9ad8\u5c42\u9886\u5bfc\u662f\u91c7\u7528\u6700\u4f73\u5b9e\u8df5\u548c\u7ec4\u7ec7\u53d1\u5c55\u7684\u53d1\u8d77\u4eba\u3001\u5021\u5bfc\u8005\u548c\u63a8\u52a8\u8005\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_20","title":"\u8d4b\u80fd\u56e2\u961f\u6210\u5458\u5728\u7ed3\u679c\u6709\u98ce\u9669\u65f6\u91c7\u53d6\u884c\u52a8","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u6240\u6709\u8005\u5b9a\u4e49\u4e86\u6307\u5357\u548c\u8303\u56f4\uff0c\u8d4b\u80fd\u56e2\u961f\u6210\u5458\u5728\u7ed3\u679c\u6709\u98ce\u9669\u65f6\u505a\u51fa\u54cd\u5e94\u3002\u5f53\u4e8b\u4ef6\u8d85\u51fa\u5b9a\u4e49\u7684\u8303\u56f4\u65f6\uff0c\u4f7f\u7528\u4e0a\u62a5\u673a\u5236\u83b7\u53d6\u6307\u793a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_21","title":"\u9f13\u52b1\u4e0a\u62a5","text":"<p>\u56e2\u961f\u6210\u5458\u5177\u6709\u76f8\u5e94\u673a\u5236\uff0c\u5982\u679c\u4ed6\u4eec\u8ba4\u4e3a\u7ed3\u679c\u5b58\u5728\u98ce\u9669\uff0c\u9f13\u52b1\u4ed6\u4eec\u5411\u51b3\u7b56\u8005\u548c\u5229\u76ca\u76f8\u5173\u8005\u4e0a\u62a5\u95ee\u9898\u3002\u5e94\u7ecf\u5e38\u5c3d\u65e9\u4e0a\u62a5\uff0c\u4ee5\u4fbf\u80fd\u591f\u786e\u5b9a\u98ce\u9669\uff0c\u5e76\u9632\u6b62\u9020\u6210\u610f\u5916\u4e8b\u4ef6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_22","title":"\u6c9f\u901a\u53ca\u65f6\u3001\u6e05\u6670\u3001\u53ef\u884c","text":"<p>\u5236\u5b9a\u76f8\u5e94\u673a\u5236\uff0c\u7528\u4e8e\u5c06\u5df2\u77e5\u98ce\u9669\u548c\u8ba1\u5212\u5185\u4e8b\u4ef6\u53ca\u65f6\u901a\u77e5\u7ed9\u56e2\u961f\u6210\u5458\u3002\u63d0\u4f9b\u5fc5\u8981\u7684\u76f8\u5173\u4fe1\u606f\u3001\u8be6\u7ec6\u4fe1\u606f\u548c\u65f6\u95f4\uff08\u5982\u679c\u53ef\u80fd\uff09\uff0c\u4e3a\u786e\u5b9a\u662f\u5426\u9700\u8981\u91c7\u53d6\u63aa\u65bd\u3001\u9700\u8981\u91c7\u53d6\u4ec0\u4e48\u63aa\u65bd\u4ee5\u53ca\u53ca\u65f6\u91c7\u53d6\u63aa\u65bd\u63d0\u4f9b\u652f\u6301\u3002\u4f8b\u5982\uff0c\u63d0\u4f9b\u8f6f\u4ef6\u6f0f\u6d1e\u901a\u77e5\u53ef\u4ee5\u52a0\u5feb\u4fee\u8865\u8fc7\u7a0b\uff1b\u6216\u8005\uff0c\u63d0\u4f9b\u8ba1\u5212\u5185\u4fc3\u9500\u6d3b\u52a8\u7684\u901a\u77e5\u53ef\u4ee5\u5b9e\u65bd\u53d8\u66f4\u51bb\u7ed3\u4ee5\u907f\u514d\u53d1\u751f\u670d\u52a1\u4e2d\u65ad\u7684\u98ce\u9669\u3002\u53ef\u4ee5\u5c06\u8ba1\u5212\u5185\u4e8b\u4ef6\u8bb0\u5f55\u5728\u53d8\u66f4\u65e5\u5386\u6216\u7ef4\u62a4\u65f6\u95f4\u8868\u4e2d\uff0c\u4ee5\u4fbf\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u786e\u5b9a\u54ea\u4e9b\u6d3b\u52a8\u5f85\u5904\u7406\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_23","title":"\u9f13\u52b1\u8bd5\u9a8c","text":"<p>\u8bd5\u9a8c\u662f\u5c06\u65b0\u60f3\u6cd5\u8f6c\u5316\u4e3a\u4ea7\u54c1\u548c\u529f\u80fd\u7684\u50ac\u5316\u5242\u3002\u5b83\u53ef\u52a0\u5feb\u5b66\u4e60\u901f\u5ea6\uff0c\u5e76\u4f7f\u56e2\u961f\u6210\u5458\u4fdd\u6301\u5174\u8da3\u548c\u53c2\u4e0e\u70ed\u60c5\u3002\u9f13\u52b1\u56e2\u961f\u6210\u5458\u7ecf\u5e38\u8bd5\u9a8c\uff0c\u4ee5\u4fbf\u63a8\u52a8\u521b\u65b0\u3002\u5373\u4f7f\u51fa\u73b0\u4e86\u4e0d\u5e0c\u671b\u770b\u5230\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u77e5\u9053\u4ec0\u4e48\u4e0d\u8be5\u505a\u4e5f\u662f\u6709\u4ef7\u503c\u7684\u3002\u56e2\u961f\u6210\u5458\u4e0d\u4f1a\u56e0\u4e3a\u8bd5\u9a8c\u6210\u529f\u4f46\u7ed3\u679c\u4e0d\u7406\u60f3\u800c\u53d7\u5230\u60e9\u7f5a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_24","title":"\u9f13\u52b1\u56e2\u961f\u6210\u5458\u4fdd\u6301\u548c\u589e\u5f3a\u4ed6\u4eec\u7684\u6280\u80fd\u7ec4\u5408","text":"<p>\u56e2\u961f\u5fc5\u987b\u589e\u5f3a\u81ea\u5df1\u7684\u6280\u80fd\u7ec4\u5408\uff0c\u4ee5\u91c7\u7528\u65b0\u6280\u672f\uff1b\u5e76\u968f\u9700\u6c42\u548c\u804c\u8d23\u7684\u53d8\u5316\u7ee7\u7eed\u63d0\u4f9b\u652f\u6301\uff0c\u4ee5\u652f\u6301\u5de5\u4f5c\u8d1f\u8f7d\u3002\u65b0\u6280\u672f\u6280\u80fd\u7684\u589e\u5f3a\u901a\u5e38\u80fd\u63d0\u5347\u56e2\u961f\u6210\u5458\u6ee1\u610f\u5ea6\u5e76\u652f\u6301\u521b\u65b0\u3002\u652f\u6301\u60a8\u7684\u56e2\u961f\u6210\u5458\u83b7\u53d6\u548c\u7ef4\u62a4\u884c\u4e1a\u8ba4\u8bc1\uff0c\u4ee5\u9a8c\u8bc1\u548c\u8ba4\u53ef\u4ed6\u4eec\u4e0d\u65ad\u589e\u5f3a\u7684\u6280\u80fd\u3002\u8fdb\u884c\u4ea4\u53c9\u57f9\u8bad\uff0c\u4ee5\u4fc3\u8fdb\u77e5\u8bc6\u8f6c\u79fb\u5e76\u964d\u4f4e\u5728\u60a8\u5931\u53bb\u719f\u7ec3\u638c\u63e1\u673a\u6784\u77e5\u8bc6\u3001\u7ecf\u9a8c\u4e30\u5bcc\u7684\u56e2\u961f\u6210\u5458\u65f6\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u7684\u98ce\u9669\u3002\u4e13\u95e8\u5b89\u6392\u65f6\u95f4\u8fdb\u884c\u5b66\u4e60\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_25","title":"\u4e3a\u56e2\u961f\u914d\u7f6e\u9002\u5f53\u7684\u8d44\u6e90","text":"<p>\u57f9\u517b\u56e2\u961f\u6210\u5458\u7684\u80fd\u529b\uff0c\u5e76\u63d0\u4f9b\u5de5\u5177\u548c\u8d44\u6e90\u6765\u652f\u6301\u5de5\u4f5c\u8d1f\u8f7d\u9700\u6c42\u3002\u56e2\u961f\u6210\u5458\u8d85\u8d1f\u8377\u5de5\u4f5c\u4f1a\u589e\u52a0\u4eba\u4e3a\u9519\u8bef\u5bfc\u81f4\u4e8b\u6545\u53d1\u751f\u7684\u98ce\u9669\u3002\u6295\u8d44\u4e8e\u5de5\u5177\u548c\u8d44\u6e90\uff08\u4f8b\u5982\uff0c\u5bf9\u9891\u7e41\u6267\u884c\u7684\u6d3b\u52a8\u5b9e\u73b0\u81ea\u52a8\u5316\uff09\u53ef\u4ee5\u63d0\u9ad8\u56e2\u961f\u7684\u6548\u7387\uff0c\u8ba9\u4ed6\u4eec\u4e3a\u5176\u4ed6\u6d3b\u52a8\u63d0\u4f9b\u652f\u6301\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_26","title":"\u9f13\u52b1\u5728\u56e2\u961f\u5185\u90e8\u548c\u56e2\u961f\u4e4b\u95f4\u63d0\u51fa\u4e0d\u540c\u7684\u89c2\u70b9","text":"<p>\u5229\u7528\u8de8\u7ec4\u7ec7\u7684\u591a\u6837\u6027\u6765\u5bfb\u6c42\u591a\u79cd\u72ec\u7279\u7684\u89c1\u89e3\u3002\u5229\u7528\u8fd9\u79cd\u89c1\u89e3\u63d0\u9ad8\u521b\u65b0\u80fd\u529b\u3001\u5bf9\u60a8\u7684\u5047\u8bbe\u63d0\u51fa\u8d28\u7591\uff0c\u5e76\u964d\u4f4e\u786e\u8ba4\u504f\u5dee\u7684\u98ce\u9669\u3002\u5728\u56e2\u961f\u5185\u90e8\u63d0\u5347\u5305\u5bb9\u6027\u3001\u591a\u6837\u6027\u548c\u53ef\u8fbe\u6027\u6709\u52a9\u4e8e\u83b7\u53d6\u6709\u76ca\u7684\u89c1\u89e3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_27","title":"\u51c6\u5907","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-4","title":"OPS 4 \u5982\u4f55\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u5b9e\u73b0\u53ef\u89c2\u6d4b\u6027\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_28","title":"\u8bc6\u522b\u5173\u952e\u6027\u80fd\u6307\u6807","text":"<p>\u8981\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u5b9e\u73b0\u53ef\u89c2\u6d4b\u6027\uff0c\u9996\u5148\u8981\u4e86\u89e3\u5176\u72b6\u6001\u5e76\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u505a\u51fa\u6570\u636e\u9a71\u52a8\u578b\u51b3\u7b56\u3002\u786e\u4fdd\u76d1\u63a7\u6d3b\u52a8\u4e0e\u4e1a\u52a1\u76ee\u6807\u76f8\u4e00\u81f4\u7684\u6700\u6709\u6548\u65b9\u6cd5\u4e4b\u4e00\u662f\uff0c\u5b9a\u4e49\u548c\u76d1\u63a7\u5173\u952e\u7ee9\u6548\u6307\u6807\uff08KPI\uff09\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_29","title":"\u5b9e\u65bd\u5e94\u7528\u7a0b\u5e8f\u76d1\u63a7","text":"<p>\u5e94\u7528\u7a0b\u5e8f\u9065\u6d4b\u662f\u5b9e\u73b0\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u89c2\u6d4b\u6027\u7684\u57fa\u7840\u3002\u53d1\u5c04\u9065\u6d4b\u6570\u636e\u81f3\u5173\u91cd\u8981\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u5207\u5b9e\u53ef\u884c\u7684\u89c1\u89e3\uff0c\u8ba9\u60a8\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001\u4ee5\u53ca\u6280\u672f\u548c\u4e1a\u52a1\u6210\u679c\u7684\u5b9e\u73b0\u60c5\u51b5\u3002\u4ece\u6545\u969c\u6392\u9664\u5230\u8861\u91cf\u65b0\u529f\u80fd\u7684\u5f71\u54cd\u6216\u786e\u4fdd\u4e0e\u4e1a\u52a1\u5173\u952e\u7ee9\u6548\u6307\u6807\uff08KPI\uff09\u4fdd\u6301\u4e00\u81f4\uff0c\u5e94\u7528\u7a0b\u5e8f\u9065\u6d4b\u53ef\u4e3a\u60a8\u6784\u5efa\u3001\u64cd\u4f5c\u548c\u6f14\u8fdb\u5de5\u4f5c\u8d1f\u8f7d\u7684\u65b9\u5f0f\u63d0\u4f9b\u6307\u5bfc\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_30","title":"\u5b9e\u65bd\u7528\u6237\u4f53\u9a8c\u9065\u6d4b","text":"<p>\u6df1\u5165\u4e86\u89e3\u5ba2\u6237\u4f53\u9a8c\u4ee5\u53ca\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u771f\u5b9e\u7528\u6237\u76d1\u63a7\uff08RUM\uff09\u548c\u5408\u6210\u4ea4\u6613\u662f\u5b9e\u73b0\u6b64\u76ee\u7684\u7684\u5f3a\u5927\u5de5\u5177\u3002\u867d\u7136 RUM \u63d0\u4f9b\u6709\u5173\u771f\u5b9e\u7528\u6237\u4ea4\u4e92\u7684\u6570\u636e\uff0c\u4f46\u5408\u6210\u4ea4\u6613\u6a21\u62df\u7528\u6237\u4e92\u52a8\uff0c\u4ece\u800c\u5e2e\u52a9\u5728\u6f5c\u5728\u95ee\u9898\u5f71\u54cd\u771f\u5b9e\u7528\u6237\u4e4b\u524d\u5c31\u5c06\u5176\u68c0\u6d4b\u51fa\u6765\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_31","title":"\u5b9e\u65bd\u4f9d\u8d56\u9879\u9065\u6d4b","text":"<p>\u8981\u60f3\u76d1\u63a7\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6240\u4f9d\u8d56\u7684\u5916\u90e8\u670d\u52a1\u548c\u7ec4\u4ef6\u7684\u8fd0\u884c\u72b6\u51b5\u53ca\u6027\u80fd\uff0c\u4f9d\u8d56\u9879\u9065\u6d4b\u5fc5\u4e0d\u53ef\u5c11\u3002\u5b83\u63d0\u4f9b\u6709\u5173\u4e0e DNS\u3001\u6570\u636e\u5e93\u6216\u7b2c\u4e09\u65b9 API \u7b49\u4f9d\u8d56\u9879\u76f8\u5173\u7684\u53ef\u8bbf\u95ee\u6027\u3001\u8d85\u65f6\u53ca\u5176\u4ed6\u5173\u952e\u4e8b\u4ef6\u7684\u5b9d\u8d35\u89c1\u89e3\u3002\u901a\u8fc7\u68c0\u6d4b\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53d1\u51fa\u6709\u5173\u8fd9\u4e9b\u4f9d\u8d56\u5173\u7cfb\u7684\u6307\u6807\u3001\u65e5\u5fd7\u548c\u8ddf\u8e2a\uff0c\u60a8\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u53ef\u80fd\u5f71\u54cd\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6f5c\u5728\u74f6\u9888\u3001\u6027\u80fd\u95ee\u9898\u6216\u6545\u969c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_32","title":"\u5b9e\u65bd\u5206\u5e03\u5f0f\u8ddf\u8e2a","text":"<p>\u5206\u5e03\u5f0f\u8ddf\u8e2a\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u5728\u8bf7\u6c42\u901a\u8fc7\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5404\u4e2a\u7ec4\u4ef6\u65f6\u5bf9\u5176\u8fdb\u884c\u76d1\u63a7\u548c\u53ef\u89c6\u5316\u3002\u901a\u8fc7\u4ece\u591a\u4e2a\u6765\u6e90\u6355\u83b7\u8ddf\u8e2a\u6570\u636e\u5e76\u5728\u4e00\u4e2a\u7edf\u4e00\u89c6\u56fe\u4e2d\u5bf9\u5176\u8fdb\u884c\u5206\u6790\uff0c\u56e2\u961f\u53ef\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u8bf7\u6c42\u662f\u5982\u4f55\u6d41\u52a8\u7684\u3001\u54ea\u91cc\u5b58\u5728\u74f6\u9888\u4ee5\u53ca\u4f18\u5316\u5de5\u4f5c\u7684\u91cd\u70b9\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-5","title":"OPS 5 \u5982\u4f55\u51cf\u5c11\u7f3a\u9677\u3001\u7b80\u5316\u4fee\u590d\u548c\u6539\u8fdb\u751f\u4ea7\u6d41\u7a0b\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_33","title":"\u4f7f\u7528\u7248\u672c\u63a7\u5236","text":"<p>\u4f7f\u7528\u7248\u672c\u63a7\u5236\u6765\u8ddf\u8e2a\u66f4\u6539\u548c\u53d1\u5e03\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_34","title":"\u6d4b\u8bd5\u5e76\u9a8c\u8bc1\u53d8\u66f4","text":"<p>\u90e8\u7f72\u7684\u6bcf\u4e00\u9879\u53d8\u66f4\u90fd\u5fc5\u987b\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u4ee5\u907f\u514d\u5728\u751f\u4ea7\u4e2d\u51fa\u73b0\u9519\u8bef\u3002\u6b64\u6700\u4f73\u5b9e\u8df5\u7684\u91cd\u70b9\u662f\u6d4b\u8bd5\u4ece\u7248\u672c\u63a7\u5236\u5230\u6784\u4ef6\u6784\u5efa\u7684\u53d8\u66f4\u3002\u9664\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53d8\u66f4\u5916\uff0c\u6d4b\u8bd5\u8fd8\u5e94\u8be5\u5305\u62ec\u57fa\u7840\u8bbe\u65bd\u3001\u914d\u7f6e\u3001\u5b89\u5168\u63a7\u5236\u548c\u64cd\u4f5c\u7a0b\u5e8f\u3002\u6d4b\u8bd5\u6709\u591a\u79cd\u5f62\u5f0f\uff0c\u4ece\u5355\u5143\u6d4b\u8bd5\u5230\u8f6f\u4ef6\u7ec4\u4ef6\u5206\u6790\uff08SCA\uff09\u7b49\u7b49\u3002\u5728\u8f6f\u4ef6\u96c6\u6210\u548c\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u65e9\u8fdb\u884c\u6d4b\u8bd5\u53ef\u8fdb\u4e00\u6b65\u786e\u4fdd\u6784\u4ef6\u8d28\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_35","title":"\u4f7f\u7528\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf","text":"<p>\u4f7f\u7528\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\u6765\u5b9e\u73b0\u548c\u8ddf\u8e2a\u914d\u7f6e\u66f4\u6539\u3002\u8fd9\u4e9b\u7cfb\u7edf\u53ef\u4ee5\u51cf\u5c11\u624b\u52a8\u8fc7\u7a0b\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u5e76\u51cf\u5c11\u90e8\u7f72\u66f4\u6539\u7684\u5de5\u4f5c\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_36","title":"\u4f7f\u7528\u6784\u5efa\u548c\u90e8\u7f72\u7ba1\u7406\u7cfb\u7edf","text":"<p>\u4f7f\u7528\u6784\u5efa\u548c\u90e8\u7f72\u7ba1\u7406\u7cfb\u7edf\u3002\u8fd9\u4e9b\u7cfb\u7edf\u53ef\u4ee5\u51cf\u5c11\u624b\u52a8\u8fc7\u7a0b\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u5e76\u51cf\u5c11\u90e8\u7f72\u66f4\u6539\u7684\u5de5\u4f5c\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_37","title":"\u6267\u884c\u8865\u4e01\u7ba1\u7406","text":"<p>\u6267\u884c\u8865\u4e01\u7ba1\u7406\u4ee5\u4fbf\u5b9e\u73b0\u529f\u80fd\u3001\u89e3\u51b3\u95ee\u9898\u5e76\u4fdd\u6301\u76d1\u7ba1\u5408\u89c4\u6027\u3002\u5b9e\u73b0\u81ea\u52a8\u8865\u4e01\u7ba1\u7406\uff0c\u4ee5\u4fbf\u51cf\u5c11\u624b\u52a8\u8fc7\u7a0b\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u8fdb\u884c\u6269\u5c55\uff0c\u5e76\u51cf\u5c11\u4fee\u8865\u5de5\u4f5c\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_38","title":"\u5171\u4eab\u8bbe\u8ba1\u6807\u51c6","text":"<p>\u5728\u4e0d\u540c\u56e2\u961f\u95f4\u5171\u4eab\u6700\u4f73\u5b9e\u8df5\uff0c\u4ee5\u4fbf\u63d0\u9ad8\u8ba4\u8bc6\u5e76\u6700\u5927\u7a0b\u5ea6\u5730\u5b9e\u73b0\u5f00\u53d1\u5de5\u4f5c\u7684\u6548\u76ca\u3002\u968f\u7740\u67b6\u6784\u7684\u53d1\u5c55\uff0c\u8bb0\u5f55\u5b83\u4eec\u5e76\u4f7f\u5b83\u4eec\u4fdd\u6301\u6700\u65b0\u3002\u5982\u679c\u5728\u7ec4\u7ec7\u4e2d\u5f3a\u5236\u5b9e\u65bd\u4e86\u5171\u4eab\u6807\u51c6\uff0c\u5219\u5fc5\u987b\u5b58\u5728\u76f8\u5e94\u7684\u673a\u5236\u6765\u8bf7\u6c42\u5bf9\u6807\u51c6\u8fdb\u884c\u6dfb\u52a0\u3001\u66f4\u6539\u548c\u4f8b\u5916\u5904\u7406\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u673a\u5236\uff0c\u6807\u51c6\u5c06\u6210\u4e3a\u521b\u65b0\u7684\u7ea6\u675f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_39","title":"\u5b9e\u65bd\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u7684\u5b9e\u8df5","text":"<p>\u5b9e\u65bd\u80fd\u591f\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u5e76\u5c3d\u53ef\u80fd\u51cf\u5c11\u7f3a\u9677\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4e00\u4e9b\u793a\u4f8b\u5305\u62ec\u6d4b\u8bd5\u9a71\u52a8\u578b\u5f00\u53d1\u3001\u4ee3\u7801\u5ba1\u67e5\u3001\u6807\u51c6\u91c7\u7528\u548c\u7ed3\u5bf9\u7f16\u7a0b\u3002\u5c06\u8fd9\u4e9b\u5b9e\u8df5\u5408\u5e76\u5230\u60a8\u7684\u6301\u7eed\u96c6\u6210\u548c\u4ea4\u4ed8\u6d41\u7a0b\u4e2d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_40","title":"\u4f7f\u7528\u591a\u4e2a\u73af\u5883","text":"<p>\u4f7f\u7528\u591a\u4e2a\u73af\u5883\u6765\u8bd5\u9a8c\u3001\u5f00\u53d1\u548c\u6d4b\u8bd5\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5f53\u73af\u5883\u63a5\u8fd1\u4e8e\u751f\u4ea7\u73af\u5883\u65f6\uff0c\u9010\u6b65\u52a0\u5f3a\u63a7\u5236\uff0c\u4ee5\u786e\u4fdd\u5de5\u4f5c\u8d1f\u8f7d\u5728\u90e8\u7f72\u540e\u80fd\u591f\u6309\u9884\u671f\u8fd0\u884c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_41","title":"\u9891\u7e41\u8fdb\u884c\u53ef\u9006\u7684\u5c0f\u89c4\u6a21\u66f4\u6539","text":"<p>\u9891\u7e41\u8fdb\u884c\u53ef\u9006\u7684\u5c0f\u89c4\u6a21\u53d8\u66f4\u53ef\u4ee5\u51cf\u5c11\u53d8\u66f4\u7684\u8303\u56f4\u548c\u5f71\u54cd\u3002\u5f53\u4e0e\u53d8\u66f4\u7ba1\u7406\u7cfb\u7edf\u3001\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\u4ee5\u53ca\u6784\u5efa\u548c\u4ea4\u4ed8\u7cfb\u7edf\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u9891\u7e41\u8fdb\u884c\u53ef\u9006\u7684\u5c0f\u89c4\u6a21\u66f4\u6539\u53ef\u4ee5\u51cf\u5c11\u53d8\u66f4\u7684\u8303\u56f4\u548c\u5f71\u54cd\u3002\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u6545\u969c\u6392\u9664\u5de5\u4f5c\u7684\u6548\u679c\u3001\u52a0\u5feb\u4fee\u590d\u901f\u5ea6\uff0c\u5e76\u652f\u6301\u56de\u6eda\u66f4\u6539\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_42","title":"\u5b8c\u5168\u81ea\u52a8\u5316\u96c6\u6210\u548c\u90e8\u7f72","text":"<p>\u5b9e\u73b0\u81ea\u52a8\u6784\u5efa\u3001\u90e8\u7f72\u548c\u6d4b\u8bd5\u5de5\u4f5c\u8d1f\u8f7d\u3002\u8fd9\u53ef\u4ee5\u51cf\u5c11\u624b\u52a8\u8fc7\u7a0b\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u5e76\u51cf\u5c11\u90e8\u7f72\u66f4\u6539\u7684\u5de5\u4f5c\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-6","title":"OPS 6 \u60a8\u5982\u4f55\u7f13\u89e3\u90e8\u7f72\u98ce\u9669\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_43","title":"\u9488\u5bf9\u4e0d\u6210\u529f\u7684\u66f4\u6539\u5236\u5b9a\u8ba1\u5212","text":"<p>\u5236\u5b9a\u8ba1\u5212\uff0c\u4ee5\u4fbf\u5728\u90e8\u7f72\u6ca1\u6709\u8fbe\u5230\u671f\u671b\u7ed3\u679c\u65f6\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6062\u590d\u5230\u5df2\u77e5\u826f\u597d\u72b6\u6001\uff0c\u6216\u8005\u8fdb\u884c\u4fee\u590d\u3002\u5236\u5b9a\u4e00\u9879\u7b56\u7565\u6765\u5efa\u7acb\u8fd9\u6837\u7684\u8ba1\u5212\uff0c\u6709\u52a9\u4e8e\u6240\u6709\u56e2\u961f\u5236\u5b9a\u4ece\u5931\u8d25\u7684\u66f4\u6539\u4e2d\u6062\u590d\u7684\u7b56\u7565\u3002\u8fd9\u6837\u7684\u7b56\u7565\u793a\u4f8b\u5305\u62ec\u90e8\u7f72\u548c\u56de\u6eda\u6b65\u9aa4\u3001\u66f4\u6539\u7b56\u7565\u3001\u529f\u80fd\u6807\u8bb0\u3001\u6d41\u91cf\u9694\u79bb\u548c\u6d41\u91cf\u8f6c\u79fb\u3002\u5355\u4e2a\u53d1\u5e03\u53ef\u80fd\u5305\u62ec\u591a\u4e2a\u76f8\u5173\u7684\u7ec4\u4ef6\u66f4\u6539\u3002\u8be5\u7b56\u7565\u5e94\u63d0\u4f9b\u627f\u53d7\u4efb\u4f55\u7ec4\u4ef6\u66f4\u6539\u7684\u5931\u8d25\u6216\u4ece\u4e2d\u6062\u590d\u8fc7\u6765\u7684\u80fd\u529b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_44","title":"\u6d4b\u8bd5\u90e8\u7f72","text":"<p>\u4f7f\u7528\u4e0e\u751f\u4ea7\u73af\u5883\u76f8\u540c\u7684\u90e8\u7f72\u914d\u7f6e\u3001\u5b89\u5168\u63a7\u5236\u3001\u6b65\u9aa4\u548c\u7a0b\u5e8f\uff0c\u5728\u9884\u751f\u4ea7\u73af\u5883\u4e2d\u6d4b\u8bd5\u53d1\u5e03\u8fc7\u7a0b\u3002\u9a8c\u8bc1\u6240\u6709\u90e8\u7f72\u6b65\u9aa4\u662f\u5426\u6309\u9884\u671f\u5b8c\u6210\uff0c\u5982\u68c0\u67e5\u6587\u4ef6\u3001\u914d\u7f6e\u548c\u670d\u52a1\u3002\u901a\u8fc7\u529f\u80fd\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u548c\u8d1f\u8f7d\u6d4b\u8bd5\u4ee5\u53ca\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u7b49\u5404\u79cd\u76d1\u63a7\u65b9\u6cd5\uff0c\u8fdb\u4e00\u6b65\u6d4b\u8bd5\u6240\u6709\u66f4\u6539\u3002\u901a\u8fc7\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u60a8\u53ef\u4ee5\u53ca\u65e9\u53d1\u73b0\u90e8\u7f72\u95ee\u9898\uff0c\u5e76\u6709\u673a\u4f1a\u5728\u8fdb\u5165\u751f\u4ea7\u4e4b\u524d\u89c4\u5212\u548c\u7f13\u89e3\u95ee\u9898\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_45","title":"\u91c7\u7528\u5b89\u5168\u90e8\u7f72\u7b56\u7565","text":"<p>\u5728\u5b89\u5168\u7684\u751f\u4ea7\u73af\u5883\u6eda\u52a8\u90e8\u7f72\u4e2d\uff0c\u4f1a\u5bf9\u6709\u76ca\u66f4\u6539\u7684\u6d41\u7a0b\u8fdb\u884c\u63a7\u5236\uff0c\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u51cf\u5c11\u8fd9\u4e9b\u66f4\u6539\u8ba9\u5ba2\u6237\u611f\u77e5\u5230\u7684\u4efb\u4f55\u5f71\u54cd\u3002\u5b89\u5168\u63a7\u5236\u63aa\u65bd\u63d0\u4f9b\u68c0\u67e5\u673a\u5236\uff0c\u7528\u4e8e\u9a8c\u8bc1\u662f\u5426\u8fbe\u6210\u6240\u671f\u671b\u7684\u7ed3\u679c\uff0c\u5e76\u9488\u5bf9\u7531\u4e8e\u66f4\u6539\u6216\u90e8\u7f72\u5931\u8d25\u6240\u5f15\u5165\u7684\u4efb\u4f55\u7f3a\u9677\uff0c\u9650\u5236\u8fd9\u4e9b\u7f3a\u9677\u7684\u5f71\u54cd\u8303\u56f4\u3002\u5b89\u5168\u6eda\u52a8\u90e8\u7f72\u53ef\u5305\u62ec\u529f\u80fd\u6807\u8bb0\u3001\u5355\u76d2\u3001\u6eda\u52a8\uff08\u91d1\u4e1d\u96c0\u7248\u672c\uff09\u3001\u4e0d\u53ef\u53d8\u3001\u6d41\u91cf\u5206\u5272\u548c\u84dd\u7eff\u90e8\u7f72\u7b49\u7b56\u7565\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_46","title":"\u81ea\u52a8\u6d4b\u8bd5\u548c\u56de\u6eda","text":"<p>\u4e3a\u4e86\u63d0\u9ad8\u90e8\u7f72\u8fc7\u7a0b\u7684\u901f\u5ea6\u548c\u53ef\u9760\u6027\u4ee5\u53ca\u5bf9\u8be5\u8fc7\u7a0b\u7684\u4fe1\u5fc3\uff0c\u60a8\u9700\u8981\u5236\u5b9a\u4e00\u9879\u7b56\u7565\uff0c\u7528\u4e8e\u5728\u9884\u751f\u4ea7\u548c\u751f\u4ea7\u73af\u5883\u4e2d\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u6d4b\u8bd5\u548c\u56de\u6eda\u529f\u80fd\u3002\u5728\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u65f6\u81ea\u52a8\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6a21\u62df\u4eba\u4e0e\u7cfb\u7edf\u7684\u4ea4\u4e92\uff0c\u4ece\u800c\u9a8c\u8bc1\u5df2\u7ecf\u90e8\u7f72\u4e86\u66f4\u6539\u3002\u5229\u7528\u81ea\u52a8\u56de\u6eda\u529f\u80fd\uff0c\u53ef\u4ee5\u5feb\u901f\u6062\u590d\u5230\u5148\u524d\u5df2\u77e5\u7684\u826f\u597d\u72b6\u6001\u3002\u56de\u6eda\u5e94\u5728\u9884\u5148\u5b9a\u4e49\u7684\u6761\u4ef6\u4e0b\u81ea\u52a8\u542f\u52a8\uff0c\u4f8b\u5982\u66f4\u6539\u672a\u8fbe\u5230\u671f\u671b\u7ed3\u679c\u6216\u81ea\u52a8\u5316\u6d4b\u8bd5\u5931\u8d25\u65f6\u3002\u81ea\u52a8\u6267\u884c\u8fd9\u4e24\u9879\u6d3b\u52a8\u53ef\u4ee5\u63d0\u9ad8\u90e8\u7f72\u7684\u6210\u529f\u7387\uff0c\u5c3d\u53ef\u80fd\u7f29\u77ed\u6062\u590d\u65f6\u95f4\uff0c\u5e76\u51cf\u5c11\u53ef\u80fd\u5bf9\u4e1a\u52a1\u9020\u6210\u7684\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-7","title":"OPS 7 \u5982\u4f55\u77e5\u9053\u60a8\u5df2\u7ecf\u51c6\u5907\u597d\u652f\u6301\u67d0\u79cd\u5de5\u4f5c\u8d1f\u8f7d\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_47","title":"\u786e\u4fdd\u5458\u5de5\u80fd\u529b","text":"<p>\u901a\u8fc7\u4e00\u79cd\u673a\u5236\u6765\u9a8c\u8bc1\u60a8\u662f\u5426\u6709\u9002\u5f53\u6570\u91cf\u8bad\u7ec3\u6709\u7d20\u7684\u5458\u5de5\u6765\u652f\u6301\u5de5\u4f5c\u8d1f\u8f7d\u3002\u4ed6\u4eec\u5fc5\u987b\u63a5\u53d7\u6784\u6210\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5e73\u53f0\u548c\u670d\u52a1\u65b9\u9762\u7684\u57f9\u8bad\u3002\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u8fd0\u8425\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u77e5\u8bc6\u3002\u60a8\u5fc5\u987b\u6709\u8db3\u591f\u8bad\u7ec3\u6709\u7d20\u7684\u5458\u5de5\u6765\u652f\u6301\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6b63\u5e38\u8fd0\u8425\u548c\u6392\u67e5\u53d1\u751f\u7684\u610f\u5916\u4e8b\u4ef6\u3002\u62e5\u6709\u8db3\u591f\u7684\u5458\u5de5\u8f6e\u6d41\u503c\u73ed\u548c\u4f11\u5047\uff0c\u907f\u514d\u75b2\u52b3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_48","title":"\u786e\u4fdd\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5bf9\u8fd0\u7ef4\u51c6\u5907\u60c5\u51b5\u8fdb\u884c\u5ba1\u6838","text":"<p>\u4f7f\u7528\u8fd0\u7ef4\u51c6\u5907\u60c5\u51b5\u5ba1\u67e5\uff08ORR\uff0cOperational Readiness Review\uff09\uff0c\u786e\u4fdd\u53ef\u4ee5\u8fd0\u8425\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002ORR \u662f Amazon \u5f00\u53d1\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u9a8c\u8bc1\u56e2\u961f\u53ef\u4ee5\u5b89\u5168\u5730\u8fd0\u8425\u5176\u5de5\u4f5c\u8d1f\u8f7d\u3002ORR \u662f\u4e00\u4e2a\u4f7f\u7528\u8981\u6c42\u6838\u5bf9\u6e05\u5355\u8fdb\u884c\u5ba1\u67e5\u548c\u68c0\u67e5\u7684\u8fc7\u7a0b\u3002ORR \u662f\u4e00\u79cd\u81ea\u52a9\u670d\u52a1\u4f53\u9a8c\uff0c\u4f9b\u56e2\u961f\u7528\u4e8e\u9a8c\u8bc1\u5176\u5de5\u4f5c\u8d1f\u8f7d\u3002ORR \u4e2d\u5305\u542b\u7684\u6700\u4f73\u5b9e\u8df5\u6e90\u81ea\u6211\u4eec\u591a\u5e74\u6784\u5efa\u8f6f\u4ef6\u7684\u7ecf\u9a8c\u6559\u8bad\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_49","title":"\u4f7f\u7528\u8fd0\u7ef4\u624b\u518c\u6765\u6267\u884c\u7a0b\u5e8f","text":"<p>\u8fd0\u884c\u624b\u518c\u662f\u5b9e\u73b0\u7279\u5b9a\u7ed3\u679c\u7684\u4e66\u9762\u6d41\u7a0b\u3002\u8fd0\u884c\u624b\u518c\u7531\u67d0\u4eba\u4e3a\u5b8c\u6210\u67d0\u4ef6\u4e8b\u800c\u9075\u5faa\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u7ec4\u6210\u3002\u65e9\u5728\u822a\u7a7a\u53d1\u5c55\u7684\u65e9\u671f\uff0c\u8fd0\u884c\u624b\u518c\u4fbf\u5df2\u7528\u4e8e\u8fd0\u8425\u3002\u5728\u4e91\u8fd0\u8425\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u8fd0\u884c\u624b\u518c\u6765\u964d\u4f4e\u98ce\u9669\u5e76\u5b9e\u73b0\u9884\u671f\u7ed3\u679c\u3002\u7b80\u5355\u800c\u8a00\uff0c\u8fd0\u884c\u624b\u518c\u5c31\u662f\u5b8c\u6210\u4e00\u9879\u4efb\u52a1\u7684\u6838\u5bf9\u6e05\u5355\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_50","title":"\u4f7f\u7528\u884c\u52a8\u624b\u518c\u8c03\u67e5\u95ee\u9898","text":"<p>\u884c\u52a8\u624b\u518c\u662f\u7528\u4e8e\u8c03\u67e5\u4e8b\u4ef6\u7684\u5206\u6b65\u6307\u5357\u3002\u53d1\u751f\u4e8b\u4ef6\u65f6\uff0c\u884c\u52a8\u624b\u518c\u7528\u4e8e\u5f00\u5c55\u8c03\u67e5\uff0c\u4ee5\u53ca\u786e\u5b9a\u5f71\u54cd\u7684\u8303\u56f4\u548c\u6839\u672c\u539f\u56e0\u3002\u884c\u52a8\u624b\u518c\u53ef\u7528\u4e8e\u4ece\u5931\u8d25\u7684\u90e8\u7f72\u5230\u5b89\u5168\u4e8b\u4ef6\u7684\u5404\u79cd\u573a\u666f\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u884c\u52a8\u624b\u518c\u53ef\u786e\u5b9a\u6839\u672c\u539f\u56e0\uff0c\u800c\u8fd0\u884c\u624b\u518c\u53ef\u7528\u6765\u7f13\u89e3\u5176\u5e26\u6765\u7684\u98ce\u9669\u3002\u884c\u52a8\u624b\u518c\u662f\u8d35\u7ec4\u7ec7\u4e8b\u4ef6\u54cd\u5e94\u8ba1\u5212\u7684\u5fc5\u8981\u7ec4\u6210\u90e8\u5206\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_51","title":"\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\u6765\u90e8\u7f72\u7cfb\u7edf\u548c\u66f4\u6539","text":"<p>\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u529f\u548c\u4e0d\u6210\u529f\u53d8\u66f4\u5236\u5b9a\u6070\u5f53\u7684\u6d41\u7a0b\u3002\u6545\u969c\u6f14\u7ec3\u662f\u4e00\u79cd\u6f14\u4e60\uff0c\u56e2\u961f\u6a21\u62df\u53d1\u751f\u6545\u969c\u7684\u60c5\u51b5\u6765\u5236\u5b9a\u7f13\u89e3\u7b56\u7565\u3002\u4f7f\u7528\u6545\u969c\u6f14\u7ec3\u6765\u9884\u6d4b\u6545\u969c\uff0c\u5e76\u5728\u9002\u5f53\u7684\u65f6\u5019\u521b\u5efa\u7a0b\u5e8f\u3002\u8bc4\u4f30\u5c06\u53d8\u66f4\u90e8\u7f72\u5230\u5de5\u4f5c\u8d1f\u8f7d\u6240\u83b7\u5f97\u597d\u5904\u548c\u4ea7\u751f\u7684\u98ce\u9669\u3002\u786e\u8ba4\u6240\u6709\u53d8\u66f4\u7b26\u5408\u76d1\u7ba1\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_52","title":"\u4e3a\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u521b\u5efa\u652f\u6301\u8ba1\u5212","text":"<p>\u4e3a\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u6240\u4f9d\u8d56\u7684\u6240\u6709\u8f6f\u4ef6\u548c\u670d\u52a1\u542f\u7528\u652f\u6301\u3002\u9009\u62e9\u9002\u5f53\u7684\u652f\u6301\u7ea7\u522b\u4ee5\u6ee1\u8db3\u60a8\u7684\u751f\u4ea7\u670d\u52a1\u7ea7\u522b\u9700\u6c42\u3002\u4ee5\u9632\u51fa\u73b0\u670d\u52a1\u4e2d\u65ad\u6216\u8f6f\u4ef6\u95ee\u9898\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u9879\u7684\u652f\u6301\u8ba1\u5212\u662f\u5fc5\u9700\u7684\u3002\u8bb0\u5f55\u652f\u6301\u8ba1\u5212\u4ee5\u53ca\u5982\u4f55\u8981\u6c42\u6240\u6709\u670d\u52a1\u548c\u8f6f\u4ef6\u4f9b\u5e94\u5546\u63d0\u4f9b\u652f\u6301\u3002\u5b9e\u65bd\u673a\u5236\u4ee5\u786e\u8ba4\u4e3b\u8981\u652f\u6301\u8054\u7cfb\u4eba\u7684\u4fe1\u606f\u4fdd\u6301\u6700\u65b0\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_53","title":"\u8fd0\u8425","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-8","title":"OPS 8 \u5982\u4f55\u5728\u7ec4\u7ec7\u4e2d\u5229\u7528\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u89c2\u6d4b\u6027\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_54","title":"\u521b\u5efa\u53ef\u884c\u7684\u63d0\u9192","text":"<p>\u53ca\u65f6\u68c0\u6d4b\u548c\u54cd\u5e94\u5e94\u7528\u7a0b\u5e8f\u884c\u4e3a\u7684\u504f\u5dee\u81f3\u5173\u91cd\u8981\u3002\u5c24\u5176\u91cd\u8981\u7684\u662f\uff0c\u8bc6\u522b\u57fa\u4e8e\u5173\u952e\u7ee9\u6548\u6307\u6807\uff08KPI\uff09\u7684\u7ed3\u679c\u4f55\u65f6\u5904\u4e8e\u98ce\u9669\u5f53\u4e2d\uff0c\u6216\u4f55\u65f6\u51fa\u73b0\u610f\u5916\u7684\u5f02\u5e38\u60c5\u51b5\u3002\u57fa\u4e8e KPI \u7684\u8b66\u62a5\u53ef\u786e\u4fdd\u60a8\u6536\u5230\u7684\u4fe1\u53f7\u4e0e\u4e1a\u52a1\u6216\u8fd0\u8425\u5f71\u54cd\u76f4\u63a5\u76f8\u5173\u3002\u8fd9\u79cd\u53ef\u64cd\u4f5c\u8b66\u62a5\u7684\u65b9\u6cd5\u53ef\u4fc3\u8fdb\u4e3b\u52a8\u54cd\u5e94\uff0c\u5e76\u6709\u52a9\u4e8e\u7ef4\u62a4\u7cfb\u7edf\u6027\u80fd\u548c\u53ef\u9760\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_55","title":"\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u6307\u6807","text":"<p>\u5b9e\u65bd\u5e94\u7528\u7a0b\u5e8f\u9065\u6d4b\u540e\uff0c\u5b9a\u671f\u5206\u6790\u6536\u96c6\u7684\u6307\u6807\u3002\u867d\u7136\u5ef6\u8fdf\u3001\u8bf7\u6c42\u3001\u9519\u8bef\u548c\u5bb9\u91cf\uff08\u6216\u914d\u989d\uff09\u6709\u52a9\u4e8e\u6df1\u5165\u4e86\u89e3\u7cfb\u7edf\u6027\u80fd\uff0c\u4f46\u4f18\u5148\u5ba1\u67e5\u4e1a\u52a1\u6210\u679c\u6307\u6807\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u60a8\u505a\u51fa\u4e0e\u4e1a\u52a1\u76ee\u6807\u76f8\u4e00\u81f4\u7684\u6570\u636e\u9a71\u52a8\u578b\u51b3\u7b56\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_56","title":"\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u65e5\u5fd7","text":"<p>\u5b9a\u671f\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u65e5\u5fd7\u5bf9\u4e8e\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd0\u884c\u81f3\u5173\u91cd\u8981\u3002\u901a\u8fc7\u9ad8\u6548\u5730\u7b5b\u9009\u3001\u4ee5\u53ef\u89c6\u5316\u65b9\u5f0f\u5448\u73b0\u548c\u89e3\u91ca\u65e5\u5fd7\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u6301\u7eed\u4f18\u5316\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u548c\u5b89\u5168\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_57","title":"\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u8ddf\u8e2a","text":"<p>\u5206\u6790\u8ddf\u8e2a\u6570\u636e\u5bf9\u4e8e\u5168\u9762\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd0\u8425\u8fc7\u7a0b\u81f3\u5173\u91cd\u8981\u3002\u901a\u8fc7\u4ee5\u53ef\u89c6\u5316\u65b9\u5f0f\u5448\u73b0\u548c\u7406\u89e3\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u53ef\u4ee5\u5fae\u8c03\u6027\u80fd\uff0c\u8bc6\u522b\u74f6\u9888\uff0c\u5e76\u589e\u5f3a\u7528\u6237\u4f53\u9a8c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_58","title":"\u521b\u5efa\u63a7\u5236\u9762\u677f","text":"<p>\u63a7\u5236\u9762\u677f\u662f\u4ee5\u4eba\u4e3a\u672c\u7684\u89c6\u56fe\uff0c\u53ef\u7528\u4e8e\u67e5\u770b\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9065\u6d4b\u6570\u636e\u3002\u867d\u7136\u5b83\u4eec\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u53ef\u89c6\u5316\u754c\u9762\uff0c\u4f46\u5b83\u4eec\u4e0d\u5e94\u53d6\u4ee3\u8b66\u62a5\u673a\u5236\uff0c\u800c\u662f\u8865\u5145\u8b66\u62a5\u673a\u5236\u3002\u5982\u679c\u7cbe\u5fc3\u8bbe\u8ba1\uff0c\u5b83\u4eec\u4e0d\u4ec5\u80fd\u8fc5\u901f\u6d1e\u5bdf\u7cfb\u7edf\u7684\u8fd0\u884c\u72b6\u51b5\u548c\u6027\u80fd\uff0c\u8fd8\u80fd\u4e3a\u5229\u76ca\u76f8\u5173\u65b9\u63d0\u4f9b\u6709\u5173\u4e1a\u52a1\u6210\u679c\u548c\u95ee\u9898\u5f71\u54cd\u7684\u5b9e\u65f6\u4fe1\u606f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-9","title":"OPS 9 \u60a8\u5982\u4f55\u4e86\u89e3\u81ea\u5df1\u7684\u8fd0\u8425\u72b6\u51b5\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#kpi","title":"\u4f7f\u7528\u6307\u6807\u8861\u91cf\u8fd0\u8425\u76ee\u6807\u548c KPI","text":"<p>\u4ece\u60a8\u7684\u7ec4\u7ec7\u83b7\u53d6\u5b9a\u4e49\u8fd0\u8425\u6210\u529f\u7684\u76ee\u6807\u548c KPI\uff0c\u5e76\u786e\u5b9a\u53cd\u6620\u8fd9\u4e9b\u76ee\u6807\u548c KPI \u7684\u6307\u6807\u3002\u5c06\u57fa\u7ebf\u8bbe\u7f6e\u4e3a\u53c2\u8003\u70b9\uff0c\u5e76\u5b9a\u671f\u91cd\u65b0\u8bc4\u4f30\u3002\u5236\u5b9a\u673a\u5236\uff0c\u4ece\u56e2\u961f\u90a3\u91cc\u6536\u96c6\u8fd9\u4e9b\u6307\u6807\u4ee5\u4f9b\u8bc4\u4f30\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_59","title":"\u5c55\u73b0\u72b6\u51b5\u548c\u8d8b\u52bf\uff0c\u786e\u4fdd\u8fd0\u8425\u53ef\u89c1\u6027","text":"<p>\u4e86\u89e3\u8fd0\u8425\u72b6\u51b5\u53ca\u5176\u8d8b\u52bf\u975e\u5e38\u6709\u5fc5\u8981\uff0c\u8fd9\u6837\u624d\u80fd\u786e\u5b9a\u7ed3\u679c\u4f55\u65f6\u53ef\u80fd\u9762\u4e34\u98ce\u9669\u3001\u662f\u5426\u53ef\u4ee5\u652f\u6301\u65b0\u589e\u7684\u5de5\u4f5c\uff0c\u6216\u8005\u53d8\u66f4\u5bf9\u56e2\u961f\u7684\u5f71\u54cd\u3002\u5728\u8fd0\u8425\u4e8b\u4ef6\u671f\u95f4\uff0c\u62e5\u6709\u7528\u6237\u548c\u8fd0\u8425\u56e2\u961f\u53ef\u4ee5\u53c2\u8003\u7684\u72b6\u6001\u9875\u9762\u4ee5\u83b7\u53d6\u4fe1\u606f\uff0c\u53ef\u4ee5\u51cf\u8f7b\u6c9f\u901a\u6e20\u9053\u7684\u538b\u529b\u5e76\u4e3b\u52a8\u4f20\u64ad\u4fe1\u606f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_60","title":"\u5ba1\u67e5\u8fd0\u8425\u6307\u6807\u5e76\u786e\u5b9a\u6539\u8fdb\u7684\u4f18\u5148\u987a\u5e8f","text":"<p>\u7559\u51fa\u4e13\u95e8\u7684\u65f6\u95f4\u548c\u8d44\u6e90\u6765\u5ba1\u67e5\u8fd0\u8425\u72b6\u51b5\uff0c\u53ef\u786e\u4fdd\u4e3a\u65e5\u5e38\u4e1a\u52a1\u63d0\u4f9b\u670d\u52a1\u59cb\u7ec8\u662f\u4f18\u5148\u4e8b\u9879\u3002\u53ec\u96c6\u8fd0\u8425\u4e3b\u7ba1\u548c\u5229\u76ca\u76f8\u5173\u65b9\uff0c\u5b9a\u671f\u5ba1\u67e5\u6307\u6807\uff0c\u91cd\u7533\u6216\u4fee\u6539\u957f\u671f\u548c\u77ed\u671f\u76ee\u6807\uff0c\u5e76\u786e\u5b9a\u6539\u8fdb\u7684\u4f18\u5148\u987a\u5e8f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-10","title":"OPS 10 \u60a8\u5982\u4f55\u5e94\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u4e8b\u4ef6\u548c\u8fd0\u8425\u4e8b\u4ef6\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_61","title":"\u4f7f\u7528\u6d41\u7a0b\u6765\u7ba1\u7406\u4e8b\u4ef6\u3001\u610f\u5916\u4e8b\u4ef6\u548c\u95ee\u9898","text":"<p>\u8d35\u7ec4\u7ec7\u62e5\u6709\u5904\u7406\u4e8b\u4ef6\u3001\u610f\u5916\u4e8b\u4ef6\u548c\u95ee\u9898\u7684\u6d41\u7a0b\u3002\u4e8b\u4ef6\u662f\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u53d1\u751f\u4f46\u53ef\u80fd\u4e0d\u9700\u8981\u5e72\u9884\u7684\u4e8b\u60c5\u3002\u610f\u5916\u4e8b\u4ef6\u662f\u9700\u8981\u5e72\u9884\u7684\u4e8b\u4ef6\u3002\u95ee\u9898\u662f\u9700\u8981\u5e72\u9884\u6216\u65e0\u6cd5\u89e3\u51b3\u7684\u53cd\u590d\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u60a8\u9700\u8981\u4e00\u4e9b\u6d41\u7a0b\u6765\u51cf\u8f7b\u8fd9\u4e9b\u4e8b\u4ef6\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\uff0c\u5e76\u786e\u4fdd\u505a\u51fa\u9002\u5f53\u7684\u54cd\u5e94\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_62","title":"\u9488\u5bf9\u6bcf\u4e2a\u63d0\u9192\u8bbe\u7f6e\u4e00\u4e2a\u6d41\u7a0b","text":"<p>\u9488\u5bf9\u5f15\u53d1\u63d0\u9192\u7684\u4efb\u4f55\u4e8b\u4ef6\u5236\u5b9a\u660e\u786e\u7684\u54cd\u5e94\u63aa\u65bd\uff08\u8fd0\u7ef4\u624b\u518c\u6216\u7ba1\u7406\u624b\u518c\uff09\uff0c\u5e76\u660e\u786e\u6307\u5b9a\u8d1f\u8d23\u4eba\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u60a8\u53ca\u65f6\u6709\u6548\u5730\u54cd\u5e94\u8fd0\u8425\u4e8b\u4ef6\uff0c\u5e76\u9632\u6b62\u53ef\u4ee5\u9488\u5bf9\u5176\u91c7\u53d6\u63aa\u65bd\u7684\u4e8b\u4ef6\u88ab\u4e0d\u91cd\u8981\u7684\u901a\u77e5\u6240\u63a9\u76d6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_63","title":"\u6839\u636e\u4e1a\u52a1\u5f71\u54cd\u786e\u5b9a\u8fd0\u8425\u4e8b\u4ef6\u7684\u4f18\u5148\u987a\u5e8f","text":"<p>\u786e\u4fdd\u5728\u591a\u4e2a\u4e8b\u4ef6\u9700\u8981\u5e72\u9884\u65f6\uff0c\u4f18\u5148\u5904\u7406\u5bf9\u4e1a\u52a1\u6700\u4e3a\u91cd\u8981\u7684\u4e8b\u4ef6\u3002\u4eba\u8eab\u4f24\u4ea1\u3001\u7ecf\u6d4e\u635f\u5931\u3001\u540d\u8a89\u6216\u4fe1\u4efb\u635f\u5bb3\u90fd\u662f\u4e00\u79cd\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_64","title":"\u5b9a\u4e49\u4e0a\u62a5\u8def\u5f84","text":"<p>\u5728\u8fd0\u7ef4\u624b\u518c\u548c\u7ba1\u7406\u624b\u518c\u4e2d\u5b9a\u4e49\u4e0a\u62a5\u8def\u5f84\uff0c\u5305\u62ec\u89e6\u53d1\u4e0a\u62a5\u7684\u4e8b\u4ef6\u548c\u4e0a\u62a5\u7a0b\u5e8f\u3002\u660e\u786e\u6307\u5b9a\u6bcf\u9879\u63aa\u65bd\u7684\u8d1f\u8d23\u4eba\uff0c\u4ee5\u4fbf\u786e\u4fdd\u6709\u6548\u800c\u53ca\u65f6\u5730\u54cd\u5e94\u8fd0\u8425\u4e8b\u4ef6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_65","title":"\u5b9a\u4e49\u4e2d\u65ad\u65f6\u7684\u5ba2\u6237\u901a\u4fe1\u8ba1\u5212","text":"<p>\u5b9a\u4e49\u548c\u6d4b\u8bd5\u7cfb\u7edf\u4e2d\u65ad\u65f6\u7684\u6c9f\u901a\u8ba1\u5212\uff0c\u60a8\u53ef\u4ee5\u4f9d\u8d56\u6b64\u8ba1\u5212\u5728\u4e2d\u65ad\u671f\u95f4\u8ba9\u5ba2\u6237\u548c\u5229\u76ca\u6538\u5173\u65b9\u4e86\u89e3\u60c5\u51b5\u3002\u5f53\u7528\u6237\u4f7f\u7528\u7684\u670d\u52a1\u53d7\u5230\u5f71\u54cd\u548c\u670d\u52a1\u6062\u590d\u6b63\u5e38\u65f6\u76f4\u63a5\u4f20\u8fbe\u7ed9\u7528\u6237\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_66","title":"\u901a\u8fc7\u63a7\u5236\u9762\u677f\u5c55\u73b0\u72b6\u51b5\u4fe1\u606f","text":"<p>\u63d0\u4f9b\u4e3a\u76ee\u6807\u53d7\u4f17\uff08\u4f8b\u5982\u5185\u90e8\u6280\u672f\u56e2\u961f\u3001\u9886\u5bfc\u548c\u5ba2\u6237\uff09\u4e13\u95e8\u8bbe\u8ba1\u7684\u63a7\u5236\u9762\u677f\uff0c\u4ee5\u4f20\u8fbe\u4e1a\u52a1\u5f53\u524d\u7684\u8fd0\u8425\u72b6\u51b5\u5e76\u63d0\u4f9b\u503c\u5f97\u5173\u6ce8\u7684\u6307\u6807\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_67","title":"\u81ea\u52a8\u54cd\u5e94\u4e8b\u4ef6","text":"<p>\u81ea\u52a8\u54cd\u5e94\u4e8b\u4ef6\u4ee5\u4fbf\u51cf\u5c11\u7531\u624b\u52a8\u6d41\u7a0b\u5f15\u8d77\u7684\u9519\u8bef\uff0c\u5e76\u786e\u4fdd\u54cd\u5e94\u53ca\u65f6\u5e76\u4e14\u4e00\u81f4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_68","title":"\u53d1\u5c55","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#ops-11","title":"OPS 11 \u5982\u4f55\u6539\u8fdb\u8fd0\u8425\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_69","title":"\u8bbe\u7f6e\u6301\u7eed\u6539\u8fdb\u6d41\u7a0b","text":"<p>\u6839\u636e\u5185\u90e8\u548c\u5916\u90e8\u67b6\u6784\u6700\u4f73\u5b9e\u8df5\u8bc4\u4f30\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u81f3\u5c11\u6bcf\u5e74\u6267\u884c\u4e00\u6b21\u5de5\u4f5c\u8d1f\u8f7d\u5ba1\u6838\u3002\u5c06\u6539\u8fdb\u673a\u4f1a\u4f18\u5148\u7eb3\u5165\u60a8\u7684\u8f6f\u4ef6\u5f00\u53d1\u5468\u671f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_70","title":"\u5728\u610f\u5916\u4e8b\u4ef6\u53d1\u751f\u540e\u6267\u884c\u5206\u6790","text":"<p>\u5ba1\u6838\u5f71\u54cd\u5ba2\u6237\u7684\u4e8b\u4ef6\uff0c\u786e\u5b9a\u5bfc\u81f4\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u56e0\u7d20\u548c\u9884\u9632\u63aa\u65bd\u3002\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u5236\u5b9a\u7f13\u89e3\u63aa\u65bd\uff0c\u4ee5\u9650\u5236\u6216\u9632\u6b62\u518d\u6b21\u53d1\u751f\u540c\u7c7b\u4e8b\u4ef6\u3002\u5236\u5b9a\u7a0b\u5e8f\u4ee5\u8fc5\u901f\u6709\u6548\u5730\u505a\u51fa\u54cd\u5e94\u3002\u6839\u636e\u76ee\u6807\u53d7\u4f17\uff0c\u9002\u5f53\u4f20\u8fbe\u4e8b\u4ef6\u6210\u56e0\u548c\u7ea0\u6b63\u63aa\u65bd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_71","title":"\u8bbe\u7f6e\u53cd\u9988\u73af\u8def","text":"<p>\u53cd\u9988\u73af\u8def\u63d0\u4f9b\u4e86\u53ef\u64cd\u4f5c\u7684\u89c1\u89e3\uff0c\u8fdb\u800c\u63a8\u52a8\u51b3\u7b56\u7684\u5236\u5b9a\u3002\u5c06\u53cd\u9988\u73af\u8def\u878d\u5165\u8fc7\u7a0b\u548c\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u3002\u8fd9\u53ef\u5e2e\u52a9\u60a8\u786e\u5b9a\u95ee\u9898\u548c\u9700\u8981\u6539\u8fdb\u7684\u9886\u57df\u3002\u5b83\u4eec\u8fd8\u53ef\u4ee5\u9a8c\u8bc1\u5728\u6539\u8fdb\u65b9\u9762\u6240\u505a\u7684\u6295\u5165\u3002\u8fd9\u4e9b\u53cd\u9988\u73af\u8def\u4e3a\u6301\u7eed\u6539\u8fdb\u5de5\u4f5c\u8d1f\u8f7d\u5960\u5b9a\u4e86\u57fa\u7840\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_72","title":"\u6267\u884c\u77e5\u8bc6\u7ba1\u7406","text":"<p>\u77e5\u8bc6\u7ba1\u7406\u5e2e\u52a9\u56e2\u961f\u6210\u5458\u627e\u5230\u5b8c\u6210\u4ed6\u4eec\u7684\u5de5\u4f5c\u6240\u9700\u7684\u4fe1\u606f\u3002\u5728\u5b66\u4e60\u578b\u7ec4\u7ec7\u4e2d\uff0c\u81ea\u7531\u5206\u4eab\u4fe1\u606f\uff0c\u4ece\u800c\u589e\u5f3a\u4e2a\u4eba\u7684\u80fd\u529b\u3002\u53ef\u4ee5\u53d1\u73b0\u548c\u641c\u7d22\u4fe1\u606f\u3002\u4fe1\u606f\u51c6\u786e\u4e14\u4fdd\u6301\u6700\u65b0\u3002\u5236\u5b9a\u6709\u521b\u5efa\u65b0\u4fe1\u606f\u3001\u66f4\u65b0\u73b0\u6709\u4fe1\u606f\u548c\u5f52\u6863\u8fc7\u65f6\u4fe1\u606f\u7684\u673a\u5236\u3002\u77e5\u8bc6\u7ba1\u7406\u5e73\u53f0\u7684\u6700\u5e38\u89c1\u4f8b\u5b50\u662f\u50cf Wiki \u8fd9\u6837\u7684\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_73","title":"\u786e\u5b9a\u63a8\u52a8\u6539\u8fdb\u7684\u56e0\u7d20","text":"<p>\u786e\u5b9a\u63a8\u52a8\u6539\u8fdb\u7684\u56e0\u7d20\uff0c\u4ee5\u4fbf\u8bc4\u4f30\u5404\u79cd\u673a\u4f1a\u5e76\u786e\u5b9a\u5176\u4f18\u5148\u987a\u5e8f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_74","title":"\u9a8c\u8bc1\u5206\u6790\u7ed3\u679c","text":"<p>\u4e0e\u8de8\u804c\u80fd\u56e2\u961f\u548c\u4e1a\u52a1\u8d1f\u8d23\u4eba\u5171\u540c\u67e5\u770b\u5206\u6790\u7ed3\u679c\u548c\u54cd\u5e94\u63aa\u65bd\u3002\u901a\u8fc7\u8fd9\u4e9b\u5de5\u4f5c\u6765\u5efa\u7acb\u5171\u8bc6\u3001\u53d1\u73b0\u5176\u4ed6\u5f71\u54cd\u5e76\u786e\u5b9a\u884c\u52a8\u65b9\u6848\u3002\u9002\u5f53\u8c03\u6574\u54cd\u5e94\u63aa\u65bd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_75","title":"\u5ba1\u6838\u8fd0\u8425\u6307\u6807","text":"<p>\u5b9a\u671f\u4e0e\u6765\u81ea\u4e0d\u540c\u4e1a\u52a1\u9886\u57df\u7684\u8de8\u56e2\u961f\u53c2\u4e0e\u8005\u5bf9\u8fd0\u8425\u6307\u6807\u8fdb\u884c\u56de\u987e\u6027\u5206\u6790\u3002\u901a\u8fc7\u8fd9\u4e9b\u5206\u6790\u6765\u786e\u5b9a\u6539\u8fdb\u673a\u4f1a\u548c\u53ef\u80fd\u7684\u884c\u52a8\u65b9\u6848\uff0c\u5e76\u5206\u4eab\u7ecf\u9a8c\u6559\u8bad\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_76","title":"\u8bb0\u5f55\u548c\u5206\u4eab\u7ecf\u9a8c\u6559\u8bad","text":"<p>\u8bb0\u5f55\u548c\u5206\u4eab\u5728\u8fd0\u8425\u6d3b\u52a8\u4e2d\u83b7\u5f97\u7684\u7ecf\u9a8c\u6559\u8bad\uff0c\u4ee5\u4fbf\u5728\u5185\u90e8\u548c\u4e0d\u540c\u56e2\u961f\u4e2d\u5229\u7528\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8D%93%E8%B6%8A%E8%BF%90%E8%90%A5-Operational-Excellence-202310-Summary/#_77","title":"\u5206\u914d\u65f6\u95f4\u8fdb\u884c\u6539\u8fdb","text":"<p>\u6d41\u7a0b\u4e2d\u4e13\u7528\u7684\u65f6\u95f4\u548c\u8d44\u6e90\u53ef\u4ee5\u5b9e\u73b0\u6301\u7eed\u589e\u91cf\u6539\u8fdb\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/","title":"WA-\u53ef\u6301\u7eed\u6027-Sustainability-202310-Summary","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_1","title":"\u8bbe\u8ba1\u539f\u5219","text":"<pre><code>collapse: close\ntitle:  \u4e86\u89e3\u60a8\u7684\u5f71\u54cd\n\n\u8861\u91cf\u60a8\u7684\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f71\u54cd\u5e76\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u672a\u6765\u5f71\u54cd\u5efa\u6a21\u3002\u5305\u62ec\u6240\u6709\u5f71\u54cd\u6765\u6e90\uff0c\u5305\u62ec\u5ba2\u6237\u4f7f\u7528\u60a8\u7684\u4ea7\u54c1\u6240\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u4ee5\u53ca\u4ea7\u54c1\u6700\u7ec8\u9000\u5f79\u548c\u9000\u5f79\u6240\u4ea7\u751f\u7684\u5f71\u54cd\u3002\u6bd4\u8f83\u751f\u4ea7\u6027\u4ea7\u51fa. \u901a\u8fc7\u67e5\u770b\u6bcf\u4e2a\u5de5\u4f5c\u5355\u5143\u6240\u9700\u7684\u8d44\u6e90\u548c\u6392\u653e\u91cf\uff0c\u4e86\u89e3\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7684\u603b\u4f53\u5f71\u54cd\u3002\u4f7f\u7528\u6b64\u6570\u636e\u6765\u5efa\u7acb\u5173\u952e\u7ee9\u6548\u6307\u6807 (KPI)\uff0c\u8bc4\u4f30\u5728\u964d\u4f4e\u5f71\u54cd\u7684\u540c\u65f6\u63d0\u9ad8\u751f\u4ea7\u529b\u7684\u65b9\u6cd5\uff0c\u5e76\u4f30\u8ba1\u63d0\u8bae\u7684\u53d8\u66f4\u7684\u5f71\u54cd\u65f6\u95f4..\n</code></pre> <pre><code>collapse: close\ntitle:  \u5efa\u7acb\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\n\n\u9488\u5bf9\u6bcf\u4e2a\u4e91\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5efa\u7acb\u957f\u671f\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\uff0c\u4f8b\u5982\u51cf\u5c11\u6bcf\u7b14\u4ea4\u6613\u6240\u9700\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u8d44\u6e90\u3002\u4e3a\u73b0\u6709\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u6539\u8fdb\u7684\u6295\u8d44\u56de\u62a5\u5efa\u6a21\uff0c\u5e76\u4e3a\u6240\u6709\u8005\u63d0\u4f9b\u6295\u8d44\u4e8e\u53ef\u6301\u7eed\u53d1\u5c55\u6240\u9700\u7684\u8d44\u6e90\u76ee\u6807\u53ef\u5e2e\u52a9\u60a8\u652f\u6301\u60a8\u7684\u4f01\u4e1a\u6216\u7ec4\u7ec7\u66f4\u5e7f\u6cdb\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u3001\u8bc6\u522b\u56de\u5f52\u5e76\u786e\u5b9a\u6f5c\u5728\u6539\u8fdb\u9886\u57df\u7684\u4f18\u5148\u7ea7\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u6700\u5927\u5316\u5229\u7528\u7387\n\n\u9002\u5f53\u89c4\u6a21\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5e76\u5b9e\u65bd\u9ad8\u6548\u8bbe\u8ba1\uff0c\u4ee5\u786e\u4fdd\u9ad8\u5229\u7528\u7387\u5e76\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5e95\u5c42\u786c\u4ef6\u7684\u80fd\u6e90\u6548\u7387\u3002\u7531\u4e8e\u6bcf\u53f0\u4e3b\u673a\u7684\u57fa\u51c6\u529f\u8017\uff0c\u4e24\u53f0\u4ee5 30% \u7684\u5229\u7528\u7387\u8fd0\u884c\u7684\u4e3b\u673a\u7684\u6548\u7387\u4f4e\u4e8e\u4e00\u53f0\u4ee5 60% \u7684\u4e3b\u673a\u8fd0\u884c\u7684\u6548\u7387\u3002\u540c\u65f6\uff0c\u6d88\u9664\u6216\u6700\u5c0f\u5316\u7a7a\u95f2\u8d44\u6e90\u3001\u5904\u7406\u548c\u5b58\u50a8\uff0c\u4ee5\u51cf\u5c11\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u4f9b\u7535\u6240\u9700\u7684\u603b\u80fd\u91cf\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u9884\u6d4b\u5e76\u91c7\u7528\u65b0\u7684\u3001\u66f4\u9ad8\u6548\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u4ea7\u54c1\n\n\u652f\u6301\u60a8\u7684\u5408\u4f5c\u4f19\u4f34\u548c\u4f9b\u5e94\u5546\u8fdb\u884c\u7684\u4e0a\u6e38\u6539\u8fdb\uff0c\u4ee5\u5e2e\u52a9\u60a8\u51cf\u5c11\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f71\u54cd\u3002\u6301\u7eed\u76d1\u63a7\u548c\u8bc4\u4f30\u65b0\u7684\u3001\u66f4\u9ad8\u6548\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u4ea7\u54c1\u3002\u8bbe\u8ba1\u7075\u6d3b\u6027\u4ee5\u5141\u8bb8\u5feb\u901f\u91c7\u7528\u65b0\u7684\u9ad8\u6548\u6280\u672f\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u4f7f\u7528\u6258\u7ba1\u670d\u52a1\n\n\u5728\u5e7f\u6cdb\u7684\u5ba2\u6237\u7fa4\u4e2d\u5171\u4eab\u670d\u52a1\u6709\u52a9\u4e8e\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4ece\u800c\u51cf\u5c11\u652f\u6301\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u57fa\u7840\u8bbe\u65bd\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u5ba2\u6237\u53ef\u4ee5\u901a\u8fc7\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u8fc1\u79fb\u5230AWS \u4e91\u5e76\u91c7\u7528\u6258\u7ba1\u670d\u52a1\uff0c\u4f8b\u5982\u7528\u4e8e\u65e0\u670d\u52a1\u5668\u5bb9\u5668\u7684 AWS Fargate\uff0cAWS \u5728\u5176\u4e2d\u5927\u89c4\u6a21\u8fd0\u884c\u5e76\u8d1f\u8d23\u5176\u9ad8\u6548\u8fd0\u884c\u3002\u4f7f\u7528\u6709\u52a9\u4e8e\u5c06\u5f71\u54cd\u964d\u81f3\u6700\u4f4e\u7684\u6258\u7ba1\u670d\u52a1\uff0c\u4f8b\u5982\u81ea\u52a8\u5c06\u4e0d\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u79fb\u52a8\u5230 Amazon \u7684\u51b7\u5b58\u50a8S3 \u751f\u547d\u5468\u671f\u914d\u7f6e\u6216 Amazon EC2 Auto Scaling \u8c03\u6574\u5bb9\u91cf\u4ee5\u6ee1\u8db3\u9700\u6c42\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u51cf\u5c11\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e0b\u6e38\u5f71\u54cd\n\n\u51cf\u5c11\u4f7f\u7528\u670d\u52a1\u6240\u9700\u7684\u80fd\u6e90\u6216\u8d44\u6e90\u91cf\u3002\u51cf\u5c11\u6216\u6d88\u9664\u5ba2\u6237\u5347\u7ea7\u5176\u8bbe\u5907\u4ee5\u4f7f\u7528\u60a8\u7684\u670d\u52a1\u7684\u9700\u8981\u3002\u4f7f\u7528\u8bbe\u5907\u573a\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u4e86\u89e3\u9884\u671f\u5f71\u54cd\u5e76\u4e0e\u5ba2\u6237\u4e00\u8d77\u6d4b\u8bd5\u4e86\u89e3\u4f7f\u7528\u60a8\u7684\u670d\u52a1\u7684\u5b9e\u9645\u5f71\u54cd\u3002\n</code></pre>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_2","title":"\u95ee\u9898\u548c\u5b9a\u4e49","text":"<p>\u533a\u57df\u9009\u62e9     SUS 1 \u60a8\u5982\u4f55\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u533a\u57df\uff1f \u4e0e\u9700\u6c42\u4fdd\u6301\u4e00\u81f4     SUS 2 \u60a8\u5982\u4f55\u6309\u9700\u534f\u8c03\u4e91\u8d44\u6e90\uff1f \u8f6f\u4ef6\u548c\u67b6\u6784     SUS 3 \u60a8\u5982\u4f55\u5229\u7528\u8f6f\u4ef6\u548c\u67b6\u6784\u6a21\u5f0f\u6765\u652f\u6301\u60a8\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\uff1f \u6570\u636e     SUS 4 \u60a8\u5982\u4f55\u5229\u7528\u6570\u636e\u7ba1\u7406\u7b56\u7565\u548c\u6a21\u5f0f\u6765\u652f\u6301\u60a8\u7684\u53ef\u6301\u7eed\u6027\u76ee\u6807\uff1f \u786c\u4ef6\u548c\u670d\u52a1     SUS 5 \u60a8\u5982\u4f55\u9009\u62e9\u5e76\u4f7f\u7528\u67b6\u6784\u4e2d\u7684\u4e91\u786c\u4ef6\u548c\u670d\u52a1\u6765\u652f\u6301\u60a8\u7684\u53ef\u6301\u7eed\u6027\u76ee\u6807\uff1f \u6d41\u7a0b\u548c\u6587\u5316     SUS 6 \u60a8\u7684\u7ec4\u7ec7\u6d41\u7a0b\u5982\u4f55\u4e3a\u60a8\u7684\u53ef\u6301\u7eed\u6027\u76ee\u6807\u63d0\u4f9b\u652f\u6301\uff1f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_3","title":"\u6700\u4f73\u5b9e\u8df5","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_4","title":"\u533a\u57df\u9009\u62e9","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sus-1","title":"SUS 1 \u60a8\u5982\u4f55\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u533a\u57df\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_5","title":"\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u548c\u53ef\u6301\u7eed\u6027\u76ee\u6807\u9009\u62e9\u533a\u57df","text":"<p>\u6839\u636e\u60a8\u7684\u4e1a\u52a1\u9700\u6c42\u548c\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u4e00\u4e2a\u533a\u57df\uff0c\u4ee5\u4f18\u5316\u5176 KPI\uff0c\u5305\u62ec\u6027\u80fd\u3001\u6210\u672c\u548c\u78b3\u8db3\u8ff9\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_6","title":"\u4e0e\u9700\u6c42\u4fdd\u6301\u4e00\u81f4","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sus-2","title":"SUS 2 \u60a8\u5982\u4f55\u6309\u9700\u534f\u8c03\u4e91\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_7","title":"\u52a8\u6001\u6269\u5c55\u5de5\u4f5c\u8d1f\u8f7d\u57fa\u7840\u8bbe\u65bd","text":"<p>\u5229\u7528\u4e91\u7684\u5f39\u6027\u5e76\u52a8\u6001\u6269\u5c55\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u4f7f\u4e91\u8d44\u6e90\u7684\u4f9b\u5e94\u4e0e\u9700\u6c42\u76f8\u5339\u914d\uff0c\u907f\u514d\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u8fc7\u5ea6\u9884\u7f6e\u5bb9\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sla","title":"\u4f7f SLA \u4e0e\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u4fdd\u6301\u4e00\u81f4","text":"<p>\u6839\u636e\u60a8\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u5ba1\u67e5\u548c\u4f18\u5316\u5de5\u4f5c\u8d1f\u8f7d\u670d\u52a1\u6c34\u5e73\u534f\u8bae\uff08SLA\uff09\uff0c\u4ee5\u4fbf\u5728\u7ee7\u7eed\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u7684\u540c\u65f6\uff0c\u5c3d\u91cf\u51cf\u5c11\u652f\u6301\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_8","title":"\u6839\u636e\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8054\u7f51\u8981\u6c42\u4f18\u5316\u5176\u5730\u7406\u4f4d\u7f6e","text":"<p>\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u53ef\u7f29\u77ed\u7f51\u7edc\u6d41\u91cf\u5fc5\u987b\u4f20\u8f93\u7684\u8ddd\u79bb\u7684\u4e91\u4f4d\u7f6e\u548c\u670d\u52a1\uff0c\u5e76\u51cf\u5c11\u652f\u6301\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u603b\u7f51\u7edc\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_9","title":"\u505c\u6b62\u521b\u5efa\u548c\u7ef4\u62a4\u672a\u4f7f\u7528\u7684\u8d44\u4ea7","text":"<p>\u505c\u7528\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u672a\u4f7f\u7528\u7684\u8d44\u4ea7\uff0c\u4ee5\u4fbf\u51cf\u5c11\u652f\u6301\u60a8\u7684\u9700\u6c42\u6240\u9700\u7684\u4e91\u8d44\u6e90\u6570\u91cf\uff0c\u5e76\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u6d6a\u8d39\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_10","title":"\u9488\u5bf9\u6267\u884c\u7684\u6d3b\u52a8\u4f18\u5316\u56e2\u961f\u6210\u5458\u8d44\u6e90","text":"<p>\u4f18\u5316\u63d0\u4f9b\u7ed9\u56e2\u961f\u6210\u5458\u7684\u8d44\u6e90\uff0c\u5728\u652f\u6301\u5176\u9700\u6c42\u7684\u540c\u65f6\u6700\u5927\u7a0b\u5ea6\u5730\u964d\u4f4e\u5bf9\u73af\u5883\u53ef\u6301\u7eed\u6027\u7684\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_11","title":"\u5b9e\u65bd\u7f13\u51b2\u548c\u8282\u6d41\u4ee5\u538b\u5e73\u9700\u6c42\u66f2\u7ebf","text":"<p>\u7f13\u51b2\u548c\u8282\u6d41\u53ef\u5c55\u5e73\u9700\u6c42\u66f2\u7ebf\uff0c\u5e76\u964d\u4f4e\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u9884\u7f6e\u5bb9\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_12","title":"\u8f6f\u4ef6\u548c\u67b6\u6784","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sus-3","title":"SUS 3 \u60a8\u5982\u4f55\u5229\u7528\u8f6f\u4ef6\u548c\u67b6\u6784\u6a21\u5f0f\u6765\u652f\u6301\u60a8\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_13","title":"\u9488\u5bf9\u5f02\u6b65\u548c\u8ba1\u5212\u4f5c\u4e1a\u4f18\u5316\u8f6f\u4ef6\u548c\u67b6\u6784","text":"<p>\u4f7f\u7528\u9ad8\u6548\u7684\u8f6f\u4ef6\u548c\u67b6\u6784\u6a21\u5f0f\uff08\u5982\u961f\u5217\u9a71\u52a8\uff09\u6765\u4fdd\u6301\u6240\u90e8\u7f72\u8d44\u6e90\u7684\u59cb\u7ec8\u5982\u4e00\u7684\u9ad8\u5229\u7528\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_14","title":"\u5220\u9664\u6216\u91cd\u6784\u5f88\u5c11\u6216\u6ca1\u6709\u4f7f\u7528\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7ec4\u4ef6","text":"<p>\u79fb\u9664\u672a\u4f7f\u7528\u4e14\u4e0d\u518d\u9700\u8981\u7684\u7ec4\u4ef6\uff0c\u5e76\u91cd\u6784\u5229\u7528\u7387\u4f4e\u7684\u7ec4\u4ef6\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u6d6a\u8d39\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_15","title":"\u4f18\u5316\u6d88\u8017\u6700\u591a\u65f6\u95f4\u6216\u8d44\u6e90\u7684\u4ee3\u7801\u533a\u57df","text":"<p>\u4f18\u5316\u5728\u67b6\u6784\u7684\u4e0d\u540c\u7ec4\u4ef6\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u8d44\u6e90\u4f7f\u7528\u548c\u63d0\u9ad8\u6027\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_16","title":"\u4f18\u5316\u5bf9\u88c5\u7f6e\u548c\u8bbe\u5907\u7684\u5f71\u54cd","text":"<p>\u4e86\u89e3\u60a8\u7684\u67b6\u6784\u4e2d\u4f7f\u7528\u7684\u8bbe\u5907\uff0c\u5e76\u4f7f\u7528\u7b56\u7565\u6765\u51cf\u5c11\u5176\u4f7f\u7528\u3002\u8fd9\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u73af\u5883\u7684\u6574\u4f53\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_17","title":"\u4f7f\u7528\u6700\u80fd\u652f\u6301\u6570\u636e\u8bbf\u95ee\u548c\u5b58\u50a8\u6a21\u5f0f\u7684\u8f6f\u4ef6\u6a21\u5f0f\u548c\u67b6\u6784","text":"<p>\u4e86\u89e3\u6570\u636e\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u4f7f\u7528\u65b9\u5f0f\u3001\u7528\u6237\u4f7f\u7528\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u4ee5\u53ca\u6570\u636e\u7684\u4f20\u8f93\u548c\u5b58\u50a8\u65b9\u5f0f\u3002\u4f7f\u7528\u6700\u80fd\u652f\u6301\u6570\u636e\u8bbf\u95ee\u548c\u5b58\u50a8\u7684\u8f6f\u4ef6\u6a21\u5f0f\u548c\u67b6\u6784\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u652f\u6301\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u8ba1\u7b97\u3001\u7f51\u7edc\u548c\u5b58\u50a8\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_18","title":"\u6570\u636e","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sus-4","title":"SUS 4 \u60a8\u5982\u4f55\u5229\u7528\u6570\u636e\u7ba1\u7406\u7b56\u7565\u548c\u6a21\u5f0f\u6765\u652f\u6301\u60a8\u7684\u53ef\u6301\u7eed\u6027\u76ee\u6807\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_19","title":"\u5b9e\u65bd\u6570\u636e\u5206\u7c7b\u7b56\u7565","text":"<p>\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff0c\u4ee5\u4e86\u89e3\u5176\u5bf9\u4e1a\u52a1\u6210\u679c\u7684\u91cd\u8981\u6027\uff0c\u5e76\u9009\u62e9\u5408\u9002\u7684\u8282\u80fd\u5b58\u50a8\u5c42\u6765\u5b58\u50a8\u6570\u636e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_20","title":"\u4f7f\u7528\u652f\u6301\u60a8\u7684\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f\u548c\u5b58\u50a8\u6a21\u5f0f\u7684\u6280\u672f","text":"<p>\u4f7f\u7528\u6700\u80fd\u652f\u6301\u60a8\u7684\u6570\u636e\u8bbf\u95ee\u548c\u5b58\u50a8\u65b9\u5f0f\u7684\u5b58\u50a8\u6280\u672f\uff0c\u4ee5\u5728\u652f\u6301\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540c\u65f6\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u9884\u7f6e\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_21","title":"\u4f7f\u7528\u7b56\u7565\u6765\u7ba1\u7406\u6570\u636e\u96c6\u7684\u751f\u547d\u5468\u671f","text":"<p>\u7ba1\u7406\u6240\u6709\u6570\u636e\u7684\u751f\u547d\u5468\u671f\u5e76\u81ea\u52a8\u6267\u884c\u5220\u9664\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u603b\u5b58\u50a8\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_22","title":"\u5220\u9664\u4e0d\u9700\u8981\u6216\u591a\u4f59\u7684\u6570\u636e","text":"<p>\u5220\u9664\u4e0d\u9700\u8981\u6216\u591a\u4f59\u7684\u6570\u636e\uff0c\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u5b58\u50a8\u6570\u636e\u96c6\u6240\u9700\u7684\u5b58\u50a8\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_23","title":"\u4f7f\u7528\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u6216\u5b58\u50a8\u6765\u8bbf\u95ee\u5e38\u7528\u6570\u636e","text":"<p>\u91c7\u7528\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u6216\u5b58\u50a8\u4ee5\u907f\u514d\u6570\u636e\u91cd\u590d\uff0c\u5e76\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u63d0\u4f9b\u66f4\u9ad8\u6548\u7684\u57fa\u7840\u8bbe\u65bd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_24","title":"\u4ec5\u5728\u96be\u4ee5\u91cd\u65b0\u521b\u5efa\u65f6\u5907\u4efd\u6570\u636e","text":"<p>\u907f\u514d\u5907\u4efd\u6ca1\u6709\u5546\u4e1a\u4ef7\u503c\u7684\u6570\u636e\uff0c\u5c3d\u91cf\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b58\u50a8\u8d44\u6e90\u9700\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_25","title":"\u4f7f\u7528\u5f39\u6027\u548c\u81ea\u52a8\u5316\u6765\u6269\u5c55\u6570\u636e\u5757\u5b58\u50a8\u6216\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u968f\u7740\u6570\u636e\u7684\u589e\u957f\uff0c\u4f7f\u7528\u5f39\u6027\u548c\u81ea\u52a8\u5316\u6765\u6269\u5c55\u6570\u636e\u5757\u5b58\u50a8\u6216\u6587\u4ef6\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u6700\u5927\u9650\u5ea6\u51cf\u5c11\u603b\u9884\u7f6e\u5b58\u50a8\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_26","title":"\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u8de8\u7f51\u7edc\u7684\u6570\u636e\u79fb\u52a8","text":"<p>\u4f7f\u7528\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u6216\u5bf9\u8c61\u5b58\u50a8\u6765\u8bbf\u95ee\u901a\u7528\u6570\u636e\uff0c\u5e76\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u652f\u6301\u5de5\u4f5c\u8d1f\u8f7d\u6570\u636e\u79fb\u52a8\u6240\u9700\u7684\u603b\u7f51\u7edc\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_27","title":"\u786c\u4ef6\u548c\u670d\u52a1","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sus-5","title":"SUS 5 \u60a8\u5982\u4f55\u9009\u62e9\u5e76\u4f7f\u7528\u67b6\u6784\u4e2d\u7684\u4e91\u786c\u4ef6\u548c\u670d\u52a1\u6765\u652f\u6301\u60a8\u7684\u53ef\u6301\u7eed\u6027\u76ee\u6807\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_28","title":"\u4f7f\u7528\u6700\u5c11\u7684\u786c\u4ef6\u6765\u6ee1\u8db3\u60a8\u7684\u9700\u6c42","text":"<p>\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4f7f\u7528\u6700\u5c11\u7684\u786c\u4ef6\uff0c\u9ad8\u6548\u5730\u6ee1\u8db3\u60a8\u7684\u4e1a\u52a1\u9700\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_29","title":"\u4f7f\u7528\u5f71\u54cd\u6700\u5c0f\u7684\u5b9e\u4f8b\u7c7b\u578b","text":"<p>\u6301\u7eed\u76d1\u63a7\u548c\u4f7f\u7528\u65b0\u5b9e\u4f8b\u7c7b\u578b\u4ee5\u5145\u5206\u5229\u7528\u80fd\u6e90\u6548\u7387\u6539\u8fdb\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_30","title":"\u4f7f\u7528\u6258\u7ba1\u5f0f\u670d\u52a1","text":"<p>\u4f7f\u7528\u6258\u7ba1\u670d\u52a1\u5728\u4e91\u4e2d\u66f4\u9ad8\u6548\u5730\u8fd0\u8425\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_31","title":"\u4f18\u5316\u5bf9\u57fa\u4e8e\u786c\u4ef6\u7684\u8ba1\u7b97\u52a0\u901f\u5668\u7684\u4f7f\u7528","text":"<p>\u4f18\u5316\u52a0\u901f\u578b\u8ba1\u7b97\u5b9e\u4f8b\u7684\u4f7f\u7528\uff0c\u4ee5\u51cf\u5c11\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7269\u7406\u57fa\u7840\u67b6\u6784\u9700\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_32","title":"\u6d41\u7a0b\u548c\u6587\u5316","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#sus-6","title":"SUS 6 \u60a8\u7684\u7ec4\u7ec7\u6d41\u7a0b\u5982\u4f55\u4e3a\u60a8\u7684\u53ef\u6301\u7eed\u6027\u76ee\u6807\u63d0\u4f9b\u652f\u6301\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_33","title":"\u91c7\u7528\u53ef\u4ee5\u5feb\u901f\u5f15\u5165\u53ef\u6301\u7eed\u6027\u6539\u8fdb\u7684\u65b9\u6cd5","text":"<p>\u91c7\u7528\u65b9\u6cd5\u548c\u6d41\u7a0b\u6765\u9a8c\u8bc1\u6f5c\u5728\u7684\u6539\u8fdb\u3001\u6700\u5927\u9650\u5ea6\u964d\u4f4e\u6d4b\u8bd5\u6210\u672c\u548c\u5e26\u6765\u4e00\u4e9b\u5c0f\u6539\u8fdb\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_34","title":"\u8ba9\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4fdd\u6301\u6700\u65b0\u72b6\u6001","text":"<p>\u8ba9\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u91c7\u7528\u9ad8\u6548\u529f\u80fd\u3001\u6d88\u9664\u95ee\u9898\u548c\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6574\u4f53\u6548\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#_35","title":"\u63d0\u9ad8\u6784\u5efa\u73af\u5883\u7684\u5229\u7528\u7387","text":"<p>\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4ee5\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u6784\u5efa\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95-Sustainability-202310-Summary/#device-farm","title":"\u4f7f\u7528\u6258\u7ba1 Device Farm \u8fdb\u884c\u6d4b\u8bd5","text":"<p>\u4f7f\u7528\u6258\u7ba1\u5f0f\u8bbe\u5907\u573a\u5728\u4e00\u7ec4\u5177\u6709\u4ee3\u8868\u6027\u7684\u786c\u4ef6\u4e0a\u9ad8\u6548\u5730\u6d4b\u8bd5\u65b0\u529f\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/","title":"WA-\u53ef\u9760\u6027-Reliability-202310-Summary","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_1","title":"\u8bbe\u8ba1\u539f\u5219","text":"<pre><code>collapse: close\ntitle:  \u81ea\u52a8\u4ece\u6545\u969c\u4e2d\u6062\u590d\n\n\u901a\u8fc7\u76d1\u63a7\u5173\u952e\u6027\u80fd\u6307\u6807 (KPI) \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u60a8\u53ef\u4ee5\u5728\u8d85\u51fa\u9608\u503c\u65f6\u89e6\u53d1\u81ea\u52a8\u5316\u3002\u8fd9\u4e9b KPI \u5e94\u8be5\u662f\u8861\u91cf\u4e1a\u52a1\u4ef7\u503c\u7684\u6307\u6807\uff0c\u800c\u4e0d\u662f\u8861\u91cf\u670d\u52a1\u8fd0\u8425\u7684\u6280\u672f\u65b9\u9762\u7684\u6307\u6807\u3002\u66f4\u590d\u6742\u7684\u81ea\u52a8\u5316\uff0c\u53ef\u4ee5\u5728\u6545\u969c\u53d1\u751f\u4e4b\u524d\u9884\u6d4b\u548c\u4fee\u590d\u6545\u969c\u3002\u4f7f\u7528\u66f4\u590d\u6742\u7684\u81ea\u52a8\u5316\uff0c\u53ef\u4ee5\u5728\u6545\u969c\u53d1\u751f\u4e4b\u524d\u9884\u6d4b\u548c\u4fee\u590d\u6545\u969c\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u6d4b\u8bd5\u6062\u590d\u8fc7\u7a0b\n\n\u5728\u672c\u5730\u73af\u5883\u4e2d\uff0c\u901a\u5e38\u4f1a\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u8bc1\u660e\u5de5\u4f5c\u8d1f\u8f7d\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u6709\u6548\u3002\u6d4b\u8bd5\u901a\u5e38\u4e0d\u7528\u4e8e\u9a8c\u8bc1\u6062\u590d\u7b56\u7565\u3002\u5728\u4e91\u4e2d\uff0c\u60a8\u53ef\u4ee5\u6d4b\u8bd5\u5de5\u4f5c\u8d1f\u8f7d\u5982\u4f55\u5931\u8d25\uff0c\u7136\u540e\u60a8\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u52a8\u5316\u6765\u6a21\u62df\u4e0d\u540c\u7684\u6545\u969c\u6216\u91cd\u65b0\u521b\u5efa\u4e4b\u524d\u5bfc\u81f4\u6545\u969c\u7684\u573a\u666f\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u516c\u5f00\u6545\u969c\u8def\u5f84\uff0c\u60a8\u53ef\u4ee5\u5728\u771f\u6b63\u7684\u6545\u969c\u573a\u666f\u53d1\u751f\u4e4b\u524d\u6d4b\u8bd5\u548c\u4fee\u590d\uff0c\u4ece\u800c\u964d\u4f4e\u98ce\u9669\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u6c34\u5e73\u6269\u5c55\u4ee5\u63d0\u9ad8\u805a\u5408\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53ef\u7528\u6027\n\n\u7528\u591a\u4e2a\u5c0f\u8d44\u6e90\u66ff\u6362\u4e00\u4e2a\u5927\u8d44\u6e90\uff0c\u4ee5\u51cf\u5c11\u5355\u4e2a\u6545\u969c\u5bf9\u6574\u4f53\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f71\u54cd\u3002\u5c06\u8bf7\u6c42\u5206\u5e03\u5728\u591a\u4e2a\u8f83\u5c0f\u7684\u8d44\u6e90\u4e0a\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u4e0d\u4f1a\u5171\u4eab\u4e00\u4e2a\u5171\u540c\u7684\u6545\u969c\u70b9.\n</code></pre> <pre><code>collapse: close\ntitle:  \u505c\u6b62\u731c\u6d4b\u5bb9\u91cf\n\n\u672c\u5730\u5de5\u4f5c\u8d1f\u8f7d\u5931\u8d25\u7684\u4e00\u4e2a\u5e38\u89c1\u539f\u56e0\u662f\u8d44\u6e90\u9971\u548c\uff0c\u5f53\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9700\u6c42\u8d85\u8fc7\u8be5\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u91cf\u65f6\uff08\u8fd9\u901a\u5e38\u662f\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u7684\u76ee\u6807\uff09\u3002\u5728\u4e91\u4e2d\uff0c\u60a8\u53ef\u4ee5\u76d1\u63a7\u9700\u6c42\u548c\u5de5\u4f5c\u8d1f\u8f7d\u5229\u7528\u7387\uff0c\u5e76\u81ea\u52a8\u6dfb\u52a0\u6216\u5220\u9664\u8d44\u6e90\u4ee5\u4fdd\u6301\u6700\u4f73\u6c34\u5e73\u4ee5\u6ee1\u8db3\u9700\u6c42\uff0c\u800c\u4e0d\u4f1a\u8fc7\u5ea6\u6216\u4e0d\u8db3\u4f9b\u5e94\u3002\u4ecd\u7136\u5b58\u5728\u9650\u5236\uff0c\u4f46\u53ef\u4ee5\u63a7\u5236\u67d0\u4e9b\u914d\u989d\uff0c\u800c\u53ef\u4ee5\u7ba1\u7406\u5176\u4ed6\u914d\u989d\uff08\u8bf7\u53c2\u9605\u7ba1\u7406\u670d\u52a1) \u914d\u989d\u548c\u7ea6\u675f)\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u7ba1\u7406\u81ea\u52a8\u5316\u53d8\u66f4\n\n\u5e94\u8be5\u4f7f\u7528\u81ea\u52a8\u5316\u5bf9\u57fa\u7840\u67b6\u6784\u8fdb\u884c\u66f4\u6539\u3002\u9700\u8981\u7ba1\u7406\u7684\u66f4\u6539\u5305\u62ec\u5bf9\u81ea\u52a8\u5316\u7684\u66f4\u6539\uff0c\u7136\u540e\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8ddf\u8e2a\u548c\u5ba1\u67e5\u3002\n</code></pre>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_2","title":"\u95ee\u9898\u548c\u5b9a\u4e49","text":"<p>\u57fa\u7840     REL 1 \u5982\u4f55\u7ba1\u7406\u670d\u52a1\u914d\u989d\u548c\u9650\u5236\uff1f     REL 2 \u5982\u4f55\u89c4\u5212\u7f51\u7edc\u62d3\u6251\uff1f \u5de5\u4f5c\u8d1f\u8f7d\u67b6\u6784     REL 3 \u5982\u4f55\u8bbe\u8ba1\u5de5\u4f5c\u8d1f\u8f7d\u670d\u52a1\u67b6\u6784\uff1f     REL 4 \u60a8\u5982\u4f55\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8bbe\u8ba1\u4ea4\u4e92\u4ee5\u9884\u9632\u53d1\u751f\u6545\u969c\uff1f     REL 5 \u60a8\u5982\u4f55\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8fdb\u884c\u4ea4\u4e92\u8bbe\u8ba1\uff0c\u4ece\u800c\u7f13\u89e3\u6216\u7ecf\u53d7\u4f4f\u6545\u969c\u5f71\u54cd\uff1f \u53d8\u66f4\u7ba1\u7406     REL 6 \u5982\u4f55\u76d1\u63a7\u5de5\u4f5c\u8d1f\u8f7d\u8d44\u6e90\uff1f     REL 7 \u60a8\u5982\u4f55\u8bbe\u8ba1\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ee5\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u9700\u6c42\uff1f     REL 8 \u5982\u4f55\u5b9e\u65bd\u66f4\u6539\uff1f \u6545\u969c\u7ba1\u7406     REL 9 \u5982\u4f55\u5907\u4efd\u6570\u636e\uff1f     REL 10 \u5982\u4f55\u4f7f\u7528\u6545\u969c\u9694\u79bb\u6765\u4fdd\u62a4\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff1f     REL 11 \u5982\u4f55\u5c06\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u8bbe\u8ba1\u4e3a\u53ef\u627f\u53d7\u7ec4\u4ef6\u6545\u969c\u7684\u5f71\u54cd\uff1f     REL 12 \u5982\u4f55\u6d4b\u8bd5\u53ef\u9760\u6027\uff1f     REL 13 \u5982\u4f55\u89c4\u5212\u707e\u96be\u6062\u590d\uff08DR\uff09\uff1f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_3","title":"\u6700\u4f73\u5b9e\u8df5","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_4","title":"\u57fa\u7840","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-1","title":"REL 1 \u5982\u4f55\u7ba1\u7406\u670d\u52a1\u914d\u989d\u548c\u9650\u5236\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_5","title":"\u4e86\u89e3\u670d\u52a1\u914d\u989d\u548c\u9650\u5236","text":"<p>\u4e86\u89e3\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u67b6\u6784\u7684\u9ed8\u8ba4\u9650\u989d\u5e76\u7ba1\u7406\u9650\u989d\u63d0\u9ad8\u8bf7\u6c42\u3002\u4e86\u89e3\u54ea\u4e9b\u4e91\u8d44\u6e90\u7ea6\u675f\uff08\u5982\u78c1\u76d8\u6216\u7f51\u7edc\uff09\u53ef\u80fd\u4f1a\u5bf9\u60a8\u4ea7\u751f\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_6","title":"\u8de8\u591a\u4e2a\u8d26\u6237\u548c\u533a\u57df\u7ba1\u7406\u670d\u52a1\u9650\u989d","text":"<p>\u5982\u679c\u60a8\u76ee\u524d\u4f7f\u7528\u591a\u4e2a\u8d26\u6237\u6216\u533a\u57df\uff0c\u8bf7\u786e\u4fdd\u5728\u8fd0\u884c\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6240\u6709\u73af\u5883\u4e2d\u90fd\u8bf7\u6c42\u9002\u5f53\u7684\u9650\u989d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_7","title":"\u901a\u8fc7\u67b6\u6784\u9002\u5e94\u56fa\u5b9a\u670d\u52a1\u914d\u989d\u548c\u9650\u5236","text":"<p>\u4e86\u89e3\u4e0d\u53ef\u66f4\u6539\u7684\u670d\u52a1\u9650\u989d\u3001\u670d\u52a1\u9650\u5236\u548c\u7269\u7406\u8d44\u6e90\u9650\u5236\u3002\u4e3a\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u8bbe\u8ba1\u67b6\u6784\uff0c\u4ee5\u9632\u6b62\u8fd9\u4e9b\u9650\u5236\u5f71\u54cd\u53ef\u9760\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_8","title":"\u76d1\u63a7\u548c\u7ba1\u7406\u914d\u989d","text":"<p>\u8bc4\u4f30\u60a8\u7684\u53ef\u80fd\u4f7f\u7528\u60c5\u51b5\uff0c\u5e76\u9002\u5f53\u63d0\u9ad8\u60a8\u7684\u914d\u989d\uff0c\u652f\u6301\u4f7f\u7528\u91cf\u6309\u8ba1\u5212\u589e\u957f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_9","title":"\u81ea\u52a8\u7ba1\u7406\u914d\u989d","text":"<p>\u5b9e\u65bd\u5de5\u5177\u4ee5\u4fbf\u5728\u63a5\u8fd1\u9608\u503c\u65f6\u5411\u60a8\u53d1\u9001\u63d0\u9192\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 AWS \u670d\u52a1\u9650\u989d API \u81ea\u52a8\u53d1\u51fa\u914d\u989d\u63d0\u9ad8\u8bf7\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_10","title":"\u786e\u4fdd\u5728\u5f53\u524d\u914d\u989d\u4e0e\u6700\u5927\u4f7f\u7528\u91cf\u4e4b\u95f4\u5b58\u5728\u8db3\u591f\u7684\u5dee\u8ddd\uff0c\u4ee5\u4fbf\u5e94\u5bf9\u6545\u969c\u8f6c\u79fb","text":"<p>\u5f53\u8d44\u6e90\u51fa\u73b0\u6545\u969c\u6216\u65e0\u6cd5\u8bbf\u95ee\u65f6\uff0c\u8be5\u8d44\u6e90\u53ef\u80fd\u4ecd\u4f1a\u88ab\u8ba1\u5165\u9650\u989d\uff0c\u76f4\u5230\u6210\u529f\u7ec8\u6b62\u8d44\u6e90\u3002\u786e\u8ba4\u60a8\u7684\u9650\u989d\u6db5\u76d6\u51fa\u73b0\u6545\u969c\u6216\u65e0\u6cd5\u8bbf\u95ee\u7684\u8d44\u6e90\u53ca\u5176\u66ff\u6362\u8d44\u6e90\u7684\u91cd\u53e0\u90e8\u5206\u3002\u5728\u8ba1\u7b97\u6b64\u5dee\u8ddd\u65f6\uff0c\u5e94\u8003\u8651\u7f51\u7edc\u6545\u969c\u3001\u53ef\u7528\u533a\u6545\u969c\u6216\u533a\u57df\u6545\u969c\u7b49\u4f7f\u7528\u6848\u4f8b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-2","title":"REL 2 \u5982\u4f55\u89c4\u5212\u7f51\u7edc\u62d3\u6251\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_11","title":"\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u516c\u6709\u7aef\u70b9\u4f7f\u7528\u9ad8\u5ea6\u53ef\u7528\u7684\u7f51\u7edc\u8fde\u63a5","text":"<p>\u6784\u5efa\u4e0e\u5de5\u4f5c\u8d1f\u8f7d\u7684\u516c\u5171\u7aef\u70b9\u7684\u9ad8\u53ef\u7528\u6027\u7f51\u7edc\u8fde\u63a5\u6709\u52a9\u4e8e\u51cf\u5c11\u56e0\u8fde\u63a5\u4e22\u5931\u800c\u5bfc\u81f4\u7684\u505c\u673a\uff0c\u5e76\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53ef\u7528\u6027\u548c\u6539\u8fdb SLA\u3002\u4e3a\u6b64\uff0c\u9700\u4f7f\u7528\u9ad8\u5ea6\u53ef\u7528\u7684 DNS\u3001\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\u3001API Gateway\u3001\u8d1f\u8f7d\u5747\u8861\u6216\u53cd\u5411\u4ee3\u7406\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_12","title":"\u4e3a\u4e91\u73af\u5883\u548c\u672c\u5730\u90e8\u7f72\u73af\u5883\u4e4b\u95f4\u7684\u79c1\u6709\u7f51\u7edc\u9884\u7f6e\u5197\u4f59\u8fde\u63a5","text":"<p>\u5728\u5355\u72ec\u90e8\u7f72\u7684\u79c1\u6709\u7f51\u7edc\u4e4b\u95f4\u4f7f\u7528\u591a\u4e2a AWS Direct Connect \u8fde\u63a5\u6216 VPN \u96a7\u9053\u3002\u4f7f\u7528\u591a\u4e2a Direct Connect \u4f4d\u7f6e\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u3002\u5982\u679c\u4f7f\u7528\u591a\u4e2a AWS \u533a\u57df\uff0c\u8bf7\u786e\u4fdd\u5176\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a\u533a\u57df\u5b58\u5728\u5197\u4f59\u3002\u60a8\u53ef\u80fd\u60f3\u8981\u8bc4\u4f30\u7ec8\u6b62 VPN \u7684 AWS Marketplace \u8bbe\u5907\u3002\u5982\u679c\u60a8\u4f7f\u7528 AWS Marketplace \u8bbe\u5907\uff0c\u8bf7\u5728\u4e0d\u540c\u7684\u53ef\u7528\u533a\u4e2d\u90e8\u7f72\u5197\u4f59\u5b9e\u4f8b\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#ip","title":"\u786e\u4fdd IP \u5b50\u7f51\u5206\u914d\u8003\u8651\u6269\u5c55\u548c\u53ef\u7528\u6027","text":"<p>Amazon VPC IP \u5730\u5740\u8303\u56f4\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u6ee1\u8db3\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8981\u6c42\uff0c\u5305\u62ec\u8003\u8651\u672a\u6765\u7684\u6269\u5c55\u4ee5\u53ca\u8de8\u53ef\u7528\u533a\u4e3a\u5b50\u7f51\u5206\u914d IP \u5730\u5740\u3002\u8fd9\u5305\u62ec\u8d1f\u8f7d\u5747\u8861\u5668\u3001EC2 \u5b9e\u4f8b\u548c\u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_13","title":"\u8f74\u8f90\u5f0f\u62d3\u6251\u4f18\u5148\u4e8e\u591a\u5bf9\u591a\u7f51\u683c","text":"<p>\u5982\u679c\u901a\u8fc7 VPC \u5bf9\u7b49\u8fde\u63a5\u3001AWS Direct Connect \u6216 VPN \u8fde\u63a5\u7684\u7f51\u7edc\u5730\u5740\u7a7a\u95f4\u8d85\u8fc7\u4e24\u4e2a\uff08\u4f8b\u5982\uff0cVPC \u548c\u672c\u5730\u90e8\u7f72\u7f51\u7edc\uff09\uff0c\u5219\u4f7f\u7528\u4e0e AWS Transit Gateway \u6240\u63d0\u4f9b\u7684\u6a21\u578b\u7c7b\u4f3c\u7684\u8f74\u8f90\u5f0f\u6a21\u578b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#ip_1","title":"\u5728\u4e92\u76f8\u8fde\u63a5\u7684\u6240\u6709\u79c1\u6709\u5730\u5740\u7a7a\u95f4\u4e2d\u5fc5\u987b\u91c7\u7528\u975e\u91cd\u53e0\u7684\u79c1\u6709 IP \u5730\u5740\u8303\u56f4","text":"<p>\u591a\u4e2a VPC \u901a\u8fc7\u5bf9\u7b49\u8fde\u63a5\u6216 VPN \u8fde\u63a5\u65f6\uff0c\u5404\u4e2a VPC \u7684 IP \u5730\u5740\u8303\u56f4\u4e0d\u5f97\u91cd\u53e0\u3002\u4e0e\u4e4b\u7c7b\u4f3c\uff0c\u60a8\u5fc5\u987b\u907f\u514d VPC \u548c\u672c\u5730\u90e8\u7f72\u73af\u5883\u6216\u4e0e\u5176\u4ed6\u60a8\u4f7f\u7528\u7684\u4e91\u63d0\u4f9b\u5546\u4e4b\u95f4\u51fa\u73b0 IP \u5730\u5740\u51b2\u7a81\u3002\u60a8\u8fd8\u5fc5\u987b\u80fd\u591f\u5728\u9700\u8981\u65f6\u5206\u914d\u79c1\u6709 IP \u5730\u5740\u8303\u56f4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_14","title":"\u5de5\u4f5c\u8d1f\u8f7d\u67b6\u6784","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-3","title":"REL 3 \u5982\u4f55\u8bbe\u8ba1\u5de5\u4f5c\u8d1f\u8f7d\u670d\u52a1\u67b6\u6784\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_15","title":"\u9009\u62e9\u5982\u4f55\u5212\u5206\u5de5\u4f5c\u8d1f\u8f7d","text":"<p>\u5728\u786e\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u5f39\u6027\u8981\u6c42\u65f6\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u5212\u5206\u5f88\u91cd\u8981\u3002\u5e94\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u6574\u4f53\u5f0f\u67b6\u6784\u3002\u76f8\u53cd\uff0c\u5e94\u4ed4\u7ec6\u8003\u8651\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u53ef\u4ee5\u5206\u89e3\u4e3a\u591a\u9879\u5fae\u670d\u52a1\u3002\u6839\u636e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u8981\u6c42\uff0c\u6700\u7ec8\u5e94\u5c3d\u53ef\u80fd\u91c7\u7528\u670d\u52a1\u5bfc\u5411\u578b\u67b6\u6784\uff08SOA\uff09\u4e0e\u5fae\u670d\u52a1\u7ec4\u5408\u7684\u5f62\u5f0f\u3002\u80fd\u591f\u5b9e\u73b0\u65e0\u72b6\u6001\u7684\u5de5\u4f5c\u8d1f\u8f7d\u66f4\u5bb9\u6613\u90e8\u7f72\u4e3a\u5fae\u670d\u52a1\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_16","title":"\u6784\u5efa\u4e13\u6ce8\u4e8e\u7279\u5b9a\u4e1a\u52a1\u9886\u57df\u548c\u529f\u80fd\u7684\u670d\u52a1","text":"<p>\u670d\u52a1\u5bfc\u5411\u578b\u67b6\u6784\uff08SOA\uff09\u91c7\u7528\u6309\u4e1a\u52a1\u9700\u6c42\u5b9a\u4e49\u7684\u3001\u5212\u5206\u660e\u786e\u7684\u529f\u80fd\u6765\u5b9a\u4e49\u670d\u52a1\u3002\u5fae\u670d\u52a1\u4f7f\u7528\u57df\u6a21\u578b\u548c\u9650\u754c\u4e0a\u4e0b\u6587\uff0c\u6cbf\u4e1a\u52a1\u73af\u5883\u8fb9\u754c\u5212\u5b9a\u670d\u52a1\u8fb9\u754c\u3002\u901a\u8fc7\u5c06\u91cd\u70b9\u653e\u5728\u4e1a\u52a1\u9886\u57df\u548c\u529f\u80fd\u4e0a\uff0c\u6709\u52a9\u4e8e\u56e2\u961f\u4e3a\u5176\u670d\u52a1\u5b9a\u4e49\u72ec\u7acb\u7684\u53ef\u9760\u6027\u8981\u6c42\u3002\u9650\u754c\u4e0a\u4e0b\u6587\u9694\u79bb\u548c\u5c01\u88c5\u4e1a\u52a1\u903b\u8f91\uff0c\u8ba9\u56e2\u961f\u80fd\u591f\u66f4\u597d\u5730\u89e3\u91ca\u5982\u4f55\u5904\u7406\u6545\u969c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#api","title":"\u6839\u636e API \u63d0\u4f9b\u670d\u52a1\u5408\u540c","text":"<p>\u670d\u52a1\u5408\u540c\u662f API \u751f\u4ea7\u8005\u4e0e\u4f7f\u7528\u8005\u4e4b\u95f4\u7684\u4e66\u9762\u534f\u8bae\uff0c\u91c7\u7528\u673a\u5668\u53ef\u8bfb\u7684 API \u5b9a\u4e49\u5f62\u5f0f\u8fdb\u884c\u5b9a\u4e49\u3002\u5408\u540c\u7248\u672c\u63a7\u5236\u7b56\u7565\u8ba9\u4f7f\u7528\u8005\u80fd\u591f\u7ee7\u7eed\u4f7f\u7528\u73b0\u6709\u7684 API\uff0c\u5e76\u5728\u66f4\u65b0\u7684 API \u51c6\u5907\u5c31\u7eea\u65f6\uff0c\u5c06\u5176\u5e94\u7528\u7a0b\u5e8f\u8fc1\u79fb\u5230\u66f4\u65b0\u7684 API\u3002\u53ea\u8981\u9075\u5b88\u5408\u540c\uff0c\u751f\u4ea7\u8005\u90e8\u7f72\u53ef\u968f\u65f6\u8fdb\u884c\u3002\u670d\u52a1\u56e2\u961f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u9009\u62e9\u7684\u6280\u672f\u5806\u6808\u6765\u6ee1\u8db3 API \u5408\u540c\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-4","title":"REL 4 \u60a8\u5982\u4f55\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8bbe\u8ba1\u4ea4\u4e92\u4ee5\u9884\u9632\u53d1\u751f\u6545\u969c\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_17","title":"\u786e\u5b9a\u9700\u8981\u54ea\u79cd\u7c7b\u578b\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf","text":"<p>\u786c\u6027\u5b9e\u65f6\u5206\u5e03\u5f0f\u7cfb\u7edf\u9700\u8981\u540c\u6b65\u5e76\u5feb\u901f\u5730\u505a\u51fa\u54cd\u5e94\uff0c\u800c\u8f6f\u6027\u5b9e\u65f6\u7cfb\u7edf\u6709\u66f4\u5bbd\u677e\u7684\u4ee5\u5206\u949f\u8ba1\u7684\u65f6\u95f4\u7a97\u53e3\uff0c\u6216\u66f4\u591a\u54cd\u5e94\u3002\u79bb\u7ebf\u7cfb\u7edf\u4f1a\u5bf9\u54cd\u5e94\u8fdb\u884c\u6279\u5904\u7406\u6216\u5f02\u6b65\u5904\u7406\u3002\u786c\u6027\u5b9e\u65f6\u5206\u5e03\u5f0f\u7cfb\u7edf\u5177\u6709\u6700\u4e25\u683c\u7684\u53ef\u9760\u6027\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_18","title":"\u5b9e\u65bd\u677e\u8026\u5408\u7684\u4f9d\u8d56\u5173\u7cfb","text":"<p>\u961f\u5217\u7cfb\u7edf\u3001\u6d41\u7cfb\u7edf\u3001\u5de5\u4f5c\u6d41\u548c\u8d1f\u8f7d\u5747\u8861\u5668\u7b49\u4f9d\u8d56\u5173\u7cfb\u662f\u677e\u8026\u5408\u7684\u3002\u677e\u8026\u5408\u6709\u52a9\u4e8e\u9694\u79bb\u67d0\u4e2a\u7ec4\u4ef6\u7684\u884c\u4e3a\u4e0e\u4f9d\u8d56\u4e8e\u5b83\u7684\u5176\u4ed6\u7ec4\u4ef6\u7684\u884c\u4e3a\uff0c\u4ece\u800c\u63d0\u5347\u5f39\u6027\u548c\u654f\u6377\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_19","title":"\u4f7f\u6240\u6709\u54cd\u5e94\u5e42\u7b49","text":"<p>\u5e42\u7b49\u670d\u52a1\u627f\u8bfa\u6bcf\u4e2a\u8bf7\u6c42\u53ea\u5b8c\u6210\u4e00\u6b21\uff0c\u56e0\u6b64\u53d1\u8d77\u591a\u4e2a\u76f8\u540c\u8bf7\u6c42\u4e0e\u8fdb\u884c\u5355\u4e2a\u8bf7\u6c42\u7684\u6548\u679c\u76f8\u540c\u3002\u5e42\u7b49\u670d\u52a1\u4f7f\u5ba2\u6237\u7aef\u53ef\u4ee5\u8f7b\u677e\u8fdb\u884c\u91cd\u8bd5\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u9519\u8bef\u5730\u5904\u7406\u591a\u6b21\u3002\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u51fa\u5177\u6709\u5e42\u7b49\u6027\u4ee4\u724c\u7684 API \u8bf7\u6c42\uff0c\u6bcf\u5f53\u91cd\u590d\u8bf7\u6c42\u65f6\u90fd\u4f1a\u4f7f\u7528\u540c\u4e00\u4ee4\u724c\u3002\u5e42\u7b49\u670d\u52a1 API \u4f7f\u7528\u4ee4\u724c\u8fd4\u56de\u54cd\u5e94\uff0c\u8be5\u54cd\u5e94\u4e0e\u9996\u6b21\u5b8c\u6210\u8bf7\u6c42\u65f6\u8fd4\u56de\u7684\u54cd\u5e94\u76f8\u540c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_20","title":"\u6301\u7eed\u5de5\u4f5c","text":"<p>\u7cfb\u7edf\u4f1a\u5728\u8d1f\u8f7d\u4e2d\u5b58\u5728\u5267\u70c8\u5feb\u901f\u66f4\u6539\u65f6\u5931\u8d25\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6267\u884c\u7684\u4e00\u9879\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u76d1\u63a7\u7740\u6570\u5343\u4e2a\u670d\u52a1\u5668\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u6bcf\u6b21\u90fd\u5e94\u53d1\u9001\u76f8\u540c\u5927\u5c0f\u7684\u6709\u6548\u8d1f\u8f7d\uff08\u5f53\u524d\u72b6\u6001\u7684\u5b8c\u6574\u5feb\u7167\uff09\u3002\u65e0\u8bba\u662f\u5426\u6709\u670d\u52a1\u5668\u6216\u6709\u591a\u5c11\u670d\u52a1\u5668\u53d1\u751f\u6545\u969c\uff0c\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u7cfb\u7edf\u90fd\u4f1a\u6301\u7eed\u5de5\u4f5c\uff0c\u800c\u4e0d\u4f1a\u6709\u5267\u70c8\u3001\u5feb\u901f\u7684\u53d8\u52a8\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-5","title":"REL 5 \u60a8\u5982\u4f55\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u8fdb\u884c\u4ea4\u4e92\u8bbe\u8ba1\uff0c\u4ece\u800c\u7f13\u89e3\u6216\u7ecf\u53d7\u4f4f\u6545\u969c\u5f71\u54cd\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_21","title":"\u5b9e\u73b0\u8f7b\u677e\u964d\u7ea7\u4ee5\u5c06\u9002\u7528\u7684\u786c\u4f9d\u8d56\u5173\u7cfb\u8f6c\u6362\u4e3a\u8f6f\u4f9d\u8d56\u5173\u7cfb","text":"<p>\u5373\u4f7f\u4f9d\u8d56\u9879\u4e0d\u53ef\u7528\uff0c\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u4e5f\u5e94\u7ee7\u7eed\u6267\u884c\u5176\u6838\u5fc3\u529f\u80fd\u3002\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u53ef\u4ee5\u63d0\u4f9b\u7a0d\u5fae\u9648\u65e7\u7684\u6570\u636e\u3001\u66ff\u4ee3\u6570\u636e\uff0c\u751a\u81f3\u6ca1\u6709\u6570\u636e\u3002\u8fd9\u53ef\u786e\u4fdd\u5728\u63d0\u4f9b\u6838\u5fc3\u4e1a\u52a1\u4ef7\u503c\u7684\u540c\u65f6\uff0c\u5c06\u5c40\u90e8\u6545\u969c\u5bf9\u6574\u4f53\u7cfb\u7edf\u529f\u80fd\u9020\u6210\u7684\u969c\u788d\u51cf\u81f3\u6700\u5c11\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_22","title":"\u9650\u5236\u8bf7\u6c42","text":"<p>\u9650\u5236\u8bf7\u6c42\uff0c\u4ee5\u9632\u8303\u56e0\u9700\u6c42\u610f\u5916\u589e\u52a0\u800c\u5bfc\u81f4\u7684\u8d44\u6e90\u8017\u5c3d\u7684\u60c5\u51b5\u3002\u7cfb\u7edf\u5c06\u5904\u7406\u672a\u8d85\u8fc7\u9650\u5236\u901f\u7387\u7684\u8bf7\u6c42\uff0c\u800c\u8d85\u8fc7\u6240\u5b9a\u4e49\u9650\u5236\u7684\u8bf7\u6c42\u5c06\u88ab\u62d2\u7edd\uff0c\u5e76\u8fd4\u56de\u4e00\u6761\u6d88\u606f\uff0c\u6307\u51fa\u8bf7\u6c42\u5df2\u53d7\u9650\u5236\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_23","title":"\u63a7\u5236\u4e0e\u9650\u5236\u91cd\u8bd5\u8c03\u7528","text":"<p>\u4f7f\u7528\u6307\u6570\u56de\u9000\u6765\u91cd\u8bd5\u8bf7\u6c42\uff0c\u6bcf\u6b21\u91cd\u8bd5\u4e4b\u95f4\u7684\u95f4\u9694\u4f1a\u9010\u6e10\u5ef6\u957f\u3002\u5728\u4e24\u6b21\u91cd\u8bd5\u4e4b\u95f4\u5f15\u5165\u6296\u52a8\uff0c\u4ee5\u968f\u673a\u8c03\u6574\u91cd\u8bd5\u95f4\u9694\u3002\u9650\u5236\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_24","title":"\u5feb\u901f\u8bd5\u9519\u548c\u9650\u5236\u961f\u5217","text":"<p>\u5f53\u670d\u52a1\u65e0\u6cd5\u6210\u529f\u54cd\u5e94\u8bf7\u6c42\u65f6\uff0c\u53ef\u91c7\u7528\u5feb\u901f\u5931\u6548\u673a\u5236\u3002\u8fd9\u6837\u53ef\u91ca\u653e\u4e0e\u8bf7\u6c42\u5173\u8054\u7684\u8d44\u6e90\uff0c\u5e76\u5141\u8bb8\u8be5\u670d\u52a1\u5728\u8d44\u6e90\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6062\u590d\u3002\u5feb\u901f\u5931\u6548\u673a\u5236\u4e00\u79cd\u6210\u719f\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u5728\u4e91\u7aef\u6784\u5efa\u9ad8\u5ea6\u53ef\u9760\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u961f\u5217\u4e5f\u662f\u4e00\u79cd\u6210\u719f\u7684\u4f01\u4e1a\u96c6\u6210\u6a21\u5f0f\uff0c\u5176\u80fd\u591f\u5b9e\u73b0\u5e73\u7a33\u7684\u8d1f\u8f7d\uff0c\u5e76\u5728\u80fd\u591f\u5bb9\u5fcd\u5f02\u6b65\u5904\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u5f97\u5ba2\u6237\u7aef\u80fd\u591f\u91ca\u653e\u8d44\u6e90\u3002\u5982\u679c\u67d0\u4e2a\u670d\u52a1\u5728\u6b63\u5e38\u6761\u4ef6\u4e0b\u80fd\u591f\u6210\u529f\u54cd\u5e94\uff0c\u4f46\u5728\u8bf7\u6c42\u901f\u7387\u8fc7\u9ad8\u65f6\u5931\u8d25\uff0c\u8bf7\u4f7f\u7528\u961f\u5217\u6765\u7f13\u51b2\u8bf7\u6c42\u3002\u4e0d\u8fc7\uff0c\u4e0d\u8981\u5141\u8bb8\u51fa\u73b0\u8f83\u957f\u7684\u961f\u5217\u79ef\u538b\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u5904\u7406\u5df2\u88ab\u5ba2\u6237\u7aef\u653e\u5f03\u7684\u8fc7\u65f6\u8bf7\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_25","title":"\u8bbe\u7f6e\u5ba2\u6237\u7aef\u8d85\u65f6","text":"<p>\u60a8\u5e94\u9002\u5f53\u8bbe\u7f6e\u8fde\u63a5\u548c\u8bf7\u6c42\u7684\u8d85\u65f6\uff0c\u5bf9\u5176\u8fdb\u884c\u7cfb\u7edf\u6027\u9a8c\u8bc1\uff0c\u4e0d\u8981\u4f9d\u8d56\u9ed8\u8ba4\u503c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u503c\u5e76\u4e0d\u4e86\u89e3\u5177\u4f53\u7684\u5de5\u4f5c\u8d1f\u8f7d\u60c5\u51b5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_26","title":"\u5c3d\u53ef\u80fd\u4f7f\u670d\u52a1\u4e3a\u65e0\u72b6\u6001","text":"<p>\u670d\u52a1\u5e94\u8be5\u4e0d\u9700\u8981\u72b6\u6001\u6216\u5728\u4e0d\u540c\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e4b\u95f4\u5378\u8f7d\u72b6\u6001\uff0c\u5728\u78c1\u76d8\u4e0a\u548c\u5185\u5b58\u4e2d\u672c\u5730\u5b58\u50a8\u7684\u6570\u636e\u4e0d\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u3002\u4ece\u800c\u652f\u6301\u4efb\u610f\u66ff\u6362\u670d\u52a1\u5668\uff0c\u800c\u4e14\u4e0d\u4f1a\u5bf9\u53ef\u7528\u6027\u4ea7\u751f\u5f71\u54cd\u3002Amazon ElastiCache \u6216 Amazon DynamoDB \u662f\u5378\u8f7d\u72b6\u6001\u7684\u7406\u60f3\u76ee\u6807\u4f4d\u7f6e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_27","title":"\u5b9e\u65bd\u7d27\u6025\u6760\u6746","text":"<p>\u7d27\u6025\u6760\u6746\u662f\u53ef\u5e2e\u52a9\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u51cf\u8f7b\u53ef\u7528\u6027\u5f71\u54cd\u7684\u5feb\u901f\u6d41\u7a0b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_28","title":"\u53d8\u66f4\u7ba1\u7406","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-6","title":"REL 6 \u5982\u4f55\u76d1\u63a7\u5de5\u4f5c\u8d1f\u8f7d\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_29","title":"\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\u5168\u90e8\u7ec4\u4ef6\uff08\u751f\u6210\uff09","text":"<p>\u4f7f\u7528 Amazon CloudWatch \u6216\u7b2c\u4e09\u65b9\u5de5\u5177\u76d1\u63a7\u5de5\u4f5c\u8d1f\u8f7d\u7ec4\u4ef6\u3002\u4f7f\u7528 AWS Health Dashboard \u76d1\u63a7 AWS \u670d\u52a1\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_30","title":"\u5b9a\u4e49\u4e0e\u8ba1\u7b97\u6307\u6807\uff08\u805a\u5408\uff09","text":"<p>\u5b58\u50a8\u65e5\u5fd7\u6570\u636e\u5e76\u5728\u5fc5\u8981\u65f6\u5e94\u7528\u7b5b\u9009\u6761\u4ef6\u4ee5\u8ba1\u7b97\u6307\u6807\uff0c\u4f8b\u5982\uff0c\u7279\u5b9a\u65e5\u5fd7\u4e8b\u4ef6\u7684\u6570\u91cf\uff0c\u6216\u4ece\u65e5\u5fd7\u4e8b\u4ef6\u65f6\u95f4\u6233\u8ba1\u7b97\u5f97\u5230\u7684\u5ef6\u8fdf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_31","title":"\u53d1\u9001\u901a\u77e5\uff08\u5b9e\u65f6\u5904\u7406\u548c\u544a\u8b66\uff09","text":"<p>\u5f53\u7ec4\u7ec7\u68c0\u6d4b\u5230\u6f5c\u5728\u95ee\u9898\u65f6\uff0c\u4f1a\u5411\u76f8\u5e94\u7684\u4eba\u5458\u548c\u7cfb\u7edf\u53d1\u9001\u5b9e\u65f6\u901a\u77e5\u548c\u63d0\u9192\uff0c\u4ee5\u4fbf\u5feb\u901f\u6709\u6548\u5730\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_32","title":"\u81ea\u52a8\u54cd\u5e94\uff08\u5b9e\u65f6\u5904\u7406\u548c\u544a\u8b66\uff09","text":"<p>\u68c0\u6d4b\u5230\u4e8b\u4ef6\u540e\uff0c\u5229\u7528\u81ea\u52a8\u5316\u529f\u80fd\u6267\u884c\u64cd\u4f5c\uff1b\u4f8b\u5982\uff0c\u66f4\u6362\u6545\u969c\u7ec4\u4ef6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_33","title":"\u5206\u6790","text":"<p>\u6536\u96c6\u65e5\u5fd7\u6587\u4ef6\u548c\u6307\u6807\u5386\u53f2\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u4ee5\u83b7\u5f97\u66f4\u5e7f\u6cdb\u7684\u8d8b\u52bf\u548c\u5de5\u4f5c\u8d1f\u8f7d\u89c1\u89e3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_34","title":"\u5b9a\u671f\u8fdb\u884c\u5ba1\u6838","text":"<p>\u7ecf\u5e38\u5ba1\u6838\u5de5\u4f5c\u8d1f\u8f7d\u76d1\u63a7\u7684\u5b9e\u65bd\u60c5\u51b5\uff0c\u5e76\u6839\u636e\u91cd\u5927\u4e8b\u4ef6\u548c\u53d8\u66f4\u52a0\u4ee5\u66f4\u65b0\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_35","title":"\u5bf9\u901a\u8fc7\u7cfb\u7edf\u7684\u8bf7\u6c42\u7684\u7aef\u5230\u7aef\u8ddf\u8e2a\u8fdb\u884c\u76d1\u63a7","text":"<p>\u8ddf\u8e2a\u5404\u4e2a\u670d\u52a1\u7ec4\u4ef6\u7684\u8bf7\u6c42\u5904\u7406\u60c5\u51b5\uff0c\u8fd9\u6837\u4ea7\u54c1\u56e2\u961f\u4fbf\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u5206\u6790\u548c\u8c03\u8bd5\u95ee\u9898\u5e76\u63d0\u9ad8\u6027\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-7","title":"REL 7 \u60a8\u5982\u4f55\u8bbe\u8ba1\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ee5\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u9700\u6c42\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_36","title":"\u5728\u83b7\u53d6\u6216\u6269\u5c55\u8d44\u6e90\u65f6\u5229\u7528\u81ea\u52a8\u5316","text":"<p>\u5728\u66ff\u6362\u88ab\u7834\u574f\u7684\u8d44\u6e90\u6216\u6269\u5c55\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u65f6\uff0c\u901a\u8fc7\u91c7\u7528\u6258\u7ba1 AWS \u670d\u52a1\uff08\u5982 Amazon S3 \u548c AWS Auto Scaling\uff09\u5bf9\u6d41\u7a0b\u8fdb\u884c\u81ea\u52a8\u5316\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u548c AWS \u5f00\u53d1\u5de5\u5177\u5305\u81ea\u52a8\u6269\u5c55\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_37","title":"\u5728\u68c0\u6d4b\u5230\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7834\u574f\u65f6\u83b7\u53d6\u8d44\u6e90","text":"<p>\u5982\u679c\u53ef\u7528\u6027\u53d7\u5230\u5f71\u54cd\uff0c\u5728\u5fc5\u8981\u65f6\u88ab\u52a8\u6269\u5c55\u8d44\u6e90\uff0c\u4ece\u800c\u8fd8\u539f\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53ef\u7528\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_38","title":"\u5f53\u68c0\u6d4b\u5230\u67d0\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u66f4\u591a\u8d44\u6e90\u65f6\uff0c\u5c31\u4f1a\u83b7\u53d6\u8d44\u6e90","text":"<p>\u4e3b\u52a8\u6269\u5c55\u8d44\u6e90\u4ee5\u6ee1\u8db3\u9700\u6c42\u5e76\u907f\u514d\u5f71\u54cd\u53ef\u7528\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_39","title":"\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u8d1f\u8f7d\u6d4b\u8bd5","text":"<p>\u91c7\u7528\u8d1f\u8f7d\u6d4b\u8bd5\u65b9\u6cd5\u6765\u8861\u91cf\u6269\u5c55\u6d3b\u52a8\u80fd\u5426\u6ee1\u8db3\u5de5\u4f5c\u8d1f\u8f7d\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-8","title":"REL 8 \u5982\u4f55\u5b9e\u65bd\u66f4\u6539\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_40","title":"\u5bf9\u90e8\u7f72\u7b49\u6807\u51c6\u6d3b\u52a8\u4f7f\u7528\u8fd0\u884c\u624b\u518c","text":"<p>\u8fd0\u884c\u624b\u518c\u662f\u7528\u6765\u5b9e\u73b0\u7279\u5b9a\u7ed3\u679c\u7684\u9884\u5b9a\u4e49\u7a0b\u5e8f\u3002\u4f7f\u7528\u8fd0\u884c\u624b\u518c\u6267\u884c\u6807\u51c6\u6d3b\u52a8\uff0c\u65e0\u8bba\u8fd9\u4e9b\u6d3b\u52a8\u662f\u624b\u52a8\u8fd8\u662f\u81ea\u52a8\u6267\u884c\u3002\u4f8b\u5982\u90e8\u7f72\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u4fee\u8865\uff0c\u6216\u4fee\u6539 DNS\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_41","title":"\u5c06\u529f\u80fd\u6d4b\u8bd5\u4f5c\u4e3a\u90e8\u7f72\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u96c6\u6210","text":"<p>\u529f\u80fd\u6d4b\u8bd5\u4f5c\u4e3a\u81ea\u52a8\u5316\u90e8\u7f72\u7684\u4e00\u90e8\u5206\u8fd0\u884c\u3002\u82e5\u672a\u6ee1\u8db3\u6210\u529f\u6761\u4ef6\uff0c\u5219\u76f8\u5173\u7ba1\u9053\u4f1a\u4e2d\u6b62\u6216\u56de\u6eda\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_42","title":"\u5c06\u5f39\u6027\u6d4b\u8bd5\u4f5c\u4e3a\u90e8\u7f72\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u96c6\u6210","text":"<p>\u5c06\u5f39\u6027\u6d4b\u8bd5\uff08\u4f7f\u7528\u6df7\u6c8c\u5de5\u7a0b\u7684\u539f\u5219\uff09\u4f5c\u4e3a\u9884\u751f\u4ea7\u73af\u5883\u4e2d\u81ea\u52a8\u5316\u90e8\u7f72\u7ba1\u7ebf\u7684\u4e00\u90e8\u5206\u6267\u884c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_43","title":"\u4f7f\u7528\u4e0d\u53ef\u6539\u53d8\u57fa\u7840\u8bbe\u65bd\u90e8\u7f72","text":"<p>\u4e0d\u53ef\u53d8\u57fa\u7840\u8bbe\u65bd\u6a21\u5f0f\u8981\u6c42\u5728\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u4e0d\u4f1a\u51fa\u73b0\u5c31\u5730\u66f4\u65b0\u3001\u5b89\u5168\u8865\u4e01\u6216\u914d\u7f6e\u66f4\u6539\u3002\u9700\u8981\u66f4\u6539\u65f6\uff0c\u4f1a\u5728\u65b0\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\u6784\u5efa\u67b6\u6784\uff0c\u5e76\u5c06\u5176\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_44","title":"\u4f7f\u7528\u81ea\u52a8\u5316\u529f\u80fd\u90e8\u7f72\u66f4\u6539","text":"<p>\u81ea\u52a8\u90e8\u7f72\u4e0e\u4fee\u8865\u4ee5\u6d88\u9664\u8d1f\u9762\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_45","title":"\u6545\u969c\u7ba1\u7406","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-9","title":"REL 9 \u5982\u4f55\u5907\u4efd\u6570\u636e\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_46","title":"\u8bc6\u522b\u548c\u5907\u4efd\u9700\u8981\u5907\u4efd\u6240\u6709\u6570\u636e\uff0c\u6216\u4ece\u6e90\u590d\u5236\u6570\u636e","text":"<p>\u4e86\u89e3\u5e76\u4f7f\u7528\u5de5\u4f5c\u8d1f\u8f7d\u6240\u7528\u7684\u6570\u636e\u670d\u52a1\u548c\u8d44\u6e90\u7684\u5907\u4efd\u529f\u80fd\u3002\u5927\u591a\u6570\u670d\u52a1\u63d0\u4f9b\u4e86\u5907\u4efd\u5de5\u4f5c\u8d1f\u8f7d\u6570\u636e\u7684\u529f\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_47","title":"\u4fdd\u62a4\u5e76\u52a0\u5bc6\u5907\u4efd","text":"<p>\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u6765\u63a7\u5236\u5e76\u68c0\u6d4b\u5bf9\u5907\u4efd\u7684\u8bbf\u95ee\u3002\u4f7f\u7528\u52a0\u5bc6\u529f\u80fd\uff0c\u9632\u6b62\u5e76\u68c0\u6d4b\u5907\u4efd\u7684\u6570\u636e\u5b8c\u6574\u6027\u662f\u5426\u53d7\u5230\u635f\u574f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_48","title":"\u81ea\u52a8\u6267\u884c\u6570\u636e\u5907\u4efd","text":"<p>\u5c06\u5907\u4efd\u914d\u7f6e\u4e3a\u6839\u636e\u9075\u5faa\u6062\u590d\u70b9\u76ee\u6807\uff08RPO\uff09\u7684\u5b9a\u671f\u8ba1\u5212\u81ea\u52a8\u5907\u4efd\uff0c\u6216\u8005\u5728\u6570\u636e\u96c6\u53d1\u751f\u66f4\u6539\u65f6\u81ea\u52a8\u5907\u4efd\u3002\u5177\u6709\u4f4e\u6570\u636e\u4e22\u5931\u9700\u6c42\u7684\u5173\u952e\u6570\u636e\u8d44\u4ea7\u9700\u8981\u9891\u7e41\u5730\u81ea\u52a8\u5907\u4efd\uff0c\u800c\u53ef\u4ee5\u63a5\u53d7\u67d0\u4e9b\u4e22\u5931\u7684\u8f83\u4e0d\u91cd\u8981\u6570\u636e\u7684\u5907\u4efd\u9891\u7387\u53ef\u4ee5\u66f4\u4f4e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_49","title":"\u5b9a\u671f\u6267\u884c\u6570\u636e\u6062\u590d\u4ee5\u9a8c\u8bc1\u5907\u4efd\u5b8c\u6574\u6027\u548c\u6d41\u7a0b","text":"<p>\u901a\u8fc7\u6267\u884c\u6062\u590d\u6d4b\u8bd5\uff0c\u9a8c\u8bc1\u60a8\u7684\u5907\u4efd\u6d41\u7a0b\u5b9e\u65bd\u662f\u5426\u6ee1\u8db3\u6062\u590d\u65f6\u95f4\u76ee\u6807\uff08RTO\uff09\u548c\u6062\u590d\u70b9\u76ee\u6807\uff08RPO\uff09\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-10","title":"REL 10 \u5982\u4f55\u4f7f\u7528\u6545\u969c\u9694\u79bb\u6765\u4fdd\u62a4\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_50","title":"\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u90e8\u7f72\u5230\u591a\u4e2a\u4f4d\u7f6e","text":"<p>\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u6570\u636e\u548c\u8d44\u6e90\u5206\u5e03\u5230\u591a\u4e2a\u53ef\u7528\u533a\uff0c\u6216\u5728\u5fc5\u8981\u65f6\u5206\u5e03\u5230\u591a\u4e2a AWS \u533a\u57df\u3002\u53ef\u901a\u8fc7\u9009\u62e9\u4e0d\u540c\u4f4d\u7f6e\u6ee1\u8db3\u5404\u79cd\u9700\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_51","title":"\u4e3a\u60a8\u7684\u591a\u4f4d\u7f6e\u90e8\u7f72\u9009\u62e9\u5408\u9002\u7684\u4f4d\u7f6e","text":"<p>\u8981\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\uff0c\u8bf7\u59cb\u7ec8\uff08\u5982\u679c\u53ef\u80fd\uff09\u5c06\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7ec4\u4ef6\u90e8\u7f72\u5230\u591a\u4e2a\u53ef\u7528\u533a\uff08AZ\uff09\u3002\u5bf9\u4e8e\u5177\u6709\u6781\u9ad8\u5f39\u6027\u8981\u6c42\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8bf7\u8c28\u614e\u8bc4\u4f30\u7528\u4e8e\u591a\u533a\u57df\u67b6\u6784\u7684\u9009\u9879\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_52","title":"\u91c7\u7528\u9694\u677f\u67b6\u6784\u6765\u9650\u5236\u5f71\u54cd\u8303\u56f4","text":"<p>\u5b9e\u65bd\u9694\u677f\u67b6\u6784\uff08\u4e5f\u79f0\u4e3a\u57fa\u4e8e cell \u7684\u67b6\u6784\uff09\uff0c\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u6545\u969c\u7684\u5f71\u54cd\u9650\u5236\u5230\u6709\u9650\u6570\u91cf\u7684\u7ec4\u4ef6\u4e0a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_53","title":"\u7ec4\u4ef6\u7684\u81ea\u52a8\u6062\u590d\u53d7\u9650\u4e8e\u5355\u4e2a\u4f4d\u7f6e","text":"<p>\u5982\u679c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7ec4\u4ef6\u53ea\u80fd\u5728\u5355\u4e2a\u53ef\u7528\u533a\u6216\u672c\u5730\u90e8\u7f72\u6570\u636e\u4e2d\u5fc3\u5185\u8fd0\u884c\uff0c\u60a8\u5fc5\u987b\u5229\u7528\u76f8\u5173\u529f\u80fd\u5728\u5b9a\u4e49\u7684\u6062\u590d\u76ee\u6807\u5185\u5f7b\u5e95\u91cd\u5efa\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-11","title":"REL 11 \u5982\u4f55\u5c06\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u8bbe\u8ba1\u4e3a\u53ef\u627f\u53d7\u7ec4\u4ef6\u6545\u969c\u7684\u5f71\u54cd\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_54","title":"\u76d1\u63a7\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6240\u6709\u7ec4\u4ef6\u4ee5\u68c0\u6d4b\u6545\u969c","text":"<p>\u6301\u7eed\u76d1\u63a7\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u4ee5\u4fbf\u60a8\u548c\u60a8\u7684\u81ea\u52a8\u5316\u7cfb\u7edf\u7acb\u5373\u53d1\u73b0\u4efb\u4f55\u6545\u969c\u6216\u6027\u80fd\u4e0b\u964d\u60c5\u51b5\u3002\u76d1\u63a7\u57fa\u4e8e\u5546\u4e1a\u4ef7\u503c\u7684\u5173\u952e\u6027\u80fd\u6307\u6807\uff08KPI\uff09\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_55","title":"\u6545\u969c\u8f6c\u79fb\u5230\u8fd0\u884c\u72b6\u51b5\u826f\u597d\u7684\u8d44\u6e90","text":"<p>\u5982\u679c\u8d44\u6e90\u53d1\u751f\u6545\u969c\uff0c\u8fd0\u884c\u72b6\u51b5\u826f\u597d\u7684\u8d44\u6e90\u5e94\u7ee7\u7eed\u4e3a\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\u3002\u5bf9\u4e8e\u4f4d\u7f6e\u7834\u574f\uff08\u5982\u53ef\u7528\u533a\u6216 AWS \u533a\u57df\uff09\uff0c\u786e\u4fdd\u60a8\u62e5\u6709\u9002\u5f53\u7684\u7cfb\u7edf\u4ee5\u5931\u6548\u8f6c\u79fb\u5230\u672a\u53d7\u635f\u4f4d\u7f6e\u5185\u8fd0\u884c\u72b6\u51b5\u826f\u597d\u7684\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_56","title":"\u81ea\u52a8\u4fee\u590d\u6240\u6709\u5c42","text":"<p>\u5728\u68c0\u6d4b\u5230\u6545\u969c\u65f6\uff0c\u4f7f\u7528\u81ea\u52a8\u5316\u529f\u80fd\u6267\u884c\u4fee\u590d\u64cd\u4f5c\u3002\u964d\u7ea7\u53ef\u80fd\u4f1a\u901a\u8fc7\u5185\u90e8\u670d\u52a1\u673a\u5236\u81ea\u52a8\u4fee\u590d\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u901a\u8fc7\u8865\u6551\u63aa\u65bd\u91cd\u542f\u6216\u79fb\u9664\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_57","title":"\u6062\u590d\u671f\u95f4\u4f9d\u8d56\u4e8e\u6570\u636e\u5c42\u9762\u800c\u4e0d\u662f\u63a7\u5236\u9762\u677f","text":"<p>\u63a7\u5236\u5e73\u9762\u63d0\u4f9b\u7528\u4e8e\u521b\u5efa\u3001\u8bfb\u53d6\u548c\u63cf\u8ff0\u3001\u66f4\u65b0\u3001\u5220\u9664\u548c\u5217\u51fa\uff08CRUDL\uff09\u8d44\u6e90\u7684\u7ba1\u7406 API\uff0c\u800c\u6570\u636e\u5e73\u9762\u5219\u5904\u7406\u65e5\u5e38\u670d\u52a1\u6d41\u91cf\u3002\u5728\u5bf9\u53ef\u80fd\u5f71\u54cd\u5f39\u6027\u7684\u4e8b\u4ef6\u5b9e\u65bd\u6062\u590d\u6216\u7f13\u89e3\u54cd\u5e94\u65f6\uff0c\u7740\u773c\u4e8e\u4f7f\u7528\u6700\u5c11\u6570\u91cf\u7684\u63a7\u5236\u5e73\u9762\u64cd\u4f5c\uff0c\u6765\u5b9e\u73b0\u5bf9\u670d\u52a1\u7684\u6062\u590d\u3001\u91cd\u65b0\u6269\u5c55\u3001\u6062\u590d\u3001\u4fee\u590d\u6216\u5931\u6548\u8f6c\u79fb\u3002\u5728\u8fd9\u4e9b\u964d\u7ea7\u4e8b\u4ef6\u671f\u95f4\uff0c\u6570\u636e\u5e73\u9762\u64cd\u4f5c\u5e94\u51cc\u9a7e\u4e8e\u4efb\u4f55\u6d3b\u52a8\u4e4b\u4e0a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_58","title":"\u4f7f\u7528\u9759\u6001\u7a33\u5b9a\u6027\u6765\u9632\u6b62\u53cc\u6a21\u6001\u884c\u4e3a","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u5e94\u5177\u6709\u9759\u6001\u7a33\u5b9a\u6027\uff0c\u5e76\u4e14\u4ec5\u5728\u5355\u4e00\u6b63\u5e38\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\u53cc\u6a21\u6001\u884c\u4e3a\u662f\u6307\u5de5\u4f5c\u8d1f\u8f7d\u5728\u6b63\u5e38\u6a21\u5f0f\u548c\u6545\u969c\u6a21\u5f0f\u4e0b\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_59","title":"\u5f53\u4e8b\u4ef6\u5f71\u54cd\u53ef\u7528\u6027\u65f6\u53d1\u51fa\u901a\u77e5","text":"<p>\u5728\u68c0\u6d4b\u5230\u7a81\u7834\u9608\u503c\u65f6\u53d1\u9001\u901a\u77e5\uff0c\u5373\u4f7f\u7531\u95ee\u9898\u5f15\u53d1\u7684\u4e8b\u4ef6\u5df2\u7ecf\u81ea\u52a8\u89e3\u51b3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#sla","title":"\u6839\u636e\u53ef\u7528\u6027\u76ee\u6807\u548c\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u670d\u52a1\u7b49\u7ea7\u534f\u8bae\uff08SLA\uff09\u6765\u8bbe\u8ba1\u60a8\u7684\u4ea7\u54c1","text":"<p>\u6784\u9020\u60a8\u7684\u4ea7\u54c1\u4ee5\u6ee1\u8db3\u53ef\u7528\u6027\u76ee\u6807\u548c\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u670d\u52a1\u7b49\u7ea7\u534f\u8bae\uff08SLA\uff09\u3002\u5982\u679c\u60a8\u516c\u5f00\u6216\u79c1\u4e0b\u540c\u610f\u53ef\u7528\u6027\u76ee\u6807\u6216\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4 SLA\uff0c\u8bf7\u786e\u8ba4\u60a8\u8bbe\u8ba1\u4e86\u67b6\u6784\u548c\u8fd0\u8425\u6d41\u7a0b\u6765\u652f\u6301\u5b83\u4eec\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-12","title":"REL 12 \u5982\u4f55\u6d4b\u8bd5\u53ef\u9760\u6027\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_60","title":"\u6839\u636e\u884c\u52a8\u624b\u518c\u8c03\u67e5\u6545\u969c","text":"<p>\u901a\u8fc7\u5728\u884c\u52a8\u624b\u518c\u4e2d\u8bb0\u5f55\u8c03\u67e5\u6d41\u7a0b\uff0c\u5b9e\u73b0\u5bf9\u5e76\u4e0d\u5341\u5206\u4e86\u89e3\u7684\u6545\u969c\u573a\u666f\u505a\u51fa\u4e00\u81f4\u4e14\u53ca\u65f6\u7684\u54cd\u5e94\u3002\u884c\u52a8\u624b\u518c\u662f\u5728\u786e\u5b9a\u54ea\u4e9b\u56e0\u7d20\u5bfc\u81f4\u6545\u969c\u573a\u666f\u65f6\u8981\u6267\u884c\u7684\u9884\u5b9a\u4e49\u6b65\u9aa4\u3002\u6240\u6709\u6d41\u7a0b\u6b65\u9aa4\u7684\u7ed3\u679c\u90fd\u5c06\u7528\u4e8e\u786e\u5b9a\u8981\u91c7\u53d6\u7684\u540e\u7eed\u6b65\u9aa4\uff0c\u76f4\u5230\u95ee\u9898\u5f97\u5230\u786e\u5b9a\u6216\u4e0a\u62a5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_61","title":"\u5728\u610f\u5916\u4e8b\u4ef6\u53d1\u751f\u540e\u6267\u884c\u5206\u6790","text":"<p>\u5ba1\u6838\u5f71\u54cd\u5ba2\u6237\u7684\u4e8b\u4ef6\uff0c\u786e\u5b9a\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u6210\u56e0\u548c\u9884\u9632\u63aa\u65bd\u3002\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u5236\u5b9a\u7f13\u89e3\u63aa\u65bd\uff0c\u4ee5\u9650\u5236\u6216\u9632\u6b62\u518d\u6b21\u53d1\u751f\u540c\u7c7b\u4e8b\u4ef6\u3002\u5236\u5b9a\u7a0b\u5e8f\u4ee5\u8fc5\u901f\u6709\u6548\u5730\u505a\u51fa\u54cd\u5e94\u3002\u6839\u636e\u76ee\u6807\u53d7\u4f17\uff0c\u9002\u5f53\u4f20\u8fbe\u4e8b\u4ef6\u6210\u56e0\u548c\u7ea0\u6b63\u63aa\u65bd\u3002\u5982\u679c\u9700\u8981\uff0c\u53ef\u5c06\u8fd9\u4e9b\u539f\u56e0\u544a\u77e5\u4ed6\u4eba\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_62","title":"\u6d4b\u8bd5\u529f\u80fd\u8981\u6c42","text":"<p>\u4f7f\u7528\u7684\u6280\u672f\u5305\u62ec\u7528\u4e8e\u9a8c\u8bc1\u6240\u9700\u529f\u80fd\u7684\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_63","title":"\u6d4b\u8bd5\u6269\u5c55\u548c\u6027\u80fd\u8981\u6c42","text":"<p>\u4f7f\u7528\u7684\u6280\u672f\u5305\u62ec\u8d1f\u8f7d\u6d4b\u8bd5\u4ee5\u9a8c\u8bc1\u5de5\u4f5c\u8d1f\u8f7d\u662f\u5426\u6ee1\u8db3\u6269\u5c55\u548c\u6027\u80fd\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_64","title":"\u4f7f\u7528\u6df7\u6c8c\u5de5\u7a0b\u6d4b\u8bd5\u5f39\u6027","text":"<p>\u5728\u5904\u4e8e\u6216\u5c3d\u53ef\u80fd\u63a5\u8fd1\u751f\u4ea7\u7684\u73af\u5883\u4e2d\u5b9a\u671f\u8fd0\u884c\u6df7\u6c8c\u8bd5\u9a8c\uff0c\u4ee5\u4e86\u89e3\u7cfb\u7edf\u5982\u4f55\u5e94\u5bf9\u4e0d\u5229\u6761\u4ef6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_65","title":"\u5b9a\u671f\u8fdb\u884c\u5b9e\u9645\u8bd5\u7528","text":"<p>\u5229\u7528\u5b9e\u9645\u8bd5\u7528\u6d3b\u52a8\uff0c\u5728\u5c3d\u53ef\u80fd\u63a5\u8fd1\u751f\u4ea7\u73af\u5883\u7684\u73af\u5883\u4e2d\uff08\u5305\u62ec\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff09\uff0c\u4e0e\u5c06\u53c2\u4e0e\u5b9e\u9645\u6545\u969c\u60c5\u666f\u7684\u4eba\u5458\u4e00\u8d77\u4e3a\u5e94\u5bf9\u4e8b\u4ef6\u548c\u6545\u969c\u800c\u7ec3\u4e60\u5982\u4f55\u4f7f\u7528\u60a8\u7684\u7a0b\u5e8f\u3002\u5b9e\u9645\u8bd5\u7528\u4f1a\u5f3a\u5236\u6267\u884c\u76f8\u5173\u63aa\u65bd\uff0c\u4ee5\u786e\u4fdd\u751f\u4ea7\u4e8b\u4ef6\u4e0d\u4f1a\u5f71\u54cd\u7528\u6237\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#rel-13-dr","title":"REL 13 \u5982\u4f55\u89c4\u5212\u707e\u96be\u6062\u590d\uff08DR\uff09\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_66","title":"\u5b9a\u4e49\u505c\u673a\u548c\u6570\u636e\u4e22\u5931\u7684\u6062\u590d\u76ee\u6807","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u5177\u6709\u6062\u590d\u65f6\u95f4\u76ee\u6807\uff08RTO\uff09\u548c\u6062\u590d\u70b9\u76ee\u6807\uff08RPO\uff09\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_67","title":"\u4f7f\u7528\u5b9a\u4e49\u7684\u6062\u590d\u7b56\u7565\u6765\u5b9e\u73b0\u6062\u590d\u76ee\u6807","text":"<p>\u5b9a\u4e49\u6ee1\u8db3\u5de5\u4f5c\u8d1f\u8f7d\u6062\u590d\u76ee\u6807\u7684\u707e\u96be\u6062\u590d\uff08DR\uff09\u7b56\u7565\u3002\u9009\u62e9\u4e00\u79cd\u7b56\u7565\uff0c\u4f8b\u5982\u5907\u4efd\u548c\u8fd8\u539f\u3001\u5907\u7528\uff08\u4e3b\u52a8/\u88ab\u52a8\uff09\u6216\u4e3b\u52a8/\u4e3b\u52a8\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_68","title":"\u6d4b\u8bd5\u707e\u96be\u6062\u590d\u5b9e\u65bd\u4ee5\u9a8c\u8bc1\u5b9e\u65bd\u6548\u679c","text":"<p>\u5b9a\u671f\u6d4b\u8bd5\u5230\u6062\u590d\u7ad9\u70b9\u7684\u5931\u6548\u8f6c\u79fb\uff0c\u4ee5\u9a8c\u8bc1\u662f\u5426\u5728\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u6ee1\u8db3 RTO \u548c RPO\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#dr","title":"\u7ba1\u7406 DR \u7ad9\u70b9\u6216\u533a\u57df\u7684\u914d\u7f6e\u6f02\u79fb","text":"<p>\u786e\u4fdd DR \u7ad9\u70b9\u6216\u533a\u57df\u7684\u57fa\u7840\u8bbe\u65bd\u3001\u6570\u636e\u548c\u914d\u7f6e\u6ee1\u8db3\u9700\u6c42\u3002\u4f8b\u5982\uff0c\u68c0\u67e5 AMI \u548c\u670d\u52a1\u914d\u989d\u662f\u5426\u4e3a\u6700\u65b0\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%8F%AF%E9%9D%A0%E6%80%A7-Reliability-202310-Summary/#_69","title":"\u81ea\u52a8\u6267\u884c\u6062\u590d","text":"<p>\u5229\u7528 AWS \u6216\u7b2c\u4e09\u65b9\u5de5\u5177\u81ea\u52a8\u8fdb\u884c\u7cfb\u7edf\u6062\u590d\uff0c\u5e76\u5c06\u6d41\u91cf\u8def\u7531\u81f3 DR \u7ad9\u70b9\u6216\u533a\u57df\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/","title":"WA-\u5b89\u5168-Security-202310-Summary","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_1","title":"\u8bbe\u8ba1\u539f\u5219","text":"<pre><code>collapse: close\ntitle:  \u5b9e\u65bd\u5f3a\u5927\u7684\u8eab\u4efd\u57fa\u7840\n\n\u5b9e\u65bd\u6700\u4f4e\u6743\u9650\u539f\u5219\uff0c\u5e76\u901a\u8fc7\u9002\u5f53\u6388\u6743\u5bf9\u4e0e AWS \u8d44\u6e90\u7684\u6bcf\u6b21\u4ea4\u4e92\u6267\u884c\u804c\u8d23\u5206\u79bb\u3002\u96c6\u4e2d\u8eab\u4efd\u7ba1\u7406\uff0c\u65e8\u5728\u6d88\u9664\u5bf9\u957f\u671f\u9759\u6001\u51ed\u8bc1\u7684\u4f9d\u8d56\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u542f\u7528\u53ef\u8ffd\u6eaf\u6027\n\n\u5b9e\u65f6\u76d1\u63a7\u3001\u8b66\u62a5\u548c\u5ba1\u6838\u5bf9\u73af\u5883\u7684\u64cd\u4f5c\u548c\u66f4\u6539\u3002\u5c06\u65e5\u5fd7\u548c\u6307\u6807\u6536\u96c6\u4e0e\u7cfb\u7edf\u96c6\u6210\u4ee5\u81ea\u52a8\u8c03\u67e5\u5e76\u91c7\u53d6\u884c\u52a8\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u5728\u6240\u6709\u5c42\u5e94\u7528\u5b89\u5168\n\n\u5e94\u7528\u5177\u6709\u591a\u4e2a\u5b89\u5168\u63a7\u5236\u7684\u7eb5\u6df1\u9632\u5fa1\u65b9\u6cd5\uff0c\u5e94\u7528\u4e8e\u6240\u6709\u5c42\uff08\u4f8b\u5982\uff0c\u7f51\u7edc\u8fb9\u7f18\u3001VPC\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u6bcf\u4e2a\u5b9e\u4f8b\u548c\u8ba1\u7b97\u670d\u52a1\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u4ee3\u7801\uff09\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u81ea\u52a8\u5316\u5b89\u5168\u6700\u4f73\u5b9e\u8df5\n\n\u81ea\u52a8\u5316\u7684\u57fa\u4e8e\u8f6f\u4ef6\u7684\u5b89\u5168\u673a\u5236\u63d0\u9ad8\u4e86\u60a8\u66f4\u5feb\u901f\u3001\u66f4\u7ecf\u6d4e\u5730\u5b89\u5168\u6269\u5c55\u7684\u80fd\u529b\u3002\u521b\u5efa\u5b89\u5168\u67b6\u6784\uff0c\u5305\u62ec\u5b9e\u65bd\u5728\u7248\u672c\u63a7\u5236\u6a21\u677f\u4e2d\u4f5c\u4e3a\u4ee3\u7801\u5b9a\u4e49\u548c\u7ba1\u7406\u7684\u63a7\u5236\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u4fdd\u62a4\u4f20\u8f93\u4e2d\u548c\u9759\u6001\u7684\u6570\u636e\n\n\u5c06\u60a8\u7684\u6570\u636e\u5206\u7c7b\u4e3a\u654f\u611f\u7ea7\u522b\uff0c\u5e76\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u52a0\u5bc6\u3001\u4ee4\u724c\u5316\u548c\u8bbf\u95ee\u63a7\u5236\u7b49\u673a\u5236\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u8ba9\u4eba\u4eec\u8fdc\u79bb\u6570\u636e\n\n\u4f7f\u7528\u673a\u5236\u548c\u5de5\u5177\u51cf\u5c11\u6216\u6d88\u9664\u76f4\u63a5\u8bbf\u95ee\u6216\u624b\u52a8\u5904\u7406\u6570\u636e\u7684\u9700\u8981\uff0c\u4ece\u800c\u964d\u4f4e\u5904\u7406\u654f\u611f\u6570\u636e\u65f6\u8bef\u5904\u7406\u6216\u4fee\u6539\u4ee5\u53ca\u4eba\u4e3a\u9519\u8bef\u7684\u98ce\u9669\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u4e3a\u5b89\u5168\u4e8b\u4ef6\u505a\u597d\u51c6\u5907\n\n\u901a\u8fc7\u5236\u5b9a\u7b26\u5408\u7ec4\u7ec7\u8981\u6c42\u7684\u4e8b\u4ef6\u7ba1\u7406\u548c\u8c03\u67e5\u653f\u7b56\u548c\u6d41\u7a0b\u6765\u4e3a\u4e8b\u4ef6\u505a\u597d\u51c6\u5907\u3002\u8fd0\u884c\u4e8b\u4ef6\u54cd\u5e94\u6a21\u62df\u5e76\u4f7f\u7528\u81ea\u52a8\u5316\u5de5\u5177\u6765\u63d0\u9ad8\u68c0\u6d4b\u3001\u8c03\u67e5\u548c\u6062\u590d\u7684\u901f\u5ea6\u3002\n</code></pre>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_2","title":"\u95ee\u9898\u548c\u5b9a\u4e49","text":"<p>\u5b89\u5168\u57fa\u7840     SEC 1 \u5982\u4f55\u5b89\u5168\u5730\u64cd\u4f5c\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff1f \u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406     SEC 2 \u5982\u4f55\u7ba1\u7406\u4eba\u5458\u548c\u673a\u5668\u7684\u8eab\u4efd\uff1f     SEC 3 \u5982\u4f55\u7ba1\u7406\u4eba\u5458\u548c\u673a\u5668\u7684\u6743\u9650\uff1f \u68c0\u6d4b     SEC 4 \u60a8\u5982\u4f55\u68c0\u6d4b\u548c\u8c03\u67e5\u5b89\u5168\u4e8b\u4ef6\uff1f \u57fa\u7840\u67b6\u6784\u4fdd\u62a4     SEC 5 \u5982\u4f55\u4fdd\u62a4\u60a8\u7684\u7f51\u7edc\u8d44\u6e90\uff1f     SEC 6 \u5982\u4f55\u4fdd\u62a4\u8ba1\u7b97\u8d44\u6e90\uff1f \u6570\u636e\u4fdd\u62a4     SEC 7 \u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff1f     SEC 8 \u5982\u4f55\u4fdd\u62a4\u9759\u6001\u6570\u636e\uff1f     SEC 9 \u5982\u4f55\u4fdd\u62a4\u4f20\u8f93\u4e2d\u7684\u6570\u636e\uff1f \u4e8b\u4ef6\u54cd\u5e94     SEC 10 \u5982\u4f55\u9884\u6d4b\u3001\u54cd\u5e94\u4e8b\u4ef6\u4ee5\u53ca\u4ece\u4e8b\u4ef6\u4e2d\u6062\u590d\uff1f \u5e94\u7528\u5b89\u5168     SEC 11 \u5982\u4f55\u5728\u6574\u4e2a\u8bbe\u8ba1\u3001\u5f00\u53d1\u548c\u90e8\u7f72\u751f\u547d\u5468\u671f\u4e2d\u7eb3\u5165\u5e76\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u5c5e\u6027\uff1f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_3","title":"\u6700\u4f73\u5b9e\u8df5","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_4","title":"\u5b89\u5168\u57fa\u7840","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-1","title":"SEC 1 \u5982\u4f55\u5b89\u5168\u5730\u64cd\u4f5c\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_5","title":"\u4f7f\u7528\u8d26\u6237\u5206\u9694\u5de5\u4f5c\u8d1f\u8f7d","text":"<p>\u901a\u8fc7\u91c7\u53d6\u591a\u8d26\u6237\u7b56\u7565\uff0c\u5728\u73af\u5883\uff08\u5982\u751f\u4ea7\u3001\u5f00\u53d1\u548c\u6d4b\u8bd5\uff09\u548c\u5de5\u4f5c\u8d1f\u8f7d\u4e4b\u95f4\u5efa\u7acb\u5171\u540c\u7684\u9632\u62a4\u673a\u5236\u548c\u9694\u79bb\u63aa\u65bd\u3002\u5f3a\u70c8\u5efa\u8bae\u5728\u8d26\u6237\u5c42\u9762\u8fdb\u884c\u5206\u79bb\u7ba1\u7406\uff0c\u8fd9\u6837\u53ef\u4e3a\u5b89\u5168\u6027\u3001\u8d26\u5355\u548c\u8bbf\u95ee\u63d0\u4f9b\u5f3a\u5927\u7684\u9694\u79bb\u8fb9\u754c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_6","title":"\u5b89\u5168\u8d26\u6237\u6839\u7528\u6237\u548c\u5c5e\u6027","text":"<p>\u6839\u7528\u6237\u662f AWS \u8d26\u6237\u4e2d\u6743\u9650\u6700\u9ad8\u7684\u7528\u6237\uff0c\u5bf9\u8d26\u6237\u5185\u7684\u6240\u6709\u8d44\u6e90\u5177\u6709\u5b8c\u5168\u7ba1\u7406\u8bbf\u95ee\u6743\u9650\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u53d7\u5b89\u5168\u7b56\u7565\u7684\u7ea6\u675f\u3002\u7981\u7528\u5bf9\u6839\u7528\u6237\u7684\u7f16\u7a0b\u8bbf\u95ee\uff0c\u4e3a\u6839\u7528\u6237\u5efa\u7acb\u9002\u5f53\u7684\u63a7\u5236\u673a\u5236\uff0c\u5e76\u907f\u514d\u65e5\u5e38\u4f7f\u7528\u6839\u7528\u6237\u3002\u8fd9\u6837\u6709\u52a9\u4e8e\u964d\u4f4e\u65e0\u610f\u4e2d\u66b4\u9732\u6839\u51ed\u8bc1\u4ee5\u53ca\u968f\u540e\u7834\u574f\u4e91\u73af\u5883\u7684\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_7","title":"\u8bc6\u522b\u5e76\u9a8c\u8bc1\u63a7\u5236\u76ee\u6807","text":"<p>\u6839\u636e\u60a8\u7684\u5408\u89c4\u6027\u8981\u6c42\u4ee5\u53ca\u4ece\u5a01\u80c1\u6a21\u578b\u4e2d\u53d1\u73b0\u7684\u98ce\u9669\uff0c\u83b7\u5f97\u5e76\u9a8c\u8bc1\u60a8\u9700\u8981\u5e94\u7528\u4e8e\u5de5\u4f5c\u8d1f\u8f7d\u7684\u63a7\u5236\u76ee\u6807\u548c\u63a7\u5236\u63aa\u65bd\u3002\u6301\u7eed\u9a8c\u8bc1\u63a7\u5236\u76ee\u6807\u548c\u63a7\u5236\u63aa\u65bd\u53ef\u5e2e\u52a9\u60a8\u8861\u91cf\u98ce\u9669\u7f13\u89e3\u63aa\u65bd\u7684\u6709\u6548\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_8","title":"\u53ca\u65f6\u4e86\u89e3\u6700\u65b0\u7684\u5b89\u5168\u5a01\u80c1","text":"<p>\u901a\u8fc7\u53ca\u65f6\u4e86\u89e3\u6700\u65b0\u7684\u5b89\u5168\u5a01\u80c1\uff0c\u5e2e\u52a9\u60a8\u5b9a\u4e49\u5e76\u5b9e\u65bd\u9002\u5f53\u7684\u63a7\u5236\u63aa\u65bd\uff0c\u8bc6\u522b\u653b\u51fb\u5a92\u4ecb\u3002\u4f7f\u7528 AWS Managed Services\uff0c\u8ba9\u60a8\u80fd\u591f\u5728\u81ea\u5df1\u7684 AWS \u8d26\u6237\u4e2d\u5b58\u5728\u610f\u5916\u884c\u4e3a\u6216\u5f02\u5e38\u884c\u4e3a\u65f6\u63a5\u6536\u5230\u901a\u77e5\u3002\u5728\u60a8\u7684\u5b89\u5168\u4fe1\u606f\u6d41\u7a0b\u4e2d\uff0c\u4f7f\u7528 AWS \u5408\u4f5c\u4f19\u4f34\u5de5\u5177\u6216\u7b2c\u4e09\u65b9\u5a01\u80c1\u4fe1\u606f\u6e90\u8fdb\u884c\u8c03\u67e5\u3002\u901a\u7528\u6f0f\u6d1e\u62ab\u9732\uff08CVE\uff09\u5217\u8868\u4e2d\u5305\u542b\u516c\u5f00\u62ab\u9732\u7684\u7f51\u7edc\u5b89\u5168\u6f0f\u6d1e\uff0c\u53ef\u4f9b\u60a8\u638c\u63e1\u6700\u65b0\u4fe1\u606f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_9","title":"\u53ca\u65f6\u4e86\u89e3\u6700\u65b0\u7684\u5b89\u5168\u5efa\u8bae","text":"<p>\u53ca\u65f6\u4e86\u89e3\u6700\u65b0\u7684 AWS \u548c\u884c\u4e1a\u5b89\u5168\u5efa\u8bae\uff0c\u4ee5\u6539\u5584\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b89\u5168\u72b6\u51b5\u3002AWS \u5b89\u5168\u516c\u544a\u4e2d\u5305\u542b\u6709\u5173\u5b89\u5168\u6027\u548c\u9690\u79c1\u901a\u77e5\u7684\u91cd\u8981\u4fe1\u606f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_10","title":"\u4f7f\u7528\u5a01\u80c1\u6a21\u578b\u8bc6\u522b\u98ce\u9669\u5e76\u786e\u5b9a\u5176\u4f18\u5148\u7ea7","text":"<p>\u6267\u884c\u5a01\u80c1\u5efa\u6a21\uff0c\u4ee5\u8bc6\u522b\u5e76\u7ef4\u62a4\u4e00\u4e2a\u9488\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6f5c\u5728\u5a01\u80c1\u548c\u76f8\u5173\u7f13\u89e3\u63aa\u65bd\u7684\u6700\u65b0\u767b\u8bb0\u8868\u3002\u786e\u5b9a\u5a01\u80c1\u4f18\u5148\u7ea7\u5e76\u8c03\u6574\u5b89\u5168\u63a7\u5236\u7f13\u89e3\u63aa\u65bd\uff0c\u4ee5\u8fdb\u884c\u9632\u8303\u3001\u68c0\u6d4b\u548c\u54cd\u5e94\u3002\u6839\u636e\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4ee5\u53ca\u4e0d\u65ad\u53d8\u5316\u7684\u5b89\u5168\u73af\u5883\uff0c\u91cd\u65b0\u5ba1\u89c6\u548c\u7ef4\u62a4\u6b64\u767b\u8bb0\u8868\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_11","title":"\u5728\u7ba1\u9053\u4e2d\u81ea\u52a8\u6267\u884c\u6d4b\u8bd5\u548c\u9a8c\u8bc1\u5b89\u5168\u63a7\u5236\u63aa\u65bd","text":"<p>\u4e3a\u5b89\u5168\u673a\u5236\u5efa\u7acb\u53ef\u9760\u7684\u57fa\u51c6\u548c\u6a21\u677f\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u6784\u5efa\u3001\u7ba1\u9053\u548c\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u6d4b\u8bd5\u548c\u9a8c\u8bc1\u3002\u5229\u7528\u5de5\u5177\u548c\u81ea\u52a8\u5316\u529f\u80fd\uff0c\u6301\u7eed\u6d4b\u8bd5\u5e76\u9a8c\u8bc1\u6240\u6709\u7684\u5b89\u5168\u63a7\u5236\u63aa\u65bd\u3002\u4f8b\u5982\uff0c\u626b\u63cf\u673a\u5668\u6620\u50cf\u548c\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u9762\u677f\u7b49\u9879\u76ee\uff0c\u4ee5\u53d1\u73b0\u5b89\u5168\u6f0f\u6d1e\u3001\u5f02\u5e38\u4ee5\u53ca\u4e0e\u6bcf\u4e2a\u9636\u6bb5\u7684\u65e2\u5b9a\u57fa\u51c6\u7684\u504f\u5dee\u3002AWS CloudFormation Guard \u53ef\u4ee5\u5e2e\u52a9\u60a8\u9a8c\u8bc1 CloudFormation \u6a21\u677f\u662f\u5426\u5b89\u5168\uff0c\u4e3a\u60a8\u8282\u7701\u65f6\u95f4\u5e76\u964d\u4f4e\u914d\u7f6e\u9519\u8bef\u7684\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_12","title":"\u5b9a\u671f\u8bc4\u4f30\u548c\u5b9e\u65bd\u65b0\u7684\u5b89\u5168\u670d\u52a1\u548c\u529f\u80fd","text":"<p>\u8bc4\u4f30\u5e76\u5b9e\u65bd AWS \u548c AWS \u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b\u7684\u5b89\u5168\u670d\u52a1\u548c\u529f\u80fd\uff0c\u4ee5\u6539\u5584\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b89\u5168\u72b6\u51b5\u3002AWS \u5b89\u5168\u535a\u5ba2\u91cd\u70b9\u4ecb\u7ecd\u65b0\u7684 AWS \u670d\u52a1\u548c\u529f\u80fd\u3001\u5b9e\u65bd\u6307\u5bfc\u548c\u5e38\u89c4\u5b89\u5168\u6307\u5357\u3002\u201cAWS \u7684\u65b0\u589e\u5185\u5bb9\u201d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9014\u5f84\uff0c\u53ef\u5e2e\u52a9\u60a8\u53ca\u65f6\u4e86\u89e3\u6240\u6709\u65b0\u7684 AWS \u529f\u80fd\u3001\u670d\u52a1\u548c\u516c\u544a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_13","title":"\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-2","title":"SEC 2 \u5982\u4f55\u7ba1\u7406\u4eba\u5458\u548c\u673a\u5668\u7684\u8eab\u4efd\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_14","title":"\u4f7f\u7528\u5f3a\u5927\u7684\u767b\u5f55\u673a\u5236","text":"<p>\u5f53\u4e0d\u4f7f\u7528\u591a\u91cd\u8eab\u4efd\u9a8c\u8bc1\uff08MFA\uff09\u7b49\u673a\u5236\u65f6\uff0c\u767b\u5f55\uff08\u4f7f\u7528\u767b\u5f55\u51ed\u8bc1\u7684\u8eab\u4efd\u9a8c\u8bc1\uff09\u53ef\u80fd\u4f1a\u5e26\u6765\u98ce\u9669\uff0c\u7279\u522b\u662f\u5728\u767b\u5f55\u51ed\u8bc1\u88ab\u65e0\u610f\u6cc4\u9732\u6216\u5f88\u5bb9\u6613\u731c\u5230\u7684\u60c5\u51b5\u4e0b\u3002\u4f7f\u7528\u5f3a\u5927\u7684\u767b\u5f55\u673a\u5236\uff0c\u901a\u8fc7\u8981\u6c42\u4f7f\u7528 MFA \u548c\u5f3a\u5bc6\u7801\u7b56\u7565\u6765\u964d\u4f4e\u8fd9\u4e9b\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_15","title":"\u4f7f\u7528\u4e34\u65f6\u51ed\u8bc1","text":"<p>\u8fdb\u884c\u4efb\u4f55\u7c7b\u578b\u7684\u8eab\u4efd\u9a8c\u8bc1\u65f6\uff0c\u6700\u597d\u4f7f\u7528\u4e34\u65f6\u51ed\u8bc1\u800c\u4e0d\u662f\u957f\u671f\u51ed\u8bc1\uff0c\u4ee5\u964d\u4f4e\u6216\u6d88\u9664\u8bf8\u5982\u51ed\u8bc1\u88ab\u65e0\u610f\u6cc4\u9732\u3001\u5171\u4eab\u6216\u88ab\u76d7\u4e4b\u7c7b\u7684\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_16","title":"\u5b89\u5168\u5b58\u50a8\u548c\u4f7f\u7528\u5bc6\u94a5","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u80fd\u591f\u81ea\u52a8\u5411\u6570\u636e\u5e93\u3001\u8d44\u6e90\u548c\u7b2c\u4e09\u65b9\u670d\u52a1\u8bc1\u660e\u5176\u8eab\u4efd\u3002\u8fd9\u662f\u4f7f\u7528\u79d8\u5bc6\u8bbf\u95ee\u51ed\u8bc1\uff08\u5982 API \u8bbf\u95ee\u5bc6\u94a5\u3001\u5bc6\u7801\u548c OAuth \u4ee4\u724c\uff09\u5b8c\u6210\u7684\u3002\u4f7f\u7528\u4e13\u95e8\u6784\u5efa\u7684\u670d\u52a1\u6765\u5b58\u50a8\u3001\u7ba1\u7406\u548c\u8f6e\u6362\u8fd9\u4e9b\u51ed\u8bc1\u6709\u52a9\u4e8e\u964d\u4f4e\u8fd9\u4e9b\u51ed\u8bc1\u6cc4\u9732\u7684\u53ef\u80fd\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_17","title":"\u4f9d\u8d56\u96c6\u4e2d\u5f0f\u8eab\u4efd\u63d0\u4f9b\u5546","text":"<p>\u5bf9\u4e8e\u5458\u5de5\u8eab\u4efd\uff08\u5458\u5de5\u548c\u5408\u540c\u5de5\uff09\uff0c\u8bf7\u4f9d\u8d56\u5141\u8bb8\u60a8\u5728\u96c6\u4e2d\u4f4d\u7f6e\u7ba1\u7406\u8eab\u4efd\u7684\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u3002\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u8de8\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u548c\u7cfb\u7edf\u7ba1\u7406\u8bbf\u95ee\u6743\u9650\uff0c\u56e0\u4e3a\u60a8\u5728\u4ece\u5355\u4e00\u4f4d\u7f6e\u521b\u5efa\u3001\u5206\u914d\u3001\u7ba1\u7406\u3001\u64a4\u9500\u548c\u5ba1\u6838\u8bbf\u95ee\u6743\u9650\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_18","title":"\u5b9a\u671f\u5ba1\u8ba1\u548c\u8f6e\u6362\u51ed\u8bc1","text":"<p>\u5b9a\u671f\u5ba1\u8ba1\u548c\u8f6e\u6362\u51ed\u8bc1\uff0c\u4ee5\u9650\u5236\u51ed\u8bc1\u53ef\u7528\u4e8e\u8bbf\u95ee\u8d44\u6e90\u7684\u65f6\u95f4\u3002\u4f7f\u7528\u957f\u671f\u51ed\u8bc1\u4f1a\u4ea7\u751f\u8bb8\u591a\u98ce\u9669\uff0c\u53ef\u901a\u8fc7\u5b9a\u671f\u8f6e\u6362\u6765\u964d\u4f4e\u8fd9\u4e9b\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_19","title":"\u5229\u7528\u7528\u6237\u7ec4\u548c\u5c5e\u6027","text":"<p>\u968f\u7740\u60a8\u7ba1\u7406\u7684\u7528\u6237\u6570\u91cf\u4e0d\u65ad\u589e\u52a0\uff0c\u60a8\u9700\u8981\u786e\u5b9a\u5982\u4f55\u7ec4\u7ec7\u8fd9\u4e9b\u7528\u6237\uff0c\u4ee5\u4fbf\u80fd\u591f\u5b9e\u73b0\u89c4\u6a21\u7ba1\u7406\u3002\u5c06\u5177\u6709\u5e38\u89c1\u5b89\u5168\u8981\u6c42\u7684\u7528\u6237\u7f6e\u4e8e\u7531\u60a8\u7684\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u5b9a\u4e49\u7684\u7ec4\u4e2d\uff0c\u5e76\u5efa\u7acb\u673a\u5236\u4ee5\u786e\u4fdd\u7528\u4e8e\u8bbf\u95ee\u63a7\u5236\u7684\u7528\u6237\u5c5e\u6027\uff08\u4f8b\u5982\u90e8\u95e8\u6216\u4f4d\u7f6e\uff09\u6b63\u786e\u65e0\u8bef\u4e14\u5df2\u66f4\u65b0\u3002\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u548c\u5c5e\u6027\uff08\u800c\u4e0d\u662f\u5355\u4e2a\u7528\u6237\uff09\u6765\u63a7\u5236\u8bbf\u95ee\u6743\u9650\u3002\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u4f7f\u7528\u6743\u9650\u96c6\u4e00\u6b21\u6027\u66f4\u6539\u7528\u6237\u7684\u7ec4\u6210\u5458\u8eab\u4efd\u6216\u5c5e\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u96c6\u4e2d\u7ba1\u7406\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u5728\u9700\u8981\u66f4\u6539\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650\u65f6\u66f4\u65b0\u591a\u4e2a\u5355\u72ec\u7b56\u7565\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-3","title":"SEC 3 \u5982\u4f55\u7ba1\u7406\u4eba\u5458\u548c\u673a\u5668\u7684\u6743\u9650\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_20","title":"\u5b9a\u4e49\u8bbf\u95ee\u8981\u6c42","text":"<p>\u7ba1\u7406\u5458\u3001\u6700\u7ec8\u7528\u6237\u6216\u5176\u4ed6\u7ec4\u4ef6\u90fd\u9700\u8981\u8bbf\u95ee\u60a8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u6216\u8d44\u6e90\u3002\u660e\u786e\u5b9a\u4e49\u54ea\u4e9b\u4eba\u5458\u6216\u4e8b\u7269\u5e94\u5f53\u6709\u6743\u8bbf\u95ee\u6bcf\u4e2a\u7ec4\u4ef6\uff0c\u9009\u62e9\u7528\u4e8e\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u548c\u6388\u6743\u7684\u9002\u5f53\u8eab\u4efd\u7c7b\u578b\u548c\u65b9\u6cd5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_21","title":"\u6388\u4e88\u6700\u4f4e\u6743\u9650\u8bbf\u95ee\u6743\u9650","text":"<p>\u6700\u4f73\u5b9e\u8df5\u662f\u5411\u8eab\u4efd\u6388\u4e88\u7684\u8bbf\u95ee\u6743\u9650\u53ea\u80fd\u662f\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u5bf9\u7279\u5b9a\u8d44\u6e90\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\u6240\u5fc5\u9700\u7684\u3002\u4f7f\u7528\u7ec4\u548c\u8eab\u4efd\u5c5e\u6027\u6765\u5927\u89c4\u6a21\u52a8\u6001\u8bbe\u7f6e\u6743\u9650\uff0c\u800c\u4e0d\u662f\u4e3a\u5355\u4e2a\u7528\u6237\u5b9a\u4e49\u6743\u9650\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5141\u8bb8\u4e00\u7ec4\u5f00\u53d1\u4eba\u5458\u8bbf\u95ee\uff0c\u4ee5\u4fbf\u4ec5\u7ba1\u7406\u5176\u9879\u76ee\u7684\u8d44\u6e90\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5982\u679c\u67d0\u4e2a\u5f00\u53d1\u4eba\u5458\u79bb\u5f00\u9879\u76ee\uff0c\u5219\u53ef\u4ee5\u81ea\u52a8\u64a4\u9500\u8be5\u5f00\u53d1\u4eba\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u800c\u65e0\u9700\u66f4\u6539\u5e95\u5c42\u8bbf\u95ee\u7b56\u7565\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_22","title":"\u4e3a\u60a8\u7684\u7ec4\u7ec7\u5b9a\u4e49\u6743\u9650\u9632\u62a4","text":"<p>\u5efa\u7acb\u901a\u7528\u63a7\u4ef6\u4ee5\u9650\u5236\u5bf9\u7ec4\u7ec7\u4e2d\u6240\u6709\u8eab\u4efd\u7684\u8bbf\u95ee\u6743\u9650\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u9650\u5236\u5bf9\u7279\u5b9a AWS \u533a\u57df\u7684\u8bbf\u95ee\uff0c\u6216\u9632\u6b62\u64cd\u4f5c\u5458\u5220\u9664\u5e38\u89c1\u8d44\u6e90\uff0c\u4f8b\u5982\u7528\u4e8e\u60a8\u7684\u6838\u5fc3\u5b89\u5168\u56e2\u961f\u7684 IAM \u89d2\u8272\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_23","title":"\u5efa\u7acb\u7d27\u6025\u8bbf\u95ee\u6d41\u7a0b","text":"<p>\u521b\u5efa\u4e00\u4e2a\u6d41\u7a0b\uff0c\u4fbf\u4e8e\u5728\u96c6\u4e2d\u5f0f\u8eab\u4efd\u63d0\u4f9b\u7a0b\u5e8f\u5076\u5c14\u51fa\u73b0\u95ee\u9898\u65f6\u7d27\u6025\u8bbf\u95ee\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_24","title":"\u5728\u7ec4\u7ec7\u5185\u5b89\u5168\u5730\u5171\u4eab\u8d44\u6e90","text":"<p>\u968f\u7740\u5de5\u4f5c\u8d1f\u8f7d\u6570\u91cf\u7684\u589e\u957f\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5c06\u8fd9\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\u8fdb\u884c\u5171\u4eab\uff0c\u6216\u8005\u8de8\u591a\u4e2a\u8d26\u6237\u591a\u6b21\u9884\u7f6e\u8d44\u6e90\u3002\u60a8\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u6784\u9020\u6765\u5212\u5206\u73af\u5883\uff0c\u4f8b\u5982\u5212\u5206\u6210\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u3002\u4f46\u662f\uff0c\u91c7\u53d6\u76f8\u4e92\u5206\u79bb\u7684\u6784\u9020\u5e76\u4e0d\u4f1a\u9650\u5236\u60a8\u5b89\u5168\u5171\u4eab\u6743\u9650\u3002\u901a\u8fc7\u5171\u4eab\u91cd\u53e0\u7684\u7ec4\u4ef6\uff0c\u60a8\u53ef\u4ee5\u964d\u4f4e\u8fd0\u7ef4\u5f00\u9500\uff0c\u5e76\u63d0\u4f9b\u4e00\u81f4\u7684\u4f53\u9a8c\uff0c\u800c\u4e0d\u5fc5\u731c\u6d4b\u5728\u591a\u6b21\u521b\u5efa\u540c\u4e00\u8d44\u6e90\u65f6\u53ef\u80fd\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_25","title":"\u6301\u7eed\u51cf\u5c11\u6743\u9650","text":"<p>\u5f53\u60a8\u7684\u56e2\u961f\u786e\u5b9a\u597d\u6240\u9700\u7684\u8bbf\u95ee\u6743\u9650\u65f6\uff0c\u5220\u9664\u4e0d\u9700\u8981\u7684\u6743\u9650\uff0c\u5e76\u5efa\u7acb\u5ba1\u6838\u6d41\u7a0b\u4ee5\u5b9e\u73b0\u6700\u4f4e\u6743\u9650\u3002\u6301\u7eed\u76d1\u63a7\u5e76\u5220\u9664\u4f9b\u4eba\u7c7b\u548c\u673a\u5668\u8bbf\u95ee\u7684\u672a\u4f7f\u7528\u7684\u8eab\u4efd\u548c\u6743\u9650\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_26","title":"\u4e0e\u7b2c\u4e09\u65b9\u5b89\u5168\u5730\u5171\u4eab\u8d44\u6e90","text":"<p>\u786e\u4fdd\u4e91\u73af\u5883\u5b89\u5168\uff0c\u4e0d\u80fd\u4ec5\u4ec5\u5c40\u9650\u4e8e\u4fdd\u62a4\u60a8\u7684\u7ec4\u7ec7\u3002\u60a8\u7684\u7ec4\u7ec7\u6709\u4e00\u90e8\u5206\u6570\u636e\u53ef\u80fd\u8981\u4f9d\u8d56\u7b2c\u4e09\u65b9\u6765\u7ba1\u7406\u3002\u7ba1\u7406\u7b2c\u4e09\u65b9\u6258\u7ba1\u7cfb\u7edf\u7684\u6743\u9650\uff0c\u5e94\u9075\u5faa\u53ca\u65f6\u8bbf\u95ee\u7684\u505a\u6cd5\uff0c\u4f7f\u7528\u6700\u4f4e\u6743\u9650\u539f\u5219\u548c\u4e34\u65f6\u51ed\u8bc1\u3002\u901a\u8fc7\u4e0e\u7b2c\u4e09\u65b9\u5bc6\u5207\u5408\u4f5c\uff0c\u60a8\u65e2\u53ef\u4ee5\u7f29\u5c0f\u5f71\u54cd\u8303\u56f4\uff0c\u53c8\u53ef\u4ee5\u964d\u4f4e\u610f\u5916\u8bbf\u95ee\u7684\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_27","title":"\u57fa\u4e8e\u751f\u547d\u5468\u671f\u7ba1\u7406\u8bbf\u95ee\u6743\u9650","text":"<p>\u5c06\u8bbf\u95ee\u63a7\u5236\u63aa\u65bd\u4e0e\u64cd\u4f5c\u5458\u548c\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u4ee5\u53ca\u60a8\u7684\u96c6\u4e2d\u8054\u5408\u8eab\u4efd\u9a8c\u8bc1\u63d0\u4f9b\u8005\u96c6\u6210\u3002\u4f8b\u5982\uff0c\u5728\u7528\u6237\u79bb\u5f00\u7ec4\u7ec7\u6216\u89d2\u8272\u53d1\u751f\u53d8\u5316\u65f6\u5220\u9664\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_28","title":"\u5206\u6790\u516c\u5171\u548c\u8de8\u8d26\u6237\u8bbf\u95ee","text":"<p>\u5bf9\u4e8e\u6807\u8bc6\u51fa\u5b58\u5728\u516c\u5171\u8bbf\u95ee\u548c\u8de8\u8d26\u6237\u8bbf\u95ee\u60c5\u51b5\u7684\u8c03\u67e5\u7ed3\u679c\uff0c\u5e94\u6301\u7eed\u76d1\u63a7\u3002\u51cf\u5c11\u516c\u5171\u8bbf\u95ee\u548c\u8de8\u8d26\u6237\u8bbf\u95ee\uff0c\u4f7f\u8bbf\u95ee\u4ec5\u80fd\u89e6\u8fbe\u7279\u5b9a\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_29","title":"\u68c0\u6d4b","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-4","title":"SEC 4 \u60a8\u5982\u4f55\u68c0\u6d4b\u548c\u8c03\u67e5\u5b89\u5168\u4e8b\u4ef6\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_30","title":"\u914d\u7f6e\u670d\u52a1\u548c\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u8bb0\u5f55","text":"<p>\u4fdd\u7559\u670d\u52a1\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u4e8b\u4ef6\u65e5\u5fd7\u3002\u8fd9\u662f\u5ba1\u8ba1\u3001\u8c03\u67e5\u548c\u8fd0\u8425\u4f7f\u7528\u6848\u4f8b\u7684\u57fa\u672c\u5b89\u5168\u539f\u5219\uff0c\u4e5f\u662f\u7531\u76d1\u7ba1\u3001\u98ce\u9669\u4e0e\u5408\u89c4\u6027\uff08GRC\uff09\u6807\u51c6\u3001\u653f\u7b56\u548c\u7a0b\u5e8f\u9a71\u52a8\u7684\u5171\u540c\u5b89\u5168\u8981\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_31","title":"\u96c6\u4e2d\u5206\u6790\u65e5\u5fd7\u3001\u7ed3\u679c\u548c\u6307\u6807","text":"<p>\u5b89\u5168\u8fd0\u8425\u56e2\u961f\u4f9d\u9760\u6536\u96c6\u65e5\u5fd7\u548c\u4f7f\u7528\u641c\u7d22\u5de5\u5177\u6765\u53d1\u73b0\u9700\u8981\u5173\u6ce8\u7684\u6f5c\u5728\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u4ee3\u8868\u672a\u7ecf\u6388\u6743\u7684\u6d3b\u52a8\u6216\u65e0\u610f\u7684\u66f4\u6539\u3002\u4f46\u662f\uff0c\u4ec5\u4ec5\u5206\u6790\u6536\u96c6\u7684\u6570\u636e\u548c\u624b\u52a8\u5904\u7406\u4fe1\u606f\u4e0d\u8db3\u4ee5\u5e94\u5bf9\u4ece\u590d\u6742\u67b6\u6784\u6d41\u51fa\u7684\u5927\u91cf\u4fe1\u606f\u3002\u5355\u51ed\u5206\u6790\u548c\u62a5\u544a\u65e0\u6cd5\u53ca\u65f6\u5206\u914d\u5408\u9002\u7684\u8d44\u6e90\u6765\u5904\u7406\u4e8b\u4ef6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_32","title":"\u81ea\u52a8\u54cd\u5e94\u4e8b\u4ef6","text":"<p>\u4f7f\u7528\u81ea\u52a8\u5316\u6d41\u7a0b\u8c03\u67e5\u548c\u4fee\u590d\u4e8b\u4ef6\u53ef\u51cf\u5c11\u4eba\u5de5\u5904\u7406\u5de5\u4f5c\u91cf\u548c\u4eba\u4e3a\u9519\u8bef\uff0c\u4ece\u800c\u6269\u5c55\u8c03\u67e5\u529f\u80fd\u3002\u5b9a\u671f\u5ba1\u6838\u5c06\u5e2e\u52a9\u60a8\u4f18\u5316\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u5e76\u5b9e\u73b0\u6301\u7eed\u8fed\u4ee3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_33","title":"\u5b9e\u65bd\u53ef\u64cd\u4f5c\u7684\u5b89\u5168\u4e8b\u4ef6","text":"<p>\u521b\u5efa\u53d1\u9001\u7ed9\u56e2\u961f\u5e76\u5c06\u7531\u56e2\u961f\u5904\u7406\u7684\u8b66\u62a5\u3002\u786e\u4fdd\u8b66\u62a5\u5305\u542b\u56e2\u961f\u91c7\u53d6\u63aa\u65bd\u6240\u9700\u7684\u76f8\u5173\u4fe1\u606f\u3002\u5bf9\u4e8e\u60a8\u7684\u6bcf\u4e2a\u68c0\u6d4b\u6027\u673a\u5236\uff0c\u60a8\u8fd8\u5e94\u6709\u4e00\u4e2a\u4ee5\u8fd0\u884c\u624b\u518c\u6216\u884c\u52a8\u624b\u518c\u5f62\u5f0f\u5b58\u5728\u7684\u8c03\u67e5\u6d41\u7a0b\u3002\u4f8b\u5982\uff0c\u5f53\u60a8\u542f\u7528 Amazon GuardDuty \u65f6\uff0c\u5b83\u4f1a\u751f\u6210\u4e0d\u540c\u7684\u8c03\u67e5\u7ed3\u679c\u3002\u60a8\u7684\u6bcf\u4e2a\u8c03\u67e5\u53d1\u73b0\u7c7b\u578b\u90fd\u5e94\u5177\u6709\u4e00\u4e2a\u8fd0\u884c\u624b\u518c\u6761\u76ee\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u53d1\u73b0\u4e86\u7279\u6d1b\u4f0a\u6728\u9a6c\u7a0b\u5e8f\uff0c\u60a8\u7684\u8fd0\u884c\u624b\u518c\u7684\u7b80\u5355\u8bf4\u660e\u53ef\u4ee5\u6307\u793a\u67d0\u4e2a\u4eba\u5458\u8fdb\u884c\u8c03\u67e5\u548c\u4fee\u590d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_34","title":"\u57fa\u7840\u67b6\u6784\u4fdd\u62a4","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-5","title":"SEC 5 \u5982\u4f55\u4fdd\u62a4\u60a8\u7684\u7f51\u7edc\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_35","title":"\u521b\u5efa\u7f51\u7edc\u5c42","text":"<p>\u5c06\u5177\u6709\u5171\u540c\u654f\u611f\u5ea6\u8981\u6c42\u7684\u7ec4\u4ef6\u5206\u6210\u82e5\u5e72\u5c42\uff0c\u4ee5\u5c3d\u91cf\u7f29\u5c0f\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u7684\u6f5c\u5728\u5f71\u54cd\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u5e94\u5c06\u865a\u62df\u79c1\u6709\u4e91\uff08VPC\uff09\u4e2d\u65e0\u9700\u8fdb\u884c\u4e92\u8054\u7f51\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u96c6\u7fa4\uff0c\u653e\u5728\u65e0\u6cd5\u5411/\u4ece\u4e92\u8054\u7f51\u8def\u7531\u7684\u5b50\u7f51\u4e2d\u3002\u6d41\u91cf\u5e94\u4ec5\u4ece\u76f8\u90bb\u7684\u4e0b\u4e00\u4e2a\u6700\u4e0d\u654f\u611f\u7684\u8d44\u6e90\u6d41\u51fa\u3002\u8003\u8651\u4e00\u4e2a\u4f4d\u4e8e\u8d1f\u8f7d\u5747\u8861\u5668\u540e\u9762\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u3002\u4e0d\u5e94\u76f4\u63a5\u4ece\u8d1f\u8f7d\u5747\u8861\u5668\u8bbf\u95ee\u6570\u636e\u5e93\u3002\u53ea\u6709\u4e1a\u52a1\u903b\u8f91\u6216 Web \u670d\u52a1\u5668\u624d\u80fd\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_36","title":"\u63a7\u5236\u6240\u6709\u5c42\u7684\u6d41\u91cf","text":"<p>\u5f53\u6784\u5efa\u60a8\u7684\u7f51\u7edc\u62d3\u6251\u65f6\uff0c\u60a8\u5e94\u68c0\u67e5\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u8fde\u63a5\u8981\u6c42\u3002\u4f8b\u5982\uff0c\u67d0\u4e2a\u7ec4\u4ef6\u662f\u5426\u9700\u8981\u4e92\u8054\u7f51\u53ef\u8bbf\u95ee\u6027\uff08\u5165\u7ad9\u548c\u51fa\u7ad9\uff09\u3001\u8fde\u63a5\u5230 VPC \u7684\u80fd\u529b\u3001\u8fb9\u7f18\u670d\u52a1\u548c\u5916\u90e8\u6570\u636e\u4e2d\u5fc3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_37","title":"\u81ea\u52a8\u6267\u884c\u7f51\u7edc\u9632\u62a4","text":"<p>\u81ea\u52a8\u8fd0\u884c\u4fdd\u62a4\u673a\u5236\uff0c\u4ee5\u63d0\u4f9b\u57fa\u4e8e\u5a01\u80c1\u60c5\u62a5\u548c\u5f02\u5e38\u68c0\u6d4b\u7684\u81ea\u6211\u9632\u5fa1\u7f51\u7edc\u3002\u4f8b\u5982\u53ef\u5e94\u5bf9\u6700\u65b0\u7684\u5a01\u80c1\u5e76\u51cf\u8f7b\u5b83\u4eec\u7684\u5f71\u54cd\u7684\u90a3\u4e9b\u5165\u4fb5\u68c0\u6d4b\u548c\u9884\u9632\u5de5\u5177\u3002\u60a8\u53ef\u4ee5\u5728 Web \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899\u7b49\u65b9\u9762\u5b9e\u73b0\u7f51\u7edc\u4fdd\u62a4\u81ea\u52a8\u5316\uff0c\u4f8b\u5982\uff0c\u4f7f\u7528 AWS WAF Security Automations \u89e3\u51b3\u65b9\u6848\u6765\u81ea\u52a8\u62e6\u622a\u6765\u81ea\u4e0e\u5df2\u77e5\u5a01\u80c1\u5a92\u4ecb\u76f8\u5173\u7684 IP \u5730\u5740\u7684\u8bf7\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_38","title":"\u5b9e\u65bd\u68c0\u67e5\u548c\u4fdd\u62a4","text":"<p>\u68c0\u67e5\u548c\u7b5b\u9009\u6bcf\u5c42\u7684\u6d41\u91cf\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 VPC \u7f51\u7edc\u8bbf\u95ee\u5206\u6790\u5668\u6765\u68c0\u67e5 VPC \u914d\u7f6e\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u610f\u5916\u8bbf\u95ee\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u7f51\u7edc\u8bbf\u95ee\u9700\u6c42\uff0c\u7136\u540e\u786e\u5b9a\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u7684\u6f5c\u5728\u7f51\u7edc\u8def\u5f84\u3002\u5bf9\u4e8e\u901a\u8fc7\u57fa\u4e8e HTTP \u7684\u534f\u8bae\u5904\u7406\u7684\u7ec4\u4ef6\uff0cWeb \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899\u53ef\u5e2e\u52a9\u9632\u6b62\u5e38\u89c1\u7684\u653b\u51fb\u3002AWS WAF \u662f\u4e00\u4e2a Web \u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899\uff0c\u53ef\u76d1\u63a7\u548c\u62e6\u622a\u4e0e\u8f6c\u53d1\u5230 Amazon API Gateway API\u3001Amazon CloudFront \u6216\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u53ef\u914d\u7f6e\u89c4\u5219\u5339\u914d\u7684 HTTP(S) \u8bf7\u6c42\u3002\u8981\u5f00\u59cb\u4f7f\u7528 AWS WAF\uff0c\u60a8\u53ef\u4ee5\u5c06 AWS \u6258\u7ba1\u89c4\u5219\u4e0e\u60a8\u81ea\u5df1\u7684\u89c4\u5219\u7ed3\u5408\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u7684\u5408\u4f5c\u4f19\u4f34\u96c6\u6210\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-6","title":"SEC 6 \u5982\u4f55\u4fdd\u62a4\u8ba1\u7b97\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_39","title":"\u6267\u884c\u6f0f\u6d1e\u7ba1\u7406","text":"<p>\u9891\u7e41\u626b\u63cf\u548c\u4fee\u8865\u60a8\u7684\u4ee3\u7801\u3001\u4f9d\u8d56\u9879\u548c\u57fa\u7840\u8bbe\u65bd\u4e2d\u7684\u6f0f\u6d1e\uff0c\u4ee5\u5e2e\u52a9\u9632\u5fa1\u65b0\u7684\u5a01\u80c1\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_40","title":"\u7f29\u5c0f\u653b\u51fb\u9762","text":"<p>\u901a\u8fc7\u5f3a\u5316\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u5c3d\u91cf\u51cf\u5c11\u6240\u4f7f\u7528\u7684\u7ec4\u4ef6\u3001\u5e93\u548c\u5916\u90e8\u53ef\u7528\u7684\u670d\u52a1\uff0c\u7f29\u5c0f\u66b4\u9732\u5728\u610f\u5916\u8bbf\u95ee\u4e0b\u7684\u5371\u9669\u3002\u9996\u5148\u51cf\u5c11\u672a\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u64cd\u4f5c\u7cfb\u7edf\u7a0b\u5e8f\u5305\u3001\u5e94\u7528\u7a0b\u5e8f\uff08\u5bf9\u4e8e\u57fa\u4e8e Amazon Elastic Compute Cloud\uff08Amazon EC2\uff09\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff09\uff0c\u8fd8\u662f\u4ee3\u7801\u4e2d\u7684\u5916\u90e8\u8f6f\u4ef6\u6a21\u5757\uff08\u5bf9\u4e8e\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\uff09\u3002\u60a8\u53ef\u4ee5\u627e\u5230\u8bb8\u591a\u9762\u5411\u5e38\u89c1\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u670d\u52a1\u5668\u8f6f\u4ef6\u7684\u5f3a\u5316\u548c\u5b89\u5168\u914d\u7f6e\u6307\u5357\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ece Center for Internet Security \u5f00\u59cb\uff0c\u7136\u540e\u8fdb\u884c\u8fed\u4ee3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_41","title":"\u91c7\u7528\u6258\u7ba1\u670d\u52a1","text":"<p>\u5b9e\u65bd\u7528\u6765\u7ba1\u7406\u8d44\u6e90\u7684\u670d\u52a1\uff0c\u4f8b\u5982 Amazon Relational Database Service\uff08Amazon RDS\uff09\u3001AWS Lambda \u548c Amazon Elastic Container Service\uff08Amazon ECS\uff09\uff0c\u4ee5\u4fbf\u51cf\u5c11\u60a8\u5728\u8d23\u4efb\u5171\u62c5\u6a21\u5f0f\u4e2d\u7684\u5b89\u5168\u7ef4\u62a4\u4efb\u52a1\u3002\u4f8b\u5982\uff0cAmazon RDS \u53ef\u5e2e\u52a9\u60a8\u8bbe\u7f6e\u3001\u64cd\u4f5c\u548c\u6269\u5c55\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u5e76\u81ea\u52a8\u6267\u884c\u7ba1\u7406\u4efb\u52a1\uff0c\u4f8b\u5982\u786c\u4ef6\u9884\u7f6e\u3001\u6570\u636e\u5e93\u8bbe\u7f6e\u3001\u4fee\u8865\u548c\u5907\u4efd\u3002\u8fd9\u610f\u5473\u7740\u60a8\u5c06\u6709\u66f4\u591a\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u901a\u8fc7 AWS \u67b6\u6784\u5b8c\u5584\u7684\u6846\u67b6\u4e2d\u6240\u8ff0\u7684\u5176\u4ed6\u65b9\u6cd5\u6765\u4fdd\u62a4\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528 Lambda\uff0c\u65e0\u9700\u4f7f\u7528\u9884\u8c03\u914d\u6216\u6258\u7ba1\u670d\u52a1\u5668\u5373\u53ef\u8fd0\u884c\u4ee3\u7801\uff0c\u56e0\u6b64\u60a8\u53ea\u9700\u5728\u4ee3\u7801\u7ea7\u522b\u800c\u4e0d\u662f\u57fa\u7840\u8bbe\u65bd\u6216\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b\u4e13\u6ce8\u4e8e\u8fde\u63a5\u3001\u8c03\u7528\u548c\u5b89\u5168\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_42","title":"\u81ea\u52a8\u4fdd\u62a4\u8ba1\u7b97","text":"<p>\u81ea\u52a8\u6267\u884c\u8ba1\u7b97\u4fdd\u62a4\u673a\u5236\uff0c\u5305\u62ec\u7ba1\u7406\u6f0f\u6d1e\u3001\u7f29\u5c0f\u653b\u51fb\u9762\u548c\u7ba1\u7406\u8d44\u6e90\u3002\u6b64\u81ea\u52a8\u5316\u5c06\u5e2e\u52a9\u60a8\u6295\u5165\u65f6\u95f4\u4ee5\u4fdd\u62a4\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5176\u4ed6\u65b9\u9762\uff0c\u5e76\u964d\u4f4e\u4eba\u4e3a\u72af\u9519\u7684\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_43","title":"\u5e2e\u52a9\u4eba\u5458\u8fdc\u7a0b\u6267\u884c\u64cd\u4f5c","text":"<p>\u79fb\u9664\u4ea4\u4e92\u5f0f\u8bbf\u95ee\u529f\u80fd\u53ef\u964d\u4f4e\u4eba\u4e3a\u9519\u8bef\u7684\u98ce\u9669\u4ee5\u53ca\u624b\u52a8\u914d\u7f6e\u6216\u7ba1\u7406\u7684\u53ef\u80fd\u6027\u3002\u4f8b\u5982\uff0c\u5229\u7528\u53d8\u66f4\u7ba1\u7406\u5de5\u4f5c\u6d41\uff0c\u501f\u52a9\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u6765\u90e8\u7f72 Amazon Elastic Compute Cloud\uff08Amazon EC2\uff09\u5b9e\u4f8b\uff0c\u7136\u540e\u4f7f\u7528 AWS Systems Manager \u7b49\u5de5\u5177\u6765\u7ba1\u7406 Amazon EC2 \u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u6216\u901a\u8fc7\u5821\u5792\u4e3b\u673a\u8bbf\u95ee\u3002AWS Systems Manager \u53ef\u4f7f\u7528\u81ea\u52a8\u5316\u5de5\u4f5c\u6d41\u7a0b\u3001\u6587\u6863\uff08\u884c\u52a8\u624b\u518c\uff09\u548c\u8fd0\u884c\u547d\u4ee4\u7b49\u529f\u80fd\u81ea\u52a8\u6267\u884c\u591a\u79cd\u7ef4\u62a4\u548c\u90e8\u7f72\u4efb\u52a1\u3002AWS CloudFormation \u5806\u6808\u4ece\u7ba1\u9053\u8fdb\u884c\u6784\u5efa\uff0c\u5e76\u80fd\u591f\u81ea\u52a8\u6267\u884c\u60a8\u7684\u57fa\u7840\u8bbe\u65bd\u90e8\u7f72\u548c\u7ba1\u7406\u4efb\u52a1\uff0c\u800c\u65e0\u9700\u76f4\u63a5\u4f7f\u7528 AWS \u7ba1\u7406\u63a7\u5236\u53f0\u6216 API\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_44","title":"\u9a8c\u8bc1\u8f6f\u4ef6\u5b8c\u6574\u6027","text":"<p>\u5b9e\u65bd\u4e00\u4e9b\u673a\u5236\uff08\u4f8b\u5982\u4ee3\u7801\u7b7e\u540d\uff09\uff0c\u4ee5\u786e\u4fdd\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u4f7f\u7528\u7684\u8f6f\u4ef6\u3001\u4ee3\u7801\u548c\u5e93\u6765\u81ea\u53ef\u4fe1\u7684\u6765\u6e90\u4e14\u672a\u88ab\u7be1\u6539\u3002\u4f8b\u5982\uff0c\u60a8\u5e94\u9a8c\u8bc1\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u811a\u672c\u7684\u4ee3\u7801\u7b7e\u540d\u8bc1\u4e66\u4ee5\u786e\u8ba4\u4f5c\u8005\uff0c\u5e76\u786e\u4fdd\u8bc1\u4e66\u81ea\u4f5c\u8005\u521b\u5efa\u4ee5\u6765\u672a\u88ab\u7be1\u6539\u3002AWS Signer \u901a\u8fc7\u96c6\u4e2d\u7ba1\u7406\u4ee3\u7801\u7b7e\u540d\u751f\u547d\u5468\u671f\uff08\u5305\u62ec\u7b7e\u540d\u8bc1\u4e66\u4ee5\u53ca\u516c\u6709\u548c\u79c1\u6709\u5bc6\u94a5\uff09\uff0c\u53ef\u5e2e\u52a9\u786e\u4fdd\u4ee3\u7801\u7684\u53ef\u4fe1\u5ea6\u548c\u5b8c\u6574\u6027\u3002\u60a8\u53ef\u4ee5\u4e86\u89e3\u5982\u4f55\u5bf9 AWS Lambda \u4f7f\u7528\u4ee3\u7801\u7b7e\u540d\u7684\u9ad8\u7ea7\u6a21\u5f0f\u548c\u6700\u4f73\u5b9e\u8df5\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u5c06\u60a8\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u7684\u6821\u9a8c\u548c\u4e0e\u63d0\u4f9b\u5546\u63d0\u4f9b\u7684\u6821\u9a8c\u548c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u53ef\u5e2e\u52a9\u786e\u4fdd\u5b83\u672a\u88ab\u7be1\u6539\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_45","title":"\u6570\u636e\u4fdd\u62a4","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-7","title":"SEC 7 \u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_46","title":"\u8bc6\u522b\u5de5\u4f5c\u8d1f\u8f7d\u5185\u7684\u6570\u636e","text":"<p>\u4e86\u89e3\u5de5\u4f5c\u8d1f\u8f7d\u6240\u5904\u7406\u6570\u636e\u7684\u7c7b\u578b\u548c\u5206\u7c7b\u3001\u5173\u8054\u7684\u4e1a\u52a1\u6d41\u7a0b\u3001\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\u4ee5\u53ca\u6570\u636e\u6240\u6709\u8005\u81f3\u5173\u91cd\u8981\u3002\u60a8\u8fd8\u5e94\u4e86\u89e3\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9002\u7528\u6cd5\u5f8b\u548c\u5408\u89c4\u6027\u8981\u6c42\uff0c\u4ee5\u53ca\u9700\u8981\u6267\u884c\u7684\u6570\u636e\u63a7\u5236\u63aa\u65bd\u3002\u8bc6\u522b\u6570\u636e\u662f\u6570\u636e\u5206\u7c7b\u8fc7\u7a0b\u7684\u7b2c\u4e00\u6b65\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_47","title":"\u5b9a\u4e49\u6570\u636e\u4fdd\u62a4\u63a7\u5236\u63aa\u65bd","text":"<p>\u6839\u636e\u6570\u636e\u5206\u7c7b\u7ea7\u522b\u4fdd\u62a4\u6570\u636e\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u76f8\u5173\u5efa\u8bae\u4fdd\u62a4\u5206\u7c7b\u4e3a\u516c\u5171\u7684\u6570\u636e\uff0c\u540c\u65f6\u4f7f\u7528\u5176\u4ed6\u63a7\u5236\u63aa\u65bd\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_48","title":"\u81ea\u52a8\u8bc6\u522b\u548c\u5206\u7c7b","text":"<p>\u81ea\u52a8\u8bc6\u522b\u548c\u5206\u7c7b\u6570\u636e\u53ef\u5e2e\u52a9\u60a8\u5b9e\u65bd\u6b63\u786e\u7684\u63a7\u5236\u63aa\u65bd\u3002\u5728\u8fd9\u65b9\u9762\u5b9e\u73b0\u81ea\u52a8\u5316\u800c\u4e0d\u662f\u5141\u8bb8\u4eba\u5458\u76f4\u63a5\u8bbf\u95ee\uff0c\u53ef\u4ee5\u964d\u4f4e\u4eba\u4e3a\u72af\u9519\u548c\u6f0f\u6d1e\u7684\u98ce\u9669\u3002\u60a8\u5e94\u4f7f\u7528 AWS Macie \u7b49\u5de5\u5177\u6267\u884c\u8bc4\u4f30\uff0cAmazon Macie \u4f7f\u7528\u673a\u5668\u5b66\u4e60\u6765\u81ea\u52a8\u53d1\u73b0\u548c\u4fdd\u62a4 AWS \u4e2d\u7684\u654f\u611f\u6570\u636e\u5e76\u5bf9\u5176\u5206\u7c7b\u3002Amazon Macie \u53ef\u4ee5\u8bc6\u522b\u4e2a\u4eba\u53ef\u8bc6\u522b\u4fe1\u606f\uff08PII\uff09\u6216\u77e5\u8bc6\u4ea7\u6743\u4e4b\u7c7b\u7684\u654f\u611f\u6570\u636e\uff0c\u5e76\u4e3a\u60a8\u63d0\u4f9b\u63a7\u5236\u9762\u677f\u548c\u63d0\u9192\uff0c\u8ba9\u60a8\u4e86\u89e3\u6b64\u7c7b\u6570\u636e\u7684\u8bbf\u95ee\u6216\u79fb\u52a8\u65b9\u5f0f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_49","title":"\u5b9a\u4e49\u6570\u636e\u751f\u547d\u5468\u671f\u7ba1\u7406","text":"<p>\u60a8\u5b9a\u4e49\u7684\u751f\u547d\u5468\u671f\u7b56\u7565\u5e94\u57fa\u4e8e\u654f\u611f\u5ea6\u7ea7\u522b\u4ee5\u53ca\u6cd5\u5f8b\u548c\u7ec4\u7ec7\u8981\u6c42\u3002\u5e94\u8003\u8651\u60a8\u7684\u6570\u636e\u4fdd\u7559\u671f\u9650\u3001\u6570\u636e\u9500\u6bc1\u6d41\u7a0b\u3001\u6570\u636e\u8bbf\u95ee\u7ba1\u7406\u3001\u6570\u636e\u8f6c\u6362\u548c\u6570\u636e\u5171\u4eab\u7b49\u65b9\u9762\u3002\u5f53\u9009\u62e9\u6570\u636e\u5206\u7c7b\u65b9\u6cd5\u65f6\uff0c\u8bf7\u5e73\u8861\u53ef\u7528\u6027\u4e0e\u8bbf\u95ee\u6743\u9650\u3002\u60a8\u8fd8\u5e94\u8003\u8651\u591a\u79cd\u8bbf\u95ee\u7ea7\u522b\u53ca\u5176\u7ec6\u5fae\u5dee\u522b\uff0c\u4ee5\u4fbf\u9488\u5bf9\u6bcf\u4e2a\u7ea7\u522b\u5b9e\u65bd\u5b89\u5168\u4e14\u6709\u6548\u7684\u65b9\u6cd5\u3002\u59cb\u7ec8\u91c7\u7528\u6df1\u5ea6\u9632\u5fa1\u65b9\u6cd5\u5e76\u51cf\u5c11\u4eba\u5de5\u8bbf\u95ee\u6570\u636e\u6b21\u6570\u4ee5\u53ca\u6570\u636e\u8f6c\u6362\u3001\u5220\u9664\u6216\u590d\u5236\u673a\u5236\u3002\u4f8b\u5982\uff0c\u8981\u6c42\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u6267\u884c\u4e25\u683c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u5e76\u5411\u5e94\u7528\u7a0b\u5e8f\u800c\u4e0d\u662f\u7528\u6237\u6388\u4e88\u6267\u884c\u8fdc\u7a0b\u64cd\u4f5c\u7684\u5fc5\u8981\u8bbf\u95ee\u6743\u9650\u3002\u6b64\u5916\uff0c\u786e\u4fdd\u7528\u6237\u6765\u81ea\u53ef\u4fe1\u7f51\u7edc\u8def\u5f84\u5e76\u8981\u6c42\u5176\u83b7\u53d6\u89e3\u5bc6\u5bc6\u94a5\u3002\u4f7f\u7528\u63a7\u5236\u9762\u677f\u548c\u81ea\u52a8\u62a5\u544a\u7b49\u5de5\u5177\u4e3a\u7528\u6237\u63d0\u4f9b\u6570\u636e\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u8ba9\u4ed6\u4eec\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-8","title":"SEC 8 \u5982\u4f55\u4fdd\u62a4\u9759\u6001\u6570\u636e\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_50","title":"\u5b9e\u65bd\u5b89\u5168\u5bc6\u94a5\u7ba1\u7406","text":"<p>\u5b89\u5168\u5bc6\u94a5\u7ba1\u7406\u5305\u62ec\u5bc6\u94a5\u6750\u6599\u7684\u5b58\u50a8\u3001\u8f6e\u6362\u3001\u8bbf\u95ee\u63a7\u5236\u548c\u76d1\u63a7\uff0c\u8fd9\u4e9b\u90fd\u662f\u4fdd\u62a4\u5de5\u4f5c\u8d1f\u8f7d\u7684\u9759\u6001\u6570\u636e\u5b89\u5168\u6240\u5fc5\u9700\u7684\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_51","title":"\u5f3a\u5236\u5b9e\u65bd\u9759\u6001\u52a0\u5bc6","text":"<p>\u60a8\u5e94\u8be5\u5f3a\u5236\u5bf9\u9759\u6001\u6570\u636e\u4f7f\u7528\u52a0\u5bc6\u3002\u52a0\u5bc6\u540e\uff0c\u5373\u4f7f\u906d\u5230\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u6216\u610f\u5916\u6cc4\u9732\uff0c\u4e5f\u80fd\u4fdd\u6301\u654f\u611f\u6570\u636e\u7684\u673a\u5bc6\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_52","title":"\u81ea\u52a8\u6267\u884c\u9759\u6001\u6570\u636e\u4fdd\u62a4","text":"<p>\u5229\u7528\u81ea\u52a8\u5316\u5de5\u5177\u6301\u7eed\u9a8c\u8bc1\u548c\u5b9e\u65bd\u9759\u6001\u6570\u636e\u63a7\u5236\u63aa\u65bd\uff0c\u4f8b\u5982\uff0c\u786e\u4fdd\u53ea\u5b58\u5728\u7ecf\u8fc7\u52a0\u5bc6\u7684\u5b58\u50a8\u8d44\u6e90\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 AWS Config \u89c4\u5219\u81ea\u52a8\u786e\u8ba4\u6240\u6709 EBS \u5377\u90fd\u5df2\u7ecf\u8fc7\u52a0\u5bc6\u3002AWS Security Hub \u8fd8\u53ef\u4ee5\u6309\u7167\u5b89\u5168\u6807\u51c6\u6267\u884c\u81ea\u52a8\u5316\u68c0\u67e5\uff0c\u4ee5\u6b64\u9a8c\u8bc1\u591a\u79cd\u4e0d\u540c\u7684\u63a7\u5236\u63aa\u65bd\u3002\u6b64\u5916\uff0c\u60a8\u7684 AWS Config \u89c4\u5219\u53ef\u4ee5\u81ea\u52a8\u4fee\u590d\u4e0d\u5408\u89c4\u7684\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_53","title":"\u5f3a\u5236\u5b9e\u65bd\u8bbf\u95ee\u63a7\u5236","text":"<p>\u4e3a\u4e86\u5e2e\u52a9\u4fdd\u62a4\u9759\u6001\u6570\u636e\uff0c\u8bf7\u4f7f\u7528\u9694\u79bb\u548c\u7248\u672c\u63a7\u5236\u7b49\u673a\u5236\u5f3a\u5236\u5b9e\u65bd\u8bbf\u95ee\u63a7\u5236\uff0c\u5e76\u5e94\u7528\u6700\u4f4e\u6743\u9650\u539f\u5219\u3002\u9632\u6b62\u5141\u8bb8\u516c\u4f17\u8bbf\u95ee\u60a8\u7684\u6570\u636e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_54","title":"\u4f7f\u7528\u673a\u5236\u9650\u5236\u5bf9\u6570\u636e\u7684\u8bbf\u95ee","text":"<p>\u7981\u6b62\u6240\u6709\u7528\u6237\u76f4\u63a5\u8bbf\u95ee\u6b63\u5e38\u8fd0\u884c\u73af\u5883\u4e2d\u7684\u654f\u611f\u6570\u636e\u548c\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u5229\u7528\u53d8\u66f4\u7ba1\u7406\u5de5\u4f5c\u6d41\u7a0b\uff0c\u501f\u52a9\u5de5\u5177\u6765\u7ba1\u7406 Amazon Elastic Compute Cloud\uff08Amazon EC2\uff09\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u6216\u901a\u8fc7\u5821\u5792\u4e3b\u673a\u8fdb\u884c\u8bbf\u95ee\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528 AWS Systems Manager Automation \u6765\u5b9e\u73b0\uff0c\u6b64\u529f\u80fd\u4f7f\u7528\u81ea\u52a8\u5316\u6587\u6863\uff0c\u6587\u6863\u4e2d\u5305\u542b\u60a8\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u7684\u6b65\u9aa4\u3002\u8fd9\u4e9b\u6587\u6863\u53ef\u4ee5\u5b58\u50a8\u5728\u6e90\u4ee3\u7801\u63a7\u5236\u4e2d\u3001\u5728\u8fd0\u884c\u4e4b\u524d\u63a5\u53d7\u5bf9\u7b49\u5ba1\u6838\uff0c\u5e76\u63a5\u53d7\u5168\u9762\u6d4b\u8bd5\u4ee5\u4fbf\u6700\u5927\u7a0b\u5ea6\u964d\u4f4e\u98ce\u9669\uff08\u4e0e shell \u8bbf\u95ee\u76f8\u6bd4\uff09\u3002\u4f01\u4e1a\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4eea\u8868\u677f\u800c\u4e0d\u662f\u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5b58\u50a8\u5e93\u6765\u6267\u884c\u67e5\u8be2\u3002\u5f53\u672a\u4f7f\u7528 CI/CD \u7ba1\u9053\u65f6\uff0c\u786e\u5b9a\u9700\u8981\u5229\u7528\u54ea\u4e9b\u63a7\u5236\u63aa\u65bd\u548c\u6d41\u7a0b\u6765\u5145\u5206\u63d0\u4f9b\u901a\u5e38\u7981\u7528\u7684 Break Glass \u8bbf\u95ee\u673a\u5236\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-9","title":"SEC 9 \u5982\u4f55\u4fdd\u62a4\u4f20\u8f93\u4e2d\u7684\u6570\u636e\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_55","title":"\u5b9e\u65bd\u5b89\u5168\u5bc6\u94a5\u548c\u8bc1\u4e66\u7ba1\u7406","text":"<p>\u4f20\u8f93\u5c42\u5b89\u5168\u6027\u534f\u8bae\uff08TLS\uff09\u8bc1\u4e66\u7528\u4e8e\u4fdd\u969c\u7f51\u7edc\u901a\u4fe1\u7684\u5b89\u5168\uff0c\u786e\u7acb\u7f51\u7ad9\u3001\u8d44\u6e90\u548c\u5de5\u4f5c\u8d1f\u8f7d\u5728\u4e92\u8054\u7f51\u4e0a\u4ee5\u53ca\u4e13\u7528\u7f51\u7edc\u4e0a\u7684\u8eab\u4efd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_56","title":"\u6267\u884c\u4f20\u8f93\u4e2d\u52a0\u5bc6","text":"<p>\u6839\u636e\u8d35\u7ec4\u7ec7\u7684\u653f\u7b56\u3001\u76d1\u7ba1\u4e49\u52a1\u548c\u6807\u51c6\u5b9a\u4e49\uff0c\u5b9e\u65bd\u52a0\u5bc6\u8981\u6c42\uff0c\u4ee5\u5e2e\u52a9\u6ee1\u8db3\u7ec4\u7ec7\u3001\u6cd5\u5f8b\u548c\u5408\u89c4\u6027\u8981\u6c42\u3002\u5982\u8981\u5728\u865a\u62df\u79c1\u6709\u4e91\uff08VPC\uff09\u5916\u90e8\u4f20\u8f93\u654f\u611f\u6570\u636e\uff0c\u52a1\u5fc5\u4ec5\u4f7f\u7528\u5177\u6709\u52a0\u5bc6\u529f\u80fd\u7684\u534f\u8bae\u3002\u5373\u4f7f\u6570\u636e\u5728\u4e0d\u53ef\u4fe1\u7684\u7f51\u7edc\u4e2d\u4f20\u8f93\uff0c\u52a0\u5bc6\u4e5f\u6709\u52a9\u4e8e\u4fdd\u6301\u6570\u636e\u7684\u673a\u5bc6\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_57","title":"\u81ea\u52a8\u68c0\u6d4b\u610f\u5916\u6570\u636e\u8bbf\u95ee","text":"<p>\u4f7f\u7528 Amazon GuardDuty \u7b49\u5de5\u5177\u81ea\u52a8\u68c0\u6d4b\u53ef\u7591\u6d3b\u52a8\uff0c\u6216\u5c1d\u8bd5\u5c06\u6570\u636e\u79fb\u52a8\u5230\u5b9a\u4e49\u7684\u8fb9\u754c\u4e4b\u5916\u3002\u4f8b\u5982\uff0cGuardDuty \u53ef\u4ee5\u501f\u52a9 Exfiltration:S3/AnomalousBehavior \u8c03\u67e5\u7ed3\u679c\uff0c\u6765\u68c0\u6d4b\u5f02\u5e38\u7684 Amazon Simple Storage Service\uff08Amazon S3\uff09\u8bfb\u53d6\u6d3b\u52a8\u3002\u9664\u4e86 GuardDuty \u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06\u8d1f\u8d23\u6355\u83b7\u7f51\u7edc\u6d41\u91cf\u4fe1\u606f\u7684 Amazon VPC \u6d41\u65e5\u5fd7\u4e0e Amazon EventBridge \u914d\u5408\u4f7f\u7528\uff0c\u6765\u68c0\u6d4b\u5f02\u5e38\u8fde\u63a5\uff08\u4e0d\u7ba1\u662f\u5df2\u6210\u529f\u7684\u8fd8\u662f\u88ab\u62d2\u7edd\u7684\uff09\u3002Amazon S3 Access Analyzer \u53ef\u4ee5\u5e2e\u52a9\u60a8\u8bc4\u6d4b Amazon S3 \u6876\u4e2d\u7684\u54ea\u4e9b\u6570\u636e\u53ef\u4f9b\u54ea\u4e9b\u4eba\u8bbf\u95ee\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_58","title":"\u5bf9\u7f51\u7edc\u901a\u4fe1\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1","text":"<p>\u4f7f\u7528\u4f20\u8f93\u5c42\u5b89\u5168\u6027 (TLS) \u6216 IPsec \u7b49\u652f\u6301\u8eab\u4efd\u9a8c\u8bc1\u7684\u534f\u8bae\u6765\u9a8c\u8bc1\u901a\u4fe1\u7684\u8eab\u4efd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_59","title":"\u4e8b\u4ef6\u54cd\u5e94","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-10","title":"SEC 10 \u5982\u4f55\u9884\u6d4b\u3001\u54cd\u5e94\u4e8b\u4ef6\u4ee5\u53ca\u4ece\u4e8b\u4ef6\u4e2d\u6062\u590d\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_60","title":"\u786e\u5b9a\u5173\u952e\u4eba\u5458\u548c\u5916\u90e8\u8d44\u6e90","text":"<p>\u786e\u5b9a\u80fd\u591f\u5e2e\u52a9\u60a8\u7684\u7ec4\u7ec7\u54cd\u5e94\u4e8b\u4ef6\u7684\u5185\u90e8\u548c\u5916\u90e8\u4eba\u5458\u3001\u8d44\u6e90\u3001\u4ee5\u53ca\u6cd5\u5f8b\u4e49\u52a1\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_61","title":"\u5236\u5b9a\u4e8b\u4ef6\u7ba1\u7406\u8ba1\u5212","text":"<p>\u4e3a\u4e8b\u4ef6\u54cd\u5e94\u5236\u5b9a\u7684\u7b2c\u4e00\u4e2a\u6587\u6863\u662f\u4e8b\u4ef6\u54cd\u5e94\u8ba1\u5212\u3002\u4e8b\u4ef6\u54cd\u5e94\u8ba1\u5212\u65e8\u5728\u4e3a\u60a8\u7684\u4e8b\u4ef6\u54cd\u5e94\u8ba1\u5212\u548c\u6218\u7565\u5960\u5b9a\u57fa\u7840\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_62","title":"\u51c6\u5907\u53d6\u8bc1\u80fd\u529b","text":"<p>\u5728\u53d1\u751f\u5b89\u5168\u4e8b\u4ef6\u4e4b\u524d\uff0c\u53ef\u4ee5\u8003\u8651\u6784\u5efa\u53d6\u8bc1\u80fd\u529b\u6765\u652f\u6301\u5b89\u5168\u4e8b\u4ef6\u8c03\u67e5\u5de5\u4f5c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_63","title":"\u5236\u5b9a\u548c\u6d4b\u8bd5\u5b89\u5168\u4e8b\u4ef6\u54cd\u5e94\u884c\u52a8\u624b\u518c","text":"<p>\u51c6\u5907\u4e8b\u4ef6\u54cd\u5e94\u6d41\u7a0b\u7684\u5173\u952e\u73af\u8282\u662f\u5236\u5b9a\u884c\u52a8\u624b\u518c\u3002\u4e8b\u4ef6\u54cd\u5e94\u884c\u52a8\u624b\u518c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u89c4\u8303\u6027\u6307\u5bfc\u548c\u6b65\u9aa4\uff0c\u4f9b\u53d1\u751f\u5b89\u5168\u4e8b\u4ef6\u65f6\u9075\u5faa\u3002\u6e05\u6670\u7684\u7ed3\u6784\u548c\u6b65\u9aa4\u53ef\u7b80\u5316\u54cd\u5e94\uff0c\u51cf\u5c11\u53d1\u751f\u4eba\u4e3a\u9519\u8bef\u7684\u53ef\u80fd\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_64","title":"\u9884\u7f6e\u8bbf\u95ee\u6743\u9650","text":"<p>\u786e\u4fdd\u4e8b\u4ef6\u54cd\u5e94\u8005\u5c06\u6b63\u786e\u7684\u8bbf\u95ee\u6743\u9650\u9884\u7f6e\u5230 AWS \u4e2d\uff0c\u4ee5\u7f29\u77ed\u8c03\u67e5\u5230\u6062\u590d\u6240\u9700\u7684\u65f6\u95f4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_65","title":"\u8fd0\u884c\u6a21\u62df","text":"<p>\u968f\u7740\u7ec4\u7ec7\u4e0d\u65ad\u53d1\u5c55\u58ee\u5927\uff0c\u5a01\u80c1\u5f62\u52bf\u4e5f\u4f1a\u4e0d\u65ad\u53d8\u5316\uff0c\u56e0\u6b64\u52a1\u5fc5\u8981\u6301\u7eed\u8bc4\u4f30\u7ec4\u7ec7\u7684\u4e8b\u4ef6\u54cd\u5e94\u80fd\u529b\u3002\u8fd0\u884c\u6a21\u62df\uff08\u4e5f\u79f0\u4e3a\u5b9e\u9645\u6f14\u7ec3\uff09\u662f\u53ef\u7528\u4e8e\u6267\u884c\u8fd9\u79cd\u8bc4\u4f30\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u6a21\u62df\u8fc7\u7a0b\u4f7f\u7528\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5b89\u5168\u4e8b\u4ef6\u573a\u666f\uff0c\u65e8\u5728\u6a21\u4eff\u5a01\u80c1\u4e3b\u4f53\u91c7\u53d6\u7684\u6218\u672f\u3001\u6280\u672f\u548c\u7a0b\u5e8f\uff08TTP\uff09\uff0c\u8ba9\u7ec4\u7ec7\u901a\u8fc7\u54cd\u5e94\u73b0\u5b9e\u4e2d\u53ef\u80fd\u53d1\u751f\u7684\u6a21\u62df\u7f51\u7edc\u4e8b\u4ef6\uff0c\u6765\u7ec3\u4e60\u548c\u8bc4\u4f30\u81ea\u5df1\u7684\u4e8b\u4ef6\u54cd\u5e94\u80fd\u529b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_66","title":"\u5efa\u7acb\u4ece\u4e8b\u4ef6\u4e2d\u5438\u53d6\u7ecf\u9a8c\u6559\u8bad\u7684\u6846\u67b6","text":"<p>\u5b9e\u73b0\u7ecf\u9a8c\u6559\u8bad\u603b\u7ed3\u6846\u67b6\u548c\u6839\u672c\u539f\u56e0\u5206\u6790\u80fd\u529b\u4e0d\u4ec5\u6709\u52a9\u4e8e\u63d0\u9ad8\u4e8b\u4ef6\u54cd\u5e94\u80fd\u529b\uff0c\u8fd8\u6709\u52a9\u4e8e\u9632\u6b62\u4e8b\u4ef6\u518d\u6b21\u53d1\u751f\u3002\u901a\u8fc7\u4ece\u6bcf\u6b21\u4e8b\u4ef6\u4e2d\u5438\u53d6\u6559\u8bad\uff0c\u60a8\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u540c\u6837\u7684\u9519\u8bef\u3001\u6cc4\u9732\u6216\u9519\u8bef\u914d\u7f6e\uff0c\u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u6539\u5584\u60a8\u7684\u5b89\u5168\u6001\u52bf\uff0c\u8fd8\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u56e0\u53ef\u9884\u9632\u7684\u60c5\u51b5\u800c\u635f\u5931\u7684\u65f6\u95f4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_67","title":"\u9884\u5148\u90e8\u7f72\u5de5\u5177","text":"<p>\u786e\u4fdd\u5b89\u5168\u4eba\u5458\u9884\u90e8\u7f72\u4e86\u9002\u5f53\u7684\u5de5\u5177\uff0c\u6765\u7f29\u77ed\u4ece\u8c03\u67e5\u5230\u6062\u590d\u7684\u65f6\u95f4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_68","title":"\u5e94\u7528\u5b89\u5168","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#sec-11","title":"SEC 11 \u5982\u4f55\u5728\u6574\u4e2a\u8bbe\u8ba1\u3001\u5f00\u53d1\u548c\u90e8\u7f72\u751f\u547d\u5468\u671f\u4e2d\u7eb3\u5165\u5e76\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u5c5e\u6027\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_69","title":"\u5b9a\u671f\u6267\u884c\u6e17\u900f\u6d4b\u8bd5","text":"<p>\u5b9a\u671f\u5bf9\u8f6f\u4ef6\u6267\u884c\u6e17\u900f\u6d4b\u8bd5\u3002\u6b64\u673a\u5236\u6709\u52a9\u4e8e\u8bc6\u522b\u65e0\u6cd5\u901a\u8fc7\u81ea\u52a8\u5316\u6d4b\u8bd5\u6216\u4eba\u5de5\u4ee3\u7801\u5ba1\u67e5\u68c0\u6d4b\u5230\u7684\u6f5c\u5728\u8f6f\u4ef6\u95ee\u9898\u3002\u5b83\u8fd8\u6709\u52a9\u4e8e\u4e86\u89e3\u68c0\u6d4b\u63a7\u5236\u7684\u6709\u6548\u6027\u3002\u6e17\u900f\u6d4b\u8bd5\u5e94\u8bbe\u6cd5\u786e\u5b9a\u8f6f\u4ef6\u662f\u5426\u4f1a\u4ee5\u610f\u5916\u65b9\u5f0f\u6267\u884c\uff0c\u4f8b\u5982\u516c\u5f00\u5e94\u53d7\u4fdd\u62a4\u7684\u6570\u636e\uff0c\u6216\u8005\u6388\u4e88\u6bd4\u9884\u671f\u66f4\u5e7f\u6cdb\u7684\u6743\u9650\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_70","title":"\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u90e8\u7f72\u8f6f\u4ef6","text":"<p>\u5c3d\u53ef\u80fd\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u90e8\u7f72\u8f6f\u4ef6\u3002\u901a\u8fc7\u91c7\u53d6\u8fd9\u79cd\u505a\u6cd5\uff0c\u53ef\u4ee5\u964d\u4f4e\u7531\u4e8e\u4eba\u4e3a\u9519\u8bef\u5bfc\u81f4\u90e8\u7f72\u5931\u8d25\u6216\u5f15\u5165\u610f\u5916\u95ee\u9898\u7684\u53ef\u80fd\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_71","title":"\u5b9a\u671f\u8bc4\u6d4b\u7ba1\u9053\u7684\u5b89\u5168\u5c5e\u6027","text":"<p>\u5bf9\u60a8\u7684\u7ba1\u9053\u8fd0\u7528 Well-Architected \u5b89\u5168\u6027\u652f\u67f1\u539f\u5219\uff0c\u5c24\u5176\u6ce8\u610f\u6743\u9650\u5206\u79bb\u3002\u5b9a\u671f\u8bc4\u6d4b\u7ba1\u9053\u57fa\u7840\u8bbe\u65bd\u7684\u5b89\u5168\u5c5e\u6027\u3002\u901a\u8fc7\u6709\u6548\u7ba1\u7406\u7ba1\u9053\u7684\u5b89\u5168\u6027\uff0c\u53ef\u4ee5\u786e\u4fdd\u901a\u8fc7\u7ba1\u9053\u7684\u8f6f\u4ef6\u7684\u5b89\u5168\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_72","title":"\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u6027\u57f9\u8bad","text":"<p>\u5411\u8d35\u7ec4\u7ec7\u7684\u6784\u5efa\u8005\u63d0\u4f9b\u57f9\u8bad\uff0c\u4f7f\u5176\u4e86\u89e3\u6709\u5173\u5b89\u5168\u5f00\u53d1\u548c\u64cd\u4f5c\u5e94\u7528\u7a0b\u5e8f\u7684\u5e38\u89c1\u505a\u6cd5\u3002\u5728\u5f00\u53d1\u65f6\u91c7\u53d6\u5b89\u5168\u81f3\u4e0a\u7684\u505a\u6cd5\uff0c\u6709\u52a9\u4e8e\u964d\u4f4e\u5230\u5b89\u5168\u5ba1\u67e5\u9636\u6bb5\u624d\u4f1a\u68c0\u6d4b\u51fa\u95ee\u9898\u7684\u53ef\u80fd\u6027\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_73","title":"\u5728\u6574\u4e2a\u5f00\u53d1\u548c\u53d1\u5e03\u751f\u547d\u5468\u671f\u4e2d\u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5","text":"<p>\u5728\u6574\u4e2a\u5f00\u53d1\u548c\u53d1\u5e03\u751f\u547d\u5468\u671f\u4e2d\u81ea\u52a8\u6d4b\u8bd5\u5b89\u5168\u5c5e\u6027\u3002\u81ea\u52a8\u5316\u4f7f\u5f97\u5728\u53d1\u5e03\u8f6f\u4ef6\u524d\uff0c\u66f4\u52a0\u5bb9\u6613\u59cb\u7ec8\u5982\u4e00\u53cd\u590d\u8bc6\u522b\u8f6f\u4ef6\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898\uff0c\u8fdb\u800c\u51cf\u5c11\u6240\u63d0\u4f9b\u7684\u8f6f\u4ef6\u4e2d\u5b58\u5728\u5b89\u5168\u95ee\u9898\u7684\u98ce\u9669\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_74","title":"\u4eba\u5de5\u4ee3\u7801\u5ba1\u67e5","text":"<p>\u5bf9\u60a8\u5236\u4f5c\u7684\u8f6f\u4ef6\u6267\u884c\u4eba\u5de5\u4ee3\u7801\u5ba1\u67e5\u3002\u6b64\u6d41\u7a0b\u6709\u52a9\u4e8e\u786e\u4fdd\u7f16\u5199\u4ee3\u7801\u7684\u4eba\u4e0d\u662f\u552f\u4e00\u68c0\u67e5\u4ee3\u7801\u8d28\u91cf\u7684\u4eba\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_75","title":"\u96c6\u4e2d\u7ba1\u7406\u670d\u52a1\uff0c\u65b9\u4fbf\u83b7\u53d6\u8f6f\u4ef6\u5305\u548c\u4f9d\u8d56\u9879","text":"<p>\u63d0\u4f9b\u96c6\u4e2d\u7ba1\u7406\u7684\u670d\u52a1\uff0c\u65b9\u4fbf\u6784\u5efa\u8005\u56e2\u961f\u83b7\u53d6\u8f6f\u4ef6\u5305\u548c\u5176\u4ed6\u4f9d\u8d56\u9879\u3002\u901a\u8fc7\u91c7\u53d6\u8fd9\u79cd\u505a\u6cd5\uff0c\u53ef\u4ee5\u5728\u5c06\u8f6f\u4ef6\u5305\u7eb3\u5165\u6240\u7f16\u5199\u7684\u8f6f\u4ef6\u4e4b\u524d\uff0c\u5bf9\u8f6f\u4ef6\u5305\u8fdb\u884c\u9a8c\u8bc1\uff1b\u53e6\u5916\uff0c\u8fd8\u53ef\u4ee5\u4e3a\u5206\u6790\u8d35\u7ec4\u7ec7\u6240\u4f7f\u7528\u7684\u8f6f\u4ef6\u63d0\u4f9b\u6570\u636e\u6765\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E5%AE%89%E5%85%A8-Security-202310-Summary/#_76","title":"\u5efa\u7acb\u89c4\u7a0b\uff0c\u8ba9\u5de5\u4f5c\u8d1f\u8f7d\u56e2\u961f\u8d1f\u8d23\u5b89\u5168\u9886\u57df","text":"<p>\u5efa\u7acb\u89c4\u7a0b\u6216\u673a\u5236\uff0c\u4f7f\u6784\u5efa\u8005\u56e2\u961f\u80fd\u591f\u9488\u5bf9\u521b\u5efa\u7684\u8f6f\u4ef6\u4f5c\u51fa\u5b89\u5168\u51b3\u7b56\u3002\u8fd9\u4e9b\u51b3\u7b56\u4ecd\u7136\u9700\u8981\u7531\u5b89\u5168\u56e2\u961f\u901a\u8fc7\u5ba1\u67e5\u52a0\u4ee5\u9a8c\u8bc1\uff0c\u4f46\u8ba9\u6784\u5efa\u8005\u56e2\u961f\u8d1f\u8d23\u5b89\u5168\u9886\u57df\u53ef\u4ee5\u6784\u5efa\u901f\u5ea6\u66f4\u5feb\u3001\u5b89\u5168\u6027\u66f4\u9ad8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u6b64\u673a\u5236\u8fd8\u53ef\u4fc3\u8fdb\u8d1f\u8d23\u4efb\u6587\u5316\uff0c\u8fdb\u800c\u5bf9\u6240\u6784\u5efa\u7cfb\u7edf\u7684\u8fd0\u8425\u4ea7\u751f\u79ef\u6781\u5f71\u54cd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/","title":"WA-\u6027\u80fd\u6548\u7387-Performance-Efficiency-202310-Summary","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_1","title":"\u8bbe\u8ba1\u539f\u5219","text":"<pre><code>collapse: close\ntitle:  \u4f7f\u5148\u8fdb\u6280\u672f\u6c11\u4e3b\u5316\n\n\u901a\u8fc7\u5c06\u590d\u6742\u7684\u4efb\u52a1\u59d4\u6258\u7ed9\u60a8\u7684\u4e91\u4f9b\u5e94\u5546\uff0c\u8ba9\u60a8\u7684\u56e2\u961f\u66f4\u8f7b\u677e\u5730\u5b9e\u65bd\u5148\u8fdb\u6280\u672f\u3002\u4e0e\u5176\u8981\u6c42\u60a8\u7684 IT \u56e2\u961f\u5b66\u4e60\u6258\u7ba1\u548c\u8fd0\u884c\u65b0\u6280\u672f\uff0c\u4e0d\u5982\u8003\u8651\u5c06\u6280\u672f\u4f5c\u4e3a\u4e00\u79cd\u670d\u52a1\u6765\u4f7f\u7528\u3002\u4f8b\u5982\uff0cNoSQL \u6570\u636e\u5e93\u5728\u4e91\u4e2d\uff0c\u8fd9\u4e9b\u6280\u672f\u6210\u4e3a\u60a8\u7684\u56e2\u961f\u53ef\u4ee5\u4f7f\u7528\u7684\u670d\u52a1\uff0c\u4f7f\u60a8\u7684\u56e2\u961f\u80fd\u591f\u4e13\u6ce8\u4e8e\u4ea7\u54c1\u5f00\u53d1\u800c\u4e0d\u662f\u8d44\u6e90\u914d\u7f6e\u548c\u7ba1\u7406\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u5728\u51e0\u5206\u949f\u5185\u8d70\u5411\u5168\u7403\n\n\u5728\u5168\u7403\u591a\u4e2a AWS \u533a\u57df\u90e8\u7f72\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u4ee5\u8ba9\u60a8\u4ee5\u6700\u4f4e\u7684\u6210\u672c\u4e3a\u60a8\u7684\u5ba2\u6237\u63d0\u4f9b\u66f4\u4f4e\u7684\u5ef6\u8fdf\u548c\u66f4\u597d\u7684\u4f53\u9a8c\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u4f7f\u7528\u65e0\u670d\u52a1\u5668\u67b6\u6784\n\n\u65e0\u670d\u52a1\u5668\u67b6\u6784\u65e0\u9700\u60a8\u4e3a\u4f20\u7edf\u8ba1\u7b97\u6d3b\u52a8\u8fd0\u884c\u548c\u7ef4\u62a4\u7269\u7406\u670d\u52a1\u5668\u3002\u4f8b\u5982\uff0c\u65e0\u670d\u52a1\u5668\u5b58\u50a8\u670d\u52a1\u53ef\u4ee5\u5145\u5f53\u9759\u6001\u7f51\u7ad9\uff08\u65e0\u9700 Web \u670d\u52a1\u5668\uff09\uff0c\u4e8b\u4ef6\u670d\u52a1\u53ef\u4ee5\u6258\u7ba1\u4ee3\u7801\u3002\u8fd9\u6d88\u9664\u4e86\u7ba1\u7406\u7269\u7406\u670d\u52a1\u5668\u7684\u8fd0\u8425\u8d1f\u62c5\uff0c\u5e76\u4e14\u53ef\u4ee5\u964d\u4f4e\u4ea4\u6613\u6210\u672c\uff0c\u56e0\u4e3a\u6258\u7ba1\u670d\u52a1\u5728\u4e91\u89c4\u6a21\u4e0a\u8fd0\u884c\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u66f4\u9891\u7e41\u5730\u8fdb\u884c\u5b9e\u9a8c\n\n\u501f\u52a9\u865a\u62df\u548c\u81ea\u52a8\u5316\u8d44\u6e90\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u5b9e\u4f8b\u3001\u5b58\u50a8\u6216\u914d\u7f6e\u5feb\u901f\u8fdb\u884c\u6bd4\u8f83\u6d4b\u8bd5\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u673a\u5236\u7684\u8003\u91cf\n\n\u4e86\u89e3\u4e91\u670d\u52a1\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u5e76\u59cb\u7ec8\u4f7f\u7528\u6700\u7b26\u5408\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u76ee\u6807\u7684\u6280\u672f\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728\u9009\u62e9\u6570\u636e\u5e93\u6216\u5b58\u50a8\u65b9\u6cd5\u65f6\u8003\u8651\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f\u3002\n</code></pre>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_2","title":"\u95ee\u9898\u548c\u5b9a\u4e49","text":"<p>\u67b6\u6784\u9009\u578b     PERF 1 \u5982\u4f55\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u5408\u9002\u7684\u4e91\u8d44\u6e90\u548c\u67b6\u6784\u6a21\u5f0f\uff1f \u8ba1\u7b97\u548c\u786c\u4ef6     PERF 2 \u5982\u4f55\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u9009\u62e9\u548c\u4f7f\u7528\u8ba1\u7b97\u8d44\u6e90\uff1f \u6570\u636e\u7ba1\u7406     PERF 3 \u5982\u4f55\u5b58\u50a8\u3001\u7ba1\u7406\u548c\u8bbf\u95ee\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u6570\u636e\uff1f \u7f51\u7edc\u548c\u5185\u5bb9\u4ea4\u4ed8     PERF 4 \u5982\u4f55\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u9009\u62e9\u548c\u914d\u7f6e\u7f51\u7edc\u8d44\u6e90\uff1f \u6d41\u7a0b\u548c\u6587\u5316     PERF 5 \u60a8\u4f7f\u7528\u4ec0\u4e48\u6d41\u7a0b\u6765\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6027\u80fd\u6548\u7387\uff1f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_3","title":"\u6700\u4f73\u5b9e\u8df5","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_4","title":"\u67b6\u6784\u9009\u578b","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#perf-1","title":"PERF 1 \u5982\u4f55\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u5408\u9002\u7684\u4e91\u8d44\u6e90\u548c\u67b6\u6784\u6a21\u5f0f\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_5","title":"\u4e86\u89e3\u5e76\u638c\u63e1\u53ef\u7528\u7684\u4e91\u670d\u52a1\u548c\u529f\u80fd","text":"<p>\u4e0d\u65ad\u4e86\u89e3\u548c\u53d1\u73b0\u53ef\u7528\u7684\u670d\u52a1\u548c\u914d\u7f6e\uff0c\u8fd9\u4e9b\u670d\u52a1\u548c\u914d\u7f6e\u6709\u52a9\u4e8e\u60a8\u505a\u51fa\u66f4\u597d\u7684\u67b6\u6784\u51b3\u7b56\uff0c\u5e76\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u67b6\u6784\u7684\u6027\u80fd\u6548\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_6","title":"\u8bc4\u4f30\u6743\u8861\u673a\u5236\u5bf9\u5ba2\u6237\u548c\u67b6\u6784\u6548\u7387\u7684\u5f71\u54cd","text":"<p>\u5728\u8bc4\u4f30\u4e0e\u6027\u80fd\u76f8\u5173\u7684\u6539\u8fdb\u65f6\uff0c\u786e\u5b9a\u54ea\u4e9b\u9009\u62e9\u4f1a\u5bf9\u5ba2\u6237\u548c\u5de5\u4f5c\u8d1f\u8f7d\u6548\u7387\u4ea7\u751f\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f7f\u7528\u952e\u503c\u6570\u636e\u5b58\u50a8\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\uff0c\u90a3\u4e48\u8bc4\u4f30\u8fd9\u79cd\u66f4\u6539\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u5bf9\u5ba2\u6237\u7684\u5f71\u54cd\u5c31\u975e\u5e38\u91cd\u8981\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_7","title":"\u4f7f\u7528\u4e91\u63d0\u4f9b\u5546\u6216\u5408\u9002\u7684\u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b\u7684\u6307\u5bfc\u6765\u4e86\u89e3\u67b6\u6784\u6a21\u5f0f\u548c\u6700\u4f73\u5b9e\u8df5","text":"<p>\u5229\u7528\u4e91\u670d\u52a1\u516c\u53f8\u63d0\u4f9b\u7684\u8d44\u6e90\uff08\u5982\u6587\u6863\u3001\u89e3\u51b3\u65b9\u6848\u67b6\u6784\u5e08\u3001\u4e13\u4e1a\u670d\u52a1\u6216\u5408\u9002\u7684\u5408\u4f5c\u4f19\u4f34\uff09\u6765\u6307\u5bfc\u60a8\u5236\u5b9a\u67b6\u6784\u51b3\u7b56\u3002\u8fd9\u4e9b\u8d44\u6e90\u6709\u52a9\u4e8e\u60a8\u5ba1\u67e5\u548c\u6539\u8fdb\u67b6\u6784\uff0c\u4ee5\u5b9e\u73b0\u6700\u4f73\u6027\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_8","title":"\u5236\u5b9a\u67b6\u6784\u51b3\u7b56\u65f6\u8003\u8651\u6210\u672c\u56e0\u7d20","text":"<p>\u5236\u5b9a\u67b6\u6784\u51b3\u7b56\u65f6\u8003\u8651\u6210\u672c\u56e0\u7d20\uff0c\u4ee5\u4fbf\u63d0\u9ad8\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8d44\u6e90\u5229\u7528\u7387\u548c\u6027\u80fd\u6548\u7387\u3002\u5f53\u60a8\u610f\u8bc6\u5230\u4e91\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\u5f71\u54cd\u65f6\uff0c\u60a8\u5c31\u66f4\u6709\u53ef\u80fd\u5145\u5206\u5229\u7528\u6709\u6548\u8d44\u6e90\uff0c\u51cf\u5c11\u6d6a\u8d39\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_9","title":"\u4f7f\u7528\u7b56\u7565\u548c\u53c2\u8003\u67b6\u6784","text":"<p>\u5728\u9009\u62e9\u670d\u52a1\u548c\u914d\u7f6e\u65f6\u4f7f\u7528\u5185\u90e8\u7b56\u7565\u548c\u73b0\u6709\u53c2\u8003\u67b6\u6784\uff0c\u4ee5\u63d0\u9ad8\u8bbe\u8ba1\u548c\u5b9e\u65bd\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6548\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_10","title":"\u4f7f\u7528\u57fa\u51c6\u6d4b\u8bd5\u6765\u63a8\u52a8\u5236\u5b9a\u67b6\u6784\u51b3\u7b56","text":"<p>\u5bf9\u73b0\u6709\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6027\u80fd\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u4ece\u800c\u4e86\u89e3\u5de5\u4f5c\u8d1f\u8f7d\u5728\u4e91\u4e2d\u7684\u8868\u73b0\u60c5\u51b5\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u63a8\u52a8\u5236\u5b9a\u67b6\u6784\u51b3\u7b56\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_11","title":"\u4f7f\u7528\u6570\u636e\u9a71\u52a8\u7684\u65b9\u6cd5\u8fdb\u884c\u67b6\u6784\u9009\u62e9","text":"<p>\u4e3a\u67b6\u6784\u9009\u62e9\u786e\u5b9a\u6e05\u6670\u7684\u6570\u636e\u9a71\u52a8\u65b9\u6cd5\uff0c\u786e\u4fdd\u4f7f\u7528\u5408\u9002\u7684\u4e91\u670d\u52a1\u548c\u914d\u7f6e\u6765\u6ee1\u8db3\u60a8\u7684\u7279\u5b9a\u4e1a\u52a1\u9700\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_12","title":"\u8ba1\u7b97\u548c\u786c\u4ef6","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#perf-2","title":"PERF 2 \u5982\u4f55\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u9009\u62e9\u548c\u4f7f\u7528\u8ba1\u7b97\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_13","title":"\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u6700\u4f73\u8ba1\u7b97\u65b9\u6848","text":"<p>\u901a\u8fc7\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u6700\u5408\u9002\u7684\u8ba1\u7b97\u65b9\u6848\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u57fa\u7840\u8bbe\u65bd\u6210\u672c\uff0c\u51cf\u5c11\u7ef4\u62a4\u5de5\u4f5c\u8d1f\u8f7d\u6240\u9700\u7684\u8fd0\u7ef4\u5de5\u4f5c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_14","title":"\u6536\u96c6\u4e0e\u8ba1\u7b97\u76f8\u5173\u7684\u6307\u6807","text":"<p>\u8bb0\u5f55\u548c\u8ddf\u8e2a\u4e0e\u8ba1\u7b97\u76f8\u5173\u7684\u6307\u6807\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u4e86\u89e3\u8ba1\u7b97\u8d44\u6e90\u7684\u8868\u73b0\u60c5\u51b5\uff0c\u5e76\u63d0\u9ad8\u8ba1\u7b97\u8d44\u6e90\u7684\u6027\u80fd\u548c\u5229\u7528\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_15","title":"\u52a8\u6001\u6269\u5c55\u8ba1\u7b97\u8d44\u6e90","text":"<p>\u5229\u7528\u4e91\u7684\u5f39\u6027\u6839\u636e\u9700\u6c42\u52a8\u6001\u589e\u51cf\u8ba1\u7b97\u8d44\u6e90\uff0c\u907f\u514d\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9884\u7f6e\u7684\u5bb9\u91cf\u8fc7\u591a\u6216\u8005\u4e0d\u8db3\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_16","title":"\u4e86\u89e3\u53ef\u7528\u7684\u8ba1\u7b97\u914d\u7f6e\u548c\u529f\u80fd","text":"<p>\u4e86\u89e3\u8ba1\u7b97\u670d\u52a1\u7684\u53ef\u7528\u914d\u7f6e\u9009\u9879\u548c\u529f\u80fd\uff0c\u4ece\u800c\u9884\u7f6e\u9002\u91cf\u7684\u8d44\u6e90\u5e76\u63d0\u9ad8\u6027\u80fd\u6548\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_17","title":"\u914d\u7f6e\u8ba1\u7b97\u8d44\u6e90\u5e76\u5408\u7406\u8c03\u6574\u8d44\u6e90\u89c4\u6a21","text":"<p>\u914d\u7f6e\u8ba1\u7b97\u8d44\u6e90\u5e76\u5408\u7406\u8c03\u6574\u8d44\u6e90\u89c4\u6a21\uff0c\u4f7f\u5176\u6ee1\u8db3\u60a8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6027\u80fd\u8981\u6c42\uff0c\u907f\u514d\u8d44\u6e90\u5229\u7528\u4e0d\u8db3\u6216\u8fc7\u5ea6\u5229\u7528\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_18","title":"\u4f7f\u7528\u57fa\u4e8e\u786c\u4ef6\u7684\u4f18\u5316\u578b\u8ba1\u7b97\u52a0\u901f\u5668","text":"<p>\u4e0e\u57fa\u4e8e CPU \u7684\u66ff\u4ee3\u65b9\u6848\u76f8\u6bd4\uff0c\u4f7f\u7528\u786c\u4ef6\u52a0\u901f\u5668\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u6267\u884c\u67d0\u4e9b\u529f\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_19","title":"\u6570\u636e\u7ba1\u7406","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#perf-3","title":"PERF 3 \u5982\u4f55\u5b58\u50a8\u3001\u7ba1\u7406\u548c\u8bbf\u95ee\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u6570\u636e\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_20","title":"\u4f7f\u7528\u6700\u80fd\u6ee1\u8db3\u6570\u636e\u8bbf\u95ee\u548c\u5b58\u50a8\u8981\u6c42\u7684\u4e13\u7528\u6570\u636e\u5b58\u50a8","text":"<p>\u4e86\u89e3\u6570\u636e\u7279\u5f81\uff08\u5982\u6570\u636e\u7684\u53ef\u5171\u4eab\u6027\u3001\u5927\u5c0f\u3001\u7f13\u5b58\u5927\u5c0f\u3001\u8bbf\u95ee\u6a21\u5f0f\u3001\u5ef6\u8fdf\u3001\u541e\u5410\u91cf\u548c\u6301\u4e45\u6027\uff09\uff0c\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u5408\u9002\u7684\u4e13\u7528\u6570\u636e\u5b58\u50a8\uff08\u5b58\u50a8\u6216\u6570\u636e\u5e93\uff09\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_21","title":"\u6536\u96c6\u548c\u8bb0\u5f55\u6570\u636e\u5b58\u50a8\u6027\u80fd\u6307\u6807","text":"<p>\u8ddf\u8e2a\u5e76\u8bb0\u5f55\u6570\u636e\u5b58\u50a8\u7684\u76f8\u5173\u6027\u80fd\u6307\u6807\uff0c\u4e86\u89e3\u6570\u636e\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\u7684\u6267\u884c\u60c5\u51b5\u3002\u8fd9\u4e9b\u6307\u6807\u6709\u52a9\u4e8e\u60a8\u4f18\u5316\u6570\u636e\u5b58\u50a8\uff0c\u9a8c\u8bc1\u662f\u5426\u6ee1\u8db3\u5de5\u4f5c\u8d1f\u8f7d\u8981\u6c42\uff0c\u5e76\u6e05\u6670\u5730\u6982\u8ff0\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8868\u73b0\u60c5\u51b5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_22","title":"\u8bc4\u4f30\u6570\u636e\u5b58\u50a8\u7684\u53ef\u7528\u914d\u7f6e\u9009\u9879","text":"<p>\u4e86\u89e3\u5e76\u8bc4\u4f30\u6570\u636e\u5b58\u50a8\u7684\u5404\u79cd\u53ef\u7528\u529f\u80fd\u548c\u914d\u7f6e\u9009\u9879\uff0c\u4ece\u800c\u4f18\u5316\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b58\u50a8\u7a7a\u95f4\u548c\u6027\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_23","title":"\u5b9e\u65bd\u53ef\u63d0\u9ad8\u6570\u636e\u5b58\u50a8\u67e5\u8be2\u6027\u80fd\u7684\u7b56\u7565","text":"<p>\u5b9e\u65bd\u53ef\u4f18\u5316\u6570\u636e\u548c\u6539\u8fdb\u6570\u636e\u67e5\u8be2\u7684\u7b56\u7565\uff0c\u4ece\u800c\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53ef\u6269\u5c55\u6027\u548c\u6027\u80fd\u6548\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_24","title":"\u5b9e\u73b0\u5229\u7528\u7f13\u5b58\u7684\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f","text":"<p>\u5b9e\u65bd\u53ef\u4ece\u7f13\u5b58\u6570\u636e\u53d7\u76ca\u7684\u8bbf\u95ee\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u5feb\u901f\u68c0\u7d22\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_25","title":"\u7f51\u7edc\u548c\u5185\u5bb9\u4ea4\u4ed8","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#perf-4","title":"PERF 4 \u5982\u4f55\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u9009\u62e9\u548c\u914d\u7f6e\u7f51\u7edc\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_26","title":"\u4e86\u89e3\u8054\u7f51\u5bf9\u6027\u80fd\u7684\u5f71\u54cd","text":"<p>\u5206\u6790\u5e76\u4e86\u89e3\u4e0e\u7f51\u7edc\u76f8\u5173\u7684\u51b3\u7b56\u5982\u4f55\u5f71\u54cd\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u9ad8\u7684\u6027\u80fd\u548c\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_27","title":"\u8bc4\u4f30\u53ef\u7528\u7684\u8054\u7f51\u529f\u80fd","text":"<p>\u8bc4\u4f30\u4e91\u4e2d\u53ef\u80fd\u63d0\u9ad8\u6027\u80fd\u7684\u8054\u7f51\u529f\u80fd\u3002\u501f\u52a9\u6d4b\u8bd5\u3001\u6307\u6807\u548c\u5206\u6790\u6765\u8861\u91cf\u8fd9\u4e9b\u529f\u80fd\u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u5229\u7528\u53ef\u7528\u7684\u7f51\u7edc\u7ea7\u529f\u80fd\u6765\u51cf\u5c11\u5ef6\u8fdf\u3001\u7f51\u7edc\u8ddd\u79bb\u6216\u6296\u52a8\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#vpn","title":"\u4e3a\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u5408\u9002\u7684\u4e13\u7528\u8fde\u63a5\u6216 VPN","text":"<p>\u5f53\u9700\u8981\u6df7\u5408\u8fde\u63a5\u6765\u8fde\u63a5\u672c\u5730\u8d44\u6e90\u548c\u4e91\u8d44\u6e90\u65f6\uff0c\u8bf7\u9884\u7f6e\u8db3\u591f\u7684\u5e26\u5bbd\u4ee5\u6ee1\u8db3\u60a8\u7684\u6027\u80fd\u8981\u6c42\u3002\u4f30\u7b97\u6df7\u5408\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5e26\u5bbd\u548c\u5ef6\u8fdf\u8981\u6c42\u3002\u8fd9\u4e9b\u6570\u5b57\u5c06\u63a8\u52a8\u60a8\u7684\u89c4\u6a21\u9700\u6c42\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_28","title":"\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5728\u591a\u4e2a\u8d44\u6e90\u4e4b\u95f4\u5206\u914d\u6d41\u91cf","text":"<p>\u8de8\u591a\u4e2a\u8d44\u6e90\u6216\u670d\u52a1\u5206\u914d\u6d41\u91cf\uff0c\u4ee5\u4fbf\u8ba9\u5de5\u4f5c\u8d1f\u8f7d\u80fd\u591f\u5229\u7528\u4e91\u63d0\u4f9b\u7684\u5f39\u6027\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u673a\u5236\u6765\u5378\u8f7d\u52a0\u5bc6\u7ec8\u7aef\uff0c\u4ee5\u4fbf\u63d0\u9ad8\u6027\u80fd\u548c\u53ef\u9760\u6027\uff0c\u5e76\u6709\u6548\u7ba1\u7406\u548c\u8def\u7531\u6d41\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_29","title":"\u9009\u62e9\u7f51\u7edc\u534f\u8bae\u4ee5\u63d0\u9ad8\u6027\u80fd","text":"<p>\u6839\u636e\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u505a\u51fa\u6709\u5173\u7cfb\u7edf\u4e0e\u7f51\u7edc\u4e4b\u95f4\u7684\u901a\u4fe1\u534f\u8bae\u7684\u51b3\u7b56\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_30","title":"\u6839\u636e\u7f51\u7edc\u8981\u6c42\u9009\u62e9\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4f4d\u7f6e","text":"<p>\u8bc4\u4f30\u8d44\u6e90\u7f6e\u653e\u9009\u9879\uff0c\u4ee5\u4fbf\u51cf\u5c11\u7f51\u7edc\u5ef6\u8fdf\u548c\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u901a\u8fc7\u7f29\u77ed\u9875\u9762\u52a0\u8f7d\u548c\u6570\u636e\u4f20\u8f93\u65f6\u95f4\u6765\u63d0\u4f9b\u6700\u4f73\u7684\u7528\u6237\u4f53\u9a8c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_31","title":"\u6839\u636e\u5404\u9879\u6307\u6807\u4f18\u5316\u7f51\u7edc\u914d\u7f6e","text":"<p>\u4f7f\u7528\u6536\u96c6\u548c\u5206\u6790\u7684\u6570\u636e\u505a\u51fa\u6709\u5173\u4f18\u5316\u7f51\u7edc\u914d\u7f6e\u7684\u660e\u667a\u51b3\u7b56\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_32","title":"\u6d41\u7a0b\u548c\u6587\u5316","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#perf-5","title":"PERF 5 \u60a8\u4f7f\u7528\u4ec0\u4e48\u6d41\u7a0b\u6765\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6027\u80fd\u6548\u7387\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#kpi","title":"\u5efa\u7acb\u5173\u952e\u6027\u80fd\u6307\u6807\uff08KPI\uff09\u6765\u8861\u91cf\u5de5\u4f5c\u8d1f\u8f7d\u8fd0\u884c\u72b6\u51b5\u548c\u6027\u80fd","text":"<p>\u786e\u5b9a\u7528\u4e8e\u5b9a\u91cf\u548c\u5b9a\u6027\u5730\u8861\u91cf\u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd\u7684 KPI\u3002KPI \u6709\u52a9\u4e8e\u60a8\u8861\u91cf\u4e0e\u4e1a\u52a1\u76ee\u6807\u76f8\u5173\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u8fd0\u884c\u72b6\u51b5\u548c\u6027\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_33","title":"\u4f7f\u7528\u76d1\u63a7\u89e3\u51b3\u65b9\u6848\u4e86\u89e3\u6027\u80fd\u6700\u4e3a\u5173\u952e\u7684\u65b9\u9762","text":"<p>\u4e86\u89e3\u5e76\u786e\u5b9a\u5728\u54ea\u4e9b\u65b9\u9762\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd\uff0c\u4f1a\u5bf9\u6548\u7387\u6216\u5ba2\u6237\u4f53\u9a8c\u4ea7\u751f\u79ef\u6781\u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u62e5\u6709\u5927\u91cf\u5ba2\u6237\u4ea4\u4e92\u7684\u7f51\u7ad9\u4f1a\u56e0\u4e3a\u4f7f\u7528\u8fb9\u7f18\u670d\u52a1\u5728\u8ddd\u79bb\u5ba2\u6237\u66f4\u8fd1\u7684\u4f4d\u7f6e\u5411\u5ba2\u6237\u5206\u53d1\u5185\u5bb9\u800c\u53d7\u76ca\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_34","title":"\u5236\u5b9a\u6d41\u7a0b\u6765\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd","text":"<p>\u5236\u5b9a\u76f8\u5e94\u6d41\u7a0b\uff0c\u4ee5\u5728\u65b0\u7684\u670d\u52a1\u3001\u8bbe\u8ba1\u6a21\u5f0f\u3001\u8d44\u6e90\u7c7b\u578b\u548c\u914d\u7f6e\u63a8\u51fa\u540e\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u8bc4\u4f30\u3002\u4f8b\u5982\uff0c\u5bf9\u65b0\u5b9e\u4f8b\u4ea7\u54c1\u8fd0\u884c\u73b0\u6709\u6027\u80fd\u6d4b\u8bd5\uff0c\u4ee5\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u6709\u6f5c\u529b\u6539\u8fdb\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_35","title":"\u5b9a\u671f\u68c0\u67e5\u6307\u6807","text":"<p>\u4f5c\u4e3a\u4f8b\u884c\u7ef4\u62a4\u7684\u4e00\u90e8\u5206\u6216\u4e3a\u4e86\u5e94\u5bf9\u4e8b\u4ef6\u6216\u610f\u5916\u4e8b\u4ef6\uff0c\u8bf7\u68c0\u67e5\u6536\u96c6\u5230\u4e86\u54ea\u4e9b\u6307\u6807\u3002\u901a\u8fc7\u8fd9\u4e9b\u68c0\u67e5\uff0c\u627e\u51fa\u54ea\u4e9b\u6307\u6807\u5bf9\u4e8e\u89e3\u51b3\u95ee\u9898\u81f3\u5173\u91cd\u8981\uff0c\u4ee5\u53ca\u8ddf\u8e2a\u54ea\u4e9b\u5176\u4ed6\u6307\u6807\u4f1a\u6709\u52a9\u4e8e\u53d1\u73b0\u3001\u89e3\u51b3\u6216\u9884\u9632\u95ee\u9898\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_36","title":"\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u8d1f\u8f7d\u6d4b\u8bd5","text":"<p>\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u4ece\u800c\u9a8c\u8bc1\u5de5\u4f5c\u8d1f\u8f7d\u80fd\u5426\u5904\u7406\u751f\u4ea7\u8d1f\u8f7d\uff0c\u5e76\u627e\u51fa\u4efb\u4f55\u6027\u80fd\u74f6\u9888\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_37","title":"\u4f7f\u7528\u81ea\u52a8\u5316\u6280\u672f\u4e3b\u52a8\u4fee\u590d\u4e0e\u6027\u80fd\u76f8\u5173\u7684\u95ee\u9898","text":"<p>\u4f7f\u7528\u5173\u952e\u6027\u80fd\u6307\u6807\uff08KPI\uff09\u5e76\u7ed3\u5408\u76d1\u63a7\u548c\u63d0\u9192\u7cfb\u7edf\uff0c\u4e3b\u52a8\u89e3\u51b3\u4e0e\u6027\u80fd\u76f8\u5173\u7684\u95ee\u9898\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%80%A7%E8%83%BD%E6%95%88%E7%8E%87-Performance-Efficiency-202310-Summary/#_38","title":"\u8ba9\u5de5\u4f5c\u8d1f\u8f7d\u548c\u670d\u52a1\u4fdd\u6301\u6700\u65b0\u72b6\u6001","text":"<p>\u968f\u65f6\u4e86\u89e3\u65b0\u7684\u4e91\u670d\u52a1\u548c\u529f\u80fd\uff0c\u79ef\u6781\u91c7\u7528\u9ad8\u6548\u7684\u529f\u80fd\uff0c\u89e3\u51b3\u51fa\u73b0\u7684\u95ee\u9898\u5e76\u63d0\u9ad8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6574\u4f53\u6027\u80fd\u6548\u7387\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/","title":"WA-\u6210\u672c\u4f18\u5316-Cost-Optimization-202310-Summary","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_1","title":"\u8bbe\u8ba1\u539f\u5219","text":"<pre><code>collapse: close\ntitle:  \u5b9e\u65bd\u4e91\u8d22\u52a1\u7ba1\u7406\n\n\u4e3a\u4e86\u5728\u4e91\u4e2d\u5b9e\u73b0\u8d22\u52a1\u6210\u529f\u5e76\u52a0\u901f\u5b9e\u73b0\u4e1a\u52a1\u4ef7\u503c\uff0c\u60a8\u9700\u8981\u6295\u8d44\u4e8e\u4e91\u8d22\u52a1\u7ba1\u7406/\u6210\u672c\u4f18\u5316\u3002\u60a8\u7684\u7ec4\u7ec7\u9700\u8981\u6295\u5165\u65f6\u95f4\u548c\u8d44\u6e90\u6765\u6784\u5efa\u8fd9\u4e2a\u65b0\u7684\u6280\u672f\u548c\u4f7f\u7528\u7ba1\u7406\u9886\u57df\u7684\u80fd\u529b. \u4e0e\u60a8\u7684\u5b89\u5168\u6216\u5353\u8d8a\u8fd0\u8425\u80fd\u529b\u7c7b\u4f3c\uff0c\u60a8\u9700\u8981\u901a\u8fc7\u77e5\u8bc6\u6784\u5efa\u3001\u8ba1\u5212\u3001\u8d44\u6e90\u548c\u6d41\u7a0b\u6765\u6784\u5efa\u80fd\u529b\uff0c\u4ee5\u6210\u4e3a\u5177\u6709\u6210\u672c\u6548\u76ca\u7684\u7ec4\u7ec7\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u91c7\u7528\u6d88\u8d39\u6a21\u5f0f\n\n\u53ea\u4e3a\u4f60\u9700\u8981\u7684\u8ba1\u7b97\u8d44\u6e90\u4ed8\u8d39\uff0c\u5e76\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u589e\u52a0\u6216\u51cf\u5c11\u4f7f\u7528\u91cf\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7cbe\u7ec6\u7684\u9884\u6d4b\u3002\u4f8b\u5982\uff0c\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u901a\u5e38\u5728\u5de5\u4f5c\u5468\u5185\u6bcf\u5929\u53ea\u4f7f\u7528\u516b\u5c0f\u65f6. \u60a8\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u65f6\u505c\u6b62\u8fd9\u4e9b\u8d44\u6e90\uff0c\u4ece\u800c\u8282\u7701 75% \u7684\u6f5c\u5728\u6210\u672c\uff0840 \u5c0f\u65f6\u4e0e 168 \u5c0f\u65f6\uff09\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u8861\u91cf\u6574\u4f53\u6548\u7387\n\n\u8861\u91cf\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e1a\u52a1\u8f93\u51fa\u4ee5\u53ca\u4e0e\u4ea4\u4ed8\u5b83\u76f8\u5173\u7684\u6210\u672c\u3002\u4f7f\u7528\u6b64\u5ea6\u91cf\u6765\u4e86\u89e3\u60a8\u4ece\u589e\u52a0\u8f93\u51fa\u548c\u964d\u4f4e\u6210\u672c\u4e2d\u83b7\u5f97\u7684\u6536\u76ca\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u505c\u6b62\u5728\u65e0\u5dee\u522b\u7684\u7e41\u91cd\u5de5\u4f5c\u4e0a\u82b1\u94b1\n\nAWS \u8d1f\u8d23\u6570\u636e\u4e2d\u5fc3\u8fd0\u8425\u7684\u7e41\u91cd\u5de5\u4f5c\uff0c\u4f8b\u5982\u673a\u67b6\u3001\u5806\u53e0\u548c\u4e3a\u670d\u52a1\u5668\u4f9b\u7535\u3002\u5b83\u8fd8\u6d88\u9664\u4e86\u4f7f\u7528\u6258\u7ba1\u670d\u52a1\u7ba1\u7406\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd0\u8425\u8d1f\u62c5\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u60a8\u7684\u5ba2\u6237\u548c\u4e1a\u52a1\u9879\u76ee\uff0c\u800c\u4e0d\u662f IT \u57fa\u7840\u8bbe\u65bd\u3002\n</code></pre> <pre><code>collapse: close\ntitle:  \u5206\u6790\u548c\u5f52\u56e0\u652f\u51fa\n\n\u4e91\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u51c6\u786e\u8bc6\u522b\u7cfb\u7edf\u7684\u4f7f\u7528\u60c5\u51b5\u548c\u6210\u672c\uff0c\u7136\u540e\u5c06 IT \u6210\u672c\u900f\u660e\u5730\u5206\u914d\u7ed9\u5404\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u6240\u6709\u8005\u3002\u8fd9\u6709\u52a9\u4e8e\u8861\u91cf\u6295\u8d44\u56de\u62a5\u7387 (ROI)\uff0c\u5e76\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u6240\u6709\u8005\u63d0\u4f9b\u4f18\u5316\u7684\u673a\u4f1a\u4ed6\u4eec\u7684\u8d44\u6e90\u548c\u964d\u4f4e\u6210\u672c\u3002\n</code></pre>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_2","title":"\u95ee\u9898\u548c\u5b9a\u4e49","text":"<p>\u5b9e\u8df5\u4e91\u8d22\u52a1\u7ba1\u7406     COST 1 \u5982\u4f55\u5b9e\u65bd\u4e91\u8d22\u52a1\u7ba1\u7406\uff1f \u652f\u51fa\u548c\u4f7f\u7528\u610f\u8bc6     COST 2 \u60a8\u5982\u4f55\u7ba1\u7406\u4f7f\u7528\u60c5\u51b5\uff1f     COST 3 \u60a8\u5982\u4f55\u76d1\u63a7\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\uff1f     COST 4 \u60a8\u5982\u4f55\u505c\u7528\u8d44\u6e90\uff1f \u9ad8\u6027\u4ef7\u6bd4\u7684\u8d44\u6e90     COST 5 \u60a8\u5728\u9009\u62e9\u670d\u52a1\u65f6\u5982\u4f55\u8bc4\u4f30\u6210\u672c\uff1f     COST 6 \u5728\u9009\u62e9\u8d44\u6e90\u7c7b\u578b\u3001\u89c4\u6a21\u548c\u6570\u91cf\u65f6\uff0c\u5982\u4f55\u5b9e\u73b0\u6210\u672c\u76ee\u6807\uff1f     COST 7 \u60a8\u5982\u4f55\u4f7f\u7528\u5b9a\u4ef7\u6a21\u5f0f\u6765\u964d\u4f4e\u6210\u672c\uff1f     COST 8 \u60a8\u5982\u4f55\u89c4\u5212\u6570\u636e\u4f20\u8f93\u8d39\u7528\uff1f \u7ba1\u7406\u9700\u6c42\u548c\u4f9b\u5e94\u8d44\u6e90     COST 9 \u5982\u4f55\u7ba1\u7406\u9700\u6c42\u548c\u4f9b\u5e94\u8d44\u6e90\uff1f \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u8fdb\u884c\u4f18\u5316     COST 10 \u5982\u4f55\u8bc4\u4f30\u65b0\u670d\u52a1?     COST 11 \u5982\u4f55\u8bc4\u4f30\u5de5\u4f5c\u91cf\u6210\u672c\uff1f</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_3","title":"\u6700\u4f73\u5b9e\u8df5","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_4","title":"\u5b9e\u8df5\u4e91\u8d22\u52a1\u7ba1\u7406","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-1","title":"COST 1 \u5982\u4f55\u5b9e\u65bd\u4e91\u8d22\u52a1\u7ba1\u7406\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_5","title":"\u786e\u7acb\u6210\u672c\u4f18\u5316\u7684\u8d23\u4efb\u5f52\u5c5e\u6a21\u5f0f","text":"<p>\u521b\u5efa\u4e00\u4e2a\u56e2\u961f\uff08\u4e91\u4e1a\u52a1\u529e\u516c\u5ba4\u3001\u4e91\u5353\u8d8a\u4e2d\u5fc3\u6216 FinOps \u56e2\u961f\uff09\uff0c\u8d1f\u8d23\u5728\u6574\u4e2a\u7ec4\u7ec7\u5185\u5efa\u7acb\u5e76\u7ef4\u62a4\u6210\u672c\u610f\u8bc6\u3002\u6210\u672c\u4f18\u5316\u7684\u8d1f\u8d23\u4eba\u53ef\u4ee5\u662f\u4e86\u89e3\u6574\u4e2a\u7ec4\u7ec7\u548c\u4e91\u8d22\u52a1\u7684\u4e2a\u4eba\u6216\u56e2\u961f\uff08\u9700\u8981\u6765\u81ea\u8d22\u52a1\u3001\u6280\u672f\u548c\u4e1a\u52a1\u56e2\u961f\u7684\u4eba\u5458\uff09\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_6","title":"\u5728\u8d22\u52a1\u548c\u6280\u672f\u4e4b\u95f4\u5efa\u7acb\u5408\u4f5c\u5173\u7cfb","text":"<p>\u5728\u4e91\u4e4b\u65c5\u7684\u6240\u6709\u9636\u6bb5\uff0c\u90fd\u8ba9\u8d22\u52a1\u548c\u6280\u672f\u56e2\u961f\u53c2\u4e0e\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\u7684\u8ba8\u8bba\u3002\u56e2\u961f\u5b9a\u671f\u5f00\u4f1a\uff0c\u8ba8\u8bba\u7ec4\u7ec7\u76ee\u6807\u3001\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\u7684\u5f53\u524d\u72b6\u6001\u4ee5\u53ca\u8d22\u52a1\u548c\u4f1a\u8ba1\u5b9e\u52a1\u7b49\u4e3b\u9898\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_7","title":"\u5236\u5b9a\u4e91\u9884\u7b97\u548c\u9884\u6d4b\u6d41\u7a0b","text":"<p>\u8c03\u6574\u73b0\u6709\u7684\u7ec4\u7ec7\u9884\u7b97\u548c\u9884\u6d4b\u6d41\u7a0b\uff0c\u4f7f\u4e4b\u9002\u5e94\u4e91\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\u7684\u6613\u53d8\u7279\u6027\u3002\u6d41\u7a0b\u5fc5\u987b\u662f\u52a8\u6001\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u57fa\u4e8e\u8d8b\u52bf\u6216\u57fa\u4e8e\u4e1a\u52a1\u9a71\u52a8\u56e0\u7d20\u7684\u7b97\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e24\u8005\u7ed3\u5408\u4f7f\u7528\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_8","title":"\u5728\u7ec4\u7ec7\u6d41\u7a0b\u4e2d\u843d\u5b9e\u6210\u672c\u610f\u8bc6","text":"<p>\u5728\u5f71\u54cd\u4f7f\u7528\u91cf\u7684\u65b0\u6d41\u7a0b\u6216\u73b0\u6709\u6d41\u7a0b\u4e2d\u843d\u5b9e\u6210\u672c\u610f\u8bc6\u3001\u521b\u5efa\u6210\u672c\u900f\u660e\u5ea6\u548c\u6210\u672c\u95ee\u8d23\u5236\uff0c\u5e76\u5229\u7528\u73b0\u6709\u6d41\u7a0b\u63d0\u9ad8\u6210\u672c\u610f\u8bc6\u3002\u5728\u5458\u5de5\u57f9\u8bad\u4e2d\u8d2f\u5f7b\u6210\u672c\u610f\u8bc6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_9","title":"\u4e3b\u52a8\u76d1\u63a7\u6210\u672c","text":"<p>\u5229\u7528\u5de5\u5177\u548c\u63a7\u5236\u9762\u677f\u4e3b\u52a8\u76d1\u63a7\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\u3002\u5b9a\u671f\u7528\u5df2\u914d\u7f6e\u7684\u5de5\u5177\u6216\u5f00\u7bb1\u5373\u7528\u7684\u5de5\u5177\u5ba1\u6838\u6210\u672c\uff0c\u4e0d\u8981\u53ea\u5728\u6536\u5230\u901a\u77e5\u65f6\u624d\u67e5\u770b\u6210\u672c\u548c\u7c7b\u522b\u3002\u4e3b\u52a8\u76d1\u63a7\u548c\u5206\u6790\u6210\u672c\u6709\u52a9\u4e8e\u8bc6\u522b\u79ef\u6781\u8d8b\u52bf\uff0c\u4f7f\u60a8\u80fd\u591f\u5728\u6574\u4e2a\u7ec4\u7ec7\u4e2d\u63a8\u5e7f\u8fd9\u4e9b\u8d8b\u52bf\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_10","title":"\u53ca\u65f6\u4e86\u89e3\u65b0\u53d1\u5e03\u7684\u670d\u52a1","text":"<p>\u5b9a\u671f\u54a8\u8be2\u4e13\u5bb6\u6216 AWS \u5408\u4f5c\u4f19\u4f34\uff0c\u4ee5\u4fbf\u786e\u5b9a\u54ea\u4e9b\u670d\u52a1\u548c\u529f\u80fd\u7684\u6210\u672c\u66f4\u4f4e\u3002\u67e5\u770b AWS \u535a\u5ba2\u548c\u5176\u4ed6\u4fe1\u606f\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_11","title":"\u91cf\u5316\u901a\u8fc7\u6210\u672c\u4f18\u5316\u5b9e\u73b0\u7684\u4e1a\u52a1\u4ef7\u503c","text":"<p>\u901a\u8fc7\u91cf\u5316\u6210\u672c\u4f18\u5316\u5e26\u6765\u7684\u4e1a\u52a1\u4ef7\u503c\uff0c\u60a8\u53ef\u4ee5\u4e86\u89e3\u7ec4\u7ec7\u53d6\u5f97\u7684\u5168\u90e8\u6548\u76ca\u3002\u7531\u4e8e\u6210\u672c\u4f18\u5316\u662f\u4e00\u9879\u5fc5\u8981\u7684\u6295\u8d44\uff0c\u56e0\u6b64\u91cf\u5316\u4e1a\u52a1\u4ef7\u503c\u4e4b\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5411\u5229\u76ca\u76f8\u5173\u8005\u8bf4\u660e\u6295\u8d44\u56de\u62a5\u3002\u5982\u679c\u80fd\u591f\u91cf\u5316\u4e1a\u52a1\u4ef7\u503c\uff0c\u5728\u672a\u6765\u7684\u6210\u672c\u4f18\u5316\u6295\u8d44\u4e2d\uff0c\u5c31\u53ef\u4ee5\u4ece\u5229\u76ca\u76f8\u5173\u8005\u90a3\u91cc\u5f97\u5230\u66f4\u591a\u652f\u6301\uff0c\u5e76\u83b7\u5f97\u4e00\u4e2a\u6846\u67b6\u6765\u8861\u91cf\u7ec4\u7ec7\u6210\u672c\u4f18\u5316\u6d3b\u52a8\u7684\u6210\u679c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_12","title":"\u62a5\u544a\u548c\u901a\u77e5\u6210\u672c\u4f18\u5316","text":"<p>\u8bbe\u7f6e\u4e91\u9884\u7b97\u5e76\u914d\u7f6e\u68c0\u6d4b\u5f02\u5e38\u4f7f\u7528\u60c5\u51b5\u7684\u673a\u5236\u3002\u914d\u7f6e\u76f8\u5173\u5de5\u5177\uff0c\u6839\u636e\u9884\u5b9a\u4e49\u76ee\u6807\u53d1\u51fa\u6210\u672c\u548c\u4f7f\u7528\u91cf\u8b66\u62a5\uff0c\u5e76\u5728\u4efb\u4f55\u4f7f\u7528\u91cf\u8d85\u8fc7\u8fd9\u4e9b\u76ee\u6807\u65f6\u63a5\u6536\u901a\u77e5\u3002\u5b9a\u671f\u53ec\u5f00\u4f1a\u8bae\uff0c\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\u6548\u76ca\uff0c\u63d0\u9ad8\u6210\u672c\u610f\u8bc6\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_13","title":"\u5efa\u7acb\u5bf9\u6210\u672c\u654f\u611f\u7684\u6587\u5316","text":"<p>\u5728\u6574\u4e2a\u7ec4\u7ec7\u4e2d\u5b9e\u65bd\u66f4\u6539\u6216\u8ba1\u5212\uff0c\u4ee5\u5efa\u7acb\u5bf9\u6210\u672c\u654f\u611f\u7684\u6587\u5316\u3002\u5efa\u8bae\u5148\u4ece\u5c0f\u8303\u56f4\u7740\u624b\uff0c\u7136\u540e\u968f\u7740\u80fd\u529b\u7684\u589e\u5f3a\u548c\u7ec4\u7ec7\u5bf9\u4e91\u7684\u4f7f\u7528\u7684\u589e\u52a0\uff0c\u5728\u66f4\u5e7f\u6cdb\u7684\u8303\u56f4\u5b9e\u65bd\u66f4\u5927\u578b\u7684\u8ba1\u5212\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_14","title":"\u652f\u51fa\u548c\u4f7f\u7528\u610f\u8bc6","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-2","title":"COST 2 \u60a8\u5982\u4f55\u7ba1\u7406\u4f7f\u7528\u60c5\u51b5\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_15","title":"\u6839\u636e\u7ec4\u7ec7\u7684\u8981\u6c42\u5236\u5b9a\u5404\u79cd\u7b56\u7565","text":"<p>\u5236\u5b9a\u7b56\u7565\uff0c\u786e\u5b9a\u8d35\u7ec4\u7ec7\u5e94\u8be5\u5982\u4f55\u7ba1\u7406\u8d44\u6e90\uff0c\u5e76\u5b9a\u671f\u6267\u884c\u68c0\u67e5\u3002\u7b56\u7565\u5e94\u8be5\u6db5\u76d6\u8d44\u6e90\u548c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\uff0c\u5305\u62ec\u5728\u8d44\u6e90\u751f\u547d\u5468\u671f\u5185\u7684\u521b\u5efa\u3001\u4fee\u6539\u548c\u505c\u7528\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_16","title":"\u5236\u5b9a\u65b9\u5411\u6027\u76ee\u6807\u548c\u6267\u884c\u6027\u76ee\u6807","text":"<p>\u5b9e\u65bd\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\u548c\u4f7f\u7528\u91cf\u65b9\u5411\u6027\u76ee\u6807\u548c\u6267\u884c\u6027\u76ee\u6807\u3002\u65b9\u5411\u6027\u76ee\u6807\u4e3a\u7ec4\u7ec7\u5728\u9884\u671f\u7ed3\u679c\u65b9\u9762\u6307\u660e\u4e86\u65b9\u5411\uff0c\u800c\u6267\u884c\u6027\u76ee\u6807\u5219\u63d0\u4f9b\u4e86\u8981\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u5b9e\u73b0\u7684\u5177\u4f53\u53ef\u8861\u91cf\u7ed3\u679c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_17","title":"\u5b9e\u65bd\u8d26\u6237\u7ed3\u6784","text":"<p>\u5b9e\u65bd\u4e0e\u60a8\u7684\u7ec4\u7ec7\u5bf9\u5e94\u7684\u8d26\u6237\u7ed3\u6784\u3002\u8fd9\u6709\u52a9\u4e8e\u5728\u6574\u4e2a\u7ec4\u7ec7\u5185\u5206\u644a\u548c\u7ba1\u7406\u6210\u672c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_18","title":"\u5b9e\u65bd\u6210\u672c\u63a7\u5236","text":"<p>\u6839\u636e\u7ec4\u7ec7\u7b56\u7565\u4ee5\u53ca\u5b9a\u4e49\u7684\u7ec4\u548c\u89d2\u8272\u6765\u5b9e\u65bd\u63a7\u5236\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6210\u672c\u53ea\u6839\u636e\u7ec4\u7ec7\u8981\u6c42\u7684\u89c4\u5b9a\u4ea7\u751f\uff0c\u4f8b\u5982\uff0c\u63a7\u5236\u7528\u6237\u5bf9\u533a\u57df\u6216\u8d44\u6e90\u7c7b\u578b\u7684\u8bbf\u95ee\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_19","title":"\u5b9e\u65bd\u7ec4\u548c\u89d2\u8272","text":"<p>\u5b9e\u65bd\u4e0e\u7b56\u7565\u4e00\u81f4\u7684\u7ec4\u548c\u89d2\u8272\uff0c\u63a7\u5236\u6bcf\u4e2a\u7ec4\u4e2d\u8c01\u53ef\u4ee5\u521b\u5efa\u3001\u4fee\u6539\u6216\u505c\u7528\u5b9e\u4f8b\u548c\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u5b9e\u65bd\u5f00\u53d1\u7ec4\u3001\u6d4b\u8bd5\u7ec4\u548c\u751f\u4ea7\u7ec4\u3002\u8fd9\u9002\u7528\u4e8e AWS \u670d\u52a1\u548c\u7b2c\u4e09\u65b9\u89e3\u51b3\u65b9\u6848\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_20","title":"\u8ddf\u8e2a\u9879\u76ee\u751f\u547d\u5468\u671f","text":"<p>\u8ddf\u8e2a\u3001\u8861\u91cf\u5e76\u5ba1\u8ba1\u9879\u76ee\u3001\u56e2\u961f\u548c\u73af\u5883\u7684\u751f\u547d\u5468\u671f\uff0c\u4ee5\u907f\u514d\u4f7f\u7528\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u5e76\u4e3a\u6b64\u4ed8\u8d39\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-3","title":"COST 3 \u60a8\u5982\u4f55\u76d1\u63a7\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_21","title":"\u914d\u7f6e\u8be6\u7ec6\u4fe1\u606f\u6e90","text":"<p>\u6309\u5c0f\u65f6\u7c92\u5ea6\u914d\u7f6e\u6210\u672c\u7ba1\u7406\u548c\u62a5\u544a\u5de5\u5177\uff0c\u4ee5\u63d0\u4f9b\u8be6\u7ec6\u7684\u6210\u672c\u548c\u4f7f\u7528\u91cf\u4fe1\u606f\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u6df1\u5165\u7684\u5206\u6790\u548c\u900f\u660e\u5ea6\u3002\u914d\u7f6e\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4e3a\u4ea4\u4ed8\u7684\u6bcf\u4e2a\u4e1a\u52a1\u6210\u679c\u751f\u6210\u6216\u63d0\u4f9b\u65e5\u5fd7\u6761\u76ee\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_22","title":"\u786e\u5b9a\u6210\u672c\u5f52\u5c5e\u7c7b\u522b","text":"<p>\u786e\u5b9a\u7ec4\u7ec7\u7c7b\u522b\uff0c\u4f8b\u5982\u4e1a\u52a1\u5355\u4f4d\u3001\u90e8\u95e8\u6216\u9879\u76ee\uff0c\u8fd9\u4e9b\u7c7b\u522b\u53ef\u7528\u4e8e\u5728\u7ec4\u7ec7\u4e2d\u6309\u7167\u5185\u90e8\u4f7f\u7528\u5b9e\u4f53\u5206\u914d\u6210\u672c\u3002\u5229\u7528\u8fd9\u4e9b\u7c7b\u522b\u6765\u6267\u884c\u652f\u51fa\u95ee\u8d23\u5236\uff0c\u6811\u7acb\u6210\u672c\u610f\u8bc6\uff0c\u5e76\u63a8\u52a8\u9ad8\u6548\u7684\u4f7f\u7528\u884c\u4e3a\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_23","title":"\u5efa\u7acb\u7ec4\u7ec7\u6307\u6807","text":"<p>\u5efa\u7acb\u6b64\u5de5\u4f5c\u8d1f\u8f7d\u9700\u8981\u7684\u7ec4\u7ec7\u6307\u6807\u3002\u751f\u6210\u7684\u5ba2\u6237\u62a5\u544a\u6216\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7684 Web \u9875\u9762\u90fd\u5c5e\u4e8e\u5de5\u4f5c\u8d1f\u8f7d\u6307\u6807\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_24","title":"\u914d\u7f6e\u8d26\u5355\u548c\u6210\u672c\u7ba1\u7406\u5de5\u5177","text":"<p>\u6839\u636e\u60a8\u7684\u7ec4\u7ec7\u7b56\u7565\u914d\u7f6e\u6210\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u4ee5\u7ba1\u7406\u548c\u4f18\u5316\u4e91\u652f\u51fa\u3002\u8fd9\u5305\u62ec\u7528\u4e8e\u7ec4\u7ec7\u548c\u8ddf\u8e2a\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\u6570\u636e\u7684\u670d\u52a1\u3001\u5de5\u5177\u548c\u8d44\u6e90\uff0c\u901a\u8fc7\u5408\u5e76\u8ba1\u8d39\u548c\u8bbf\u95ee\u6743\u9650\u589e\u5f3a\u63a7\u5236\uff0c\u901a\u8fc7\u9884\u7b97\u548c\u9884\u6d4b\u6539\u8fdb\u89c4\u5212\uff0c\u63a5\u6536\u901a\u77e5\u6216\u63d0\u9192\uff0c\u5e76\u901a\u8fc7\u8d44\u6e90\u548c\u5b9a\u4ef7\u4f18\u5316\u8fdb\u4e00\u6b65\u964d\u4f4e\u6210\u672c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_25","title":"\u5728\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\u4e2d\u6dfb\u52a0\u7ec4\u7ec7\u4fe1\u606f","text":"<p>\u6839\u636e\u60a8\u7684\u7ec4\u7ec7\u3001\u5de5\u4f5c\u8d1f\u8f7d\u5c5e\u6027\u548c\u6210\u672c\u5206\u914d\u7c7b\u522b\u5b9a\u4e49\u6807\u8bb0\u65b9\u6848\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u6210\u672c\u7ba1\u7406\u5de5\u5177\u4e2d\u7b5b\u9009\u548c\u641c\u7d22\u8d44\u6e90\u6216\u76d1\u63a7\u6210\u672c\u548c\u4f7f\u7528\u60c5\u51b5\u3002\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u76ee\u7684\u3001\u56e2\u961f\u3001\u73af\u5883\u6216\u4e0e\u60a8\u7684\u4e1a\u52a1\u76f8\u5173\u7684\u5176\u4ed6\u6807\u51c6\uff0c\u5728\u6240\u6709\u8d44\u6e90\u4e2d\u5b9e\u65bd\u4e00\u81f4\u7684\u6807\u8bb0\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_26","title":"\u6839\u636e\u5de5\u4f5c\u8d1f\u8f7d\u6307\u6807\u5206\u914d\u6210\u672c","text":"<p>\u6839\u636e\u4f7f\u7528\u91cf\u6307\u6807\u6216\u4e1a\u52a1\u6210\u679c\u5206\u914d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\uff0c\u4ee5\u4fbf\u8861\u91cf\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\u6548\u76ca\u3002\u5b9e\u65bd\u4e00\u4e2a\u6d41\u7a0b\uff0c\u4f7f\u7528\u5206\u6790\u670d\u52a1\u6765\u5206\u6790\u6210\u672c\u548c\u4f7f\u7528\u91cf\u6570\u636e\uff0c\u4ee5\u4fbf\u6df1\u5165\u4e86\u89e3\u6210\u672c\u56e0\u7d20\u548c\u9000\u6b3e\u529f\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-4","title":"COST 4 \u60a8\u5982\u4f55\u505c\u7528\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_27","title":"\u5728\u8d44\u6e90\u751f\u547d\u5468\u671f\u5185\u8ddf\u8e2a\u8d44\u6e90","text":"<p>\u5236\u5b9a\u548c\u5b9e\u65bd\u4e00\u79cd\u65b9\u6cd5\uff0c\u5728\u8d44\u6e90\u751f\u547d\u5468\u671f\u5185\u8ddf\u8e2a\u8d44\u6e90\u53ca\u5176\u4e0e\u7cfb\u7edf\u7684\u5173\u8054\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6807\u8bb0\u6765\u6807\u8bc6\u8d44\u6e90\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6216\u529f\u80fd\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_28","title":"\u5b9e\u65bd\u505c\u7528\u6d41\u7a0b","text":"<p>\u5b9e\u65bd\u4e00\u4e2a\u6d41\u7a0b\u6765\u786e\u5b9a\u548c\u505c\u7528\u672a\u4f7f\u7528\u7684\u8d44\u6e90\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_29","title":"\u505c\u7528\u8d44\u6e90","text":"<p>\u505c\u7528\u7531\u5b9a\u671f\u5ba1\u8ba1\u6216\u4f7f\u7528\u60c5\u51b5\u53d1\u751f\u53d8\u5316\u7b49\u4e8b\u4ef6\u89e6\u53d1\u7684\u8d44\u6e90\u3002\u505c\u7528\u901a\u5e38\u5b9a\u671f\u6267\u884c\uff0c\u53ef\u4ee5\u624b\u52a8\u505c\u7528\uff0c\u4e5f\u53ef\u4ee5\u81ea\u52a8\u505c\u7528\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_30","title":"\u5b9e\u65bd\u6570\u636e\u7559\u5b58\u7b56\u7565","text":"<p>\u5728\u652f\u6301\u7684\u8d44\u6e90\u4e0a\u5b9a\u4e49\u6570\u636e\u7559\u5b58\u7b56\u7565\uff0c\u4ee5\u6839\u636e\u60a8\u7ec4\u7ec7\u7684\u8981\u6c42\u5904\u7406\u5bf9\u8c61\u7684\u5220\u9664\u4e8b\u5b9c\u3002\u8bc6\u522b\u5e76\u5220\u9664\u975e\u5fc5\u8981\u7684\u6216\u4e0d\u518d\u9700\u8981\u7684\u5b64\u7acb\u8d44\u6e90\u548c\u5bf9\u8c61\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_31","title":"\u81ea\u52a8\u505c\u7528\u8d44\u6e90","text":"<p>\u8bbe\u8ba1\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4f7f\u5176\u5728\u60a8\u53d1\u73b0\u5e76\u505c\u7528\u975e\u5173\u952e\u8d44\u6e90\u3001\u4e0d\u9700\u8981\u7684\u8d44\u6e90\u6216\u4f7f\u7528\u7387\u4f4e\u7684\u8d44\u6e90\u65f6\u59a5\u5584\u5904\u7406\u8d44\u6e90\u7684\u7ec8\u6b62\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_32","title":"\u9ad8\u6027\u4ef7\u6bd4\u7684\u8d44\u6e90","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-5","title":"COST 5 \u60a8\u5728\u9009\u62e9\u670d\u52a1\u65f6\u5982\u4f55\u8bc4\u4f30\u6210\u672c\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_33","title":"\u786e\u5b9a\u7ec4\u7ec7\u5bf9\u6210\u672c\u7684\u8981\u6c42","text":"<p>\u4e0e\u56e2\u961f\u6210\u5458\u5408\u4f5c\uff0c\u4e3a\u6b64\u5de5\u4f5c\u8d1f\u8f7d\u786e\u5b9a\u6210\u672c\u4f18\u5316\u4e0e\u5176\u4ed6\u652f\u67f1\uff08\u4f8b\u5982\u6027\u80fd\u548c\u53ef\u9760\u6027\uff09\u4e4b\u95f4\u7684\u5e73\u8861\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_34","title":"\u5206\u6790\u6b64\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6240\u6709\u7ec4\u4ef6","text":"<p>\u786e\u8ba4\u5df2\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6bcf\u4e2a\u7ec4\u4ef6\uff0c\u65e0\u8bba\u5f53\u524d\u5927\u5c0f\u6216\u5f53\u524d\u6210\u672c\u5982\u4f55\u3002\u5ba1\u6838\u5de5\u4f5c\u5e94\u8be5\u4f53\u73b0\u51fa\u53ef\u80fd\u5e26\u6765\u7684\u597d\u5904\uff0c\u4f8b\u5982\u5f53\u524d\u6210\u672c\u548c\u9884\u671f\u6210\u672c\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_35","title":"\u5bf9\u6bcf\u4e2a\u7ec4\u4ef6\u8fdb\u884c\u5f7b\u5e95\u5206\u6790","text":"<p>\u5206\u6790\u7ec4\u7ec7\u4e3a\u6bcf\u4e2a\u7ec4\u4ef6\u4ed8\u51fa\u7684\u603b\u4f53\u6210\u672c\u3002\u901a\u8fc7\u8003\u8651\u8fd0\u8425\u548c\u7ba1\u7406\u6210\u672c\uff08\u5c24\u5176\u662f\u5728\u4f7f\u7528\u4e91\u63d0\u4f9b\u5546\u63d0\u4f9b\u7684\u6258\u7ba1\u670d\u52a1\u65f6\uff09\u6765\u8ba1\u7b97\u603b\u62e5\u6709\u6210\u672c\u3002\u5ba1\u6838\u5de5\u4f5c\u91cf\u5e94\u8be5\u4f53\u73b0\u53ef\u80fd\u5e26\u6765\u7684\u597d\u5904\uff08\u4f8b\u5982\u5206\u6790\u65f6\u95f4\u4e0e\u7ec4\u4ef6\u6210\u672c\u6210\u6b63\u6bd4\uff09\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_36","title":"\u9009\u62e9\u6b64\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7ec4\u4ef6\uff0c\u4ee5\u4fbf\u6839\u636e\u7ec4\u7ec7\u7684\u4f18\u5148\u4e8b\u9879\u4f18\u5316\u6210\u672c","text":"<p>\u4e3a\u5de5\u4f5c\u8d1f\u8f7d\u9009\u62e9\u6240\u6709\u7ec4\u4ef6\u65f6\u8003\u8651\u6210\u672c\u56e0\u7d20\u3002\u8fd9\u5305\u62ec\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u6258\u7ba1\u670d\u52a1\u6216\u65e0\u670d\u52a1\u5668\u670d\u52a1\u3001\u5bb9\u5668\u6216\u4e8b\u4ef6\u9a71\u52a8\u578b\u67b6\u6784\uff0c\u4ee5\u964d\u4f4e\u6574\u4f53\u6210\u672c\u3002\u4f7f\u7528\u5f00\u6e90\u8f6f\u4ef6\u3001\u6ca1\u6709\u8bb8\u53ef\u8bc1\u8d39\u7528\u7684\u8f6f\u4ef6\u6216\u66ff\u4ee3\u65b9\u6848\u6765\u5c3d\u53ef\u80fd\u51cf\u5c11\u8bb8\u53ef\u8bc1\u6210\u672c\uff0c\u4ece\u800c\u51cf\u5c11\u5f00\u652f\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_37","title":"\u5bf9\u4e0d\u540c\u65f6\u95f4\u7684\u4e0d\u540c\u4f7f\u7528\u60c5\u51b5\u6267\u884c\u6210\u672c\u5206\u6790","text":"<p>\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u80fd\u4f1a\u968f\u65f6\u95f4\u800c\u53d8\u5316\u3002\u67d0\u4e9b\u670d\u52a1\u6216\u529f\u80fd\u5728\u4e0d\u540c\u7684\u4f7f\u7528\u6c34\u5e73\u4e0b\u66f4\u5177\u6210\u672c\u6548\u76ca\u3002\u901a\u8fc7\u6839\u636e\u6bcf\u4e2a\u7ec4\u4ef6\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u9884\u671f\u4f7f\u7528\u60c5\u51b5\u6267\u884c\u5206\u6790\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u53ef\u5728\u5176\u751f\u547d\u5468\u671f\u5185\u4fdd\u6301\u6210\u672c\u6548\u76ca\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_38","title":"\u9009\u62e9\u5177\u6709\u7ecf\u6d4e\u5b9e\u60e0\u7684\u8bb8\u53ef\u7684\u8f6f\u4ef6","text":"<p>\u5f00\u6e90\u8f6f\u4ef6\u65e0\u9700\u8f6f\u4ef6\u8bb8\u53ef\u6210\u672c\uff0c\u4ece\u800c\u5927\u5927\u8282\u7701\u4e86\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6210\u672c\u3002\u5982\u679c\u9700\u8981\u8bb8\u53ef\u8f6f\u4ef6\uff0c\u5e94\u907f\u514d\u4f7f\u7528\u7ed1\u5b9a\u5230\u4efb\u610f\u5c5e\u6027\uff08\u5982 CPU\uff09\u7684\u8bb8\u53ef\u8bc1\uff0c\u800c\u5e94\u4f7f\u7528\u7ed1\u5b9a\u5230\u8f93\u51fa\u6216\u7ed3\u679c\u7684\u8bb8\u53ef\u8bc1\u3002\u8fd9\u4e9b\u8bb8\u53ef\u8bc1\u7684\u6210\u672c\u4e0e\u6240\u63d0\u4f9b\u7684\u6548\u76ca\u66f4\u4e3a\u76f8\u5f53\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-6","title":"COST 6 \u5728\u9009\u62e9\u8d44\u6e90\u7c7b\u578b\u3001\u89c4\u6a21\u548c\u6570\u91cf\u65f6\uff0c\u5982\u4f55\u5b9e\u73b0\u6210\u672c\u76ee\u6807\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_39","title":"\u6267\u884c\u6210\u672c\u5efa\u6a21","text":"<p>\u786e\u5b9a\u7ec4\u7ec7\u8981\u6c42\uff08\u5982\u4e1a\u52a1\u9700\u6c42\u548c\u73b0\u6709\u627f\u8bfa\uff09\uff0c\u5e76\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u53ca\u5176\u6bcf\u4e2a\u7ec4\u4ef6\u8fdb\u884c\u6210\u672c\u5efa\u6a21\uff08\u603b\u4f53\u6210\u672c\uff09\u3002\u5bf9\u4e0d\u540c\u9884\u8ba1\u8d1f\u8f7d\u4e0b\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6267\u884c\u57fa\u51c6\u6d4b\u8bd5\u6d3b\u52a8\uff0c\u5e76\u6bd4\u8f83\u6210\u672c\u3002\u5efa\u6a21\u5de5\u4f5c\u91cf\u5e94\u8be5\u4f53\u73b0\u53ef\u80fd\u5e26\u6765\u7684\u597d\u5904\uff0c\u4f8b\u5982\u82b1\u8d39\u7684\u65f6\u95f4\u4e0e\u7ec4\u4ef6\u6210\u672c\u6210\u6b63\u6bd4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_40","title":"\u6839\u636e\u6570\u636e\u9009\u62e9\u8d44\u6e90\u7c7b\u578b\u3001\u89c4\u6a21\u548c\u6570\u91cf","text":"<p>\u6839\u636e\u5de5\u4f5c\u8d1f\u8f7d\u548c\u8d44\u6e90\u7279\u5f81\u7684\u76f8\u5173\u6570\u636e\u9009\u62e9\u8d44\u6e90\u89c4\u6a21\u6216\u7c7b\u578b\u3002\u4f8b\u5982\u8ba1\u7b97\u3001\u5185\u5b58\u3001\u541e\u5410\u91cf\u6216\u5199\u5165\u5bc6\u96c6\u578b\u8d44\u6e90\u3002\u901a\u5e38\u4f7f\u7528\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e0a\u4e00\u4e2a\u7248\u672c\uff08\u672c\u5730\u7248\u672c\uff09\u3001\u6587\u6863\u6216\u5173\u4e8e\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5176\u4ed6\u4fe1\u606f\u6e90\u8fdb\u884c\u9009\u62e9\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_41","title":"\u6839\u636e\u6307\u6807\u81ea\u52a8\u9009\u62e9\u8d44\u6e90\u7c7b\u578b\u3001\u89c4\u6a21\u548c\u6570\u91cf","text":"<p>\u4f7f\u7528\u5f53\u524d\u8fd0\u884c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6307\u6807\u9009\u62e9\u6b63\u786e\u7684\u89c4\u6a21\u548c\u7c7b\u578b\uff0c\u4ece\u800c\u4f18\u5316\u6210\u672c\u3002\u4e3a\u8ba1\u7b97\u3001\u5b58\u50a8\u3001\u6570\u636e\u548c\u7f51\u7edc\u670d\u52a1\u9002\u5f53\u5730\u9884\u7f6e\u541e\u5410\u91cf\u3001\u89c4\u6a21\u548c\u5b58\u50a8\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u6269\u5c55\u7b49\u53cd\u9988\u73af\u8def\u8fdb\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u4ee3\u7801\u6765\u5b9e\u73b0\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-7","title":"COST 7 \u60a8\u5982\u4f55\u4f7f\u7528\u5b9a\u4ef7\u6a21\u5f0f\u6765\u964d\u4f4e\u6210\u672c\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_42","title":"\u6267\u884c\u5b9a\u4ef7\u6a21\u5f0f\u5206\u6790","text":"<p>\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u3002\u786e\u5b9a\u7ec4\u4ef6\u548c\u8d44\u6e90\u662f\u957f\u65f6\u95f4\u8fd0\u884c\uff08\u4eab\u53d7\u627f\u8bfa\u6298\u6263\uff09\uff0c\u8fd8\u662f\u77ed\u65f6\u95f4\u52a8\u6001\u8fd0\u884c\uff08\u91c7\u7528 Spot \u6216\u6309\u9700\u5b9a\u4ef7\uff09\u3002\u4f7f\u7528\u6210\u672c\u7ba1\u7406\u5de5\u5177\u4e2d\u7684\u5efa\u8bae\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u6267\u884c\u5206\u6790\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u5efa\u8bae\u5e94\u7528\u4e1a\u52a1\u89c4\u5219\u4ee5\u5b9e\u73b0\u9ad8\u56de\u62a5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_43","title":"\u6839\u636e\u6210\u672c\u9009\u62e9\u533a\u57df","text":"<p>\u8d44\u6e90\u5b9a\u4ef7\u5728\u6bcf\u4e2a\u533a\u57df\u4e2d\u53ef\u80fd\u5404\u4e0d\u76f8\u540c\u3002\u786e\u5b9a\u533a\u57df\u6210\u672c\u5dee\u5f02\uff0c\u4ec5\u5f53\u9700\u8981\u6ee1\u8db3\u5ef6\u8fdf\u3001\u6570\u636e\u9a7b\u7559\u548c\u6570\u636e\u4e3b\u6743\u8981\u6c42\u65f6\uff0c\u624d\u5728\u6210\u672c\u8f83\u9ad8\u7684\u533a\u57df\u90e8\u7f72\u3002\u8003\u8651\u533a\u57df\u6210\u672c\u6709\u52a9\u4e8e\u60a8\u4e3a\u6b64\u5de5\u4f5c\u8d1f\u8f7d\u652f\u4ed8\u6700\u4f4e\u7684\u603b\u4f53\u8d39\u7528\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_44","title":"\u9009\u62e9\u5177\u6709\u7ecf\u6d4e\u5b9e\u60e0\u7684\u6761\u6b3e\u7684\u7b2c\u4e09\u65b9\u534f\u8bae","text":"<p>\u7ecf\u6d4e\u5b9e\u60e0\u7684\u534f\u8bae\u548c\u6761\u6b3e\u53ef\u786e\u4fdd\u8fd9\u4e9b\u670d\u52a1\u7684\u6210\u672c\u4e0e\u6240\u63d0\u4f9b\u7684\u6548\u76ca\u76f8\u79f0\u3002\u9009\u62e9\u4e0e\u53ef\u4e3a\u7ec4\u7ec7\u5e26\u6765\u989d\u5916\u6548\u76ca\u76f8\u79f0\u7684\u534f\u8bae\u548c\u5b9a\u4ef7\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_45","title":"\u9488\u5bf9\u6b64\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6240\u6709\u7ec4\u4ef6\u5b9e\u65bd\u5b9a\u4ef7\u6a21\u5f0f","text":"<p>\u6c38\u4e45\u8fd0\u884c\u7684\u8d44\u6e90\u5e94\u5229\u7528\u9884\u7559\u5bb9\u91cf\uff0c\u5982\u8282\u7701\u8ba1\u5212\u6216\u9884\u7559\u5b9e\u4f8b\u3002\u77ed\u671f\u5bb9\u91cf\u914d\u7f6e\u4e3a\u4f7f\u7528\u7ade\u4ef7\u578b\u5b9e\u4f8b\u6216\u7ade\u4ef7\u578b\u5b9e\u4f8b\u96c6\u3002\u6309\u9700\u578b\u5b9e\u4f8b\u4ec5\u7528\u4e8e\u65e0\u6cd5\u4e2d\u65ad\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u6ca1\u6709\u957f\u5230\u53ef\u4ee5\u4f7f\u7528\u9884\u7559\u5bb9\u91cf\u7684\u77ed\u671f\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u65f6\u95f4\u4e3a\u4f7f\u7528\u65f6\u671f\u7684 25% \u5230 75%\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u8d44\u6e90\u7c7b\u578b\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_46","title":"\u5728\u7ba1\u7406\u8d26\u6237\u7ea7\u522b\u6267\u884c\u5b9a\u4ef7\u6a21\u5f0f\u5206\u6790","text":"<p>\u68c0\u67e5\u8d26\u5355\u548c\u6210\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u5e76\u67e5\u770b\u627f\u8bfa\u548c\u9884\u7559\u7684\u5efa\u8bae\u6298\u6263\uff0c\u4ee5\u4fbf\u5728\u7ba1\u7406\u8d26\u6237\u7ea7\u522b\u6267\u884c\u5b9a\u671f\u5206\u6790\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-8","title":"COST 8 \u60a8\u5982\u4f55\u89c4\u5212\u6570\u636e\u4f20\u8f93\u8d39\u7528\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_47","title":"\u6267\u884c\u6570\u636e\u4f20\u8f93\u5efa\u6a21","text":"<p>\u6536\u96c6\u7ec4\u7ec7\u8981\u6c42\uff0c\u5e76\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u53ca\u5176\u6bcf\u4e2a\u7ec4\u4ef6\u6267\u884c\u6570\u636e\u4f20\u8f93\u5efa\u6a21\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u5b9a\u6ee1\u8db3\u5f53\u524d\u6570\u636e\u4f20\u8f93\u8981\u6c42\u7684\u6700\u4f4e\u6210\u672c\u70b9\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_48","title":"\u9009\u62e9\u7ec4\u4ef6\u4ee5\u4fbf\u4f18\u5316\u6570\u636e\u4f20\u8f93\u6210\u672c","text":"<p>\u9009\u62e9\u6240\u6709\u7ec4\u4ef6\u7136\u540e\u8bbe\u8ba1\u67b6\u6784\uff0c\u4ee5\u4fbf\u964d\u4f4e\u6570\u636e\u4f20\u8f93\u6210\u672c\u3002\u5176\u4e2d\u5305\u62ec\u4f7f\u7528\u5e7f\u57df\u7f51\uff08WAN\uff09\u4f18\u5316\u548c\u591a\u53ef\u7528\u533a\uff08AZ\uff09\u914d\u7f6e\u7b49\u7ec4\u4ef6</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_49","title":"\u5b9e\u65bd\u670d\u52a1\u4ee5\u4fbf\u964d\u4f4e\u6570\u636e\u4f20\u8f93\u6210\u672c","text":"<p>\u5b9e\u65bd\u670d\u52a1\u4ee5\u51cf\u5c11\u6570\u636e\u4f20\u8f93\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u8fb9\u7f18\u7ad9\u70b9\u6216\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\u5411\u6700\u7ec8\u7528\u6237\u4ea4\u4ed8\u5185\u5bb9\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u6216\u6570\u636e\u5e93\u524d\u6784\u5efa\u7f13\u5b58\u5c42\uff0c\u5e76\u4f7f\u7528\u4e13\u7528\u7f51\u7edc\u8fde\u63a5\u800c\u4e0d\u662f VPN \u8fde\u63a5\u5230\u4e91\u7aef\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_50","title":"\u7ba1\u7406\u9700\u6c42\u548c\u4f9b\u5e94\u8d44\u6e90","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-9","title":"COST 9 \u5982\u4f55\u7ba1\u7406\u9700\u6c42\u548c\u4f9b\u5e94\u8d44\u6e90\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_51","title":"\u5bf9\u5de5\u4f5c\u8d1f\u8f7d\u9700\u6c42\u6267\u884c\u5206\u6790","text":"<p>\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d\u9700\u6c42\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u786e\u8ba4\u5206\u6790\u6db5\u76d6\u5b63\u8282\u6027\u8d8b\u52bf\uff0c\u5e76\u51c6\u786e\u53cd\u6620\u6574\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u751f\u547d\u5468\u671f\u5185\u7684\u8fd0\u884c\u6761\u4ef6\u3002\u5206\u6790\u5de5\u4f5c\u5e94\u8be5\u4f53\u73b0\u51fa\u53ef\u80fd\u5e26\u6765\u7684\u597d\u5904\uff0c\u4f8b\u5982\u82b1\u8d39\u7684\u65f6\u95f4\u4e0e\u5de5\u4f5c\u8d1f\u8f7d\u6210\u672c\u6210\u6b63\u6bd4\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_52","title":"\u5b9e\u65bd\u7f13\u51b2\u533a\u6216\u9650\u6d41\u6765\u7ba1\u7406\u9700\u6c42","text":"<p>\u7f13\u51b2\u548c\u9650\u6d41\u53ef\u4fee\u6539\u5de5\u4f5c\u8d1f\u8f7d\u9700\u6c42\uff0c\u4ece\u800c\u907f\u514d\u51fa\u73b0\u4efb\u4f55\u5cf0\u503c\u60c5\u5f62\u3002\u5728\u5ba2\u6237\u7aef\u6267\u884c\u91cd\u8bd5\u65f6\u5b9e\u65bd\u9650\u6d41\u3002\u5b9e\u65bd\u7f13\u51b2\u4ee5\u5b58\u50a8\u8bf7\u6c42\u5e76\u5c06\u5904\u7406\u4efb\u52a1\u5f80\u540e\u63a8\u8fdf\u4e00\u6bb5\u65f6\u95f4\u3002\u786e\u8ba4\u8bbe\u8ba1\u8282\u6d41\u548c\u7f13\u51b2\u533a\u65f6\u5ba2\u6237\u7aef\u80fd\u591f\u5728\u6240\u9700\u7684\u65f6\u95f4\u5185\u6536\u5230\u54cd\u5e94\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_53","title":"\u52a8\u6001\u4f9b\u5e94\u8d44\u6e90","text":"<p>\u8d44\u6e90\u6309\u8ba1\u5212\u9884\u7f6e\u3002\u8fd9\u79cd\u9884\u7f6e\u53ef\u4ee5\u57fa\u4e8e\u9700\u6c42\uff08\u4f8b\u5982\u901a\u8fc7\u81ea\u52a8\u6269\u7f29\u6765\u5b9e\u73b0\uff09\uff0c\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u65f6\u95f4\uff08\u9700\u6c42\u53ef\u4ee5\u9884\u6d4b\uff0c\u57fa\u4e8e\u65f6\u95f4\u63d0\u4f9b\u8d44\u6e90\uff09\u3002\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5c3d\u53ef\u80fd\u51cf\u5c11\u8fc7\u5ea6\u9884\u7f6e\u6216\u9884\u7f6e\u4e0d\u8db3\u7684\u60c5\u51b5\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_54","title":"\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u8fdb\u884c\u4f18\u5316","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-10","title":"COST 10 \u5982\u4f55\u8bc4\u4f30\u65b0\u670d\u52a1?","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_55","title":"\u5236\u5b9a\u5de5\u4f5c\u8d1f\u8f7d\u5ba1\u6838\u6d41\u7a0b","text":"<p>\u5236\u5b9a\u6d41\u7a0b\uff0c\u5b9a\u4e49\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5ba1\u6838\u6807\u51c6\u548c\u6d41\u7a0b\u3002\u5ba1\u6838\u5de5\u4f5c\u91cf\u5e94\u8be5\u4f53\u73b0\u53ef\u80fd\u5e26\u6765\u7684\u597d\u5904\uff0c\u4f8b\u5982\uff0c\u6838\u5fc3\u5de5\u4f5c\u8d1f\u8f7d\u6216\u8d39\u7528\u5360\u6bd4\u8d85\u8fc7 10% \u7684\u5de5\u4f5c\u8d1f\u8f7d\u6bcf\u5b63\u5ea6\u6216\u6bcf\u516d\u4e2a\u6708\u5ba1\u6838\u4e00\u6b21\uff0c\u800c\u8d39\u7528\u5360\u6bd4\u4f4e\u4e8e 10% \u7684\u5de5\u4f5c\u8d1f\u8f7d\u6bcf\u5e74\u5ba1\u6838\u4e00\u6b21\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_56","title":"\u5b9a\u671f\u5ba1\u6838\u548c\u5206\u6790\u6b64\u5de5\u4f5c\u8d1f\u8f7d","text":"<p>\u6839\u636e\u6bcf\u4e2a\u660e\u786e\u7684\u6d41\u7a0b\u5b9a\u671f\u5ba1\u6838\u73b0\u6709\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u4ee5\u4fbf\u786e\u5b9a\u662f\u91c7\u7528\u65b0\u670d\u52a1\u3001\u66ff\u6362\u73b0\u6709\u670d\u52a1\u8fd8\u662f\u91cd\u65b0\u6784\u5efa\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#cost-11","title":"COST 11 \u5982\u4f55\u8bc4\u4f30\u5de5\u4f5c\u91cf\u6210\u672c\uff1f","text":"","tags":["aws/well-architected"]},{"location":"others/well-architected/WA-%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96-Cost-Optimization-202310-Summary/#_57","title":"\u6267\u884c\u8fd0\u8425\u81ea\u52a8\u5316","text":"<p>\u8bc4\u4f30\u4e91\u4e0a\u8fd0\u8425\u5de5\u4f5c\u91cf\u7684\u6210\u672c\u3002\u91cf\u5316\u4f7f\u7528\u81ea\u52a8\u5316\u4e4b\u540e\u7ba1\u7406\u4efb\u52a1\u3001\u90e8\u7f72\u548c\u5176\u4ed6\u8fd0\u8425\u5de5\u4f5c\u51cf\u5c11\u7684\u65f6\u95f4\u548c\u5de5\u4f5c\u91cf\u3002\u8bc4\u4f30\u8fd0\u8425\u5de5\u4f5c\u6240\u9700\u7684\u65f6\u95f4\u548c\u6210\u672c\uff0c\u5e76\u81ea\u52a8\u6267\u884c\u7ba1\u7406\u4efb\u52a1\uff0c\u4ee5\u5c3d\u53ef\u80fd\u51cf\u5c11\u4eba\u5de5\u5de5\u4f5c\u91cf\u3002</p>","tags":["aws/well-architected"]},{"location":"serverless/apigw-cross-account-private-endpoint/","title":"How can I access an API Gateway private REST API in another AWS account using an interface VPC endpoint","text":"","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#topo","title":"topo","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/api-gateway-private-cross-account-vpce/?nc1=h_ls</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#in-account-a","title":"In Account A","text":"<ul> <li>create vpc &amp; <code>execute-api</code> endpoint</li> <li>no peering or tgw needed</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#in-api-gateway-service-account","title":"In API gateway Service Account","text":"","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#access-control-with-cidr","title":"access-control-with-cidr","text":"<ul> <li>works.  <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Deny\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*/*/*\",\n            \"Condition\": {\n                \"NotIpAddress\": {\n                    \"aws:SourceIp\": \"10.251.0.0/16\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*/*/*\"\n        }\n    ]\n}\n</code></pre></li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#access-control-with-vpce","title":"access-control-with-vpce","text":"<ul> <li>works. <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": \"execute-api:/*/*/*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:sourceVpce\": [\"vpce-0e8c7xxb45\",\"vpce-05d2xx259\"]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": \"execute-api:/*/*/*\"\n    }\n  ]\n}\n</code></pre></li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#access-control-with-vpc","title":"access-control-with-vpc","text":"<ul> <li>works <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Deny\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*/*/*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"aws:sourceVpc\": \"vpc-0204axxx0\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*/*/*\"\n        }\n    ]\n}\n</code></pre></li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#deploy","title":"deploy","text":"<ul> <li>redeploy after you change <code>Resource Policy</code></li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-cross-account-private-endpoint/#refer","title":"refer","text":"<ul> <li>https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-authorization-flow.html</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/","title":"Custom Domain Name in API Gateway","text":"","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/#for-private-api-","title":"for-private-api-","text":"<ul> <li>\u5728 acm \u4e2d\u53d1\u5e03\u8bc1\u4e66 <code>*.api.aws.panlm.xyz</code></li> <li>\u5728\u4e0e API \u540c\u533a\u57df\u4e2d\u521b\u5efa route53 \u7684 public host zone <code>api.aws.panlm.xyz</code></li> <li>\u521b\u5efa \u79c1\u6709 API </li> <li>\u521b\u5efa interface endpoint \uff0c\u5e76\u4e14\u914d\u7f6e resource policy \u5141\u8bb8\u4ece\u8be5 <code>vpce</code> \u8bbf\u95ee</li> <li>\u521b\u5efa\u5b9a\u5236\u57df\u540d\uff0c\u4f8b\u5982 <code>api1.api.aws.panlm.xyz</code><ul> <li>\u6620\u5c04\u5230 private api \u7684\u67d0\u4e2a stage</li> </ul> </li> <li>\u5728 route53 \u4e2d\uff0c\u5c06\u5b9a\u5236\u57df\u540d alias \u5230 vpce \u7684 dns \u4e0a\uff0c\u8bbf\u95ee\u53ef\u4ee5\u6210\u529f\uff0c\u56e0\u4e3a\u4ece\u8be5 vpce \u8bbf\u95ee api \u662f\u88ab\u5141\u8bb8\u7684 \uff08\u4f46\u662f\u5b58\u5728\u8bc1\u4e66 issue\uff0c\u9700\u8981 <code>curl -k</code> \uff09<ul> <li>\u5982\u679c\u8be5 api \u662f\u79c1\u6709\u7684\uff0c\u5b9a\u5236\u57df\u540d alias \u5230 apigw \u4e0a\uff0c\u5219\u5c06\u8bbf\u95ee\u7981\u6b62 <code>Forbidden</code> \u3002</li> </ul> </li> <li>\u9700\u8981\u4f7f\u7528 ALB \u6216\u8005 NLB over TLS \u6d88\u9664\u8bc1\u4e66 issue \uff08link\uff09</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/#dns","title":"dns \u89e3\u6790","text":"<p>\u4f7f\u7528 route 53 \u5c06\u81ea\u5b9a\u4e49\u57df\u540d\uff08\u4f8b\u5982\uff1a <code>api1.api.aws.panlm.xyz</code> \uff09\u6309\u4e0b\u8868\u8fdb\u884c\u89e3\u6790</p> enable endpoint private dns name disable endpoint private dns name alias {\u201cmessage\u201d:\u201dForbidden\u201d} {\u201cmessage\u201d:\u201dForbidden\u201d} cname certificate issue {\u201cmessage\u201d:\u201dForbidden\u201d} api name certificate issue Could not resolve host vpce certificate issue certificate issue <ul> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 alias \u6307\u5411 api gateway \u4e2d\u914d\u7f6e\u7684 custom domain name \u7684\u57df\u540d</li> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 cname \u6307\u5411 api gateway \u4e2d\u914d\u7f6e\u7684 custom domain name \u7684\u57df\u540d</li> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 cname \u6307\u5411 api gateway \u4e2d\u914d\u7f6e\u7684 api \u7684 url \u4e2d\u7684\u57df\u540d</li> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 cname \u6307\u5411 vpc endpoint \u7684 dns \u540d\u79f0</li> </ul> <p>\u7ed3\u8bba \u4e0a\u8ff0\u64cd\u4f5c\uff0c\u5206\u522b\u4f7f\u7528 \u542f\u7528/\u7981\u7528 endpoint \u7684\u79c1\u6709 dns \u540d\u79f0\uff0c\u5747\u65e0\u6cd5\u6b63\u5e38\u8bbf\u95ee api\u3002\u8bbf\u95ee\u7981\u6b62\uff0c\u6216\u8005 certificate issue \uff08\u201dno alternative certificate subject name matches target host name\u201d\uff09</p>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/#refer","title":"refer","text":"<ul> <li>https://serverlessland.com/repos/apigw-private-custom-domain-name</li> <li>https://github.com/aws-samples/serverless-patterns/tree/main/public-alb-private-api-terraform</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/#for-regional-api","title":"for regional api","text":"<ul> <li>\u5982\u679c\u8be5 api \u662f regional \uff0c\u521b\u5efa\u5b9a\u5236\u57df\u540d\uff0c\u8bb0\u5f55\u4e0b\u5b9a\u5236\u57df\u540d\u914d\u7f6e\u4e2d\u7684 <code>API Gateway domain name</code>\uff0c\u4e0d\u662f api stage \u9875\u9762\u4e2d\u7684\u57df\u540d\uff0c\u53c2\u7167 apigw-regional-api-access-from-vpc </li> <li>\u4f7f\u7528 route53 alias\uff08\u6216 cname\uff09 \u5c06\u5b9a\u5236\u57df\u540d\u6307\u5411 <code>API Gateway domain name</code></li> <li>\u8bbf\u95ee\u5b9a\u5236\u57df\u540d\uff0c\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u8bc1\u4e66\u6709\u6548</li> <li>\u5982\u679c\u5b9a\u5236\u57df\u540d\u6307\u5411 api \u7684 url \uff08\u5728 api stage \u9875\u9762\u4e2d\uff09\uff0c\u5c06\u9047\u5230\u8bc1\u4e66\u9a8c\u8bc1\u4e0d\u901a\u8fc7\u7684\u95ee\u9898</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/#dns_1","title":"dns \u89e3\u6790","text":"<p>\u4f7f\u7528 route 53 \u5c06\u81ea\u5b9a\u4e49\u57df\u540d\uff08\u4f8b\u5982\uff1a <code>api1.api.aws.panlm.xyz</code> \uff09\u6309\u4e0b\u8868\u8fdb\u884c\u89e3\u6790</p> regional api alias success cname success api name certificate issue <ul> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 alias \u6307\u5411 api gateway \u4e2d\u914d\u7f6e\u7684 custom domain name \u7684\u57df\u540d</li> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 cname \u6307\u5411 api gateway \u4e2d\u914d\u7f6e\u7684 custom domain name \u7684\u57df\u540d</li> <li>\u81ea\u5b9a\u4e49\u57df\u540d\u901a\u8fc7 cname \u6307\u5411 api gateway \u4e2d\u914d\u7f6e\u7684 api \u7684 url \u4e2d\u7684\u57df\u540d</li> </ul> <p>\u7ed3\u8bba</p> <p>\u524d\u4e24\u8005\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee api</p>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-custom-domain-name/#refer_1","title":"refer","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/api-gateway-domain-certificate/</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-get-sourceip/","title":"Get Source IP in API Gateway","text":"","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-get-sourceip/#client-ip","title":"client ip","text":"<ul> <li> <p>create function nodejs 18x <pre><code>export const handler = async (event,context) =&gt; {\n    console.log('Received event:', JSON.stringify(event, null, 2));\n    context.succeed(event);\n};\n</code></pre></p> </li> <li> <p>create rest api </p> </li> <li>create <code>POST</code> method and integration request to lambda</li> <li> <p>in <code>method execution</code>, add <code>mapping templates</code>, content-type is <code>application/json</code>,  content as following: <pre><code>{\n  \"sourceIp\" : \"$context.identity.sourceIp\",\n  \"input\" : \"$input.path('$')\"\n}\n</code></pre></p> </li> <li> <p>deploy it and test </p> </li> <li>curl <pre><code>curl -X POST -H 'Content-type: application/json' \\\n-d '{ \"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\" }' \\\nhttps://xxx.execute-api.us-east-2.amazonaws.com/prod/\n</code></pre></li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-get-sourceip/#alb-ip","title":"alb ip","text":"<ul> <li>\u5982\u679c alb \u5728 api gateway \u524d\u7aef\uff0c\u5c06\u83b7\u53d6\u5230 alb \u7684\u5185\u7f51\u5730\u5740\uff0c\u5982\u4e0b\u573a\u666f\uff1a<ul> <li>apigw-private-api-alb-cdk.md</li> </ul> </li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-get-sourceip/#refer","title":"refer","text":"<ul> <li>https://dev.classmethod.jp/articles/api-gateway-client-ip/</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-private-api-alb-cdk/","title":"AWS CDK Private API and Application Load Balancer Demo","text":"<ul> <li>https://github.com/markilott/aws-cdk-internal-private-api-demo</li> </ul>","tags":["aws/serverless/api-gateway","aws/mgmt/cdk"]},{"location":"serverless/apigw-private-api-alb-cdk/#prep","title":"prep","text":"<ul> <li>\u521b\u5efa host zone \u53ef\u4ee5\u88ab\u4f60\u7684\u57df\u540d\u89e3\u6790\u5230 \uff08\u5728\u4e0a\u6e38 route53 \u6dfb\u52a0 NS \u8bb0\u5f55\uff09</li> <li>\u521b\u5efa\u65b0vpc\uff0c\u4e0d\u8981\u521b\u5efa api gateway \u7684 endpoint</li> <li>\u521b\u5efa cloud9 \u5728\u65b0 vpc</li> </ul>","tags":["aws/serverless/api-gateway","aws/mgmt/cdk"]},{"location":"serverless/apigw-private-api-alb-cdk/#lab-setup-","title":"lab-setup-","text":"<ul> <li>clone repo</li> <li> <p>edit <code>config/index.ts</code> <pre><code>export const options = {\n    vpcAttr: {\n        customVpcId: 'vpc-0a766975xxxxxxd45',\n        // These are the AWS default VPC subnets. Update to your own CIDR's if using a custom VPC\n        subnetCidr1: '10.251.192.0/24',\n        subnetCidr2: '10.251.193.0/24',\n    },\n    createCertificate: false,\n    certificateArn: 'arn:aws:acm:us-east-2:7933xxxx2775:certificate/cc5xxxx07fc3',\n    dnsAttr: {\n        zoneName: 'api0320.aws.panlm.xyz',\n        hostedZoneId: 'Z0xxxx73xxxxYEARSVSP',\n    },\n    albHostname: 'test-alb',\n    apiPath1: 'test-api1',\n    apiPath2: 'test-api2',\n};\n</code></pre></p> </li> <li> <p>deploy <pre><code>npm install\ncdk bootstrap\ncdk deploy --all --require-approval never\n</code></pre></p> </li> </ul>","tags":["aws/serverless/api-gateway","aws/mgmt/cdk"]},{"location":"serverless/apigw-private-api-alb-cdk/#data-flow","title":"data flow","text":"","tags":["aws/serverless/api-gateway","aws/mgmt/cdk"]},{"location":"serverless/apigw-private-api-alb-cdk/#target-group-settings","title":"target group settings","text":"","tags":["aws/serverless/api-gateway","aws/mgmt/cdk"]},{"location":"serverless/apigw-private-api-alb-cdk/#refer","title":"refer","text":"<ul> <li>https://aws.amazon.com/cn/blogs/compute/implementing-custom-domain-names-for-private-endpoints-with-amazon-api-gateway/</li> <li>https://georgemao.medium.com/enabling-private-apis-with-custom-domain-names-aws-api-gateway-df1b62b0ba7c</li> <li>https://serverlessland.com/repos/apigw-private-custom-domain-name</li> </ul>","tags":["aws/serverless/api-gateway","aws/mgmt/cdk"]},{"location":"serverless/apigw-regional-api-access-from-vpc/","title":"apigw-regional-api-access-from-vpc","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/api-gateway-vpc-connections/</li> </ul> <p>Connect to public APIs with private DNS enabled</p> <p>If private DNS is enabled, set up edge-optimized custom domain names or regional custom domain names to connect to your public APIs.</p> <p>Important: Resources in your VPC that try to connect to your public APIs must have internet connectivity. Also, when configuring DNS records for a regional custom domain name, you must use A type alias records. However, with edge-optimized custom domain names, use either A type alias records or CNAME records.</p>","tags":["aws/serverless/api-gateway"]},{"location":"serverless/apigw-regional-api-access-from-vpc/#refer","title":"refer","text":"<ul> <li>https://docs.aws.amazon.com/whitepapers/latest/best-practices-api-gateway-private-apis-integration/rest-api.html</li> </ul>","tags":["aws/serverless/api-gateway"]},{"location":"zh/","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u6587\u6863","text":"<p>\u5927\u90e8\u5206\u6587\u6863\u662f\u82f1\u6587\u7684\uff0c\u8fd9\u4e2a\u662f\u6d4b\u8bd5\u9875\u9762</p> <p><pre><code>(path:git/git-mkdocs/ file:.zh.md)\n\n- [$frontmatter:title]($filename): $frontmatter:description\n</code></pre> - Building Prometheus HA Architect with Thanos: \u7528 Thanos \u89e3\u51b3 Prometheus \u5728\u591a\u96c6\u7fa4\u5927\u89c4\u6a21\u73af\u5883\u4e0b\u7684\u9ad8\u53ef\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u9650\u5236 &lt;\u2013&gt;</p>"},{"location":"zh/tags/#tag:awscontainereks","title":"aws/container/eks","text":"<ul> <li>            Building Prometheus HA Architect with Thanos          </li> <li>            Create EKS Cluster with Terraform          </li> <li>            Create Private Only EKS Cluster          </li> <li>            Create Public Access EKS Cluster          </li> <li>            Create Public Access EKS Cluster in China Region          </li> <li>            EFS CSI on EKS          </li> <li>            EKS Access API          </li> <li>            EKS Addons          </li> <li>            EKS Auto Mode          </li> <li>            EKS Container Insights          </li> <li>            EKS Security Group Deepdive          </li> <li>            EKS Upgrade Procedure          </li> <li>            Fargate on EKS          </li> <li>            IRSA \u4e2d\u7684 Token \u5256\u6790          </li> <li>            Metrics Server          </li> <li>            Quick Setup Cloud9          </li> <li>            Security Lake Support Collecting Audit Logging from EKS          </li> <li>            Setup Cloud9 for EKS          </li> <li>            Stream EKS Control Panel Logs to S3          </li> <li>            appmesh-workshop-eks          </li> <li>            automated-canary-deployment-using-flagger          </li> <li>            aws-for-fluent-bit          </li> <li>            aws-load-balancer-controller          </li> <li>            cert-manager          </li> <li>            cluster-autoscaler          </li> <li>            cni-metrics-helper          </li> <li>            ebs-for-eks          </li> <li>            eks          </li> <li>            eks-addons-coredns          </li> <li>            eks-addons-kube-proxy          </li> <li>            eks-addons-vpc-cni          </li> <li>            eks-aws-auth          </li> <li>            eks-custom-network          </li> <li>            eks-external-snat          </li> <li>            eks-loggroup-description          </li> <li>            eks-prefix-assignment          </li> <li>            eksctl          </li> <li>            eksdemo          </li> <li>            eksup          </li> <li>            enable-prometheus-in-cloudwatch          </li> <li>            enable-sg-on-pod          </li> <li>            flux          </li> <li>            install-prometheus-grafana-on-eks          </li> <li>            karpenter          </li> <li>            kubernetes events exporter          </li> <li>            nginx-ingress-controller-community-ver          </li> <li>            nginx-ingress-controller-nginx-ver          </li> <li>            self-signed-certificates          </li> <li>            \u7a81\u7834VPC\u5730\u5740\u9650\u5236\uff1aEKS\u6df7\u5408\u8282\u70b9\u67b6\u6784\u5b9e\u6218\u6307\u5357          </li> </ul>"},{"location":"zh/tags/#tag:kubernetes","title":"kubernetes","text":"<ul> <li>            Building Prometheus HA Architect with Thanos          </li> <li>            EKS Addons          </li> <li>            Kubernetes Best Practices - Resource Requests and Limits          </li> <li>            Kyverno          </li> <li>            Metrics Server          </li> <li>            Mutating Webhook for Kubernetes in China          </li> <li>            aws-for-fluent-bit          </li> <li>            cert-manager          </li> <li>            cluster-autoscaler          </li> <li>            eksup          </li> <li>            externaldns-for-route53          </li> <li>            helm-cmd          </li> <li>            horizontal pod autoscaler          </li> <li>            k8s-liveness-readiness-startup-probes          </li> <li>            kube-no-trouble          </li> <li>            kube-state-metrics          </li> <li>            kubectx          </li> <li>            kubernetes events exporter          </li> <li>            nginx sample          </li> <li>            pluto          </li> <li>            prometheus-adapter          </li> <li>            topology spread constraints          </li> </ul>"},{"location":"zh/tags/#tag:prometheus","title":"prometheus","text":"<ul> <li>            Building Prometheus HA Architect with Thanos          </li> <li>            Prometheus With Thanos Manually          </li> <li>            enable-prometheus-in-cloudwatch          </li> <li>            install-prometheus-grafana-on-eks          </li> </ul>"},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/","title":"Building Prometheus HA Architect with Thanos","text":"<p>This pages has been obseleted.</p> <p>released on aws https://aws.amazon.com/cn/blogs/china/extending-the-prometheus-high-availability-monitoring-architecture-using-thanos/</p>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#thanos-prometheus","title":"\u4f7f\u7528 Thanos \u6269\u5c55 Prometheus \u9ad8\u53ef\u7528\u76d1\u63a7\u67b6\u6784","text":"","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#_1","title":"\u67b6\u6784\u63cf\u8ff0","text":"<p>Prometheus \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u76d1\u63a7\u548c\u62a5\u8b66\u5de5\u5177\uff0c\u4e13\u4e3a\u5bb9\u5668\u5316\u548c\u4e91\u539f\u751f\u67b6\u6784\u7684\u8bbe\u8ba1\uff0c\u901a\u8fc7\u57fa\u4e8e HTTP \u7684 Pull \u6a21\u5f0f\u91c7\u96c6\u65f6\u5e8f\u6570\u636e\uff0c\u63d0\u4f9b\u529f\u80fd\u5f3a\u5927\u7684\u67e5\u8be2\u8bed\u8a00 PromQL\uff0c\u5e76\u53ef\u89c6\u5316\u5448\u73b0\u76d1\u63a7\u6307\u6807\u4e0e\u751f\u6210\u62a5\u8b66\u4fe1\u606f\u3002\u5ba2\u6237\u666e\u904d\u91c7\u7528\u5176\u7528\u4e8e Kubernetes \u7684\u76d1\u63a7\u4f53\u7cfb\u5efa\u8bbe\u3002Amazon \u4e5f\u5728 2021 \u5e74 9 \u6708\u6b63\u5f0f\u53d1\u5e03\u4e86\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\uff08Amazon Managed Service for Prometheus\uff09\u7b80\u5316\u5ba2\u6237\u90e8\u7f72\u548c\u4f7f\u7528\u3002\u5e76\u4e14\u5728 2023 \u5e74 11 \u6708\u9488\u5bf9 EKS \u53d1\u5e03\u4e86\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\u7684\u65e0\u4ee3\u7406\u91c7\u96c6\u529f\u80fd\uff08\u65b0\u95fb\u7a3f\uff09\uff0c\u8fdb\u4e00\u6b65\u65b9\u4fbf\u5ba2\u6237\u65e0\u9700\u63d0\u524d\u89c4\u5212\uff0c\u4ece\u800c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u7684\u4f7f\u7528 Prometheus \u7684\u76f8\u5173\u7ec4\u4ef6\u3002</p> <p>\u622a\u6b62\u672c\u6587\u53d1\u5e03\u4e4b\u65e5\uff0c\u5728\u4e9a\u9a6c\u900a\u4e2d\u56fd\u533a\u57df\u6682\u65f6\u6ca1\u6709\u53d1\u5e03\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\u3002\u56e0\u6b64\u9488\u5bf9\u4e2d\u56fd\u5ba2\u6237\u5982\u4f55\u90e8\u7f72\u4e00\u5957 Prometheus \u76d1\u63a7\u5e73\u53f0\u7684\u6700\u4f73\u5b9e\u8df5\u6307\u5bfc\u53ef\u4ee5\u5e2e\u52a9\u5ba2\u6237\u5feb\u901f\u4f7f\u7528 Prometheus\uff0c\u4ece\u800c\u5c06\u7cbe\u529b\u4e13\u6ce8\u4e8e\u4e1a\u52a1\u9700\u6c42\u3002</p> <p>\u72ec\u7acb Kubernetes \u96c6\u7fa4\u901a\u5e38\u4f7f\u7528 Prometheus Operator \u90e8\u7f72\u6240\u6709\u76f8\u5173\u7ec4\u4ef6\u5305\u62ec Alert Manager\u3001Grafana \u7b49\u3002\u8fd9\u79cd\u72ec\u7acb\u90e8\u7f72\u7684\u76d1\u63a7\u67b6\u6784\u4f18\u70b9\u662f\u90e8\u7f72\u65b9\u4fbf\uff0c\u6570\u636e\u6301\u4e45\u5316\u4f7f\u7528 EBS \u4e5f\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u573a\u666f\u4e0b\u67e5\u8be2\u6027\u80fd\u7684\u8981\u6c42\uff0c\u4f46\u7f3a\u70b9\u4e5f\u663e\u800c\u6613\u89c1\uff0c\u5373\u65e0\u6cd5\u4fdd\u5b58\u592a\u957f\u65f6\u95f4\u7684\u5386\u53f2\u6570\u636e\u3002\u800c\u4e14\u5f53\u5ba2\u6237\u73af\u5883\u4e2d\u96c6\u7fa4\u6570\u91cf\u8f83\u591a\uff0c\u76d1\u63a7\u5e73\u53f0\u81ea\u8eab\u7684\u53ef\u7528\u6027\u548c\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\uff0c\u540c\u65f6\u5e0c\u671b\u63d0\u4f9b\u5168\u5c40\u67e5\u8be2\u65f6\uff0c\u7ba1\u7406\u548c\u7ef4\u62a4\u7684\u5de5\u4f5c\u91cf\u4e5f\u968f\u4e4b\u589e\u52a0\u3002</p> <p>Thanos\u662f\u4e00\u5957\u5f00\u6e90\u7ec4\u4ef6\uff0c\u6784\u5efa\u5728 Prometheus \u4e4b\u4e0a\uff0c\u7528\u4ee5\u89e3\u51b3 Prometheus \u5728\u591a\u96c6\u7fa4\u5927\u89c4\u6a21\u73af\u5883\u4e0b\u7684\u9ad8\u53ef\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u9650\u5236\u3002\u5f53\u9700\u8981\u505a\u5386\u53f2\u6027\u80fd\u6570\u636e\u5206\u6790\uff0c\u6216\u8005\u4f7f\u7528 Prometheus \u8fdb\u884c\u6210\u672c\u5206\u6790\u7684\u573a\u666f\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u8f83\u957f\u65f6\u95f4\u7684\u5386\u53f2\u6570\u636e\u3002Thanos \u4e3b\u8981\u901a\u8fc7\u63a5\u6536\u5e76\u5b58\u50a8 Prometheus \u7684\u591a\u96c6\u7fa4\u6570\u636e\u526f\u672c\uff0c\u5e76\u63d0\u4f9b\u5168\u5c40\u67e5\u8be2\u548c\u4e00\u81f4\u6027\u6570\u636e\u8bbf\u95ee\u63a5\u53e3\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u4e86\u5bf9\u4e8e Prometheus \u7684\u53ef\u9760\u6027\u3001\u4e00\u81f4\u6027\u548c\u53ef\u7528\u6027\u4fdd\u969c\uff0c\u4ece\u800c\u89e3\u51b3\u4e86 Prometheus \u5355\u96c6\u7fa4\u5728\u5b58\u50a8\u3001\u67e5\u8be2\u5386\u53f2\u6570\u636e\u548c\u5907\u4efd\u7b49\u65b9\u9762\u7684\u6269\u5c55\u6027\u6311\u6218\u3002</p> <p>\u5728\u8ba8\u8bba\u57fa\u4e8e Thanos \u7684\u5404\u79cd Prometheus \u76d1\u63a7\u67b6\u6784\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u4e0b Thanos \u53ca\u5176\u5e38\u7528\u7684\u7ec4\u4ef6\uff0c\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003 thanos.io \u3002  </p> <ul> <li>Sidecar\uff08\u8fb9\u8f66\uff09\uff1a\u8fd0\u884c\u5728 Prometheus \u7684 Pod \u4e2d\uff0c\u8bfb\u53d6\u5176\u6570\u636e\u4ee5\u4f9b\u67e5\u8be2\u548c/\u6216\u4e0a\u4f20\u5230\u4e91\u7aef\u5bf9\u8c61\u5b58\u50a8\u3002</li> <li>Store\uff08\u5b58\u50a8\u7f51\u5173\uff09\uff1a\u7528\u4e8e\u4ece\u5bf9\u8c61\u5b58\u50a8\uff08\u4f8b\u5982\uff1aAWS S3\uff09\u4e0a\u67e5\u8be2\u6570\u636e\u3002</li> <li>Compactor\uff08\u538b\u7f29\u5668)\uff1a\u5bf9\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u538b\u7f29\u3001\u805a\u5408\u5386\u53f2\u6570\u636e\u4ee5\u51cf\u5c0f\u91c7\u6837\u7cbe\u5ea6\u5e76\u957f\u4e45\u4fdd\u7559\u3002</li> <li>Receiver\uff08\u63a5\u6536\u5668\uff09\uff1a\u63a5\u6536\u6765\u81ea Prometheus \u8fdc\u7a0b\u5199\u5165\u65e5\u5fd7\u7684\u6570\u636e\uff0c\u5e76\u5c06\u5176\u4e0a\u4f20\u5230\u5bf9\u8c61\u5b58\u50a8\u3002</li> <li>Ruler\uff08\u89c4\u5219\u5668\uff09\uff1a\u9488\u5bf9 Thanos \u4e2d\u7684\u6570\u636e\u8bc4\u4f30\u8bb0\u5f55\u548c\u8b66\u62a5\u89c4\u5219\u3002</li> <li>Query\uff08\u67e5\u8be2\u5668\uff09\uff1a\u5b9e\u73b0 Prometheus \u7684 v1 API\uff0c\u67e5\u8be2\u5e76\u6c47\u603b\u6765\u81ea\u5e95\u5c42\u7ec4\u4ef6\u7684\u6570\u636e\u3002\u5c06\u6240\u6709\u6570\u636e\u6e90\u6dfb\u52a0\u4e3a Query \u7684 Endpoint\uff0c\u5305\u62ec Sidecar\u3001 Store\u3001 Receiver \u7b49\u3002</li> <li>Query Frontend\uff08\u67e5\u8be2\u524d\u7aef\uff09\uff1a\u5b9e\u73b0 Prometheus \u7684 v1 API\uff0c\u5c06\u5176\u4ee3\u7406\u7ed9\u67e5\u8be2\u5668\uff0c\u540c\u65f6\u7f13\u5b58\u54cd\u5e94\uff0c\u5e76\u53ef\u4ee5\u62c6\u5206\u67e5\u8be2\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002</li> </ul> <p>\u7b2c\u4e00\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0b\u56fe\u84dd\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a </p> <ul> <li>\u88ab\u76d1\u63a7\u96c6\u7fa4\uff08Observee\uff09\u90e8\u7f72 Prometheus \u4e14\u542f\u7528 Thanos \u7684 Sidecar \u65b9\u5f0f\u5c06\u76d1\u63a7\u7684\u5386\u53f2\u6570\u636e\u5b9a\u671f\u5f52\u6863\u5230 S3\uff0c\u901a\u8fc7\u90e8\u7f72 Thanos Store \u7ec4\u4ef6\u67e5\u8be2\u5386\u53f2\u6570\u636e\uff08\u56fe\u4e2d Store \u7ec4\u4ef6\u90e8\u7f72\u5728\u96c6\u4e2d\u76d1\u63a7\u96c6\u7fa4\u4e2d\uff09\uff1b</li> <li>\u96c6\u4e2d\u76d1\u63a7\u96c6\u7fa4\uff08Observer\uff09\u9664\u4e86\u90e8\u7f72 Thanos \u7ec4\u4ef6\u4e4b\u5916\uff0c\u5c06\u7edf\u4e00\u90e8\u7f72 Grafana \u4f5c\u4e3a Dashboard \u5c55\u793a\u3002</li> </ul> <p>\u7b2c\u4e8c\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0b\u56fe\u7ea2\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a </p> <ul> <li>\u88ab\u76d1\u63a7\u96c6\u7fa4\uff08Observee\uff09\u9664\u4e86\u542f\u7528 Thanos Sidecar \u4e4b\u5916\uff0c\u8fd8\u542f\u7528\u4e86 Prometheus \u7684 Remote Write \u529f\u80fd\uff0c\u5c06\u672a\u5f52\u6863\u7684\u6570\u636e\u4ee5 WAL \u65b9\u5f0f\u8fdc\u7a0b\u4f20\u8f93\u5230\u90e8\u7f72\u5728\u96c6\u4e2d\u76d1\u63a7\u96c6\u7fa4\uff08Observer\uff09\u4e0a\u7684 Thanos Receiver\uff0c\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u5197\u4f59\u5ea6\u3002 Thanos Receiver \u540c\u6837\u53ef\u4ee5\u5c06\u5386\u53f2\u76d1\u63a7\u6570\u636e\u5f52\u6863\u5230 S3 \u4e0a\uff0c\u4e14\u652f\u6301\u88ab Thanos Query \u76f4\u63a5\u67e5\u8be2\uff0c\u540c\u65f6\u907f\u514d\u76f4\u63a5\u67e5\u8be2 Sidecar \u800c\u7ed9\u88ab\u76d1\u63a7\u96c6\u7fa4\u5e26\u6765\u989d\u5916\u7684\u6027\u80fd\u635f\u8017\u3002</li> </ul> <p>\u7b2c\u4e09\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0b\u56fe\u9ec4\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a </p> <ul> <li>\u5728\u591a\u96c6\u7fa4\u76d1\u63a7\u573a\u666f\u4e0b\uff0c\u4e00\u822c\u4f1a\u5728\u6bcf\u4e2a\u96c6\u7fa4\u90e8\u7f72\u72ec\u7acb\u7684 Prometheus \u7ec4\u4ef6\u3002Prometheus \u63d0\u4f9b Agent Mode \u9488\u5bf9\u8fd9\u6837\u7684\u573a\u666f\u53ef\u4ee5\u6700\u5c0f\u5316\u8d44\u6e90\u5360\u7528\uff0c\u76f4\u63a5\u542f\u7528 Remote Write \u529f\u80fd\u5c06\u76d1\u63a7\u6570\u636e\u96c6\u4e2d\u4fdd\u5b58 \uff08\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a Prometheus \u96c6\u7fa4\uff0c\u6216\u8005 Thanos Receiver \u7ec4\u4ef6\uff09\u3002</li> </ul> <p>\u7b2c\u56db\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u7eff\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09\uff1a </p> <ul> <li>\u5728 AWS \u4e0a\u53ef\u4ee5\u4f7f\u7528\u6258\u7ba1\u7684 Prometheus \u670d\u52a1\u4f5c\u4e3a\u96c6\u4e2d\u76d1\u63a7\u6570\u636e\u6301\u4e45\u5316\uff0c\u63d0\u4f9b\u6700\u597d\u7684\u6027\u80fd\u548c\u6700\u4f4e\u7684\u7ef4\u62a4\u6210\u672c\u3002\u6bcf\u4e2a\u88ab\u76d1\u63a7\u96c6\u7fa4\u53ef\u4ee5\u4f7f\u7528\u65e0\u4ee3\u7406\u91c7\u96c6\u529f\u80fd\uff08\u65b0\u95fb\u7a3f\uff09\uff0c\u8fdb\u4e00\u6b65\u65b9\u4fbf\u5ba2\u6237\u65e0\u9700\u63d0\u524d\u89c4\u5212\uff0c\u4ece\u800c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u7684\u4f7f\u7528 Prometheus \u7684\u76f8\u5173\u7ec4\u4ef6\u3002</li> </ul> <p>\u4ee5\u4e0b\u603b\u7ed3\u4e86\u5404\u79cd Prometheus \u76d1\u63a7\u67b6\u6784\u6240\u9002\u5408\u7684\u573a\u666f\uff1a</p> <p>\u7b2c\u4e00\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u84dd\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09</p> <ul> <li>\u9002\u7528\u573a\u666f<ul> <li>\u9002\u5408\u7edd\u5927\u90e8\u5206\u751f\u4ea7\u73af\u5883\uff0c\u5c24\u5176\u5728\u4e9a\u9a6c\u900a\u4e2d\u56fd\u533a\u57df\u6ca1\u6709\u6258\u7ba1 Prometheus \u670d\u52a1\uff0c\u6b64\u7c7b\u67b6\u6784\u4e5f\u662f\u5ba2\u6237\u9996\u9009\u3002</li> </ul> </li> <li>\u4f18\u70b9<ul> <li>\u67b6\u6784\u7b80\u5355</li> <li>\u53ea\u6709\u4e00\u4efd\u76d1\u63a7\u6570\u636e\uff0c\u6700\u5c0f\u5316\u5b58\u50a8\u6210\u672c\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500</li> </ul> </li> <li>\u7f3a\u70b9 <ul> <li>\u901a\u8fc7 Sidecar \u67e5\u8be2\u5b9e\u65f6\u76d1\u63a7\u6570\u636e\u65f6\uff0c\u5c06\u7ed9\u88ab\u76d1\u63a7\u96c6\u7fa4\u5e26\u6765\u989d\u5916\u6027\u80fd\u635f\u8017</li> </ul> </li> </ul> <p>\u7b2c\u4e8c\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u7ea2\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09     \u9002\u7528\u573a\u666f         \u5728 Thanos 0.19 \u7248\u672c\u4e4b\u524d\uff0cSidecar \u8fd8\u6ca1\u6709\u5b9e\u73b0 StoreAPI \u65f6\uff0c\u53ea\u80fd\u901a\u8fc7 Receive \u67e5\u8be2\u6700\u65b0\u7684\u6027\u80fd\u6570\u636e\u3002\u9002\u5408\u9700\u8981\u591a\u526f\u672c\u76d1\u63a7\u6570\u636e\u7684\u7279\u6b8a\u573a\u666f\u3002</p> <ul> <li>\u4f18\u70b9<ul> <li>\u76d1\u63a7\u6570\u636e\u5197\u4f59\uff0c\u53ef\u4ee5\u4f7f\u7528 Compactor \u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29\u3001\u805a\u5408\u5386\u53f2\u6570\u636e\u4ee5\u51cf\u5c11\u5b58\u50a8\u6210\u672c</li> <li>\u76f4\u63a5\u4ece Thanos Receive \u67e5\u8be2\u5b9e\u65f6\u6027\u80fd\u6570\u636e\uff0c\u5bf9\u88ab\u76d1\u63a7\u96c6\u7fa4\u6ca1\u6709\u989d\u5916\u6027\u80fd\u635f\u8017</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u67b6\u6784\u590d\u6742\uff0c\u6bcf\u4e2a\u96c6\u7fa4\u5bf9\u5e94\u4e00\u7ec4 Thanos Receive\uff0c\u5efa\u8bae\u914d\u7f6e\u526f\u672c\u6570\u91cf\u548c\u8d44\u6e90\u7b49\u4e0e\u6e90\u96c6\u7fa4\u7684 Prometheus \u526f\u672c\u6570\u91cf\u548c\u8d44\u6e90\u76f8\u540c</li> </ul> </li> </ul> <p>\u7b2c\u4e09\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u9ec4\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09</p> <ul> <li>\u9002\u7528\u573a\u666f<ul> <li>\u6700\u5927\u7a0b\u5ea6\u51cf\u5c11\u5bf9\u4e8e\u88ab\u76d1\u63a7\u96c6\u7fa4\u7684\u8d44\u6e90\u5360\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 Prometheus \u7684 Agent Mode\uff1a</li> </ul> </li> <li>\u4f18\u70b9<ul> <li>\u67b6\u6784\u7b80\u5355\uff0c\u4f7f\u7528 Agent Mode \u51e0\u4e4e\u65e0\u72b6\u6001\uff0c\u53ef\u4ee5\u4f7f\u7528\u9664 Stateful \u4e4b\u5916\u7684\u5176\u4ed6 Deployment\uff0c\u672c\u5730\u5b58\u50a8\u9700\u6c42\u4f4e\uff08\u9664\u975e\u8fdc\u7a0b Endpoint \u4e0d\u53ef\u7528\u65f6\uff0c\u672c\u5730\u7f13\u5b58\u6570\u636e\u4ee5\u91cd\u8bd5\uff09</li> <li>\u53ef\u5b9e\u73b0\u96c6\u4e2d\u544a\u8b66 - \u544a\u8b66\u5c06\u901a\u8fc7 Thanos Ruler \u5b9a\u4e49\uff0c\u901a\u8fc7 Thanos Query \u67e5\u8be2 Receive \u5e76\u53d1\u9001\u5230\u76d1\u63a7\u96c6\u7fa4\u7684 Alert Manager \u5b9e\u73b0</li> </ul> </li> <li>\u7f3a\u70b9 <ul> <li>\u65e0\u76d1\u63a7\u6570\u636e\u5197\u4f59\uff0c\u67d0\u4e9b\u7ec4\u4ef6\u5c06\u65e0\u6cd5\u5728 Agent Mode \u4e0b\u542f\u7528\uff0c\u4f8b\u5982\uff1aSidecar\u3001Alert\u3001Rules \uff08\u53c2\u89c1\u6587\u6863\uff09</li> </ul> </li> </ul> <p>\u7b2c\u56db\u79cd\u76d1\u63a7\u67b6\u6784\uff08\u5bf9\u5e94\u4e0a\u56fe\u7eff\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff09</p> <ul> <li>\u9002\u7528\u573a\u666f<ul> <li>\u5728\u652f\u6301\u6258\u7ba1 Prometheus \u670d\u52a1\u7684\u4e9a\u9a6c\u900a\u533a\u57df\uff08\u6587\u6863\uff09\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u5b9e\u73b0\u5b8c\u5168\u5f00\u7bb1\u5373\u7528\uff0c\u540c\u65f6\u907f\u514d\u7ba1\u7406 Thanos \u7ec4\u4ef6\uff0c\u53ea\u9700\u8981\u90e8\u7f72 Grafana \u5373\u53ef\u3002</li> </ul> </li> <li>\u4f18\u70b9<ul> <li>\u67b6\u6784\u7b80\u5355\uff0c\u8d44\u6e90\u5360\u7528\u5c11</li> <li>\u514d\u7ef4\u62a4</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u6258\u7ba1 Prometheus \u670d\u52a1\u7684\u6210\u672c\u8ba1\u7b97\uff0c\u53c2\u8003\u6587\u6863</li> </ul> </li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#walkthrough","title":"walkthrough","text":"","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#prometheus-on-eks","title":"Prometheus on EKS","text":"<p>Prometheus Operator\uff08link\uff09\u63d0\u4f9b Kubernetes \u539f\u751f\u90e8\u7f72\u548c\u7ba1\u7406 Prometheus \u53ca\u76f8\u5173\u76d1\u63a7\u7ec4\u4ef6\u7684\u529f\u80fd\u3002\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u7b80\u5316\u548c\u81ea\u52a8\u914d\u7f6e Kubernetes \u96c6\u7fa4\u57fa\u4e8e Prometheus \u7684\u76d1\u63a7\u5806\u6808\u3002\u672c\u5b9e\u9a8c\u57fa\u4e8e Prometheus Operator \u90e8\u7f72\u4f5c\u4e3a\u57fa\u7840\uff0c\u5e76\u901a\u8fc7 values.yaml \u53c2\u6570\u6587\u4ef6\u5b9a\u5236\u3002 \u672c\u5b9e\u9a8c\u4e2d\u5c06\u4f7f\u7528 Terraform \u5feb\u901f\u521b\u5efa EKS \u96c6\u7fa4\uff0c\u5e76\u4e14\u81ea\u52a8\u90e8\u7f72\u4e0a\u56fe\u4e2d\u76f8\u5173\u7684 Prometheus \u76d1\u63a7\u67b6\u6784\u3002</p> <ul> <li>\u672c\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u4e86\u9884\u8bbe\u7684\u5b50\u57df\u540d\u7528\u4e8e\u7b80\u5316\u670d\u52a1\u4e4b\u95f4\u7684\u8bbf\u95ee\u548c\u5bf9\u5916\u66b4\u9732\u3002\u9700\u8981\u63d0\u524d\u5728 Route53 \u4e2d\u521b\u5efa\u8be5\u5b50\u57df\u540d\uff08\u590d\u5236\u94fe\u63a5\u4e2d\u7684\u51fd\u6570\u5e76\u7c98\u8d34\u5230\u547d\u4ee4\u884c\uff09 <pre><code>PARENT_DOMAIN_NAME=eks0103.aws.panlm.xyz\ncreate-hosted-zone -n ${PARENT_DOMAIN_NAME}\n</code></pre></li> <li>\u7136\u540e\u5728\u4e0a\u6e38 Route53 \u4e2d\u521b\u5efa\u5bf9\u5e94\u7684 NS \u8bb0\u5f55\uff08\u590d\u5236\u94fe\u63a5\u4e2d\u7684\u51fd\u6570\u5e76\u7c98\u8d34\u5230\u547d\u4ee4\u884c\uff09\uff0c\u6b64\u5904\u79bb\u5f00 Cloud9 \u7a97\u53e3\uff0c\u6216\u8005\u786e\u4fdd\u547d\u4ee4\u884c\u6709\u4e0a\u6e38 Route53 \u76f8\u5e94\u7684\u6743\u9650 <pre><code>PARENT_DOMAIN_NAME=eks0103.panlm.xyz\nNS=\"copy NS records from previous output and paste here\"\ncreate-ns-record -n $PARENT_DOMAIN_NAME -s \"$NS\" # double quote is mandortory\n</code></pre></li> <li>\u521b\u5efa\u672c\u5b9e\u9a8c\u7684\u76ee\u5f55\uff0c\u540e\u7eed\u5c06\u5728\u6b64\u8def\u5f84\u4e0b\u514b\u9686 2 \u4e2a REPO\uff0c\u5206\u522b\u7528\u4e8e\u521b\u5efa EKS \u96c6\u7fa4\u7684 Terraform \u4ee3\u7801\u548c Thanos \u914d\u7f6e\u793a\u4f8b <pre><code>LAB_HOME=~/environment/lab-thanos\nmkdir -p ${LAB_HOME}\n</code></pre></li> <li>\u5148\u83b7\u53d6 Thanos \u914d\u7f6e\u6a21\u677f\uff0cThanos \u76f8\u5173\u7ec4\u4ef6\u901a\u8fc7 Terraform \u81ea\u52a8\u5316\u90e8\u7f72\u5728\u88ab\u76d1\u63a7\u96c6\u7fa4\uff08ekscluster1\uff09\uff0c\u76ee\u5f55\u8bf4\u660e\u5982\u4e0b\uff1a<ul> <li>prometheus: \u5305\u542b\u9488\u5bf9 Prometheus Operator \u7684\u5b9a\u5236 Values</li> <li>s3-config: \u63d0\u4f9b Thanos \u7ec4\u4ef6\u8bbf\u95ee S3 \u7684\u76f8\u5173\u914d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u4e9b\u914d\u7f6e\u5c06\u4f1a\u88ab\u521b\u5efa\u6210 kubernetes \u7684 secret</li> <li>thanos-values: \u5305\u542b\u9488\u5bf9 bitnami thanos chart \u7684\u5b9a\u5236 Values</li> <li>thanos-yaml: \u5305\u542b\u81ea\u5efa Thanos \u4f7f\u7528\u7684\u76f8\u5173 Yaml \u5b9a\u4e49\u6587\u4ef6\u3002\u66f4\u591a\u6a21\u677f\u53c2\u8003 link <pre><code>cd ${LAB_HOME}\ngit clone https://github.com/panlm/thanos-example.git\ncd thanos-example\n</code></pre></li> </ul> </li> <li> <p>\u4f7f\u7528\u4e0b\u9762\u53c2\u6570\u8fdb\u884c\u521b\u5efa\u672c\u5b9e\u9a8c\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4f4d\u4e8e <code>POC</code> \u76ee\u5f55\u4e0b\u3002\u5b50\u57df\u540d <code>thanos</code> \u5bf9\u5e94\u4e0b\u4e00\u6b65\u4e2d\u7684 <code>environment_name</code> <pre><code>CLUSTER_NAME_1=ekscluster1\nCLUSTER_NAME_2=ekscluster2\nCLUSTER_NAME_3=ekscluster3\nDOMAIN_NAME=thanos.${PARENT_DOMAIN_NAME} # this domain will be created by terraform\nTHANOS_BUCKET_NAME=thanos-store-$(TZ=EAT-8 date +%Y%m%d-%H%M%S)\nAWS_DEFAULT_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')\nexport CLUSTER_NAME_1 CLUSTER_NAME_2 CLUSTER_NAME_3 DOMAIN_NAME THANOS_BUCKET_NAME AWS_DEFAULT_REGION\n\naws s3 mb s3://${THANOS_BUCKET_NAME}\n\nmkdir POC\ncd POC-template\nfind ./ -type d -name \"[a-z]*\" -exec mkdir ../POC/{} \\;\n\nfind ./ -type f -name \"*\" |while read filename ; do\n  cat $filename |envsubst '$CLUSTER_NAME_1 $CLUSTER_NAME_2 $CLUSTER_NAME_3 $DOMAIN_NAME $THANOS_BUCKET_NAME $AWS_DEFAULT_REGION' &gt; ../POC/$filename\ndone\n</code></pre></p> </li> <li> <p>\u83b7\u53d6 Terraform \u4ee3\u7801\u5f00\u59cb\u521b\u5efa\u73af\u5883\u3002\u76ee\u5f55\u8bf4\u660e\u5982\u4e0b\uff1a</p> <ul> <li>environment \u76ee\u5f55\uff1a\u521b\u5efa\u5b9e\u9a8c\u516c\u7528\u7684 VPC \u7b49\u8d44\u6e90\uff1b</li> <li>ekscluster1 \u76ee\u5f55\uff1a\u521b\u5efa\u76ee\u5f55\u540c\u540d EKS \u96c6\u7fa4\uff0c\u5bf9\u5e94\u7b2c\u4e00\u79cd\u76d1\u63a7\u67b6\u6784\u56fe\u4e2d\u6240\u6709\u7ec4\u4ef6\uff1b</li> <li>ekscluster2 \u76ee\u5f55\uff1a\u521b\u5efa\u76ee\u5f55\u540c\u540d EKS \u96c6\u7fa4\uff0c\u5bf9\u5e94\u7b2c\u4e8c\u79cd\u76d1\u63a7\u67b6\u6784\u56fe\u4e2d\u7ea2\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff1b</li> <li>ekscluster3 \u76ee\u5f55\uff1a\u521b\u5efa\u76ee\u5f55\u540c\u540d EKS \u96c6\u7fa4\uff0c\u5bf9\u5e94\u7b2c\u4e09\u79cd\u76d1\u63a7\u67b6\u6784\u56fe\u4e2d\u9ec4\u8272\u96c6\u7fa4\u53ca\u7ec4\u4ef6\uff1b <pre><code>cd ${LAB_HOME}\ngit clone https://github.com/panlm/eks-blueprints-clusters.git\ncd eks-blueprints-clusters/multi-cluster-thanos\n</code></pre></li> </ul> </li> <li>\u4fee\u6539 <code>terraform.tfvars</code> \u914d\u7f6e\u5982\u4e0b <pre><code>aws_region          = \"us-east-2\"\nenvironment_name    = \"thanos\" # sub-domain will be created by terraform\ncluster_version     = \"1.27\"\nhosted_zone_name    = \"eks0103.aws.panlm.xyz\" # your existing hosted zone\neks_admin_role_name = \"\" # Additional role admin in the cluster \n</code></pre></li> <li>\u521b\u5efa\u72ec\u7acb\u7684\u73af\u5883\u7528\u4e8e\u672c\u5b9e\u9a8c\uff0c\u5305\u62ec VPC\uff0cSecret\uff0c\u73af\u5883\u7279\u5b9a\u7684\u5b50\u57df\u540d\u7b49 <pre><code>cd environment\nterraform init\nterraform apply -auto-approve\n</code></pre></li> <li>\u521b\u5efa ekscluster1\uff08\u76ee\u5f55\u540d\u5373\u4e3a EKS \u96c6\u7fa4\u540d\uff09\uff0c\u5e76\u6839\u636e\u547d\u4ee4\u884c\u8f93\u51fa\u4fdd\u5b58 kubeconfig \u914d\u7f6e\u3002\u521b\u5efa\u96c6\u7fa4\u540e\u5c06\u81ea\u52a8\u68c0\u67e5 <code>thanos-example/POC</code> \u8def\u5f84\u4e0b\u76f8\u5173\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5b89\u88c5 Prometheus \u548c Thanos \u7ec4\u4ef6\u3002 <pre><code>cd ../ekscluster1\nterraform init\nterraform apply -auto-approve\n</code></pre></li> <li>\u6309\u7167\u4e0a\u8ff0\u64cd\u4f5c\u5206\u522b\u8fdb\u5165\u5176\u4ed6\u4e24\u4e2a\u76ee\u5f55\u521b\u5efa ekscluster2 \u548c ekscluster3\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6 terminal \u540c\u65f6\u64cd\u4f5c\u3002</li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#thanos","title":"Thanos \u7ec4\u4ef6","text":"<p>\u65b9\u4fbf\u5927\u5bb6\u4e86\u89e3 Thanos \u7684\u914d\u7f6e\u548c\u5de5\u4f5c\u539f\u7406\uff0c\u7b80\u8981\u8bf4\u660e\u4e0b <code>thanos-example/thanos-yaml</code> \u76ee\u5f55\u4e0b\u7684\u76f8\u5173\u914d\u7f6e\uff0c\u65b9\u4fbf\u6309\u9700\u4fee\u6539\u5e76\u4f7f\u7528\u3002</p>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#store","title":"Store","text":"<p>Store \u7ec4\u4ef6\u5c06\u53ea\u7528\u4e8e\u8bbf\u95ee S3 \u4e0a\u7684\u5386\u53f2\u6570\u636e\uff0c\u6bcf\u4e2a Store \u4f7f\u7528\u72ec\u7acb\u7684 secret \u914d\u7f6e\uff0c\u4e14\u5bf9\u5e94\u4e00\u4e2a\u88ab\u76d1\u63a7\u96c6\u7fa4\u3002</p> <ul> <li>\u67e5\u770b\u521b\u5efa\u7684 s3 \u7684 secret \u548c service account <pre><code>kubectl get secret -n thanos\nkubectl get sa -n thanos\nkubectl get po -n thanos |grep store\n</code></pre></li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#query-query-frontend","title":"Query \u548c Query Frontend","text":"<p>Query Frontend \u5bf9\u5916\u63d0\u4f9b\u4e0e Prometheus \u517c\u5bb9\u7684 API\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f5c\u4e3a Prometheus \u7c7b\u578b\u7684\u6570\u636e\u6e90\u6dfb\u52a0\u5230 Grafana \u4e2d\uff1bQuery \u662f\u65e0\u72b6\u6001\u4e14\u53ef\u4ee5\u6a2a\u5411\u6269\u5c55\uff0c\u5bf9\u5916\u63d0\u4f9b Prometheus \u517c\u5bb9\u7684 API \u4f9b\u5916\u90e8\u5de5\u5177\u67e5\u8be2\uff0c\u4f8b\u5982 Grafana\uff0c\u672c\u5b9e\u9a8c\u4e2d Query Frontend \u5b9e\u73b0\u5c06\u67e5\u8be2\u5206\u7247\uff08split\uff09\uff0c\u4f7f\u7528 Query \u7ec4\u4ef6\u63d0\u4f9b\u67e5\u8be2\u7684\u6a2a\u5411\u6269\u5c55\u80fd\u529b\u3002</p> <ul> <li><code>query-frontend-deployment</code> \u6587\u4ef6\u4e2d\u6307\u5b9a\u4e86\u5982\u4e0b\u5206\u5272\u67e5\u8be2\u7684\u53c2\u6570\uff0c\u5bf9\u5916\u57df\u540d\u5b9a\u4e49\u5728 <code>query-frontend-service</code> \u6587\u4ef6\u4e2d <pre><code>        - --query-range.split-interval=4h\n        - --labels.split-interval=4h\n</code></pre></li> <li><code>query-deployment</code> \u6587\u4ef6\u4e2d\u6307\u5b9a\u4e86 Query \u7ec4\u4ef6\u67e5\u8be2\u76ee\u6807\u7aef\u70b9\uff0c\u5305\u62ec Sidecar\uff0cReceiver\uff0cStore \u7b49\uff0c\u672c\u5b9e\u9a8c\u5747\u901a\u8fc7\u57df\u540d\u8bbf\u95ee</li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#receive","title":"Receive","text":"<ul> <li>\u90e8\u7f72\u72ec\u7acb\u7684 Thanos Receive \u7ec4\u4ef6\uff0c\u5206\u522b\u5bf9\u5e94 ekscluster2 \u548c ekscluster3\u3002\u5efa\u8bae\u5206\u914d Receive \u7ec4\u4ef6\u7684\u8d44\u6e90\u548c\u6570\u91cf\u9700\u8981\u548c\u88ab\u76d1\u63a7\u96c6\u7fa4\u4e2d Prometheus \u91c7\u96c6\u7ec4\u4ef6\u7684\u8d44\u6e90\u548c\u6570\u91cf\u76f8\u5f53\u3002</li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#grafana","title":"Grafana","text":"<p>\u4f7f\u7528 Prometheus Operator \u90e8\u7f72 Grafana \u5c06\u81ea\u5e26\u4e00\u4e9b\u5e38\u7528\u7684 Dashboard\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u7b80\u5355\u914d\u7f6e\u5b9e\u73b0\u591a\u96c6\u7fa4\u6570\u636e\u67e5\u8be2\u3002</p>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#dashboard","title":"\u67e5\u770b\u591a\u96c6\u7fa4 Dashboard","text":"<ul> <li>\u8bbf\u95ee Grafana \u57df\u540d\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>thanos-example/POC/prometheus/values-ekscluster1-1.yaml</code> \u4e2d\u67e5\u770b</li> <li>\u4fee\u6539 Grafana \u9ed8\u8ba4\u5bc6\u7801 <code>prom-operator</code></li> <li>\u6dfb\u52a0 Thanos Query Frontend \u4f5c\u4e3a Prometheus  \u7c7b\u578b\u7684\u6570\u636e\u6e90<ul> <li>\u5b9a\u4e49\u6570\u636e\u6e90\u540d\u79f0 <code>thanoslab</code>\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4</li> <li>\u76f4\u63a5\u4f7f\u7528 Kubernetes \u5185\u90e8\u57df\u540d: <code>http://thanoslab-query-frontend.thanos.svc.cluster.local:9090</code></li> <li>\u6216\u8005\u4e0a\u6587\u63d0\u5230\u7684 Query Frontend Service \u7ed1\u5b9a\u7684\u57df\u540d\u8bbf\u95ee</li> </ul> </li> <li>\u67e5\u770b\u9884\u7f6e\u7684 dashboard\uff1a <code>Kubernetes / Compute Resources / Multi-Cluster</code> </li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#dashboard_1","title":"\u67e5\u770b\u5176\u4ed6 Dashboard","text":"<p>\u901a\u8fc7\u7b80\u5355\u4fee\u6539\u5373\u53ef\u5c06\u5176\u4ed6\u9884\u7f6e dashboard \u4fee\u6539\u4e3a\u652f\u6301\u591a\u96c6\u7fa4\u67e5\u8be2\uff1a</p> <ul> <li>\u6253\u5f00\u9884\u7f6e\u7684 dashboard\uff1a<code>Kubernetes / Compute Resources / Namespace (Pods)</code></li> <li>\u70b9\u51fb\u9f7f\u8f6e\u56fe\u6807\u8fdb\u5165 Dashboard Settings \u754c\u9762</li> <li>\u5728 Variable \u4e2d \u627e\u5230 <code>cluster</code> \u53d8\u91cf\uff0c\u6309\u7167\u4e0b\u9762\u622a\u56fe\u4fee\u6539<ul> <li>Show on dashboard \u8bbe\u7f6e\u4e3a <code>Label and value</code></li> <li>Data source \u8bbe\u7f6e\u4e3a <code>thanoslab</code> </li> </ul> </li> <li>\u70b9\u51fb Apply \u4fdd\u5b58\u53d8\u91cf\u4fee\u6539</li> <li>\u70b9\u51fb Save As \u4fdd\u5b58 Dashboard \u5373\u53ef</li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#thanos-query-frontend","title":"\u67e5\u770b Thanos Query Frontend \u6570\u636e\u6e90\u63a5\u53e3","text":"<ul> <li>\u6253\u5f00 Frontend Service \u7684\u5916\u90e8\u57df\u540d: <code>thanos-query-frontend.${DOMAIN_NAME}</code><ul> <li>Receive \u8868\u4e2d\uff0cMin Time \u6709\u503c\u8868\u793a Prometheus \u4f7f\u7528 Remote Write \u5c06\u6570\u636e\u5199\u5165 Receive \u6210\u529f</li> <li>Prometheus \u4e2d\u6536\u5230\u6027\u80fd\u6307\u6807\u6570\u636e\u4ee5 WAL \u5f62\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u5e76\u6301\u4e45\u5316\u5230\u78c1\u76d8\uff0c\u542f\u7528 Sidecar \u540e\uff0c\u81ea\u52a8\u5c06 <code>min-block-duration</code> \u548c <code>max-block-duration</code> \u8bbe\u7f6e\u6210 2\u5c0f\u65f6\u4e14\u65e0\u6cd5\u66f4\u6539\uff0c\u5373\u6bcf\u4e2a\u6570\u636e\u5757\u6587\u4ef6\u4fdd\u5b582\u5c0f\u65f6\u7684\u6027\u80fd\u6307\u6807\u3002\u540c\u65f6 Prometheus \u8bbe\u7f6e <code>retention</code> \u65f6\u95f4\u548c <code>retentionSize</code> \u5927\u5c0f\uff0c\u672a\u5230 <code>retention</code> \u524d\uff0cSidecar \u8868\u4e2d\uff0cMin Time \u5c06\u663e\u793a\u4e3a <code>-</code>\uff0c\u5230 <code>retention</code> \u540e\uff0c\u6570\u636e\u7531 Sidecar \u5199\u5165 S3\uff0c\u6b64\u65f6\u4f1a\u663e\u793a\u6700\u65e9\u6570\u636e\u7684\u65f6\u95f4\u6233</li> <li>Store \u8868\u4e2d\uff0cMin Time \u6709\u503c\u8868\u793a\u6570\u636e\u88ab\u5199\u5165 S3\uff0c\u4e14\u663e\u793a\u6700\u65e9\u6570\u636e\u7684\u65f6\u95f4\u6233</li> </ul> </li> <li>\u6570\u636e\u901a\u8fc7 Label \u6807\u6ce8\u6765\u6e90\u7684\u96c6\u7fa4\u540d\u79f0\u4ee5\u53ca\u91c7\u96c6\u6570\u636e\u7684 Pod \u540d\u79f0</li> <li>\u672c\u5b9e\u9a8c\u5728 Prometheus \u4e2d\u8bbe\u7f6e\u4e86 3 \u4e2a <code>ExternalLabel</code>\uff0c\u5305\u62ec <code>cluster</code>\u3001<code>cluster_name</code>\u3001<code>origin_prometheus</code> </li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#_2","title":"\u6e05\u7406\u73af\u5883","text":"<ul> <li>\u6309\u7167\u4e0b\u9762\u6b65\u9aa4\u6e05\u7406\u96c6\u7fa4 <code>ekscluster1</code> \u76f8\u5173\u5185\u5bb9 <pre><code>cd ${LAB_HOME}\ncd eks-blueprints-clusters/multi-cluster-thanos/${CLUSTER_NAME}\n../tear-down.sh\n</code></pre></li> <li>\u540c\u7406\u8fdb\u5165 <code>ekscluster2</code> \u548c <code>ekscluster3</code> \u76ee\u5f55\u6267\u884c\u811a\u672c\u6e05\u7406\u96c6\u7fa4\u8d44\u6e90 </li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#_3","title":"\u7ed3\u8bba","text":"<p>Prometheus \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u76d1\u63a7\u548c\u62a5\u8b66\u5de5\u5177\uff0c\u4e13\u4e3a\u5bb9\u5668\u5316\u548c\u4e91\u539f\u751f\u67b6\u6784\u7684\u8bbe\u8ba1\u3002\u5ba2\u6237\u666e\u904d\u91c7\u7528\u5176\u7528\u4e8e Kubernetes \u7684\u76d1\u63a7\u4f53\u7cfb\u5efa\u8bbe\u3002Thanos\u662f\u4e00\u5957\u5f00\u6e90\u7ec4\u4ef6\uff0c\u6784\u5efa\u5728 Prometheus \u4e4b\u4e0a\uff0c\u7528\u4ee5\u89e3\u51b3 Prometheus \u5728\u591a\u96c6\u7fa4\u5927\u89c4\u6a21\u73af\u5883\u4e0b\u7684\u9ad8\u53ef\u7528\u6027\u3001\u53ef\u6269\u5c55\u6027\u9650\u5236\u3002\u5f53\u9700\u8981\u505a\u5386\u53f2\u6027\u80fd\u6570\u636e\u5206\u6790\uff0c\u6216\u8005\u4f7f\u7528 Prometheus \u8fdb\u884c\u6210\u672c\u5206\u6790\u7684\u573a\u666f\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u8f83\u957f\u65f6\u95f4\u7684\u5386\u53f2\u6570\u636e\u3002Thanos \u4e3b\u8981\u901a\u8fc7\u63a5\u6536\u5e76\u5b58\u50a8 Prometheus \u7684\u591a\u96c6\u7fa4\u6570\u636e\u526f\u672c\uff0c\u5e76\u63d0\u4f9b\u5168\u5c40\u67e5\u8be2\u548c\u4e00\u81f4\u6027\u6570\u636e\u8bbf\u95ee\u63a5\u53e3\u7684\u65b9\u5f0f\uff0c\u5b9e\u73b0\u4e86\u5bf9\u4e8e Prometheus \u7684\u53ef\u9760\u6027\u3001\u4e00\u81f4\u6027\u548c\u53ef\u7528\u6027\u4fdd\u969c\uff0c\u4ece\u800c\u89e3\u51b3\u4e86 Prometheus \u5355\u96c6\u7fa4\u5728\u5b58\u50a8\u3001\u67e5\u8be2\u5386\u53f2\u6570\u636e\u548c\u5907\u4efd\u7b49\u65b9\u9762\u7684\u6269\u5c55\u6027\u6311\u6218\u3002</p>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#_4","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li>https://observability.thomasriley.co.uk/prometheus/using-thanos/high-availability/</li> <li>https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/high-availability.md</li> <li>https://medium.com/@kakashiliu/deploy-prometheus-operator-with-thanos-60210eff172b</li> <li>https://particule.io/en/blog/thanos-monitoring/</li> <li>https://blog.csdn.net/kingu_crimson/article/details/123840099</li> <li>thanos </li> <li>prometheus</li> <li>prometheus</li> <li>https://github.com/terraform-aws-modules/terraform-aws-eks/issues/2009</li> <li>prometheus-agent</li> <li>https://p8s.io/docs/operator/install/</li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#_5","title":"\u6587\u6863\u7248\u672c","text":"<ul> <li>POC-prometheus-ha-architect-with-thanos-manually</li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]},{"location":"zh/EKS/solutions/monitor/TC-prometheus-ha-architect-with-thanos/#next-step","title":"Next Step","text":"<ul> <li>thanos component<ul> <li>download s3 files for down-samplings and compact continually</li> <li>using EBS instead of EFS for cost saving</li> <li>need s3 gateway for internal traffic due to large mount of data transfer</li> </ul> </li> </ul>","tags":["kubernetes","aws/container/eks","prometheus"]}]}